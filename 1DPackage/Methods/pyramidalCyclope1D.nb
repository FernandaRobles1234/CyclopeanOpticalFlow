(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1139888,      21041]
NotebookOptionsPosition[   1135009,      20941]
NotebookOutlinePosition[   1135564,      20961]
CellTagsIndexPosition[   1135521,      20958]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Base method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437474801303015`*^9, 
   3.8437474808100367`*^9}},ExpressionUUID->"ff224b23-0cf5-42c7-bea6-\
671e3869f99f"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431523924971895`*^9, 3.84315239273125*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"f8835fc6-b8e9-4f2a-baaa-c91427acdbee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.843747298847076*^9, {3.8437492654810934`*^9, 3.8437492725880365`*^9}, {
   3.8437493562778893`*^9, 3.8437493731220045`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"6b3c41f8-27e5-4b47-8435-1e63d04f79e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "\"\<pyramid1d`\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\"\<OverConstrained\>\"", ",", 
     "\"\<SemiConstrained\>\"", ",", "\"\<Constrained\>\"", ",", 
     "\"\<ConstrainedSteps\>\"", ",", "\"\<ConstrainedInitialSign\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"\"\<pyramidalCyclope1D\>\"", "<>", "met", "<>", "\"\<`\>\""}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"met", ",", "methods"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.843747328636345*^9, {3.8437492327378974`*^9, 3.843749247126821*^9}, {
   3.843749290100649*^9, 3.843749305309207*^9}, {3.8437494694641886`*^9, 
   3.843749476258562*^9}, {3.843749559651427*^9, 3.843749612953368*^9}, {
   3.84375061766183*^9, 3.8437506288890853`*^9}, {3.843752136511141*^9, 
   3.84375213710042*^9}, {3.8437528351492476`*^9, 3.8437528428558407`*^9}, {
   3.8437548044828644`*^9, 3.8437548080156*^9}, {3.843755387515504*^9, 
   3.843755390881385*^9}, {3.843834720455182*^9, 
   3.8438347248348866`*^9}},ExpressionUUID->"14e1a24f-1683-4faa-9e5b-\
a0dc9ed85f73"],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"6a65bb96-af9e-41c3-8db5-\
f82c454a826f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "1"}], ",", 
           RowBox[{"30", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"33c64e8e-67ec-4ad2-97bd-c33f7f37aecb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
        ",", 
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"c120aecc-ccb8-405e-b0f8-6857fab2bcb2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 
  3.8363952460112877`*^9}},ExpressionUUID->"e4f75b5c-586b-4ffd-af5d-\
c366d4cf6cea"],

Cell[CellGroupData[{

Cell["See Plot", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, {
  3.836399424224338*^9, 
  3.8363994265333576`*^9}},ExpressionUUID->"18ef2758-6194-4bb9-915b-\
f8e97d7c097e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Function", " ", "to", " ", "plot", " ", "flow", " ", "solution"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"range", " ", "of", " ", "plot", " ", "from", " ", "p"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "value", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"initial", " ", "value", " ", "for", " ", "v2"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "a"}], ",", " ", "da", ",", " ", "b", ",", 
        " ", "db"}], "}"}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"Plot", " ", "with", " ", "graphics", " ", "solutions"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"seePlot", "[", 
      RowBox[{"p_", ",", "q_", ",", 
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a_", ",", "da_"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b_", ",", "db_"}], "}"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "c", "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", "p", "]"}], "+", 
             RowBox[{"b", "[", "p", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "[", "x", "]"}], ",", 
               RowBox[{"b", "[", "x", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"p", "-", "q"}], ",", 
               RowBox[{"p", "+", "q"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"p", ",", "c"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"a", "[", "p", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"b", "[", "p", "]"}]}], "}"}]}], "}"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "-", "v1"}], ",", "c"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "+", "v2"}], ",", "c"}], "}"}]}], "}"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"a", "[", "p", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"b", "[", "p", "]"}]}], "}"}]}], "}"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "-", "v1"}], ",", "c"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "+", "v2"}], ",", "c"}], "}"}]}], "}"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"seePlot", "::", "usage"}], "=", 
     "\"\<\nFunction to plot flow solution\nInput\[Rule] {p, q, {v1, v2}, \
{{a,da},{b,db}}}\nOutput-> a and b plot with v1 and v2 solutions\np= Pixel of \
interest\nq= Range to plot from pixel of interest\nv1= Solution for a\nv2= \
Solution for b\n{a, da}= {function of a, derivative of function of a}\n{b, \
db}= {function of b, derivative of function of b}\n\>\""}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8436755520127497`*^9, 3.843675552454211*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"df6da94f-2ba2-4f50-a3c0-be3ebab29cfb"]
}, Closed]],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"8c77dd53-6563-4113-a3b4-\
4ccf13819f28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
     RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
    RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
    ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
    RowBox[{"we", " ", 
     RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrUpgrade1D", "::", "usage"}], "=", 
    "\"\<\nFunction to update values of v1 and v2.\nInput\[Rule] \
[{v1,v2,status,___},p0,{{f1,df1},{f2,df2},threshold,mode}\nOutput-> \
{v1,v2,status,___}\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status of \
the solution (ok, sign, mag, flip, converged)\ne= counts the amount of \
constraints not met\np0= point of interest\n{f1,df1}={function 1, derivative \
of function 1}\n{f2,df2}={function 2, derivative of function 2}\nthreshold= \
threshold to respect magnitude constraint\n\>\""}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840548890802074*^9, 
   3.840548895672971*^9}, {3.8405489566370993`*^9, 3.8405489677693124`*^9}, {
   3.840558898944503*^9, 3.840558919673791*^9}, {3.8405590751929426`*^9, 
   3.8405590905799665`*^9}, {3.8405786182601976`*^9, 
   3.8405786202723913`*^9}, {3.8414190328513837`*^9, 3.841419038459272*^9}, {
   3.8414202168521104`*^9, 3.841420329531598*^9}, {3.841420439013297*^9, 
   3.8414205133814917`*^9}, {3.8414205831457896`*^9, 
   3.8414205862091703`*^9}, {3.8414212543379865`*^9, 
   3.8414212550688157`*^9}, {3.8414217649166536`*^9, 3.841421771344642*^9}, {
   3.8414218060941353`*^9, 3.841421831565406*^9}, {3.8414223452355947`*^9, 
   3.8414223582096825`*^9}, {3.8414865132710576`*^9, 
   3.8414865464466257`*^9}, {3.841495145124576*^9, 3.8414952155814676`*^9}, {
   3.8414953307795877`*^9, 3.8414953942366886`*^9}, {3.841508125479186*^9, 
   3.8415081301234617`*^9}, {3.842637401140934*^9, 3.8426374123839664`*^9}, {
   3.8426374548457556`*^9, 3.842637457843338*^9}, 3.843049982100257*^9, {
   3.843050021340685*^9, 3.8430500999008293`*^9}, {3.8430501434061136`*^9, 
   3.8430501534972377`*^9}, {3.843050317710548*^9, 3.843050374728256*^9}, {
   3.843050532771618*^9, 3.8430505426132917`*^9}, {3.8430505912578697`*^9, 
   3.843050629003641*^9}, {3.843050769213539*^9, 3.8430508007053356`*^9}, {
   3.843050857941908*^9, 3.843050893728114*^9}, {3.8431562683776445`*^9, 
   3.843156300047364*^9}, {3.8432380519579687`*^9, 3.8432380595109124`*^9}, {
   3.8432383702531567`*^9, 3.843238373254682*^9}, {3.8432386407608576`*^9, 
   3.8432387147264*^9}, {3.8432387609363174`*^9, 3.8432388099733896`*^9}, {
   3.8435745747676406`*^9, 3.843574578382959*^9}, {3.8435862224814453`*^9, 
   3.843586223883015*^9}, {3.8435880921655984`*^9, 3.8435880939647818`*^9}, {
   3.8435883018203983`*^9, 3.843588302577153*^9}, {3.8435885658296547`*^9, 
   3.8435885694836626`*^9}, {3.843673214765501*^9, 3.8436732493897877`*^9}, {
   3.843748935259099*^9, 3.843748951071252*^9}, 3.8437490159527693`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e0d965e1-2251-4825-96ea-021c500116cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"4664a8f5-95f0-471b-8157-\
e3912166525f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "::", "usage"}], "=", 
    "\"\<\nFunction to update values of v1 and v2 over all levels of a \
function's pyramidal representation.\nInput\[Rule] [i, p0, pyrfunctions, \
threshold]\nOutput-> {v1, v2, status, ___}\ni= number of iterations\np0= \
point of interest\npyrfunctions= list with the dimensions of {pyrlvl, number \
of image(1 or 2), kind of function(f or df)}\nwhere pyrlvl is the pyramidal \
level\nthreshold= threshold to respect magnitude constraint\nv1= Solution of \
f1\nv2= Solution of f2\nstatus= Status of the solution (ok, sign, mag, flip, \
converged)\ne= Counts the amount of times the constraints were not met\n\
\>\""}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405786523932867`*^9, 3.840578657988408*^9}, {
   3.8414189828506317`*^9, 3.8414190153348923`*^9}, {3.8414201999561043`*^9, 
   3.8414202059767733`*^9}, {3.841422235821972*^9, 3.8414222386898837`*^9}, {
   3.842637171335677*^9, 3.842637171767519*^9}, {3.8430502619890904`*^9, 
   3.843050270518544*^9}, {3.843050460398434*^9, 3.8430504611482496`*^9}, {
   3.8430511064726257`*^9, 3.843051108768953*^9}, {3.843059830007685*^9, 
   3.8430598306316833`*^9}, {3.8431563089552684`*^9, 
   3.8431563349852266`*^9}, {3.8435877450299177`*^9, 3.843587927732647*^9}, 
   3.8435879648494453`*^9, {3.8435882518247757`*^9, 3.8435882583050823`*^9}, {
   3.8435884431319437`*^9, 3.843588446792751*^9}, {3.843588502609065*^9, 
   3.8435885039545493`*^9}, {3.84358854311246*^9, 3.84358855472566*^9}, {
   3.843673869417206*^9, 3.843673871813958*^9}, {3.843748997420108*^9, 
   3.8437490319836216`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2a885a10-7484-43e3-a214-b98f26639f09"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"eabb34c1-b465-40a4-8c83-\
83d0fe568842"],

Cell[CellGroupData[{

Cell["All Pixel Values", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 3.8431518733150144`*^9}, 3.843749711713994*^9, {
   3.8437580145573463`*^9, 
   3.84375801546135*^9}},ExpressionUUID->"3f70a9b9-1566-4aca-af7f-\
5b033ea1d237"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineTest", "[", 
    RowBox[{"rangex_", ",", "pyrab_", ",", "threshold_", ",", "mode_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
          RowBox[{"PyrFlow1D", "[", 
           RowBox[{
           "10", ",", "x", ",", "pyrab", ",", "threshold", ",", "mode"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"v1", ",", "v2", ",", "status"}], "}"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "rangex"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
      ")"}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8430536232334023`*^9, {3.843053877375848*^9, 3.8430539486245584`*^9}, {
   3.8430540149210873`*^9, 3.8430541575389752`*^9}, {3.8430548675404863`*^9, 
   3.843054872742379*^9}, {3.843155808869821*^9, 3.8431558644185762`*^9}, {
   3.84367492340485*^9, 3.843674933960989*^9}, {3.843675017818569*^9, 
   3.8436750498494596`*^9}, {3.8437488340016985`*^9, 3.843748835641759*^9}, {
   3.843749170807912*^9, 3.8437491773757524`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"4843a5c7-24c1-4b43-af28-c470dd33db4a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"591d4bb9-ec68-4f9f-b570-\
5285492102dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tes1", "=", 
  RowBox[{"lineTest", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"3", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
    "\"\<OverConstrained\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749676946459*^9, 3.8437500241107826`*^9, {3.843752925724249*^9, 
   3.8437529264226217`*^9}, {3.84375314414925*^9, 3.8437531799239683`*^9}, {
   3.843753449217834*^9, 3.8437534497629046`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"75f5f223-2bee-4e5c-8a3f-9c20cc30ee89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.1535264557943709`", ",", "0.4062374156958007`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.12620862142273676`", ",", "0.3118275798196295`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.33698778155348974`", ",", "0.6244236486856485`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.45505532985437946`", ",", "0.6531287627274976`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4984162937559069`", ",", "0.6098830782240608`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.49444476558516764`", ",", "0.5453628777270283`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.46542521830451117`", ",", "0.49848753541835267`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4669112118431202`", ",", "0.4938200404085783`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4933558995365231`", ",", "0.5032612564142838`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5366994004669078`", ",", "0.5114545694463384`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6036598031268574`", ",", "0.4899289998814473`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6782474164158174`", ",", "0.37995170950693685`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4967956618692158`", ",", "0.7057713530164296`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4829223923418433`", ",", "0.5442025484655473`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.46917132144626256`", ",", "0.4956591589141474`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.47237922713484765`", ",", "0.48045089963202037`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.49195973807716403`", ",", "0.48785143400408587`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5396215361596324`", ",", "0.5056964864528983`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5787472838055243`", ",", "0.4883216889045983`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5768303053042405`", ",", "0.43593918520766806`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5234592785424153`", ",", "0.3574246731257306`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4229316978580507`", ",", "0.2728553567606542`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.30469930221258296`", ",", "0.1718935395516905`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08219605171321762`", ",", "0.06420763131005755`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09927165216656603`"}], ",", 
     RowBox[{"-", "0.06919392070192393`"}], ",", "\<\"converged\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "\<\"mag\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8437500244351935`*^9, 3.8437521444140015`*^9, 3.8437529296899056`*^9, 
   3.843753027229089*^9, {3.8437531452567873`*^9, 3.8437531803646855`*^9}, 
   3.843753239369834*^9, 3.8437532817638254`*^9, 3.8437533606829615`*^9, {
   3.843753432615176*^9, 3.8437534500125055`*^9}, 3.843754827459752*^9, 
   3.8437587345823183`*^9, 3.8437599496299562`*^9, 3.84376160342441*^9, 
   3.8437619094169574`*^9, 3.843762035425679*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"b5fa365e-189e-49ee-b00d-d23f423f2874"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See All pixels in line", "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9, {3.8431519883936224`*^9, 
   3.843151993701187*^9}},ExpressionUUID->"055ebf60-4eb0-4682-87a4-\
8d276681e154"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"seeAllLine", "[", 
    RowBox[{"rangex_", ",", "pyrab_", ",", "threshold_", ",", "mode_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tRun", ",", "lineia", ",", "dlineia", ",", "lineib", ",", "dlineib", 
       ",", "cTable", ",", "c", ",", "g0", ",", "i"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tRun", "=", 
        RowBox[{"lineTest", "[", 
         RowBox[{"rangex", ",", "pyrab", ",", "threshold", ",", "mode"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lineia", ",", "dlineia"}], "}"}], "=", 
        RowBox[{"pyrab", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lineib", ",", "dlineib"}], "}"}], "=", 
        RowBox[{"pyrab", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"cTable", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"lineia", "[", "p", "]"}], "+", 
               RowBox[{"lineib", "[", "p", "]"}]}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"g0", "=", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"p", ",", 
                    RowBox[{"lineia", "[", "p", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"p", ",", 
                    RowBox[{"lineib", "[", "p", "]"}]}], "}"}]}], "}"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tRun", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                  "\"\<sign\>\""}], ",", "Red", ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<mag\>\""}], ",", "Purple", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<flip\>\""}], ",", "Orange", ",", "Black"}], "]"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "c"}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Arrowheads", "\[Rule]", "Small"}], ",", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "-", 
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "+", 
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
              "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", "g0"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "rangex"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lineia", "[", "x", "]"}], ",", 
             RowBox[{"lineib", "[", "x", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"rangex", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"rangex", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "mode"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "cTable", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "\[Rule]", "info"}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", "0.5", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"seeAllLine", "::", "usage"}], "=", 
   "\"\<\nInput\[Rule] [rangex, {lvlmin,lvlmax}, pyrab, threshold]\nOutput-> \
Plot with solutions in rangex\n\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8430543162163053`*^9, 3.843054461770115*^9}, {
   3.8430545103367205`*^9, 3.8430545180946484`*^9}, {3.8430545856981444`*^9, 
   3.843054620001899*^9}, {3.8430547419761086`*^9, 3.843054793230691*^9}, 
   3.8430548770538483`*^9, {3.843056440206515*^9, 3.8430564480113688`*^9}, {
   3.8430567126501675`*^9, 3.8430567128688717`*^9}, {3.8430576471815214`*^9, 
   3.8430577230075235`*^9}, {3.843057842605462*^9, 3.843057847949701*^9}, {
   3.8430580550243073`*^9, 3.8430580926604977`*^9}, {3.8430581371989174`*^9, 
   3.8430581643350253`*^9}, {3.8430583893574653`*^9, 
   3.8430583945481615`*^9}, {3.8430585787240405`*^9, 
   3.8430586202011037`*^9}, {3.8430587026734514`*^9, 3.8430587286705*^9}, {
   3.843058781109539*^9, 3.8430587883736644`*^9}, {3.843058953165311*^9, 
   3.843058991317131*^9}, {3.843059021912061*^9, 3.843059104439335*^9}, {
   3.843059207373085*^9, 3.8430592387718935`*^9}, 3.8430596105299654`*^9, {
   3.843059709620127*^9, 3.843059710401457*^9}, {3.8430599544770384`*^9, 
   3.8430599775139775`*^9}, {3.843156501158812*^9, 3.8431565016598654`*^9}, {
   3.843237107128191*^9, 3.843237131882959*^9}, {3.8433258862539043`*^9, 
   3.8433258923306084`*^9}, {3.8436751402093487`*^9, 3.843675167057777*^9}, {
   3.8437499619520197`*^9, 3.8437499641213365`*^9}, {3.8438356283629665`*^9, 
   3.84383563308676*^9}},ExpressionUUID->"a4d810d8-0882-4af7-9001-\
706b91770bf0"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"d0c986b6-246f-466c-aa1b-\
0069d71cbc6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
   "\"\<Constrained\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8430546307493587`*^9, 3.843054688785618*^9}, {
   3.8430548021191974`*^9, 3.843054840458894*^9}, {3.8430572309687786`*^9, 
   3.8430572639138165`*^9}, {3.843057637652525*^9, 3.8430576404489775`*^9}, {
   3.8430577064955626`*^9, 3.8430577087296467`*^9}, {3.843059112390246*^9, 
   3.843059117654656*^9}, 3.8432371707601557`*^9, {3.8437500005489907`*^9, 
   3.8437500604825773`*^9}, {3.8437528603043394`*^9, 3.84375287083934*^9}, {
   3.84375345787961*^9, 3.8437534584261847`*^9}, 3.8437548226684275`*^9, {
   3.843755398272477*^9, 3.8437554035455885`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"ace09dcb-96a4-4263-8740-bdcb82a428ba"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$115091#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$115091#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1, 0.}, {1, 0.}}]}}, {
      PointSize[0.01], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2, 6.88214269644119*^-22}, {2, 6.88214269644119*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3, 4.235164736271502*^-22}, {
         3, 4.235164736271502*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4, 8.470329472543003*^-22}, {
         4, 8.470329472543003*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5, -1.3552527156068805`*^-20}, {
         5, -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6, -5.421010862427522*^-20}, {
         6, -5.421010862427522*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{7, -8.131516293641283*^-20}, {
         7, -8.131516293641283*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8, -7.589415207398531*^-19}, {
         8, -7.589415207398531*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.549711240968172, 1.734723475976807*^-18}, {
        9.623843859139727, 1.734723475976807*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.566149632846022, 0.04969024160430335}, {
        10.521013118863342`, 0.04969024160430335}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5000000000000001}, {
        11.500004349860205`, 0.5000000000000001}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.41290747542594, 0.9503097583956966}, {
        12.457079265546588`, 0.9503097583956966}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.407894038615543`, 1.}, {13.323800057738442`, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13.523659948865276`, 1.}, {14.36080219478506, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15, 1.}, {15, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16, 1.}, {16, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.540066376403512`, 1.}, {17.634939126585284`, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.563608184031278`, 0.9503097583956969}, {
        18.51988751077883, 0.9503097583956969}}]}}, {
      PointSize[0.01], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{18.49999565013773, 0.5000000000000001}, {
        19.499995650139795`, 0.5000000000000001}}]}}, {
      PointSize[0.01], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{19.41639739548742, 0.04969024160430336}, {
        20.461654698359514`, 0.04969024160430336}}]}}, {
      PointSize[0.01], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{20.395555352161875`, -1.6263032587282567`*^-18}, {
        21.33180934914219, -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{21.48102658293616, 1.3552527156068805`*^-20}, {
        22.243423453319668`, 1.3552527156068805`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23, -2.0328790734103208`*^-20}, {
         23, -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[1, 0, 0], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24, 7.623296525288703*^-21}, {
         24, 7.623296525288703*^-21}}]}}, {
      PointSize[0.01], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{24.983495241391953`, -6.352747104407253*^-22}, {
        25.015358307599648`, -6.352747104407253*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26, 1.164670302474663*^-21}, {
         26, 1.164670302474663*^-21}}]}}, {
      PointSize[0.01], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27, 3.441071348220595*^-22}, {
         27, 3.441071348220595*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28, 1.9852334701272664`*^-22}, {
         28, 1.9852334701272664`*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29, 2.6469779601696886`*^-22}, {
         29, 2.6469779601696886`*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30, 0.}, {30, 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8437499839895477`*^9, 3.843750060967391*^9}, 
   3.8437521445503073`*^9, 3.8437528730180345`*^9, 3.8437532396393433`*^9, 
   3.843753282055828*^9, 3.843753360830056*^9, {3.84375343277316*^9, 
   3.8437534587672305`*^9}, {3.8437548232006454`*^9, 
   3.8437548544143906`*^9}, {3.8437553995807266`*^9, 3.8437554039491386`*^9}, 
   3.8437587347465506`*^9, 3.84375994979*^9, 3.8437616035744743`*^9, 
   3.84376190963144*^9, 3.8437620357375154`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"367238bd-f707-45aa-8adc-fc4c06d51ea0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.8437580261485343`*^9, 
  3.8437580297113867`*^9}},ExpressionUUID->"cf76d945-ef0b-46b7-96e6-\
48f12bc2e2a2"],

Cell[CellGroupData[{

Cell["Pixel Iteration", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 
   3.8431518001584377`*^9}},ExpressionUUID->"870c45fe-7a64-47de-9480-\
4c6ba3336703"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Makes", " ", "iterations", " ", "by", " ", "saving", " ", "all", " ", 
    "the", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "you", " ", "call", " ", "without", " ", "v0", " ", 
     RowBox[{"(", 
      RowBox[{"the", " ", "initial", " ", "motion"}], ")"}]}], ",", " ", 
    RowBox[{"then", " ", "it", " ", "will", " ", "be", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{
      "i_", ",", " ", "p0_", ",", " ", "pyrfunctions_", ",", "threshold_", 
       ",", "mode_"}], "]"}], ":=", 
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{"i", ",", " ", "p0", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0."}], "}"}], ",", " ", "pyrfunctions", ",", 
       "threshold", ",", "mode"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrFlow1DIter", "::", "usage"}], "=", 
     "\"\<\nMakes iterations with OverConstrained standards and saves all the \
values\nInput\[Rule] [i, p0, pyrfunctions, threshold]\nOutput-> list with the \
dimensions of: {lvls, i, {v1, v2, status,e}}\ni= number of iterations\np0= \
point of interest\npyrfunctions= list with the dimensions of {pyrlvl, number \
of image(1 or 2), kind of function(f or df)}\nwhere pyrlvl is the pyramidal \
level\nthreshold= threshold to respect magnitude constraint\nv1= Solution of \
f1\nv2= Solution of f2\nstatus= Status of the solution (ok, sign, mag, flip, \
converged)\ne= Counts the amount of times constraints were not met\n\>\""}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.842697230934749*^9, 3.8426972527368526`*^9}, {
   3.8426973082279644`*^9, 3.842697361429648*^9}, {3.842697403265497*^9, 
   3.842697432855535*^9}, 3.842701002025896*^9, {3.8427010404503565`*^9, 
   3.842701135067622*^9}, {3.8427021386829405`*^9, 3.8427021544660206`*^9}, {
   3.842702855554968*^9, 3.8427028558462524`*^9}, {3.842704183726611*^9, 
   3.842704209359651*^9}, {3.8427052628413796`*^9, 3.8427053231078467`*^9}, {
   3.8427053669498653`*^9, 3.8427053672401686`*^9}, {3.843156350954703*^9, 
   3.8431563910702105`*^9}, 3.8435888327093472`*^9, {3.843673978502009*^9, 
   3.843673980303361*^9}, {3.8436786934375973`*^9, 3.843678752246339*^9}, {
   3.843758887522422*^9, 3.843758890169614*^9}, {3.8437589708496094`*^9, 
   3.8437589718204947`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"7909a685-6dd3-456b-90ef-66a595915fad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iter", "=", 
   RowBox[{"PyrFlow1DIter", "[", 
    RowBox[{"10", ",", " ", "11", ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}], ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", " ", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "\"\<OverConstrained\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.84375874294203*^9, 3.843758866651867*^9, 3.8437596367293873`*^9, {
   3.843760031559145*^9, 3.8437600383578353`*^9}, {3.84376026527684*^9, 
   3.8437602723866477`*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"2c8bcb59-a971-4911-b300-d59e0421d8d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["One level Pixel Iteration Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 
   3.84315184249883*^9}},ExpressionUUID->"e074b746-a6e7-46ef-8ac1-\
2326e580a538"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Makes", " ", "plots", " ", "only", " ", "for", " ", "one", " ", "level"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", ":", 
    RowBox[{"{", 
     RowBox[{"currentlvl", ",", " ", 
      RowBox[{"each", " ", "iteration", " ", "v"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"pixel", " ", "range", " ", "for", " ", "plots"}], ",", " ", 
      RowBox[{"functions", " ", "of", " ", "current", " ", "lvl"}]}], "}"}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"oneLevelPixelIterGraphics", "[", 
     RowBox[{"lvl_", ",", "iter_", ",", " ", "p0_", ",", "prange_", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"flineia_", ",", "dflineia_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"flineib_", ",", "dflineib_"}], "}"}]}], "}"}], ",", 
      "info_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", ",", "iterTable"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"c", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"flineia", "[", "p0", "]"}], "+", 
            RowBox[{"flineib", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iterTable", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Show", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Plot", " ", "Graphic"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"flineia", "[", "x", "]"}], ",", 
                   RowBox[{"flineib", "[", "x", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"p0", "-", "prange"}], ",", 
                   RowBox[{"p0", "+", "prange"}]}], "}"}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}], ",", 
                 RowBox[{"PlotLabel", "\[Rule]", "info"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"c", " ", "line"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p0", ",", 
                    RowBox[{"flineia", "[", "p0", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p0", ",", 
                    RowBox[{"flineib", "[", "p0", "]"}]}], "}"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", "2"}], 
                    ",", "Blue", ","}]}], "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<sign\>\""}], ",", "Red", ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<mag\>\""}], ",", "Purple", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<flip\>\""}], ",", "Orange", ",", "Black"}], "]"}]}], 
                    RowBox[{"(*", "]", "*)"}], "\[IndentingNewLine]", "]"}]}],
                    "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"c", " ", "point"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"p0", ",", "c"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Arrowheads", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p0", "-", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p0", "+", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.5", "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", "Label", " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{"Framed", "[", 
               RowBox[{"GraphicsColumn", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Initial df= \>\"", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"dflineia", "[", "p0", "]"}], ",", "3"}], "]"}], 
                    ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"dflineib", "[", "p0", "]"}], ",", "3"}], "]"}]}],
                     "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Current dv= \>\"", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Current iteration= \>\"", ",", "i"}], "}"}], 
                   "]"}], ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Current level= \>\"", ",", "lvl"}], "}"}], 
                   "]"}]}], "}"}], "]"}], "]"}], "]"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "iter", "]"}]}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oneLevelPixelIterGraphics", "::", "usage"}], "=", 
     "\"\<\nMakes plots for the intermediate solutions of a pyramidal level\n\
Input\[Rule] [lvl, iter, p0, prange, {{flineia, dflineia},{flineib, \
dflineib}}]\nOutput-> list with the dimensions of: {i, Plot of flineia and \
flineib with solution v1 and v2}\nlvl= current pyramidal level\niter= \
solutions with the form {lvls, i, {v1, v2, status}\np0= pixel of interest\n\
prange= range for plot from p0\n{{flineia, dflineia},{flineib, dflineib}}= \
Current level functions \n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8427020954150505`*^9, 3.8427020988413153`*^9}, {
   3.842702385632077*^9, 3.842702416994393*^9}, {3.842702448651881*^9, 
   3.842702577499611*^9}, 3.842702648816579*^9, {3.8427027349891987`*^9, 
   3.8427028031012254`*^9}, {3.8427028445459523`*^9, 3.84270288526834*^9}, {
   3.8427029182413588`*^9, 3.8427029214268727`*^9}, {3.84270300558247*^9, 
   3.842703051350966*^9}, {3.842703139483245*^9, 3.8427031562282667`*^9}, {
   3.842704218707594*^9, 3.8427043018460464`*^9}, {3.842705374815054*^9, 
   3.842705408516508*^9}, {3.8430518220648627`*^9, 3.843051849680374*^9}, {
   3.8430597332866526`*^9, 3.843059734020817*^9}, {3.843156400213278*^9, 
   3.843156400551117*^9}, 3.843239390660591*^9, {3.8432394705810575`*^9, 
   3.843239516445298*^9}, {3.8432395775657816`*^9, 3.843239585057124*^9}, {
   3.8435866316510954`*^9, 3.843586638590211*^9}, 3.843759116711652*^9, {
   3.8438354700856752`*^9, 3.843835498623855*^9}, 3.843835596428197*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"772c55dd-e266-417c-a022-95b2f0bce03b"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"53a71b05-5c65-489f-92c2-\
98a44ab32103"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneLevelPixelIterGraphics", "[", 
   RowBox[{"3", ",", 
    RowBox[{"iter", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", "11", ",", "5", ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8437591996940536`*^9, 3.843759226227335*^9}, {
   3.843759258097139*^9, 3.8437593209930706`*^9}, {3.843759498383835*^9, 
   3.8437595295648613`*^9}, {3.843759590217981*^9, 3.8437596157503247`*^9}, {
   3.843759653556141*^9, 3.843759655617922*^9}, {3.8437597365689335`*^9, 
   3.843759781582929*^9}, 3.843760410332844*^9, 3.843761179623725*^9, {
   3.843761435424226*^9, 3.8437614452425127`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"8c3fc4a0-d2d7-4535-9c90-a3d083c5b300"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["All levels pixel iteration Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 
   3.8431518733150144`*^9}},ExpressionUUID->"92146094-2fc2-441b-90c8-\
d6afced22fa0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Makes", " ", "graphics", " ", "for", " ", "all", " ", "levels"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{" ", 
    RowBox[{"iterations", ",", " ", 
     RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
     RowBox[{"plot", " ", "range", " ", "from", " ", "pixel"}], ",", " ", 
     RowBox[{"max", " ", "lvl"}], ",", 
     RowBox[{
      RowBox[{"lvl", "'"}], "s", " ", "functions"}], ",", " ", "threshold"}], 
    "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"pixelIterGraphics", "[", 
      RowBox[{
      "i_", ",", " ", "p0_", ",", "v0_", ",", "prange_", ",", " ", "lvlmax_", 
       ",", "pyrfunctions_", ",", "threshold_", ",", "mode_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Makes", " ", "iterations", " ", "by", " ", "saving", " ", "all", 
          " ", "the", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"iter", "=", 
          RowBox[{"PyrFlow1DIter", "[", 
           RowBox[{
           "i", ",", "p0", ",", "v0", ",", " ", "pyrfunctions", ",", 
            "threshold", ",", "mode"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Makes", " ", "plots", " ", "only", " ", "for", " ", "one", " ", 
             "level"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oneLevelPixelIterGraphics", "[", 
             RowBox[{
              RowBox[{"lvlmax", "-", "j", "+", "1"}], ",", 
              RowBox[{"iter", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", " ", "p0", ",", "prange", 
              ",", "  ", 
              RowBox[{
               RowBox[{"pyrfunctions", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "j"}], " ", ";;", 
                  RowBox[{"-", "j"}]}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "mode"}], "]"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "iter", "]"}]}], "}"}]}], "]"}], "]"}]}],
         "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pixelIterGraphics", "[", 
      RowBox[{
      "i_", ",", " ", "p0_", ",", "prange_", ",", " ", "lvlmax_", ",", 
       "pyrfunctions_", ",", "threshold_", ",", "mode_"}], "]"}], ":=", 
     RowBox[{"pixelIterGraphics", "[", 
      RowBox[{"i", ",", " ", "p0", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0."}], "}"}], ",", "prange", ",", " ", "lvlmax", 
       ",", "pyrfunctions", ",", "threshold", ",", "mode"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pixelIterGraphics", "::", "usage"}], "=", 
     "\"\<\nMakes plots for the intermediate solutions of a pyramidal level\n\
Input\[Rule] [i, p0, prange, maxlvl, pyrfunctions threshold,mode]\nOutput-> \
list with the dimensions of: {lvls*i, Plot of flineia and flineib with \
solution v1 and v2}\n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8427019680489807`*^9, 3.8427020564825096`*^9}, {
   3.8427031047211*^9, 3.8427031206242104`*^9}, {3.842703170676693*^9, 
   3.8427032422755423`*^9}, {3.842703272466749*^9, 3.8427034472837543`*^9}, {
   3.842703507827428*^9, 3.8427035341712313`*^9}, {3.8427035941239185`*^9, 
   3.8427035971982145`*^9}, {3.842703945056048*^9, 3.842703951904691*^9}, {
   3.8427039828364816`*^9, 3.842703983157879*^9}, {3.8427040301235666`*^9, 
   3.8427040573850813`*^9}, {3.842704096420404*^9, 3.8427041269785533`*^9}, {
   3.8427043169363766`*^9, 3.842704400363101*^9}, {3.8431564625064917`*^9, 
   3.8431564628645983`*^9}, {3.843237879292144*^9, 3.843237886296726*^9}, {
   3.843674278361714*^9, 3.8436742844537373`*^9}, {3.843674379388331*^9, 
   3.843674380004819*^9}, {3.8436791490338717`*^9, 3.843679203665983*^9}, {
   3.8437589805261*^9, 3.8437589923386307`*^9}, 3.8437598165986166`*^9, {
   3.8437612698824654`*^9, 3.843761303068711*^9}, {3.843761350653243*^9, 
   3.843761357922201*^9}, {3.843761468105116*^9, 3.8437614683152*^9}, {
   3.8438355107695026`*^9, 3.843835511514685*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ca182f9c-2c11-4c03-a274-ade171f70e7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"pixelIterGraphics", "[", 
   RowBox[{"10", ",", "11", ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0."}], "}"}], ",", "3", ",", " ", "3", ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.01", ",", 
    "\"\<ConstrainedSteps\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8437591996940536`*^9, 3.843759226227335*^9}, {
   3.843759258097139*^9, 3.8437593209930706`*^9}, {3.8437598695716753`*^9, 
   3.84375987866181*^9}, {3.84375996713647*^9, 3.843759970399989*^9}, {
   3.84376010567509*^9, 3.843760148116767*^9}, {3.843760178651371*^9, 
   3.8437601914867187`*^9}, {3.84376029433409*^9, 3.843760294912793*^9}, {
   3.8437614532565312`*^9, 3.843761502801429*^9}, {3.843761609236963*^9, 
   3.8437616133380823`*^9}, 3.843761906802744*^9, {3.8437620259732475`*^9, 
   3.8437620313102865`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"0ef55f80-1e82-4f8f-9ce2-d1a2a1e6479f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i700$$ = 22, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i700$$ = 1}, 
     "\"max\"" :> {$CellContext`i700$$ = 30}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i700$$], 1, ""}, 1, 30, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$116815#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$116815#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.562951261510833`, 0.5064163811523298}, {
                    11.433923995820996`, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4370487384891667`", ",", 
                    "0.43392399582099594`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$116979#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$116979#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.51389082175204, 0.5064163811523298}, {
                    11.493822858314859`, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.486109178247959`", ",", 
                    "0.49382285831485895`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$117143#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$117143#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.507582646721866`, 0.5064163811523298}, {
                    11.50198570818593, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4924173532781337`", ",", 
                    "0.501985708185931`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$117307#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$117307#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.506765742022004`, 0.5064163811523298}, {
                    11.503089061575766`, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4932342579779952`", ",", 
                    "0.5030890615757662`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$117471#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$117471#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    ArrowBox[{{10.506659867426205`, 0.5064163811523298}, {
                    11.503238014161488`, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4933401325737959`", ",", 
                    "0.5032380141614868`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$117635#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$117635#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.50664614417338, 0.5064163811523298}, {
                    11.50325811932052, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4933538558266197`", ",", 
                    "0.5032581193205204`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 7->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$117799#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$117799#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.506644365369066`, 0.5064163811523298}, {
                    11.503260832990168`, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4933556346309329`", ",", 
                    "0.5032608329901692`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 8->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$117963#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$117963#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.506644134800535`, 0.5064163811523298}, {
                    11.503261199263326`, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4933558651994654`", ",", 
                    "0.5032611992633262`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 9->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$118127#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$118127#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.506644104914246`, 0.5064163811523298}, {
                    11.50326124870043, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4933558950857548`", ",", 
                    "0.5032612487004299`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 10->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVz3s01HkYBnBFVNbmErnWjDFjxleroqjkfaO1kyxtZYtKya1IrqEoo6lV
OUMUapVdUidyl9qktGUnI5lJIpFch5msW7mUYn/7x3ue8/njOed56QeCt/nO
VVBQ2E7d/2naZKCkoEDD3qECYXGICNZtPLZmlHJdEe2P/ZEicClqPtg9h4aV
ATlczVgRRJ5NeVGjSEObJWqLohNEILRVyTinQsN6ZfPAn7NE4HNjjKO1iIZ+
XhNBy+pF8GekyJW1lIbz1Ybme7HrQE8vKtPZloZrTo3+u7enDnRrjXJvn6Ah
Kue12Z+uh2lVUlBRSUNPSeZm2ZIGEJMPPwgmaGhQf8h5X6kYiismjKOs6Rh0
J6L71CMJhDcd1Pkugo6cBIlNX+ZLcNjLiimvoONfaqPDVamNoPQk3YM9QccV
z6sYsYmvIO9B0FruKmNc+019d3l0E+xeduHc8XBjLGI871CIew0jS/Rad5YY
o/WnpFSD6GaIHNxxfe6gMd4/tC1JGNwCC0h7R7U5A12iygYkcW+ANyPSYx9i
4OWtgtN2vFZQtFUU5uQzsPncfb+Qy28hym14UC5noBH3atTywjYQK9prdbBM
8OMinmBtSTtYGnbm9/iboJ/9M4dboncQI+rdeCnXBBvDRiNB0gHiTiunnVIT
XOmkb6Uz+B60m6xf9LOY+E/Mm7D7vE6w25PtyvBmYkyPlT3M6YIIl18dQnOZ
mL948qxnYhcIXoeuCehiooHrFjPZwm7IsMHcFUYszC3NE+79rRuK5nnwF3iy
sFZtuMZuYQ/k+b/1EvzOQh0PWu0yfg+UWN4sZbSzcHV4n1e4Yi/cajOJTTA0
xXTL8uDAk71wWnehY/ouU+Qf9NViD/XC4ep18feumCKdm9Eu9u4Dm+mXD/jN
pvjYSdtKs6EPxjUNQ4002XgzoY6Tu0oK1ZdKM0Tb2Gh2sp0fmSmFw7cLH9KS
2ViUkn9tfEoKLPPxHeclbGS5a45sd++Hpxuvf8hS4+Dj2ntqe4r64RdLpW+8
zRz0f9VEpF/7YTCpJO7oeQ6mJGs8z3cegMC4p3O0n3HQwb1lfF7qAEy00seF
882whxNUnN0yAGHqlt6Om83QlevR4KEjg8a2fEnIGTOc7fZgtW6RgZ3GkeJC
oRmK/WVLvXgySGrLEKQpEvwSDxe5BTIQx0dInYAg09BtLL5RBkapV0s0eQTV
Ps2UpU3IoKz+SYxSPMGJaL9KjUkZOKrIHCcoq+dcDhdQDold/a6VT/B9555p
/pQMavwaFmQnEOxT990f9EUGAesVvC2SCfLXRfBWzsjgbq+3tnMW1b8j0I2b
JwcXa3L8TBXBYCy8ZaElB5rBKp+LDwmO0G035VIem7FxyX5E0KTL7aTuYjlk
CB2NHz4mmD3FaZil3Ol2oO5TDbUvcUe7SEcOoRFX9H1eEFTZVF62RV8Ol0pV
Hth3EHz7Of0nZboc/NK+v7H1PcGclPg7RyjbHNNO9uwkaKgyWd1MuR0Z3se7
CZomniq7YSwHpsROtUxKMGPSQBlM5HB36Ohu+jDBHq9d/vtM5XC2MfZHixGC
4qaRqr8pe9zlW2wYJXiYubiUwZbD7IkURfePBKv3TUdIKXPVCm9fmCT4yMY5
0N9MDvqj5WlZUwTXX1lfIaQ82FQZV/CZYEBLxTUmkcOFq7Xba6cJdg46OXVT
PsATb2j+SpBV4/s9msvByqfZtPcbwaXHVEOvUVbmvtMYmyEoUrUN+0K5lfRO
z85S/8ROauxcLof/ADxTaZU=
                    "]]}, Annotation[#, "Charting`Private`Tag$118291#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Hk41HkcB3BMUQmpRyXUbw6D+epwZVb0+VDspJaytTZityjdpRzlWCKK
J0cxJh22lrbNlKNWnjAIi9FqkCNHGuP6PSFHZWuFtX+8n/fz+uf9x5t54JTb
QRUlJaXv5vJ/GzXrzVNSonDncOgvp8pKwMb+/MbxOQ+otsWN1JSAS07rYYUy
hd8qOjxONJRA0OWr9VUMChv0xC5nekqg2lZNFKdGYaqXdvRVhgR8702YLNOi
UMBftsNQIIE7QVJX7moKOeve1GQ2SUBXN/jmDlsK5/O1c9RGSmFlrUGWOJzC
9NWb3O0KymFKnTwsKKJw7IGaV8X75yAjQ+sSJim8M3vwUpBZJeQWTLKCrZl4
3D9tZOZOFZxtPrx8cQATWcKIXf1q1bDFixv6pICJMp2n9Q63a2BeRZqH8SQT
O7sKPEdspPCg+MQ3AnMWPmZRe6eldeC5Jjku5CwLQza9pvmX/4axFbrt7nks
9Hbbdj/b8iUEDe/OVBlmofp+B+GCXhksJF3dZaZsDB71nfWUN0DkjFTX+Agb
Hdfss+msbASGLaP6t2w2hhaeM9Iqa4LgPaPD796xcaFbhe3bZ69AxnBY1s3l
oMg4j8O83wwW+vLsXj8ORo5PiMTiFgiV9tmnZs15TCQJvNsKMrmls/sAB3NT
Pnab5rSBTrN1/SDXEA/t9x+aKHwNm/fddWX7GGLGtE02P78dAlx+2OKfZYgC
pu/K8PIOSGjx33i0xxA1HJNynEs7QcTHrA0GXAy/5PqOX9gFOfM9ohd6czHK
+hX1ueoNPPDr2J9wg4tabn7eyuXdkGfxez67i4vZDrLF8pdv4Y9OTtglfSPM
P5EZnnRMDhdXLnJK+3HOlkpWbf1yOF5mc6Ew3QjDLuKR9Ud6gD/VWBzdaoSu
su3b/RQ98Gmpvr/BUmNM68hKlrgroCw1XyR1M8ahF4pFa1sUcFz8SEIlGaPK
qHDCVtALXNNPu+MbjDHltfPn6xW9UGmfOZShYYK2sQkXj5r3wS6LedOR20yw
aF0lCm/3wXBiXkRgvAlaLRnmjWj2w7GISmWdGhOsifH+2hHYD5PtzE/VC3hY
amaSxFL0w5klFj5O23iYes1dOi0YgKbO7IbTMTwUqsYefnZvADZrn8x9VM3D
v8IK3X9VHYTETlGCkEEwjqNRHOM1CLILAQPOQDDZpTYScgfB4NqtvKWRBEv1
GvX7GTS4WJOQmBKCmupFdV9caKD0zH1TJATjVVYIcCcNEzN8l7ulBG2FT4Jj
d9EgqnZiScoJ7vOKGNHeTYN8z4G6j1UEt28wNTfcS4N/QPoq33qCXRkbltv5
0JCar1bs0E0wJvHalFkwDYeEmvd2viVIW4WJT56jgX9eJ8lbPrenvHWx+DwN
Xcj2CVEQTGixl7PCaDBs2Kz+eIBgM+95g+YFGp6+D/RkjhL86MSpa4un4XJT
mOP6MYLReRVRWldo8Hgavd5unGBSVOKQUwINs+FXGXs/ENxoFlX/ZxINAo1H
4uR/CMaezmq8kkrDqvEnwozPBAtbzi2qENIw3FwU8fALwZuOrA+TaTQk36r9
vnaK4PXlta9+SqfhQKTMrvUrQfg550XKDRosfVuN+qYJPo6xO1tzkwZVwRvt
iZm5v0KP1v17i4Z20jc1O0uQbcVrXJtBw39o6EMd
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$118291#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.5715686252982446}, {
                    11, 0.441264137006415}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5064163811523298}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.506644101040385`, 0.5064163811523298}, {
                    11.50326125537312, 0.5064163811523298}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0.11229607427587607`}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {0.11229607427587607`, 
                    0.8180346823609214}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.129\"", ShowStringCharacters -> False], 
                    0.12907317744730148`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.13\"", ShowStringCharacters -> False], 
                    0.13014667262787577`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.49335589895961574`", ",", 
                    "0.5032612553731196`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 11->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$118455#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$118455#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.513543198671048`, 0.5046482912463994}, {
                    11.516402172172235`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4864568013289524`", ",", 
                    "0.5164021721722355`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 12->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$118619#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$118619#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.513992294861092`, 0.5046482912463994}, {
                    11.517316599972444`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4860077051389087`", ",", 
                    "0.5173165999724451`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 13->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$118783#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVVnk8Fe8XtkZFIdlC772ETEUILbxHZKuEiiSUnag7SCVrKGRLtkQRUpYo
2tVbklAKSUiipG/iXu1S8ZvfH/OZz/M5M+8553nOc2ZY7vvtvQT4+Pgmmev/
d/WuRUJ8fAhE1UdXmEpxyBqTw/pfGHziz8phnUUcYnO52/cdP4KVd7d8m6PK
IaEJJ9saBRGEGHjkBq/ikKZ1IjmJIggKt2/YouLIIZ6lX5cumI9AqKx9aiCL
Qw5J2e4SkkBw4X16vFkBhyRHVaX+YPCip1Fb0ks4pNbJ99srKQT67Vih7yqH
CMwbqM+XQSDyrbhf5xmHFIa2bFFTRsCRfHXu9QyH1L1XOyq7mKn3/JntWcI0
abaNqxNFCFYVfNTSnUsTniaW/8xC8Esg4ImCDE2M39a9q17CnNcXw8vSpIn9
JqmFRWoIJMTfKARq0cT71n6LDHUEUnMCXNT1aJJySrMyZCmCjJNHisyMaNJv
UXhg9XIEmar1oco2NJmo+1emuQLB7B8SVXPsaSLEdu5bpIWgnbthvGc7Tai/
C/G0NgKB1AtCi1yY/H7BNG8lAvONEbmpu5n83e3FgzoI0vckVb/3oElYzQnR
h3oI+psLBlf60yRV6dOaulUIalduuaEZSJPzSeaBpfoIjFVSkoQ4NGn15O88
bohAoV2ocOcBmgx0uAodXo0Aij+d7T5Ik6/G9fr+axA0r7iyQDeMJvLyB89s
Woeg8qxxT3IkTbpqT8vaGzHnDXhAbTRN0m3qTzkaI7D44/mj9ihNNn0amO+C
EYQX7XqaGkcT0Tj+ZHdAUBTulWd6jCaNyqqiviaM/oZ5ep3HaRJ9yzwucD2C
muiFnDWJNFm3zY8v2BSBHP9XVngSTSa5J8IPmSHY62W9OOcETeoSL09GbEDg
7rTa6EQyTTiqHSGx5ggaEnptd6TQZBn5NpFggcDs3AataQb/5yQTmGrJ1G+Z
WxWeSpOS74afTlkhuK09VviCwbvTnL1OWyNQFtw1IJBGE0XNyKGzGxGU7xVY
O4fBPY2FLiWbEMjITJ34xDyf6faw99JmBPKXXS4UMth26sP2ahsEh95auGkx
WCxLtLNuC4If21+cyGLyN2tRNrdtEVjeVeB/wdQb17q5ldgh0HlgmPmR6Qe8
OOaP7BEEiVsqvGD6/TuT0dC6FUHrZg/fLIaPm3nXjNu3Ifi+vHTrigSahKzq
uf1yO9OPk8aVAoZP7fYp/dcOTD/hIg7vGb7H/JVqBx0RdKx3kZ1h9LgoDFoj
OxDUO5q1TjB6eRa6V3x2QqDt88r0JqMnWhuv/mUnAq7iSqft4TTJ5bQu/rsL
gY1mccV8Zh62zR0/w++KwKd3ImNZCE0kLsyXE3FD0Phmv78yTZOE19skpPYg
sMsKMI5m5s8s9GCyrDuCyXOLP/C8acInmSeq5IFg4PK+dl1mXg+Zv+XT8EKw
L2Fji4EzTfSG+COWezPzXD4v5pcD448jqr91fBCMRfV0JDH+8L3i98XID4Ht
t9EMyoomOxS/D20NRHDu0Y8hW8Zv0jdkXJ32MfxZ99ZcXEGTdrvVfa77mfka
zH3QqUETy+ORnX40An6ezL98RZoYfhV9GHUAgYbbb01hAZp8T6ZwfCiCbfoX
HUenOKRG3eZO0kEEl8JF9xd+4xANl1O1WYcR1AlbXo0c5hC5ZqWSigim386q
3umHTPyf0dNzkYyeOzf++n2HQwx0XL+fikKg6RD6trWWQxzyz5qFxyCY4m+K
HT/PIZmcxR82xTN+TYu31onikJJSLG5yjPGHcvPoqwPMPutzW7XqOAKxjjXG
9gEc0mlWGK+UiCB0kj+4cQeHSMqz1LjJzDzdtF1/RotDkI2JzbsUBNGtm8vf
MftVO3ZPaHcqgs5qpcv/5DnEdryo6V46gu6Nx/9VCXJI6gO2T1om4x+30Bcf
L+0nc/xVL2rnI8irG+oce7OPKJwza1ctYHCH+e5nDfvI0i7PSbmzDD9b+x/b
l+0jlsallvyFjB/01s4z3b+PHJNS+9RRzOwnw7Vdt6YCicAddc3gCgT5V/s0
Hs4EEKkJC3ufSgTelQ75VwYCCGuJb5hzFQLDlpRk47sBBNIutppWIxhUaH+i
cziARHos3Stdi2Dksyw7Ymwv+TOXqrx2m+Gz0lpy131/EiamP6f0DgLrm339
r077kykxE9/MegQOAsvufQnyJ5PijqrB9xhc8uL2tIo/+Tk/Nl+7gdn/3tF+
oTF+ZGLB6+SKFkZP1bxZxUt9yX7pkdG8Vmb/9HzYNvTXh3Clv1gmPUEQIDd5
5tZzHzK+UETYrw2Bb+pKcYMQHzIqqxuh1oHgcoGJletNb/Jh0YnAoh4Ef4+j
DNXlXsRTMftJei/jLxJ+6v1vTzKsWLQ0ug/BxeclHMMmT/JO6cYH134EE+3y
N867eJLBxe9dFAeZeN6gSdBxD9KnstYm5yOCnmTq1sOmPeQ59XlFyk8Eu7sk
BR4PO5OfTne6038x/JUc7K90dCbKCSciMyeZ74d09tH4lp0kcJh6dmYKwX8J
P06KlTuRuQUBgeXTTD0xc13cXB2JxTxuxeNZLBB9//t83Cl7QiYmNARkWbD7
k0rDXgcgI8oP2oXlGPyPv/7emBGZt/nkodnyLOCLqGMpaawlLpdWNkssYuLr
P/zUO7mK/NkT5LN4MQvuD9qlzXNSJQYvvpWuU2dBdOMuEeqHJq6+9pN90ICJ
e5tBirQt1oxsDPUzZIFEhpXqy9e2+IJ5RqvzahaAQaXYshI7nP9qeRCsZUFu
UJvYbMOtOOG354PZmAXNfjtupwY44N1GL9zyzZn8sxysYLYLlnxUnf9gOwv+
VqfKhCd54eSUiIlaBxZk1jzMy5zxwqIOG80uODLvJ6/SNDrgjadHRj4nObEg
4PSXI9jdB4+KKq/d5sLU637DXcLUDzdsSu4d8WTBxcT+v8ooEAd3+cqIhbBA
bMKueqQkCGe3/qmVOsCCp/P253pzg/Dt+6l28qEseKapoQyGwZivqi5Z7RAL
Zn3CVXxtwTglnk/QJJwFcfT9vPqpEFymn8s7EMcCT703Nzf4HMSvcx83v81k
+jltot0WH46nU3d6j2Qx9SnuHujqC8fs+HHB8WwWIKWynLXaEdiXXoCncpnz
1aJ71foj8A8rt2vSBSwYs5R3PmwYhef/+VlkVcoC3/K3y/P4Y7Cpi9qR2mss
MLZ5AvJfYnG3conNtessuPeAP6gLxWH/QRb7xg0WXJYenHffNg6neyi13L7F
gqDPHW80rsThfj9p2Ya7LFjnvVrCNCQeh4QK1LY/YsGxzrTGCsHjuCRtYHT8
JQtcMxUdByySsFBD9k6Nnyy4I/v+vsq1dDyqJNUn94sFZwbZtx060nHH4RSn
2ZMsqKmcnCkcT8dnV8btGP3N9CPVlHFE7SQ2LKIdKv+xYCjw2D2r0ydxYPQm
e21hNkRbpx+xi83A3cYC1obSbCjNcftm6ZeJL90JXG2pwwbxxBKZishcbLjh
ssBmXTasLxr27CnOxU3PuE/s9NgQOaOfotKSi4eH9rs667Nhjkxh9gLp0xiJ
BsXuW8MGLxf3684Vp3H2ttC2zPVseD6WfyjrbR4+Oh65Z8ieDSfbs6N+uxZg
58XpiWHBbCjvjSn/7FKEJ2Tlex1r2MA7Fv2WM78Mh45tKxYYYwN7W4fcnfQq
PJvqHyDLVCB1XEmguP8qjp5ukdfwU4FPwiELlJffwILrBJvOl6uA5LS/wxK3
enxwO29sdFQFjMqCOgT/3MfPBdcvGFBThfJFTULCrQ+xruJg+XsfVfhZLio5
NPsxPtIybJJZogoVQ/Xlc3Erfj6oZ+04ogo1Zefm/xpuwwu7DNo+qi0Bg5YY
QW57OzbeVbRFxWMJVJeUCIif68QhNg6mdMkSiGNvEhMp7sIpL2l9/6ElMOTX
9f1mejfOMYQSbSU1mKOl5jgZ0YMvC++Mne2qBjuSdT8aF/ThSz59e1LymHiL
dVl/QT+u0b1wRaVfDUKNluhbtw3gi69Vw48rqsPWf1Vmc8IGcZzcHPPsHeog
KzbskhY2hAPImpgbp9Wh16O4SCftHTb803EntlsdOmZxtP9LfY9/SCnSSlIa
oEC7rdM7NoxJ5pWcFnsNuHFfbrg45QMOqKi6i9I0IHDpyJNHESNYbdmPbUnt
GtAlZkHXh33ED02KP58VXwoxR19c/er6H7bTFfoXbbUUPh7jv6Cp/wmPpdZE
HUhaCoU2+i086VG8N+oh/8LHSyHhQdu/B72j+Gcv60eTqCZcq7F1fFD0GQdJ
6HqYW2nCHcmX8UGOY7jzdXk7J14TnvnlzDR8HcPGkvuqq5o0oaxh9H5C0jhO
fZ2TkiVIwZPclhXHRLj4eUzIiDWmoDEjmLTRXCzBLhC2AQrubomPORTMxfYN
j1TtTCioO1uvyj7AxV0Csh6OphT4Ts+TCDrExT2xt956WFBgL+cbJxTFxe/i
p3vCt1Cgbyuz6vsJLv6ZmPDkshsFBYU3MH8pFytl5NdIRVNw06LObOQFF199
2nBEKIaCyhPvTfVecrG5yCfznwx+vvuwS0w3F3PCV73pjaVA3XDWkFwvFzd6
P5tddJyCmfF3K40GuNh/LZ+HVhoFIuJn1jn/x8XXhz0WbjpLQeKzPGHeHy62
MaDC4uspCJ8f+S4e8TBapON56i4Fh9imWndZPPx12tCm6B4FGa/pA9/YPJzT
ZM6+e5+CqYJq3q4lPDy43b31eyMFtd9VylQ0eZgOOa3g2UaBT1BlRLQuD2de
EbmzfoCC799QWdgGHvbOmldq+5YCk/Xrxk6a87Dh4YVproMU5C7pN7howcP9
oOIR9o4Cp9mbhzuseHhJu/HcqyMULO72L5C34eHr3APOLB4F+8S3joU58HBC
Z/gGrQlGj8r+1qOOPLzzeqyW0RcKsnccup64g4dnIk4KOn2j4L5u4vXMnTxs
KV5Vkf6LgrmJCV7nXHlY4Utt1tlJCq4pKdw858bDY123oyp/U1ASJrTo3G4e
Ts9v3tr8hwLtz8cWnHHnYffo50bdf5l8VROXcjx4WM+zW334HwWB2Q72pzx5
eJblG8mv0xTzf88ST/Xi4V5q+M/MDAWLDG/3Hffm4f8BWCMddQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$118783#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.514021517607302`, 0.5046482912463994}, {
                    11.517380240488361`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.48597848239269814`", ",", 
                    "0.5173802404883616`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 14->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$118947#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$118947#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.51402341907443, 0.5046482912463994}, {
                    11.517384669588704`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4859765809255702`", ",", 
                    "0.5173846695887047`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 15->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$119111#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$119111#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.51402354279893, 0.5046482912463994}, {
                    11.517384977834489`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.48597645720107124`", ",", 
                    "0.5173849778344883`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 16->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$119275#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$119275#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.514023550849423`, 0.5046482912463994}, {
                    11.51738499928703, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4859764491505779`", ",", 
                    "0.5173849992870293`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 17->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$119439#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$119439#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.514023551373251`, 0.5046482912463994}, {
                    11.517385000780031`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.48597644862674955`", ",", 
                    "0.5173850007800311`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 18->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$119603#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$119603#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.514023551407336`, 0.5046482912463994}, {
                    11.517385000883937`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.48597644859266426`", ",", 
                    "0.5173850008839377`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 19->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$119767#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$119767#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.514023551409554`, 0.5046482912463994}, {
                    11.517385000891169`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.48597644859044614`", ",", 
                    "0.5173850008911695`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 20->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV0Gs41HkUB3CMzVrbBWmRYS7M4Odhw0Zu5+AhYSkqRdvuYqWiRVKJ4lEb
5VardPG4q1ySy6JYaSPM1kR2diKXmEQxmT9FF2H/++I85/k858U538MO/NXn
FwU5OTlfuv7vfNFaRTk5FmaU384uSs0FG8ej66dpx6g6hQoqcsGrUhwqkWeh
y9tMZTlhLsQknxO2MVg4YuLVlbc8D9rtlLJTlFi4+qxsoDQjD4JLZozUV7Kw
2EXl6SGPfMiPEXjzdFlITJkC9s4C0NI6fNXTjoVrCpf6stOLQLOTWVwez0Kn
CK/1ZaIbMK9CKuoa6Xld6Gb7wEroIpOmaXMsVLrnonBnQw3cqpvjHLZio7Bo
0hAkdXBQFLrm62g2liW5NuqU3gHnH3jHauvYOHd8aP86chcU71/0N5xj4x5J
8vSBk39BaVP4BjdzDn5a4yO/sNAKAXqZKbEHORiYMRH+5FU7UN9o9flVcfDK
g42m8QMCiJFuLVKQclDkTMJtPj0CZTIw1GLCRVmF0KbEqxsSFgVahnu5qBtY
Iahm9gDDjtFeWMZFn+TQkHxTERzeJpNOTHAxvb31rcRTDF0MJ/Uhnj7W+kcb
bPLrBQud4bIXe/RRpclGafTqMzgmGHXMKtZHzh1mgHbrAHQNW7r7jeljK+OF
jbHuc9AQWQnHeQbY/0/Ppf6GYXDYVeDNDTLAnpwN4WEPRyDaa7tzZLEBasY5
n7k+I4G0fyPX7xsxwMe32W2K8qOQbY3F3zJ5OFhTs9ed8RIqv/BPUt7Nw9Qi
6Vmx6hiU7nn2c9oVHnaMLVPayRiHKotr1dwBHopsk00XP43DjX79uNM6fCww
u8asH3wFJzW/cr24g4/ua33VWgpeQ1iLTWLDZT42JgnFvJAJsJ5/0pQk5uOR
lN6SDysmYVZNJ5KpZohSc8+GuOuT0JJVnS3wMcSHR8bFPJBCWPnNZlaGIbbu
rfHbfk8KPJPZrWe6DbFeo/dFFbyBVseiydzlRtgapWv6U/kb2GKhuJCwyQif
LMlurVCZAml61YlDZ4ywU/97q7jQKdh/olVeo8MItY+XtuTXT8FcH3u2/Utj
LNxVsXGdggyiVlkEuW4yxo5LiakTzjLo6S/rjjhljC5LYplfrAwcVA/cutlu
jO+nO1ZnV8ogvT877QKDYFuKSm1Vnwy6EqPH3IGgq4cbxVmSAfN8TpVaAkGB
dfmP9qoU1Dy6f0wxkWDkaW9WLG1Xpdeuc7TNXxY31tOOiPtusC+J4KQwMM5M
jYK2kMfKBacJZvkSSz11CvbZygWZZRCUGsui36+moH40SMMzl+CIxNH2rCYF
XlYk9tSfBGdRrR/0KGCtNQ/+vZmgz3nWxyO0ZxatvQruEvxsHjVeTTu73ZXT
fI+gduBzSy6LguFtgX+/ayN4LWbkPINNQWT0Ze1gIUHbqJMBTRwKsqqVmpyG
CHrHu+gp8SgIubCiZPNzgvtLm11saFsf1cjYPUywn3vULpz2AHKDYiUECxmN
V3poG3Q7qNSM0fnCg7Sv8un7pw4FsGX0vrGtPK4RBck9cS5mFMHUd/JbfGn7
1yeZ2U8T9Nw845FEeyn+HGPnW4IO0zk1Etpuy2+WZ74nuKpXyznPmALt6doL
uR/o/L4jMiFtqajxRMVHgjFMadhn2pk5nb6d8/S/Lz98uoNQEJjQZS/+THC3
R/6D32hbBov5owsEl3ncTvqD9jK3QdWZRYL8S+pqEtp9ZHR+aYlgg3lNxEoT
Cv4DdTVm3A==
                    "]]}, Annotation[#, "Charting`Private`Tag$119931#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$119931#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.6413719501435009}, {
                    11, 0.36792463234929806`}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5046482912463994}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.514023551409698`, 0.5046482912463994}, {
                    11.517385000891673`, 0.5046482912463994}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.00428680416384967, 
                    1.0107569124403832`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.27\"", ShowStringCharacters -> False], 
                    0.27002881212760566`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.258\"", ShowStringCharacters -> False], 
                    0.25795689573680763`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.48597644859030237`", ",", 
                    "0.5173850008916728`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 21->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$120095#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$120095#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.500298321866529`, 0.5000000000000001}, {
                    11.500366949534921`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4997016781334716`", ",", 
                    "0.5003669495349217`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 22->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$120259#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$120259#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    ArrowBox[{{10.500010572688181`, 0.5000000000000001}, {
                    11.500012025423727`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.49998942731181906`", ",", 
                    "0.5000120254237272`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 23->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$120423#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$120423#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.500004481558618`, 0.5000000000000001}, {
                    11.500004512338664`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.49999551844138274`", ",", 
                    "0.5000045123386642`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 24->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$120587#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$120587#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.500004352619897`, 0.5000000000000001}, {
                    11.500004353299595`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.49999564738010394`", ",", 
                    "0.500004353299594`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 25->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$120751#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$120751#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.500004349890485`, 0.5000000000000001}, {
                    11.500004349933011`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4999956501095149`", ",", 
                    "0.5000043499330107`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 26->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$120915#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$120915#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.50000434983271, 0.5000000000000001}, {
                    11.500004349861745`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.49999565016729147`", ",", 
                    "0.5000043498617461`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 27->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$121079#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$121079#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.500004349831485`, 0.5000000000000001}, {
                    11.50000434986024, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.49999565016851494`", ",", 
                    "0.5000043498602387`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 28->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$121243#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$121243#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.50000434983146, 0.5000000000000001}, {
                    11.500004349860205`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4999956501685404`", ",", 
                    "0.5000043498602057`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 29->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$121407#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$121407#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    ArrowBox[{{10.500004349831459`, 0.5000000000000001}, {
                    11.500004349860205`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4999956501685415`", ",", 
                    "0.5000043498602057`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 30->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
HwtUljkHrMBuZ/XOzM+zoD5UhY8P+38qEL3U
                    "]]}, Annotation[#, "Charting`Private`Tag$121571#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
w4xnwp9sjuH36xcZhGDvvVYZs/U4C+jG+tMM7DJ3Wg/jJAtMN1tOc4v4yOPL
zNlvp1iw32HnPOubfPTy/c12/ygWbJp3exf1Oh9dH6Y/DorG512z/GvPNT46
/Suv4iSXBcMlgx0Z2EyZjIuRsSy4RI9NXowdbhThkxnPgqkPgcUKhXxks3PW
iZfAgoMde4q6CviIfeDEnssXcD7eHvrOw34T5LexOAnnX1zLUh1b44a92MM0
FrTHhKruv8pHwuVvZh6ns6A2JXGTKnZX/S5+UwYLdsXfi/91hY8ie7a+eZXF
gkMbFfszsO2+1jd1ZbNgrL91wBt79aRB7YccFsj7hK1C2O9kdK4O8VigN/to
3bfLOB8qpRmjF7GFmmQasKOZrPPfL7GgraVCJRdb25gUMJPPgmd39Z7vwo4J
lgKZQhYUb9xk1ZyP+yeCu1bhGgu2y0/wirF1EoXVlK6zIDjZR+EC9qcbU4uo
N1ngGxATvA/7XnngPEYRC7Sf5zsZYJ9rGJ9QL2bB6XIPHxq27of+97olLMjd
+Onbrzw+khpxattUyoLDTWIHerE/T76rhzIW1LxrGmnGLp9vU25ymwULvT+k
V2LHyXbcML+D6zdg1rEQ22WFBW/nXRbECoY2p2HrsZ4mWt9jQd1Ha8Mo7D7j
2mOO5SyI/nP1tBd2pZXeIdcKFixZNUvYYyc43HX0qsT5u/xkiRW2m7fmbt8q
FswPqzptgr3x2A2TgGoW2N1Omt6ELRtJ23DsAQsu60hErcUeSLykHlrDgp0i
H1epY1fzlElnavG8WP7sGR078WaafHQdC3qCI06TsD0qZBeeJ1hQLduMVLD1
H5//c+EhC37320oqYct1iI6nPsLzjD/yaSn20Iczn7Pq8XxgbahZgl0z8rfz
YgMLvifPXfzfyb+PPbvymAUF1Ono///fS+Tng+uNLNDp6g1QxDZcfLj01hMW
KBcfObgc27Ny0DL/KQv2/okQXfV/fE5O46nPWOAfMnCO+n/8ol3xMU0sGLkf
P8b4P3+3rDRCn7PAQOuoxur/z2tvU4tfM37un7hNF1v372Yf1xYW+M12gyG2
05VqyX2tLLBwMpPbih1jvrbI/AUL5pRe1fyf39vfi8wN21iw4P4R9H/+32XS
RrTbWfCxfHmWB7YI8GLpHXgeFT57FoCtMbSEqfQSn4e4f2sYtk1CwjOpV3h9
D/HCeOzwdQu9hDpZ4LIlblcu9suIqcKh13ie5KqvqMGeYR0xff+GBW60DZta
sWkvvw68eMuCi6aLGJ+wj5He08q7WeARNMJZgOsz7+mexzfe4d8nfKlRwn5+
uMWV954FGx3C32liq9TWXo78wALpNeeP2GObuOkaHf/IglSToeEA7MOSpZ8P
fWJBl9pT1fPYj2zzSHs+syAuQPC9Fttj8uxF8gALIt7MXFfH/XaBN2OwZJAF
j5bErjfHrtxy9IPYEAvK9tlEemFLprirCIZZkP0vwfra//282iy7bpQFR7nn
72jgfu9+83DDnTEcTzJ76S5s4dMbugvGWWD56unqIOy9LSzFeAELKuVfhRPY
f7wWpdtP4H4y2nrqAJ43VNnodTt/seBqxfvAKGyLitlOo0kcfwZDsRT70gKB
PGuKBeJ3mtxF8Pzacvll0tQMnnfz9afKsRPeZ8SnzWfDzWfBcpvwfFSznHGJ
FGGD94sKN1/shw8d9QIXsKFMWNYyD/tHAb3PaiEb1AzIXxbi+Wvjf1dPSpIN
UwNREx+wVy5o6zsrx4ZHXjuHr+J5XaIputGfzIazcHFTRgkfbc3nyDhR2BCi
OhP/DrtXvrV/BxU/9922fyW+L+SmUy6w6WyQdn9tdQ07uIE8MMhgw75BTnld
Ge6H/QaJDlpscEoJPSF8l4/azhwdNEdsaLo6X+Ytvs9kKbwFlsCGq/mDezXx
fbe7vpG2azMbrI11F0Rjdwovc91nzIbOWEqmLr4fuyKqPrluxfu76+yTW81H
X6Jmu0J3siHv31zFCXy/TsbGNJc44XjOaDICGvhoRXJumVw4G8+jQ20K7Xxk
uZ59MqqGDe9Mk36YDPMRafkat5RaNtivSBYtxf4xq2eZX4fjX/izf9lXPsp4
YkqpfciGW+66M8PYvXtdnk88ZoNPiI9HzDc+OnI0S9mtlQ1V3E9/q/H3Tert
hQ+MPuL3i2lYD+DvIY806QKrT2wwFN0zswV/L+mdWHLBsRf/PqMPXcXuAarr
yS94/fqCnIP4+4rebih5Z5AN+332Bb/9jefxeJA9mc+G3piqUyV/cH+/DDVZ
LWDD/CWC3Qtn8P1UHrHa4Dsb+gKXljphz51Kmm/7E+d3OmVS+i/+nlp0qyjx
Nxva9s5ke/7jI+Xvd9MuTrHh8DXb8Brs0c7qsOJpNhQf8v4sO4vnU+6zPc9m
2DCRI7K4EtslvM3gzV82/Cqt65GYw/eR2xu1/n9siIiOW+mALWr2YfGPWTZc
DBR9XYLdze6fmZtjAzQ/np3D/g+6jbyl
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$121571#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{11, 0.9006195167913934}, {
                    11, 0.09938048320860672}}], 
                    GrayLevel[0], 
                    PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{10.500004349831459`, 0.5000000000000001}, {
                    11.500004349860205`, 0.5000000000000001}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {8., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{8, 14}, {-0.028785977375944537`, 
                    1.0288027444139287`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5541132169444507, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.554\"", ShowStringCharacters -> False], 
                    0.5540810346360974, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -8.64}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    
                    RowBox[{"0.4999956501685407`", ",", 
                    "0.5000043498602057`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {120.225, -25.92}, {Center, Center}, {
                    229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {120.225, -43.2}, {
                    Center, Center}, {229., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {120.225, -60.480000000000004`}, {
                    Center, Center}, {229., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 240.45}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )]}, 
               Dynamic[$CellContext`i700$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Fit,
          StripOnInput->False], 
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i700$$], {1, 30, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->3.9204792976379395`,
                 AnimationTimeIndex->3.666666666666665,
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Right}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.843761624017187*^9, 3.8437619220364313`*^9, 
  3.8437620622407675`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"eedf7070-c2b3-4064-8131-1581b3c96704"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b8fea79a-6f2b-42c5-8424-267171699e5e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 481, 7, 97, "Title",ExpressionUUID->"ff224b23-0cf5-42c7-bea6-671e3869f99f"],
Cell[1064, 31, 430, 9, 28, "Input",ExpressionUUID->"f8835fc6-b8e9-4f2a-baaa-c91427acdbee"],
Cell[1497, 42, 701, 19, 49, "Input",ExpressionUUID->"6b3c41f8-27e5-4b47-8435-1e63d04f79e0"],
Cell[2201, 63, 1299, 28, 127, "Input",ExpressionUUID->"14e1a24f-1683-4faa-9e5b-a0dc9ed85f73"],
Cell[CellGroupData[{
Cell[3525, 95, 337, 5, 67, "Section",ExpressionUUID->"6a65bb96-af9e-41c3-8db5-f82c454a826f"],
Cell[3865, 102, 2392, 58, 166, "Input",ExpressionUUID->"33c64e8e-67ec-4ad2-97bd-c33f7f37aecb"],
Cell[6260, 162, 2147, 64, 166, "Input",ExpressionUUID->"c120aecc-ccb8-405e-b0f8-6857fab2bcb2"]
}, Closed]],
Cell[CellGroupData[{
Cell[8444, 231, 219, 4, 53, "Section",ExpressionUUID->"e4f75b5c-586b-4ffd-af5d-c366d4cf6cea"],
Cell[CellGroupData[{
Cell[8688, 239, 209, 4, 54, "Subsection",ExpressionUUID->"18ef2758-6194-4bb9-915b-f8e97d7c097e"],
Cell[8900, 245, 4848, 121, 630, "Input",ExpressionUUID->"df6da94f-2ba2-4f50-a3c0-be3ebab29cfb",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[13785, 371, 162, 3, 38, "Subsection",ExpressionUUID->"8c77dd53-6563-4113-a3b4-4ccf13819f28"],
Cell[13950, 376, 5748, 86, 396, "Input",ExpressionUUID->"e0d965e1-2251-4825-96ea-021c500116cf",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[19735, 467, 182, 3, 38, "Subsection",ExpressionUUID->"4664a8f5-95f0-471b-8157-e3912166525f"],
Cell[19920, 472, 6635, 94, 396, "Input",ExpressionUUID->"2a885a10-7484-43e3-a214-b98f26639f09",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26604, 572, 275, 4, 67, "Section",ExpressionUUID->"eabb34c1-b465-40a4-8c83-83d0fe568842"],
Cell[CellGroupData[{
Cell[26904, 580, 366, 6, 54, "Subsection",ExpressionUUID->"3f70a9b9-1566-4aca-af7f-5b033ea1d237"],
Cell[27273, 588, 1527, 35, 162, "Input",ExpressionUUID->"4843a5c7-24c1-4b43-af28-c470dd33db4a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[28825, 627, 182, 3, 45, "Subsubsection",ExpressionUUID->"591d4bb9-ec68-4f9f-b570-5285492102dc"],
Cell[CellGroupData[{
Cell[29032, 634, 928, 19, 49, "Input",ExpressionUUID->"75f5f223-2bee-4e5c-8a3f-9c20cc30ee89"],
Cell[29963, 655, 4330, 122, 70, "Output",ExpressionUUID->"b5fa365e-189e-49ee-b00d-d23f423f2874"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34354, 784, 249, 4, 54, "Subsection",ExpressionUUID->"055ebf60-4eb0-4682-87a4-8d276681e154"],
Cell[34606, 790, 7583, 167, 747, "Input",ExpressionUUID->"a4d810d8-0882-4af7-9001-706b91770bf0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[42214, 961, 182, 3, 45, "Subsubsection",ExpressionUUID->"d0c986b6-246f-466c-aa1b-0069d71cbc6e"],
Cell[CellGroupData[{
Cell[42421, 968, 938, 18, 28, "Input",ExpressionUUID->"ace09dcb-96a4-4263-8740-bdcb82a428ba"],
Cell[43362, 988, 103784, 1806, 323, "Output",ExpressionUUID->"367238bd-f707-45aa-8adc-fc4c06d51ea0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147219, 2802, 323, 5, 67, "Section",ExpressionUUID->"cf76d945-ef0b-46b7-96e6-48f12bc2e2a2"],
Cell[CellGroupData[{
Cell[147567, 2811, 292, 5, 54, "Subsection",ExpressionUUID->"870c45fe-7a64-47de-9480-4c6ba3336703"],
Cell[147862, 2818, 2675, 52, 396, "Input",ExpressionUUID->"7909a685-6dd3-456b-90ef-66a595915fad",
 InitializationCell->True],
Cell[150540, 2872, 648, 16, 28, "Input",ExpressionUUID->"2c8bcb59-a971-4911-b300-d59e0421d8d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151225, 2893, 308, 5, 54, "Subsection",ExpressionUUID->"e074b746-a6e7-46ef-8ac1-2326e580a538"],
Cell[151536, 2900, 10239, 216, 942, "Input",ExpressionUUID->"772c55dd-e266-417c-a022-95b2f0bce03b",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[161800, 3120, 182, 3, 45, "Subsubsection",ExpressionUUID->"53a71b05-5c65-489f-92c2-98a44ab32103"],
Cell[161985, 3125, 777, 15, 28, "Input",ExpressionUUID->"8c3fc4a0-d2d7-4535-9c90-a3d083c5b300"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162811, 3146, 312, 5, 54, "Subsection",ExpressionUUID->"92146094-2fc2-441b-90c8-d6afced22fa0"],
Cell[163126, 3153, 4704, 97, 435, "Input",ExpressionUUID->"ca182f9c-2c11-4c03-a274-ade171f70e7f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[167855, 3254, 997, 19, 28, "Input",ExpressionUUID->"0ef55f80-1e82-4f8f-9ce2-d1a2a1e6479f"],
Cell[168855, 3275, 966102, 17660, 571, "Output",ExpressionUUID->"eedf7070-c2b3-4064-8131-1581b3c96704"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

