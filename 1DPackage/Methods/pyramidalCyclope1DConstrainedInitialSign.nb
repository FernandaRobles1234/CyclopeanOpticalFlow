(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    282373,       5341]
NotebookOptionsPosition[    277576,       5247]
NotebookOutlinePosition[    278133,       5267]
CellTagsIndexPosition[    278090,       5264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Sign method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, {3.8438311022867823`*^9, 
   3.8438311031615887`*^9}},ExpressionUUID->"7afc5b65-0b5e-4320-8af8-\
efa1ad27aa25"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431434791889243`*^9, 3.843143480644304*^9}, {
   3.843151614814394*^9, 3.8431516186171865`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"d6613b5f-169d-4924-a7bf-e1328c874886"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"41e1c256-78cb-4820-90cf-01209722e819"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{{3.836396430700433*^9, 3.836396440553816*^9}, {
   3.836396483243249*^9, 3.836396483782277*^9}, {3.8363965197501154`*^9, 
   3.8363965208316736`*^9}, 3.8363965992226734`*^9, {3.843049966234662*^9, 
   3.8430499668751907`*^9}, {3.8431516435129576`*^9, 3.843151644468534*^9}, 
   3.843831128636213*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"8671407a-4f01-418c-b8d5-eb14191aec4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedInitialSign\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.8438311391343627`*^9, 
   3.8438311426299357`*^9}, {3.8438492182877655`*^9, 
   3.8438492191012626`*^9}, {3.84385067814329*^9, 3.843850678687092*^9}, {
   3.8438529548083315`*^9, 3.8438529553772707`*^9}, 3.8442599122624464`*^9, 
   3.8442599523722973`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"d1bc8fcf-74b6-4b1d-a5a8-1732c355759d"],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"49cdbca1-85b1-42e3-a9fb-\
95cdbab14151"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "4"}], ",", 
           RowBox[{"30", "-", "4"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9, {
   3.8438334199494677`*^9, 3.843833421550555*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"63e606eb-af9d-4b38-8042-9c69524c2133"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
        ",", 
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"26805c80-4731-40a2-851e-420a0b82d2d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 
  3.8363952460112877`*^9}},ExpressionUUID->"18e1ac0b-2e67-4ae4-85a8-\
851f071e6799"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"4d85132e-f9aa-4886-993d-\
13ba7706c410"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "status_", ",", "e_", ",", "dv1sign_", ",", 
         "dv2sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", "c", ",", 
         "d1", ",", "d2", ",", "dv1", ",", "dv2", ",", "newdv1sign", ",", " ",
          "newdv2sign"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p0", "-", "dv1sign"}], ")"}], "-", "v1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p0", "+", "dv2sign"}], ")"}], "+", "v2"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"0.5", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"0.5", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign", ",", "dv2sign"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e", ",", "0.", ",", 
                "0."}], "}"}], "]"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dfline1", "[", 
                  RowBox[{"p0", "-", "dv1sign"}], "]"}], "*", "d1"}], "<", 
                "0"}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"dfline2", "[", 
                  RowBox[{"p0", "+", "dv2sign"}], "]"}], "*", "d2"}], "<", 
                "0"}]}], ")"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"e", "<", "2"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                  RowBox[{"e", "+", "1"}], ",", "dv1sign", ",", "dv2sign"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e", ",", "0.", 
                  ",", "0."}], "}"}], "]"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "We", " ", "cannot", " ", "compare", " ", "to", " ", "previous", 
           " ", "lvls", " ", "because", " ", "we", " ", 
           RowBox[{"don", "'"}], "t", " ", "know", " ", "where", " ", "we", 
           " ", "are", " ", "at"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "if", " ", "p", " ", "at", " ", "initial", " ", "position", 
                " ", "and", " ", "failed"}], "..."}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p0", "-", "dv1sign"}], ")"}], "\[Equal]", "p1"}], 
                 " ", "&&", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p0", "+", "dv2sign"}], ")"}], "\[Equal]", 
                  "p2"}]}], ")"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "we", " ", "could", " ", "use", " ", "the", " ", "root", " ", 
                 "to", " ", "find", " ", "the", " ", "new", " ", "dv1", " ", 
                 "too"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"we", " ", "feed", " ", "new", " ", "dv1sign"}], 
                 "..."}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", "d1", "]"}], ">", 
                   RowBox[{"Abs", "[", "d2", "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"newdv1sign", ",", "newdv2sign"}], "}"}], "=", 
                   RowBox[{"{", 
                    RowBox[{"0.", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"c", "-", 
                    RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
                    RowBox[{"(", "d2", ")"}]}], ")"}]}]}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"newdv1sign", ",", "newdv2sign"}], "}"}], "=", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], 
                    "/", 
                    RowBox[{"(", "d1", ")"}]}], ")"}]}], ",", "0."}], 
                    "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Return", "[", 
                 RowBox[{"PyrUpgrade1D", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "v1", ",", "v2", ",", "\"\<oksign\>\"", ",", "e", ",", 
                    "newdv1sign", ",", " ", "newdv2sign"}], "}"}], ",", "p0", 
                   ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"fline1", ",", "dfline1"}], "}"}], " ", ",", 
                    RowBox[{"{", 
                    RowBox[{"fline2", ",", "dfline2"}], "}"}]}], "}"}], ",", 
                   " ", "threshold", ",", "\"\<ConstrainedInitialSign\>\""}], 
                  "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "v1", ",", "v2", ",", "\"\<oksign\>\"", ",", "e", ",", 
                    "dv1sign", ",", "dv2sign"}], "}"}], ",", "p0", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"fline1", ",", "dfline1"}], "}"}], " ", ",", 
                    RowBox[{"{", 
                    RowBox[{"fline2", ",", "dfline2"}], "}"}]}], "}"}], ",", 
                  " ", "threshold", ",", "\"\<ConstrainedInitialSign\>\""}], 
                 "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e", ",", "0.", ",",
                 "0."}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", "e", 
           ",", "dv1sign", ",", "dv2sign"}], "}"}]}], "\[IndentingNewLine]", 
        ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<oksign\>\"", ",", "e_", ",", "dv1sign_", 
         ",", "dv2sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", "p2", ",", "c", ",", "d1", ",",
          "d2", ",", "dv1", ",", "dv2", ",", "r0"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p0", "-", "dv1sign"}], ")"}], "-", "v1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p0", "+", "dv2sign"}], ")"}], "+", "v2"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"0.5", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"0.5", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitude", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign", ",", "dv2sign"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e", ",", "0.", ",", 
                "0."}], "}"}], "]"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"v1", ",", "v2"}], "}"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dfline1", "[", 
                  RowBox[{"p0", "-", "dv1sign"}], "]"}], "*", "d1"}], "<", 
                "0"}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"dfline2", "[", 
                  RowBox[{"p0", "+", "dv2sign"}], "]"}], "*", "d2"}], "<", 
                "0"}]}], ")"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"e", "<", "2"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                  RowBox[{"e", "+", "1"}], ",", "dv1sign", ",", "dv2sign"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e", ",", "0.", 
                  ",", "0."}], "}"}], "]"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign"}], " ", "*)"}], 
         "\[IndentingNewLine]", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign", ",", "dv2sign"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e", ",", "0.", ",",
                 "0."}], "}"}], "]"}]}], "]"}]}], "]"}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<oksign\>\""}], "]"}], ",", 
           "e", ",", "dv1sign", ",", "dv2sign"}], "}"}]}], 
        "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "status_", ",", "2", ",", "dv1sign_", ",", 
         "dv2sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "0.", ",", "0.", ",", "status", ",", "2", ",", "0.", ",", "0."}], 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_", ",", "dv1sign_", 
         ",", "dv2sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e", ",", "dv1sign", ",", 
        "dv2sign"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_", ",", "dv1sign_", 
         ",", "dv2sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e", ",", "dv1sign", ",", 
        "dv2sign"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_", ",", "dv1sign_", 
         ",", "dv2sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e", ",", "dv1sign", ",", 
        "dv2sign"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "::", "usage"}], "=", 
     "\"\<\nFunction to update values of v1 and v2 with Constrained standards\
\nInput\[Rule] [{v1,v2,status,e},p0,{{f1,df1},{f2,df2},threshold}\nOutput-> \
{v1,v2,status}\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status of the \
solution (ok, sign, mag, flip, converged)\ne= counts the amount of \
constraints not met\np0= point of interest\n{f1,df1}={function 1, derivative \
of function 1}\n{f2,df2}={function 2, derivative of function 2}\nthreshold= \
threshold to respect magnitude constraint\n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840548890802074*^9, 
   3.840548895672971*^9}, {3.8405489566370993`*^9, 3.8405489677693124`*^9}, {
   3.840558898944503*^9, 3.840558919673791*^9}, {3.8405590751929426`*^9, 
   3.8405590905799665`*^9}, {3.8405786182601976`*^9, 
   3.8405786202723913`*^9}, {3.8414190328513837`*^9, 3.841419038459272*^9}, {
   3.8414202168521104`*^9, 3.841420329531598*^9}, {3.841420439013297*^9, 
   3.8414205133814917`*^9}, {3.8414205831457896`*^9, 
   3.8414205862091703`*^9}, {3.8414212543379865`*^9, 
   3.8414212550688157`*^9}, {3.8414217649166536`*^9, 3.841421771344642*^9}, {
   3.8414218060941353`*^9, 3.841421831565406*^9}, {3.8414223452355947`*^9, 
   3.8414223582096825`*^9}, {3.8414865132710576`*^9, 
   3.8414865464466257`*^9}, {3.841495145124576*^9, 3.8414952155814676`*^9}, {
   3.8414953307795877`*^9, 3.8414953942366886`*^9}, {3.841508125479186*^9, 
   3.8415081301234617`*^9}, {3.842637401140934*^9, 3.8426374123839664`*^9}, {
   3.8426374548457556`*^9, 3.842637457843338*^9}, 3.843049982100257*^9, {
   3.843050021340685*^9, 3.8430500999008293`*^9}, {3.8430501434061136`*^9, 
   3.8430501534972377`*^9}, {3.843050317710548*^9, 3.843050374728256*^9}, {
   3.843050532771618*^9, 3.8430505426132917`*^9}, {3.8430505912578697`*^9, 
   3.843050629003641*^9}, {3.843050769213539*^9, 3.8430508007053356`*^9}, {
   3.843050857941908*^9, 3.843050893728114*^9}, {3.8431562683776445`*^9, 
   3.843156300047364*^9}, {3.8432380519579687`*^9, 3.8432380595109124`*^9}, {
   3.8432383702531567`*^9, 3.843238373254682*^9}, {3.8432386407608576`*^9, 
   3.8432387147264*^9}, {3.8432387609363174`*^9, 3.8432388099733896`*^9}, {
   3.843318401941639*^9, 3.8433184420460978`*^9}, {3.843320006904053*^9, 
   3.8433200112934194`*^9}, {3.8433202677981052`*^9, 
   3.8433202867001824`*^9}, {3.843320823628084*^9, 3.8433208263772078`*^9}, {
   3.843321370194274*^9, 3.843321371975088*^9}, {3.843321438098985*^9, 
   3.84332144108267*^9}, {3.8433215405595207`*^9, 3.8433215452146764`*^9}, {
   3.8433238994156475`*^9, 3.843323908020013*^9}, {3.843324426639652*^9, 
   3.843324427655038*^9}, {3.8433245969655886`*^9, 3.8433246284943953`*^9}, {
   3.84332472235494*^9, 3.843324751813099*^9}, {3.8433251453789067`*^9, 
   3.843325244881585*^9}, {3.8433254327524137`*^9, 3.8433254396671004`*^9}, {
   3.8435886977439137`*^9, 3.8435887006809373`*^9}, {3.843588734341316*^9, 
   3.843588736964617*^9}, {3.843657623112109*^9, 3.8436576258550887`*^9}, {
   3.843657672813307*^9, 3.8436576734384823`*^9}, {3.843657704089922*^9, 
   3.8436577052782707`*^9}, {3.843657794121241*^9, 3.843657882071515*^9}, {
   3.843658133191927*^9, 3.8436582945712557`*^9}, {3.84365851961432*^9, 
   3.843658521663968*^9}, {3.8436585793200884`*^9, 3.843658716872859*^9}, {
   3.8436588045824523`*^9, 3.8436588049949584`*^9}, {3.843658863053029*^9, 
   3.843658961505745*^9}, {3.843659043035465*^9, 3.8436591702348037`*^9}, {
   3.8436599006955757`*^9, 3.843659992999459*^9}, {3.843660619810734*^9, 
   3.843660698842578*^9}, {3.843660799915493*^9, 3.843660800440464*^9}, {
   3.8436608401266212`*^9, 3.8436608405104103`*^9}, {3.843660949146835*^9, 
   3.843660954051989*^9}, {3.843661000414298*^9, 3.8436610224729176`*^9}, {
   3.8436611014606276`*^9, 3.8436611298293953`*^9}, {3.843661197665208*^9, 
   3.843661254265544*^9}, {3.843661550414008*^9, 3.84366157741346*^9}, {
   3.843661658275545*^9, 3.8436617022235255`*^9}, {3.8436617540912647`*^9, 
   3.8436617792385283`*^9}, {3.843661857169232*^9, 3.8436618843083487`*^9}, {
   3.8436619600753984`*^9, 3.843661961715836*^9}, {3.8436622514912148`*^9, 
   3.8436622635466537`*^9}, {3.843662413438278*^9, 3.843662448400967*^9}, {
   3.8436625285918655`*^9, 3.8436625471865697`*^9}, {3.8436626135925455`*^9, 
   3.843662661976474*^9}, {3.843662724660755*^9, 3.84366272547377*^9}, {
   3.843662763298168*^9, 3.8436628277886276`*^9}, {3.8436629883722124`*^9, 
   3.843662990351551*^9}, {3.843663265773568*^9, 3.8436632660029507`*^9}, {
   3.843663624473485*^9, 3.8436636836013775`*^9}, {3.8436638758273687`*^9, 
   3.843664023666267*^9}, {3.8436641359683046`*^9, 3.843664142494645*^9}, {
   3.843664185610051*^9, 3.8436642410585537`*^9}, {3.8436643673624783`*^9, 
   3.8436644473962812`*^9}, {3.843664481875358*^9, 3.843664496689361*^9}, {
   3.8436645319383373`*^9, 3.843664562815386*^9}, 3.843664609261511*^9, {
   3.843664665585013*^9, 3.8436646739273057`*^9}, {3.8436647495305347`*^9, 
   3.843664782514429*^9}, {3.843664961648424*^9, 3.843664964318406*^9}, {
   3.84366504056983*^9, 3.843665052694545*^9}, {3.843665090619931*^9, 
   3.8436650909375334`*^9}, {3.8436651233461323`*^9, 3.843665126897846*^9}, {
   3.843665209910304*^9, 3.843665216647706*^9}, {3.8436654162553616`*^9, 
   3.843665419537364*^9}, {3.8436654965013795`*^9, 3.8436655779694576`*^9}, 
   3.8436656975706797`*^9, {3.8436657540746517`*^9, 3.843665765869897*^9}, {
   3.84373988851646*^9, 3.8437399592309017`*^9}, {3.8437402002474284`*^9, 
   3.843740249369633*^9}, {3.8437404455371885`*^9, 3.8437404546797605`*^9}, {
   3.8437411272918453`*^9, 3.8437411784718847`*^9}, {3.8437414253265247`*^9, 
   3.843741430878599*^9}, {3.8437422526881843`*^9, 3.843742280332114*^9}, {
   3.843831236498489*^9, 3.843831244666244*^9}, {3.8438316444280415`*^9, 
   3.843831676956211*^9}, {3.8438333194973483`*^9, 3.843833324633465*^9}, {
   3.843833573862584*^9, 3.8438335842731075`*^9}, 3.8438336149044266`*^9, 
   3.843833644966114*^9, {3.843833873065646*^9, 3.8438338778213515`*^9}, {
   3.8438339337966547`*^9, 3.8438339516206846`*^9}, {3.8438351131820297`*^9, 
   3.843835127868786*^9}, {3.8438362047018023`*^9, 3.843836257490957*^9}, {
   3.84384913667455*^9, 3.8438492603924522`*^9}, {3.843849293285287*^9, 
   3.843849323433752*^9}, {3.843850686361608*^9, 3.8438507095946765`*^9}, {
   3.8438529456193323`*^9, 3.843852981421211*^9}, {3.843853042882265*^9, 
   3.8438534780784693`*^9}, {3.8438535616140213`*^9, 
   3.8438535696904235`*^9}, {3.8438535997714205`*^9, 
   3.8438536007396636`*^9}, {3.8438537050039663`*^9, 3.843853705232463*^9}, {
   3.843853758937474*^9, 3.8438537667763124`*^9}, {3.843853846383272*^9, 
   3.8438538577711287`*^9}, {3.843853902479278*^9, 3.843853923988542*^9}, 
   3.8438539593340025`*^9, {3.843854015467157*^9, 3.8438540365325413`*^9}, {
   3.8438540756473484`*^9, 3.843854075900713*^9}, {3.843916986984389*^9, 
   3.8439170409992275`*^9}, {3.8439170969318132`*^9, 
   3.8439171373043585`*^9}, {3.8442599172086864`*^9, 3.84425998948857*^9}, {
   3.8443506360375366`*^9, 3.844350671011756*^9}, {3.84435204155085*^9, 
   3.8443520441992655`*^9}, {3.844355605216835*^9, 3.8443556103787165`*^9}, {
   3.8443622164629297`*^9, 3.8443622194538164`*^9}, 3.844363466791251*^9, {
   3.8443635990926714`*^9, 3.844363601763179*^9}, {3.8444355503439436`*^9, 
   3.8444355577801514`*^9}, {3.8444355964402637`*^9, 
   3.8444356025672035`*^9}, {3.8444360700154104`*^9, 3.844436087596571*^9}, {
   3.844436362898382*^9, 3.8444363639475536`*^9}, {3.844436397190669*^9, 
   3.844436398047649*^9}, 3.844436528842771*^9, {3.844437152188759*^9, 
   3.844437169061263*^9}, {3.8444376563888917`*^9, 3.8444376591458797`*^9}, {
   3.8444380358329315`*^9, 3.8444380545241613`*^9}, {3.8444480906568003`*^9, 
   3.8444480942720594`*^9}, {3.8444482576666293`*^9, 3.844448298689834*^9}, {
   3.844448333708049*^9, 3.8444483421279736`*^9}, {3.8444484265498815`*^9, 
   3.844448427991778*^9}, {3.844448580018155*^9, 3.8444485824194083`*^9}, {
   3.8444486256184583`*^9, 3.8444486282703447`*^9}, {3.8444497365648327`*^9, 
   3.844449745801837*^9}, 3.8444498661801896`*^9, 3.8444502334775486`*^9, {
   3.8444503706078606`*^9, 3.8444503721640863`*^9}, 3.844450839107851*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"4fdc4427-ab7c-4822-8290-a142d2bfc29e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"ae9c1c19-996f-4736-a4d8-\
9d1e6e3e2062"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v1", ",", " ", "v2", ",", "status", ",", "e", ",", "dv1sign", ",", 
       "dv2sign"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{
      "0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0.", ",", "0.", ",", "0."}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "18"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.8438317262806945`*^9, 3.843831758878952*^9}, {
   3.84383230217494*^9, 3.8438323408943057`*^9}, 3.8438333519274297`*^9, 
   3.8438334402400837`*^9, 3.843833497494026*^9, 3.8438336588116317`*^9, {
   3.8438337015966387`*^9, 3.84383370202672*^9}, 3.843833787385521*^9, {
   3.843853482389247*^9, 3.8438534909963074`*^9}, {3.8438537391798325`*^9, 
   3.8438537395924234`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"8afbc134-2a96-4829-a98d-261227ff5001"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}, {
   3.843832275680855*^9, 3.8438322921697855`*^9}, 3.843832601497947*^9, {
   3.843833506562276*^9, 3.843833528608164*^9}, 3.8438337842905464`*^9, {
   3.843853804698841*^9, 3.843853809642054*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"df917fe6-c171-4677-bfcd-46b626c18e59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "v1", ",", "v2", ",", "status", ",", "e", ",", "dv1sign", ",", 
     "dv2sign"}], "}"}], "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v1", ",", "v2", ",", "status", ",", "e", ",", "dv1sign", ",", 
       "dv2sign"}], "}"}], ",", "p", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "noteBookMode"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9, {3.8438317402397795`*^9, 3.843831747944312*^9}, 
   3.843831869854334*^9, {3.8438535195505447`*^9, 3.8438535290094166`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"9aa1df55-4b50-4c69-af76-58c3366fca58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`", ",", "0.`", ",", "0.`"}],
   "}"}]], "Output",
 CellChangeTimes->{3.844435785184741*^9, 3.8444480480219*^9, 
  3.8444480967630987`*^9, 3.8444483476285105`*^9, 3.844450237225604*^9, 
  3.84445100844376*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"0afd420e-3ebd-4508-8967-b37fcab784c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "+", "dv1sign"}], ",", 
      RowBox[{"v2", "+", "dv2sign"}]}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9, 3.84383369028327*^9, {
   3.8438338299677925`*^9, 3.8438338367674365`*^9}, {3.843853619174862*^9, 
   3.843853622708226*^9}, 3.8438539767549386`*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"8ac72149-7774-43cb-be5f-c0e6e76366d9"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
FBBgJG2zxV72WE1bbT8FqiRFd53AtskRvXnKlALp3U2Dcdi0uTBnPnMKKI4y
pdOw+RCvRowFBUo+K4e8xH5RMdaZY0mBNLHK+SrsFc2N9LkjeD0fd5+Zxf6+
3oj/uj0FVrl+P7IC17tXR8q/b3TE8Z1x8RfDtut+c0XbGccrVc2Gip09HvP1
ogcF9EUy0tjYjmut/fnPUkB852b/LmyWZf2Be74U+Ouxr2ap/grH71Uk+VHg
xEluM15cn3PlNWv3n6fADT5lXiXsVeobZCIvU0DY0HLcA7vA5EeJ+E0KSDpo
i3Ljei9+w1FQ4QkFfq2l7jyEzw+r/+Szmp5SYG7ug4U3doLVL/PQZzj+hrcz
Q7HlFVzuD2dR4KbiI5l32LRcN1ruWwpw5dXybcbn174u70NGZRQ4dVG/jQ+f
fxGVtLl/5RTgG4udkMf+/OzPg1eVFGirlTAFbMuz//VL1lAghYiq8sd2Fj4b
0FVPgd7oe3kT2BdYF5LPtlPgn3Tlowl83hZvQAakTgrYq34ulsDn+TJurqHv
XRTY9XiZ7Hbs8JqLTN0ePJ7vnAR/7FiHK1XCwxRw2/0plg/3A6/Cro8kzVKg
TO1VrNJPDur9Gaf5UVwVZhf586JxvyF4gmfRUVIVug+9k36HrcrtUTy1ThUs
b9m+68I+o6CxR2GjKgg/d3pAw/3KcrevB/3kVeF26PVln7CV/qw9qUxVheDP
e/ZL4H7IiTciPXiPKlTIeH2ow/3S1ahxD6l9quDTV0CZx36qZKv6Yr8qvI6e
rtraw0F/DVTefDNWBZ3E7elXsC9dry5RP6gKuu5feAD3X0niy392OKqC68R/
LAL3Z+1bAsW0/FVhxtoxsneQg0SFj3//EKAKVe2zvVK4/9MftU2xuqAK/uHm
Z4yxn+VqMk5dxP+30GW8xfbbO2meEaIK716IM0Nx/yjheezO+ihVSIu/s4+F
+03j54dFJ5+pwsOnQ2X5f/F5zdgukvUTW1xyynmWg+zzvR/bdajC3Q15ehnY
XJAOq7pU4dPww09/sHX3S5w81q0KB6d0UgPncP13HK9XGVKFsYfVBonzOB9u
vLjzeAbHx57j3rvIQV19ypLJYlRotiL6GnA/fvm4Q5apBBViOh/cnsFWHL9r
wL2OCidH3u+V5RlFrv+W+zpsoMLyNIW2Y9iD4t0t0vJUSFmRaSuA+/tx3aS4
eCoVzLz+ewn4frDi/nrp6H1UCPHNbE/D94nQuqnGLYZUWCj3nK/GFuRqDs83
osLl3lWLQ9irnG7PtJtQYTEzMEMd30fEtgo1kSypcMTfO/Idtvyb+fAiJyo4
ZD65UI3vLyk9bbrmLlTYJK59dAB787q8mW5XKnQdS18nJDCKtvqfZgt5UKFq
5tTMfmyazojuoRNUeJRp71mDrV3bPjMYQAXdDdFri/B9qmjx/YsLF6jQ6MV9
/we2Li2BvSaICi4f1XtnsXffsWpiXabCh3cOeQx8HzO0rn9x8RoVTKONmKnY
Nt0lbMkYKvzOv37DF9/fvkskST+9S4WG8oaEW9h2ewKbdt6jQv5crfVTbMeM
HXpHE6iQw7H/1obtdjJbOjOZCqIqh35sw/fHMwupTbpZVPgbnNnege36+aPt
1AsqeDbu5UxgH3w09ivjFRWiHYXDBPH9lLFX56/YWyp0DuodVsdW2Oh2rjoH
r19Zy43d2KKcG1wX8qhw+9YXAyvsP1HfV/W+o4JrkeauAOwONm9MfCFer4WK
4Ajsz5qkTSZFVJDsmd6ViP2846xKXikVjp6I0C7E9iKv3RP+gQov3LeNTGHb
/tP4hD5SwYYni5cP39f3NzgcGq+lAiV7f8SapfcNvs+dj9RTgSbFmFLGltrf
NLjmCxU+PXnQSMcWkJ73qWikgq/ACVlt7L7SvRepLVQo5FxYMMFuiTnB/7uV
CjWmP8KtsSvd70bGfqMCodlxyXHp/cHOQgmjH3g9YiU73bDTVnff526nAstq
berS+4zoLiGltx1UILk51S697wh+o/7Mo4uK+7m7Vv7Yp0Kt6TK/cfypsDsI
2+lwUP6XbiqcKx66FYxtppquE9pLhWobilYoti53XdXOfioU9N3aHY6t1jh+
4M8A3h/WT59EYMumb/iaOoTjdW+529L7HRE/XTubERzfu6zApfc//wzdu1eN
4vHofBhe8ojMTa/SP1RYFmz6ask//74dOztGhToj25ql79eV//AjT1BB+7rf
tqX3Q+9jl/F0TlJBmLJzYun3n3mqXIuepsLIJjXepfdDCdpmIvtmqZBg2G9/
Bfv6mnN3F+dwvNPGBS5i+/9+IP16gQpaUr/+Lc3fI6cilf2PColRu+AMNqX8
jMQNLho85X1SvRS/FFVBGzduGkgefBi3FN+Nsffv6/LQ4P6Z/JcO2FHcap0b
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
        "]]},
      Annotation[#, "Charting`Private`Tag$28163#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$28163#2"]& ]}, {}}, {
    PointBox[{{18, 0.8441621435042042}, {18, 0.6924002415998168}, {
      18, 0.9959240454085916}}], 
    PointBox[{{18., 0.8441621435042042}, {18., 0.8441621435042042}}], 
    LineBox[{{18, 0.6924002415998168}, {18, 0.9959240454085916}}], 
    LineBox[{{18., 0.8441621435042042}, {18., 0.8441621435042042}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{13., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{13, 23}, {-0.00309643451861242, 1.0038003243135543`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.844435785247323*^9, 3.8444480480782394`*^9, 
  3.844448096820966*^9, 3.8444483476889253`*^9, 3.844450237284726*^9, 
  3.8444510085026045`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"2efe45be-5376-46bb-bcf0-2674a371b964"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"9476c611-cedb-4e14-b4f1-\
a7f3e4e663c4"],

Cell["\<\
pyrfunctions : all levels of pyramid. {l1,l2,l3,l4,...} or {l1}\
\>", "Text",
 CellChangeTimes->{{3.840190264918742*^9, 
  3.84019029066455*^9}},ExpressionUUID->"dc51e695-7873-4d23-8fd3-\
56cf6235c000"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", " ", "pyrfunctions_", ",", "threshold_", 
      ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v1", ",", " ", "v2", ",", "c", ",", "d", ",", "dd", ",", "cc", ",", 
        "status", ",", "e", ",", "dv1sign", ",", "iterTable", ",", 
        "updateValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
          "v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e", ",", " ", 
           "dv1sign", ",", " ", "dv2sign"}], "}"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{
          "0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0.", ",", "0.", ",", 
           "0."}], "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "2.", ",", "0.", ",", 
                "0."}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"iterTable", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"updateValues", "=", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{"updateValues", ",", "p0", ",", " ", 
                  RowBox[{"pyrfunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                  RowBox[{"threshold", "*", 
                   RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                  "\"\<ConstrainedInitialSign\>\""}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"updateValues", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"updateValues", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"updateValues", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PyrFlow1D", "::", "usage"}], "=", 
   "\"\<\nFunction to update values of v1 and v2 over all levels of a \
pyramidal function representation\nwith OverConstrained standards.\nInput\
\[Rule] [i, p0, pyrfunctions, threshold]\nOutput-> {v1, v2, status,e}\ni= \
number of iterations\np0= point of interest\npyrfunctions= list with the \
dimensions of {pyrlvl, number of image(1 or 2), kind of function(f or df)}\n\
where pyrlvl is the pyramidal level\nthreshold= threshold to respect \
magnitude constraint\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status \
of the solution (ok, sign, mag, flip, converged)\ne= Counts the amount of \
times the constraints were not met\n\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405786523932867`*^9, 3.840578657988408*^9}, {
   3.8414189828506317`*^9, 3.8414190153348923`*^9}, {3.8414201999561043`*^9, 
   3.8414202059767733`*^9}, {3.841422235821972*^9, 3.8414222386898837`*^9}, {
   3.842637171335677*^9, 3.842637171767519*^9}, {3.8430502619890904`*^9, 
   3.843050270518544*^9}, {3.843050460398434*^9, 3.8430504611482496`*^9}, {
   3.8430511064726257`*^9, 3.843051108768953*^9}, {3.843059830007685*^9, 
   3.8430598306316833`*^9}, {3.8431563089552684`*^9, 
   3.8431563349852266`*^9}, {3.8435877450299177`*^9, 3.843587927732647*^9}, 
   3.8435879648494453`*^9, {3.8435882518247757`*^9, 3.8435882583050823`*^9}, {
   3.8435884431319437`*^9, 3.843588446792751*^9}, {3.843588502609065*^9, 
   3.8435885039545493`*^9}, {3.84358854311246*^9, 3.84358855472566*^9}, {
   3.843659177420129*^9, 3.8436591938425274`*^9}, {3.843663546652871*^9, 
   3.8436636100555925`*^9}, {3.84366370307749*^9, 3.8436637094891386`*^9}, {
   3.843663835431464*^9, 3.8436638656803412`*^9}, {3.8436657352242646`*^9, 
   3.8436657482571917`*^9}, {3.843666159144108*^9, 3.8436661632291436`*^9}, {
   3.8436663018785105`*^9, 3.843666306822632*^9}, {3.8436664460298877`*^9, 
   3.8436665476066637`*^9}, {3.843666582354282*^9, 3.843666582822295*^9}, {
   3.843666794547901*^9, 3.843666795475816*^9}, {3.84366687001715*^9, 
   3.8436668781864004`*^9}, 3.843667267634773*^9, {3.843667418386608*^9, 
   3.8436674400611563`*^9}, {3.8436676285197315`*^9, 3.843667628818766*^9}, {
   3.8436678394563875`*^9, 3.843667862134698*^9}, {3.84374042807281*^9, 
   3.843740432503826*^9}, {3.8437404739313974`*^9, 3.8437404797123957`*^9}, {
   3.843740549711228*^9, 3.8437405596339397`*^9}, {3.8437406315099144`*^9, 
   3.843740631785816*^9}, {3.8437407528485146`*^9, 3.8437407539730225`*^9}, {
   3.8437416380222497`*^9, 3.8437416609835267`*^9}, {3.843831885008831*^9, 
   3.843831895846131*^9}, {3.843831930040265*^9, 3.843832010857004*^9}, {
   3.843832043973868*^9, 3.843832095327493*^9}, {3.8438321275150204`*^9, 
   3.8438321934420013`*^9}, {3.843835065528225*^9, 3.8438350660889874`*^9}, {
   3.8438492653977942`*^9, 3.843849269401266*^9}, {3.8438493770922575`*^9, 
   3.8438493773653746`*^9}, {3.843850718357809*^9, 3.843850720319829*^9}, {
   3.84385298783541*^9, 3.8438529928686028`*^9}, {3.8438536382562723`*^9, 
   3.843853677500249*^9}, {3.8442599933780375`*^9, 3.8442599947214794`*^9}, 
   3.8442604301474943`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"2ba813e8-f4d4-445d-9ef4-e02d9a926ee0"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"ba5cc455-fcf1-4e82-9c11-\
345ce239926d"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"d665bf0a-b30b-44e3-a00d-\
ac5233747928"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initializing", " ", "values"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "18"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", 
      RowBox[{"max", " ", "lvl"}]}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", 
      RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"i", ",", " ", "p", ",", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
      RowBox[{"0.0001", "*", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437553466508884`*^9, 3.8438322358191843`*^9, {
   3.843833973504225*^9, 3.8438340019471693`*^9}, {3.843834062048588*^9, 
   3.8438341209426413`*^9}, 3.8438349655313034`*^9, {3.843853729551586*^9, 
   3.8438537299624414`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"92b9953a-3f65-4581-92ba-aa1b6d592b38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.10521349946135951`", ",", "3.8947864987042315`", ",", "\<\"ok\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.844435785298831*^9, 3.844448048117984*^9, 
  3.8444480968598623`*^9, 3.8444483477389684`*^9, 3.8444502373355856`*^9, 
  3.8444510085892935`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"4c60910e-7560-49a0-ac46-a0b0f4ccd9d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.999999998165591`", ",", "\<\"ok\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.844435785298831*^9, 3.844448048117984*^9, 
  3.8444480968598623`*^9, 3.8444483477389684`*^9, 3.8444502373355856`*^9, 
  3.844451008591288*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"5c1e69ac-1e86-4c8d-bee3-3088bec46fa7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9, 3.843833456936058*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"9f5e2abd-c86d-409d-b148-1edc64ec627b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
eZP8//82QAAAQC2mgPI9EDQnDw==
        "]]},
      Annotation[#, "Charting`Private`Tag$28212#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
PT1jP8bbjGr16TKP0NvT5G5vQgN7sbJdVWhW9YTORlMa6J7dMhODVlq/ahUf
/VCBOGCLXvDF7X6oGQ2iBfzXSqC/Wqel6ZvTQJ8XFzqVxyMGHza6LbOgQfKe
d2fa0d3q4/ASXXzyleJt9IO0FSsvWdLgSc3ng2no8n/EuJMVDcjH0tRC0Pku
ro0Ua4z36KZYF3RSZ0rqDLo0dMeJA+gzW7iuDTY03N8Yn/TQPldGiaiDNJA6
4P6Kgz4sJrXC2JYGB7SPGJLR+09oj62wo4FexjmWAlqnz4X7Di1XvSd5DZqm
n5xy1Z4G674oHl6FXldWf9TjED5frl/2CrT46hFt9mEaXFhWq7USLXBmudRf
tG+Wrc5qNH9s6+hDBxocT+/KX4v+YOLcEHcEn88i+qAy+lldYrKpIw3KWZPu
NHTjhjoXWSesnzDftq3osvhPWoNoauJ5v13ovO/ikjedaaBVV3TUBp1grzly
3IUG7WacXE906H+O9ZpHaaBYVSgeiT7GSEia70qDE1TXumy0bdY951b0POnP
2VVo4wVDW5PdaCDUXFzShdb2WLbc2p0GtbEiY3w05cXmYQUPGjjcDzaaW8+1
xJG6MbRG7YnnTPSseI1ToCcNLPfeYYWipwIGNHW9sB7T3gkVofv6l0iIeNNg
4bddo13o+srDtZk+GF+TujYK5luQhZh4zQkaqA6w4mfRCsutnyaepEHWPiuD
rZi//7VeP+fqR4Nbzgl6QeiVhP5C2QCM37bhcUGsh9sbzvwKCaIBqXW3CQnr
yeL9s7vmwTQQjlpwKgA9myF/ghZCgwIr7aon6N1i9byPoTRYK/J5z3Gsz0/T
3wf1wrG+E+083mI9x93ckS8XQYMcVXa8ZhGPYDql2s2gU41mk7PRYa8Yr69F
0WDVtOKmI9gf1jR6dIico0Fz3X8ai7G/7D0/UPMsAfPx+bDE1VKs5x0Mv+uJ
NHjWm/VYHvtTjsBp1pkkjL+x8sJs9NjxtbeYKVgPOn4CmdjfIq0sC9LSafDB
ZuWBgnIecU+lI94mlwYC72/b/sb+uaHpnsNIMQ1ujlzmnGnkEXWdNmXlN2nA
iFcdW3Uf8/nj7J+gEhr4PFfZV4oOE9iWJnGLBil+F5XfNfGIt9qtLVvKadDJ
femqi/09pfaN+vlqGhivucVSecIj5t/5853ejO9vfrdEo5tHXHyYq/cHnWow
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
BdoFV6bmPo8fvdl6VDwX692a0zj3eXz1xYVCvWjv6w5f5xwTQ+RfusSCuP13
L0ijLU4GaDvnseCnbH2aHHrjkYrXlMv49+0CSzegf+ybPDmDrlBb+ouCbiFU
JBvyWRD418tOE52hfuhW5BUWhAvd0TVEu6zJ2mVUwILoJU5F1miNxT3DUldZ
oN+7LHXu83jh70sj3qID1bSXRKF7Bw3WFRRifDqCVlxCF3WdqXO7xgJmjHn5
PbR/Y50FswjrYY3VSC/aoHTm6y90orF43U/08FlX9XM3WHC85JHxNlzPKr+C
//YVY/840rfSHR3l2Oe4+ibmX1dvfDpaWWd/blEJC3ZPFOTNoGcocVu8Slkg
qBi/jYT59kj20YtNt1jwT+VskT3a6cfmZY/LWFBbMfCkB835dLw4/jYL+M1W
iVKYz0LdJfpm5Vhv9cvVzNBXb60PG6pgwSMfX/5HtG+OtWxJJQs217EV1bAe
9GJTq33vsODFPOetAehBp8Wf59/FesgwYMlifVWabjvfiv7gKy7rg47QDVZN
rsZ8PuL3Z+7zeqW1nw8p3GNBefK+mkisT4ee3i6oZ0HK87B8eazvMclN5qsb
WMBWmNZPR3vtT33zGa12Lj59OfaDkI59g/mN2H8yg3dL3cD1++/JtwUP8Xks
rt3Sw34jL6wa+A59fdWgwWt04Y7o2TvNLHjec+fecexXFQ+2LXJ+jOu9zYgo
L+UR7fV10v89YcHVsw3HbG/zCNM/MjmXW1lAH13hKYn9782WgPWBbSzYQXE/
2YYeucsmkdtZsNTG8LYh9s/55aWa5ztZEDxOBPrfxXwpzLPd18sCvQVX3XMb
eAR3cLZf9RULCjfJp6ZxecQOxYPOgq9ZUCfrvj65kUeY5K32qnjDghW88qDM
Jh5x7GLS6RXvsT9ZOn9484hHXImPKHg1xIJ33gJeW3E/IT3t31j+Cfub5uvz
wbjflInqlJwbZsGXcCv3B7gfNcT8vaM5is8fFn7mYA/m55mTj3MmWKDbNXqn
9TWPWOrnMnboC/Y3gZzdqbj/RYrKzJK/YrzTlCxFcL/8c6lVYga97d2PV+Gj
uB4tlM3nZliQbey4K2IC80vmW3T5TxaoHrb1rp3G9Wg4vWG+ABvC2eQT83G+
nlyYZV8gxgbFoW/6vKU4D17c7XtsCRv+uNqoTS7D8xllNlpjKRsccieiJ8Tx
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
        "]]},
      Annotation[#, "Charting`Private`Tag$28212#2"]& ]}, {}}, {
    PointBox[{{18, 0.9503097583956968}, {18, 0.9006195167913935}, {18, 1.}}], 
    PointBox[{{17.89478650053864, 0.9503097583956968}, {21.89478649870423, 
     0.9503097583956968}}], LineBox[{{18, 0.9006195167913935}, {18, 1.}}], 
    LineBox[{{17.89478650053864, 0.9503097583956968}, {21.89478649870423, 
     0.9503097583956968}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{13., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{13, 23}, {-0.02878604778004009, 1.0288027426967332`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.844435785362952*^9, 3.844448048182866*^9, 
  3.844448096924538*^9, 3.84444834780575*^9, 3.844450237401413*^9, 
  3.8444510086571436`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"c5bc62c5-c098-4a43-b30b-201d9c1ebabe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"48df32ca-fd60-406d-8945-\
a49b0001894a"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"155883ba-978a-41a6-93c7-\
b6d9e5f422e9"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"c9b86259-19bb-47f6-b975-\
2475f6a3f617"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.01", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844448060965106*^9, 
   3.84444807530322*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"1bfb77de-7d5d-48b9-b030-f47911106b61"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$28261#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwUl3c41e8bxyV775V1rGOTtMTnuWVGSaKsMsqWJGQmsqPsTSnZXzOl9flI
KEIIlTKjKOkYZYR+5/fXuV7X837u+33f7+e6PtchOV+0cKGloaHpY6Sh+f/v
UtNYEQ0NBRkenCoWst//PE/t77SPDAXl2tCm3Jbhx3UrBJVGjSno8Omm43Of
ZPCUAvNHj1MpKLv1izTXUU38gMCFLfJDCtrLbBFGz3AQn7iVoJc1QkH+G+on
6Ap1cLXrrW/9pBeRcaPDh6bdevjw5hj/pNEikuV9f+H5EQP8auBfu+Pei8iE
vcOJYm6E93pozio1LSIhfhP6CBVT3Nu8lGbGcAmFVVr0fuU+gfN1tRqe9FpC
XppdeuOfT+BP9caTXtxaQlZ9z5j47ljgLPuFhIs+LKHCCY3+GE5LvKFO04Ft
awntk+sIm39qidsqnrgfQlpGupIrr6YcrfAKscTdpz2XkfAgSu7POIWbZ5de
ab+5jKQcLtQuS5/G17hePt/TuIy4da1erFWdxu8kju+8+34ZXXX+l/Vb2Ro3
pts8wrW5jNirL9P9K7XGKeFCKVclV5Alw5NRBREbPHtVc3hefwUt2Iz8SYy1
wb9+v+DcmbyCcm69PqBnaovfPJ9Yvr9hBU0eLmVuu2eL7x0rXbg/vIIoqeGe
vb9t8c+nX2ry/V1Bri6n1K7o2uHR/eMhURK/0cT9A8rvYu1wZdPNForeb7R2
SHnvarsdPtgmxOjg/hsZcx0UX9u2w8Owvcd6kn6jS6xuT7/vtselm0+kH6r/
jTgF8IkvZ+3xrt0+HyuGfqNmIUPntRh73K8qUUJo4zfi3WTg0ymzx0Vky1xi
xf+gxnKmro5We7y16GXVyuE/SJvxpHXlB3vcU2hi0dntDzKkWUjbnLXHudM2
9/ff+IN8wiaPDSzb482swldR3R908vzeM7BujzvG7G37b/APSr2zmGFHZaZ/
J1hE1/+gl8LinQdW7PHaIB/zRLFVFN/c2jM/Z4+fWkrMWtNdRUEu3wKTRuzx
ba+yz66uq0iDOSNHucMeL515KTWUuIpOJfUxTFXb42YOE+56taso5H1J5oub
9vifD5s19e9WEXonJDzhZY8XWgj/llhbReCu6WKhb4/rd+89dFN0DYlG/Dum
ImSPzxtYRG7CGvKiiSqL+WaHZxA+rzxd1lDP4EsD3wY7XPvgDfaPCWtocrp7
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
SW//npBFhYPxt2zCMLP9T5x/mUMFb/VH7f/7o6fP6u0U86nAiYk4+r8/8qB9
XXa4EOdDrq3V//5IIGPDvaYiKrj5vrIPxpw1aR0mWkqFZ4uPH/fDvMUqibqr
DK8XcLPAHXNHY9tIfgUVYqs33rDF7LDi97kvF/D+r6vd/d/fTQaRrWjVVNA+
t6uChjmx110yooYKpa4rbP/XQ4lVeOdhLRU2LfndKYT5Rs7zYyvqqPC4KOTr
J6ynxZy41v4GnO8bVl6+i3nUTvdzzTUqFGSYiZ3DHHkjKG+uiQovBYsHAzGv
VKjZZdBCBfODp+kmmGtDPy1IbaWC7Ksz46sxG75b1fruFhVUjTeJjuB8eM/b
dVT1Ls7fzpeuVzEHFsapBbRj/exWCx7DvPjfzf5b96hQLnj0IQsz95baDpsu
KoRV7Kv93x89W+8sfP4xFdRqxy65Y/aKzGrid1PB8ePpc/KYc7aKqMS9oELy
uyklX5z/pFL2255XVMiuuZUnh/m+sG/q2j4qmLZmdl3D9TLV9m6+4T3W79J+
xW+43pKUZRsEB6hwO8tGLRKzcqzxwR0fqRD0fM/VZZgtDa+9+jRMBXe7AwsV
cb1e6UyplflBhW3KN7UlRcbRWEbrs90/qaBb/iE1DNe/isvYVNokFWqyWzRG
cX/InzPkyc5RwYk+P1iP+0m8+r9OWWEa/FwaN74G+6G70xrfLEVpMEYvD7mK
+9X8XbtlGQtowE81/8rD/c3fvtFquSQNHr6I0uTgfulw5tDH5ctpsLppCeXN
Dz7Ksc0Ts1pBg4yn5JeUcdyflTtVM+VpkP3FtjP6Ox8ZtSr5yK2lwcTk5C75
r3ie89/8kdtEA5v7CwaW4fuk+C5juZUsGvxa8ykv5wWeb2uOsWw4NIh6cvxQ
5zM870fK7LN5NDi3ZOH+uad8NBkpWLpyKw2Y8iZHnPF9tv/qdS15ExpQc5cL
muP77urwIQvbHTRwnJAfTm/H/dpENjDHDO/vXMre9/+/L/p4pEXekgZf3kqV
ReD79DXZTUar9tFg/5oll5fg+/ZEv6W3nSMNSDZmf6Ou4/vupZPJuc40OHM5
VE8Q389L9N+/WOVGg+qsXr/l+D7/Tkpy1s6DBua5ZbRLV/lo5XuWQp4XDaAg
7/zOK3i+BGa4rD5Cg644pFdbw0edW+/G7PWlgcHA6Z2+l7AfWvqjMs+fBk/W
6rT8//7geIUpf/UxGjxSlQqau4Dnl3+wtH0wDdZ7dhd+rcT+DFXS80NpoO9D
+TBSwUeuvcKhCpE0uNa02nFpOfYvmx+Xn4migUUZ+Z5yGR+Rj2U/nY+hgalr
duWO83h/913+HImnQUTmTFJcKY73Cs1NAwk0ePBmTvR5CR99dp/eZXGGBguf
G+ZQMXddux16N5kG0uvin5cXY/+0ILGClkqDTnvXbVsw51hb9ZSl00BEM8b3
QRGOV8X6v3JZNCjWShsNwew2PbopPocGoSIM9jbMOwwbLGbzaOBnIj+2HjMt
KzzMq5AGducHTy/HvGrYqPJNEQ3kLnPKNmAWZMg+My2lQbjEo7v6mL/Evv97
s4wGR2yR/0nMj19WbtaqpEEHk4N6Mder+O8uqqKBvZFnnSHeX14g74TUJRos
Uffb+xTzyY4FF05epkFz2PydAHw+D7meZz+v4HwaaAygYz12uuXPu9bTwGNy
279lWC96o5vqy0YaKNrt/LoQ66kgRrY0bMLxu3yifQ3WW8jq94nrN2hwKT1M
3hzH40tZ+wXVVhqQq376FeF4PZlMfp57iwb1yaf2La3io0Z9u38Sd2kg+XnY
teAiH+VnKKmFtdNghfE1WROcD1Gfv1t+v0eDKw5FMysvYz9Nbwp3fECDxjsm
+QtwPjFe7Hih+4QGh2dO7zJqwP5beaVA3VMa9C3yCy7A+SkSMKim9JwGa0db
zsrifO6RDYoQe02DysyNzYcIPrruqnsx6A0NSkpSBs3v8NG5eomXX97hevgj
stkW14u3ZZH6w0EatKwuZ755yEcW572suJ9pILReabXVEz5i/aJFXhrG8Z4w
MZrp4SOx9M6XyWO4Pk9wrtX38VHRs4lIyykabG+UWL9mDPupjTer22do4Hze
qHwA94dD/nGvtH/TQNYx8MVT7OfYMgqa8gJ0WL24sGY1vq+9sNDvfbeIDsoF
OtP/z3vxnqwt7mvosI1cZjyuNI5SBBccr1lHB++YWakFm/G8JQfendxAh4jE
3A/r1MeRYoqlTbQKHdwLCoIsyOOItVPqZLEWHYxI5/9l8cZRa1hE1xcyHXoi
7RzyYBzpXeLLkWh02GEnk5W5Dc97yccXW5l0WJbgHnHECM/PBwkv3ujS4ZNx
Zlac5Tj6Pju7bqMeHWZY+9RVrPG8VvX08jKgg0D0W++rtuMoIt7w34wxHcak
PwwmOYwjseuNRrADr9dllvjWCc/HYeX0ODM61Dzc/Uh6P56/BiKqcpZ0MDk5
/o/qPo4UAv3991nRQfJyoJuCJ573ZYM3z9vQ4b74wZ1fvMbR5he7Fo7Z0eGP
mZ5fpjf2FyK3Laj76KDGOp6ofBjf72mkgmBHOjyLiLBOPzKOmvefG77tTIeA
ge4zAz7jCNKWUBa50iF9+cCIhB+e73fCQs3d6HD51SYVaf9xZDox1pHlQQeD
wdV/JzD3bLCX+uBFhzd8quqlo9hf7nq4V+UQHfjNQ64oAM/XCHb5oSN0EJyv
8qrE7Fp7Ybzelw5n/ad/DWEe/bCS88efDhtebm39//8ln6XxMdsC6UDpF478
gHlSZ/pJwjE66Jlemc7EHHzYbVVPMB1ePb/9di1mgcIXrvJhdDhMqx4NwOvH
PtK77BROh1jl4Te5eH+Sf+tmKyLpUOIy4pWIz5OqsVGPH0XH81DVwsgX+wX7
1CTtWDoMVa017cZ6FJ4WfB0WT4el6khmPdZL6YbPxvYEOugMCLowsJ5Vox8O
SZ6hw6+4dxOyWG/SKrPru5PpcOX19ohrOD6NRq1CeWfx85TmtjUHxhHnuOaO
wTQ6bPW4EGzgMo5uVeZnqWbSQX5Voj3JcRwZ9EoM+mTTYdrptVLfXux3GKOB
//Lp8DwrycID51Ovm+1tg3M4P/581DA2x/4q875EUjHWu//EqyET7Dcmy4sU
yukgt8wpzmTrOBpXkvu6v5IOht1pglI4nwMtY+gXq+gQMztMT2Rgv1S3/wHr
Mh1ovl2NhbgerrodUbh6hQ43NV63luH6+SQfclitHuvDbttvtgbfByJSpVc3
0SGEuXtRNPZnwdRC17QbdOhaF9slITqOLg5daJRopUN1otd+x//fX+y4bffn
Dh0CQ00fJ+D6B4FH1Ufb6eAq+f2neyu+39X1zo/do4Pq5F13Hzy/XsiPl7zr
okPtxe16U6G43w2t/dr6kg5hZTYrQ+Rx/85R4zFe43qfRNPW89/RP1Pt5Mtv
6BBv8YxpMPgdudTtoBb14/xfxv5uVPEdqUaEhkSO0sE4vcozTfk7sqPGP5od
o0OicUZZkdB3lDiUts6PTwezu6U2Ze+/oXHTi3ddfuH4v3TfEp/2DTXK90no
zWO9wrX6bcbH0Jeuz/taBLQhceyJyr22MbQq4sdlmrA2rBsJV5DLHkNhQwst
lRdqg+jBkCEvzhjSq2Pki0lrw83iScfEgK/oqWmGRqeyNmTtO6eb2jKChASK
T+hu1ga0ei+1JHIE0eqqu5vUtMHlUmrdV/0RlC3fdrRKC6+3cOiabtcX5DA0
0XKapQ1fqyiczO5hNBZuvmPnDm3gbJCMaWv5jG5KCxL5Znj9jZcM8kM/o6Sy
K6Svu7Th7NLUAlnuZ0R6KC0bb6UNzt+ruLNNn9BRuRd9tx21Yabycq7U1Y/o
d7WtB91PG8K2tlQdzxpA4n0uUQpZ2iApy4j8fakPvfGWmfTK0YYayXOmPpv6
UPW/u25NedrwnHzXzqj4NdqprGxsVaQN8YkGJaaZveisz/CylAvaMGTmnpYZ
+xKtXOBdKNyiDdsPh1doxvegkRyFZRat2mAacJilJtmDmjUeRRbd0gaL59Rc
hbNPkb3FlgO8dm3QVd6uvqCwGxUVjKsHPdaG9JunIj+deoQ20QKaRvvx841z
beqFHSifsiZb86M2+J+qpQQ+bUfLyO2BPp+1oU7oVl7tgnY0o7mcNjWiDYEK
dT9ZYXfRg00NNYI/teFooEf7iaRbSEdl3xm9SW1wnH1IsmgkUJ2SqHfcNNZ3
OF8hx6oV5W/Yo7r4jza8M7T4Flt9Ax1aPVm6UpQBuhe+bOJcaUSD8gUn9y5g
wOIyP2fpmAZktVLfuXARA/vroc88p3qkszxjrdISBtg9eqqzVeMqWraUnqO1
ggGvIrSDysnVKHrxuyA/eQaMZTXUIOMqNCsRY9WwmgF/2GtZ23wq0eDCFzKc
9QxwmdZWHv14HtUJBSQZqOLv95f2Nz/IR5sF1xw6pc6AIM2eC+87c1D+vzaT
Lk0G7Hk6n2o3kImi/8gusqAwYPK6x0kFm7NoZq5lOJ3G+P/90+PYQ2fQoVnX
jlfaDNhWKm+x0DYeWU3VR+3jMGB6v62IpU8YevDL3qWIx4CN5exXK/YcRein
iO5HxIARu2jldEV3tHncct5DjwH5NRnr/j7bTeR///P2ogEDKEU99777exLL
vp2/8X07A677jSsGaxwlZkd+HTu6gwGh873GiUsjicNf8q2vmTFgPq3Ivdc8
mhgc0tOe28WA9oTWvW4H44gHH9N/hlsxYK9rj1nbljOEziC3544NA4Yrr6b2
9CYTdf2fakX3MiBS3DHHTOsskf+Odvi0IwNszy5fOBOeRix7+9b0sTMD1qdx
ttsmpRMxfdHqUq4McEwYmH11OoOY69UQt3RjgPjSO5fuHsskDr96/iXTgwH0
pqxfB/dkEYMvQu+99mLAkw1rHNcrZhNWz5XKFQ4xgD0geYL0IZt40NMV7XiE
AbPJGwa/JuYQ6OnR/SW+DLjVsVyhRD2XcNrdZCR3lAEpXlevqt3LJSJe/NVK
CGRAoVO95YNdeUSR9Va5+WMMiJ5nnhl6mEfceh37xzeEAdU5+4Y/0fOJ/r0P
Bz+HMeBoHPqulpJPCLxf2mkbwQDDNX801r7JJ9Y7WV5+dJIBMbW1W5RWFBAw
mJ2hG8OApMzgEyV6BYST67uQhjgGdCkFVczvLyAihja4qCbgeNXepRUGFBBF
Hm7bCxIZ4JkcdmXoeAFxe7Rqi1QyA07L3ank+RYQg9582ZizWK+8mrKF9gWE
EJ/6eyYN56O/E/USu4BQ9D024J2J8/fnr7cpiwuIrT9b7vVnM8DZ75Sm/It8
wiVAsMYyjwGKepzai2fziZPT+un3CxiQ0bpp/NK2fKLkeEIwtwjHh+F9LOZr
HnHn92On2hIGrBNWeZ51Ko8YDJMxVCrD+RHkl2S8No8QErDRzK7Az78epghX
5RLbRAZmw6sZELDh236FyhzCNVa5/2fN/+e5sGD76hwieqFXh/sVBrjuOn17
aVw20Sb5M9WsEeeTCu38IuMsQm+5qMa6WwxYctDc/k58OuGaZSSddocB6Y+9
v4w8TCOi5ZNmxNoZIErO+fhaPI1oX7Oi/Xsnzj/DrN0Xws4SBiqqDq3PGLBa
o6Vka3QiYcjYkbJvmAEmF4SneWEnCI+ms4FPRxgQIRFwx54dQsRzXtrrj+Hz
3w2REhA4RtxHjqqaPxhwKW7tmMZFX2L7dt87f+YYcHiMfYfcaEV4PGio9PnL
AK9JgeqB1wZEvOlc0qd/+PdMo64MbJhv7TSP2tslwgSd4wtvXXa2RMa2Gb/y
ljDB897On8S0NxK/cWLu8zImxPg9KdYM8UGdCh4CJBkmPPzmIMTx8EPb+9mS
bSuY0Nz2UyNUMhAt3KokvWQVE5THVmZtbAtC90oXr7RRYELtis+zvl7HkYF7
/8ax9UxoW351ZDQqFIl1dqpqb2TCbF2P3KnpMNSuVqcVocyEBd9fhzbYhSO9
7zEcWTUmPB7+Jm8+E4GEzY/oOmgwQWtDiPTI2Uh054qNYeUWJiQdzbvXsvEk
0g1Q382lMmEPvWFBPCkKCbyStY2lM8ElvtWl6WIUusWcd+hmMMHjdvCqnHXR
KDx32HUVmwmTPT/k9BKjkc6fbi9XLhNIterw6kc0mt/X7FOjw4RNpqQTR8xj
0E2iNHAGmJCQs6BJtTIGhW44E7p1GxO8Tjf1Ks7GIG5U4MlEfSa8lt3ZHrQt
Fv355Bj/0pAJZZsfuenHxaIbBkZJ642ZcLFJp6yyLRYFV1LSvUyZMN1c5dH6
OxaxxRVy63fi86yTzynViENzB0WL5s2ZYNJ3dm2AdRxqevS9bPtuJki8Vxgw
C41Dx7R6L6buYULvmjv3zfPiEPPs7StvrZlwKfHUzfT6ODQzUXVNxY4JfmtC
Kpj349A1y/SbPvb4+3cLD9u+jEOBjWF3mx2YEOTzZ07mQxzSXuneKeLMhIqV
+bSYwTg0ddz8yc79TDhVEyP8oD8ONbxhvcg+wARZ5dtm/17HoaO8jW8G3ZnA
OGIluPVxHKKdkxzQ8GLCu/AdApdvxqFfAlNDgd44vkY1tP2VcajO5cPYrcP4
fLciYkOS4pBf2/0JcV8mnHzZ9U7WJw5RVK7OWPozofFErqLpjjj0Iy5vvjAA
52f1D66OShyqHYkWGQliwtSuPtmFWC8fk8Pi1GAm3HGxT+14GIu0LlkvCwtl
wrWn4QWZ2bHo+xJduXsnmFB/1nRthnMsqvFRU5CKZEJaxoM/71VikQbt76ay
GCaw6HN+98tj0FjGkCY/jgmVjTf6ip1j0MXpJ1RWAhNmDHcCWz4Gqd0oQY+S
mBByQKxsdXg0GlVI1F9xlgkprzhHCzWj0YUTASbOaUwwV3YZ2P06Cm3eut16
MosJwuuK6Q82RyGVzm+H1xQzQXvtPZUlFyPR2Rr/0OxSJvbn7xc95EWiP2mz
p2TKmTDq1zto9jgCPXMQLVt0EevVMks/1ROOIn4pvJmsx/E82Wl4a3ko6ltn
avj4PhN0bSY017GPIn3RHkujhzge+8x1ZTn+qHbU2qXtERNqbF65Urh+KK5h
f1hzDxMSzx9XXgY+iGYSUlf+lgnXHaLkb1R7oKTAqnXh40xAn2/fDZ/ajWb3
kjTnJpjwe87VMSHJHLnqNrIDJplQJRWby/E3RhzJO3sOzjHhi6n1sgE6B5X/
MNw/9IcJShVfZx3aNJH0q0c+zv/w86Lm9Vs8FqAvxa9PW4uwgGpc4h/3nErs
jnPM6RFjQciT4j9RxTpEq/fn8h2LWNCrSkQ9jtUjMhg/bm9bwoIAm0q5Ra47
ia2PFs5orWSBSmtz/4Y5a+LS1STRi6tY8Lx2ZRPrly2xMltWRmUNC/Yv1gpK
7t1L8F3Wb1FQZMHCXOUFJGdHwm57OSdLiQWTi9T1JaOciA5NDSPpTSy40cFX
45k4E/kzDNeFGiy4stAs3e+mC7Hg/U3fqC0sOF53drzdfT/hd3db+DyJBeab
d5X4L3Ql3lV2Jh6nsuD18YHlpedcie1JZrm/6CxobM68FqJ5gKjzf1FxhMmC
5L9tP5WuHiDW2u5tGGWz4K/lLe0OTTdicqN7dz9iwYHEwyeTxN0JkYBPxuZb
WTCwVHfxLi93QrrDuZ3Qw59/mH946rY7sWHFB6RliH/fUmiyVMqDIHnYNxca
saCQN/H9hK0HodP0mrbElAU2q75VVed4EDvErS+H7WTB4xP+QRY9HoT93ueq
38xZkD0vWpoh7El4Ve86b78br6+pHJqn6Ukc//t4bdceFoie27XrlLknEb/T
NIdjwwKlYQnfaG9PIvNcp8xFOxYcyXmuejXSkygbN0hatY8F9UYaDxgpnkS9
btvCBEcW5J5OK2JnexJ3UnWjZp1Z8GYi4feHHE/i6cfWvx6uLCDLpKnuyPAk
+mncY71uLLCI0DhekeBJfI9pmjD0ZMHso1dM2WBP4u9L7UPXDuJ8SF5+7fp+
T0Jyc/2wymEWFNu6bW029CRWHSe7ZPqwYBNhrKqj4kmoPqh5K+qP9dq9rdnz
nwfBXK1hHRDAgtGL3dtcnnkQBt4Xnn4KYsE1O3/ZHSUexJ6bKqaWwSyY+Xkx
2Mzbg3Bdcr7jbigLjkn8bksiexB+jht0qeEsEKEP6JIm3IkUQQVt6WgWVEoG
LNZycycKLXJqI2OxfoMbZ1/KuxOXSuXUf8Tj/a703hXY6UY80Jda332GBfTp
B5GkNW7E68ykXJTCAu+OwamM2weIL8MSyy+nsmCXfqZ0vMsBQjRBTDwpC9dH
cU9QRa4rAY9//zQpxvGdqU0eHnYhGqyG7t2rZ0HLY3GTjVsciCL3G0eINyxw
W7Ov8SHNhNiZ/W6R6HsWpLat0jttbkT8uf+v1LifBeq1i1qCfQwJGzW93hef
WHBaZ/DHo9Zt2F93wdg3FiSxCyzE9VlE6xp+H3mcBfq5j44t6KMT3julAoIm
WBCh9idl6gSFuH95zwWhaXxep22mwzObiHC/91LyAmxwLYt/R88idDRKBaod
hNhwo3u9n2rsAtT3TNHgvAgbtCQtr9yskUPadPdgrUVsEBsOkz9GKKNPB07J
BkiwYan0cfKtq2ooNfNiTfNiNqzZsDckLkQLfZ/mD+pLs4GQqlN+ZEhD+Zul
w07LssFY3jv11yFt7FdoK57KseFBjfPX9+FMVN58zMR+NRucz5k0/HPnIsuv
uZ+L17DBKf7Tk2s6OkhI4Wb48Do2pJ4RXL5aEJBDmGC9nxIbRjQWH9Or1EWS
NRt3Xldhw9PONyf5h7ai5vf6X/5uZkNcp5R1uNo2JAcJCqc02aATbiP6JF4P
tflUNz7WYgMjlFP/RE0f+RU/NpelsGHUU+2ldps+eiwkE3NO+399uhWa3xmg
UCp93WcmG9az7eRWOBgiNVfrJjUOG0J3pGvYvzREvenHd/vw2DAr9KXzgsF2
FNue960BsWHJiVab9Ze3I9rUzbjfumygDEZs619qhAZV+jfo6uH9W2T/WuRp
hFKshVpiDdhQ/vPQy5vNRogXr2TVtZ0ND4e9diuIGqPR6wbjUiZs+Gkx80J/
uzHKHvFIsN7Bhqs24fftoo2RwarTSgVmbDig4JkR0mSMfhlfah3cxYbY22sr
7g8bo5KQJzabLdmQeXCRh8tSE2Re/WPikBUbFumkbvUkmaD5tzJn6mzYYG2v
WPzX2ARVL9beNGvHBqFRxe/I0QTZ6djc1tnHhijxv2nmh0zQwiPBe6Md2WAx
IP/XLMAENZ7Ln+x0ZsPY2cE0hyAT5NrdmrzUFe8f3bqT72+CpAUHVPe4seHg
EoVfal4m6BZZuC3Xgw36GxxTVfeaoMMuyg79Xjh+eRMLmgxMkEKa4YzyITYk
FSNiVsMEBRqK5eYfYcOCXsXldAkT1P27jSPjx4YW34l9Jz8aI7XaqHenjuJ8
+VozJt5ojKJct4YLBLHh5m0b2ZmTxujtSsENQcfZcNh3fJO/sTHSfkTc+RbC
BtmgwOAySawvnSf2JoINqkFmm19EGiG90d8Vu6LYIHiwVFWZboQKC5uN7sew
4VzFcMPTj9vRrgXMMw0JbFD5vvXGZ+p2VHVjaovGGTb4/bDrO/fCEIn4NHSX
JLNhE+lA915/Q3S9lyKbks6GeQuLMydKDZD0mR8NYlk4P0nacwxtA+StW2sd
lsMGB+6ShOx2fbSuSjPPq5ANf57mO/zq00OxIZsV9Svx/rN0+XmftiLLtWtJ
czfYULpDs7Bci4dqet4+9Wllw5YmfvmNZVy0MC7Pf/gWG86sqNpjNM5GN/gr
rz1vZ0NNqjhPvpqJFG/L6Fx+wgaBexl7M9bRUGhAzwflHjY0LaW2HP9LQS9V
z0bmP2eDpVz3xMG3ZHQqdUn7qddsMIhd9Suep4XG9y8ydf2I64NwIBeFqiDj
lfe/9X3G+295WGK3Vwmd74pN3vWFDdyHhuv36ioia7rIM51vbJB+MfI+1kQB
tYr9s5WfZkPkR7cbcqcWoZU3bv5OnsWfN361TYYuhPyOhBaI/cH9oiR6tkR5
Ske5d7b/pwAHfmaZugmdfd6aeOGX+2NxDrg+upEkv02CiOHZqK5ezAHd9MOH
2vWWESee3hh1X8oBjdol7j+6pQmf2ZOHBGU5sEDvUoRO2QrC88zQlp1yHAhs
i9L+9k2ecNlgPJ67kgNGbTkHq9YrEJZGUv60NRzYp5pLNCiuJ3a8O0qLXMeB
qaP3j8+v3kAY+PZOPtrAgYb4w4veiisSzJxzx9xVOLBcak7nY+dGgqwpzK7f
zIG/px5e3p2rRKjddvstoM6B6Gdjp4eclAmFEc0TuVocGO2fWi34VIVYHnYW
DZM5IHbhYe6T4E3EEqlJARqNA9uM76/auXozsaDM5k6ENl6vw0Ww6OpmQoDV
EvWIyYHY9VL1X0CVmO1ap7+Kw4EuW6Nskw5VYsIpSsydx4ELRyNlxraqEZ/i
jU8JbOVAkXWnq7+iOvFOocZ4hx4HZja2ixbHqBMva6Ukcw044NyX/SynX514
ohfwaGg7BwTDmqmRVA3ifm9vEtWEA2OLi04Hn9AgbntzzSN2cMAwmYALtzWI
ZoEiqUdmHNAUTr5O+qtB1KULP5O34ABxMNqGRtYkqje7p7tZcmDdw+Wxr/Zp
EmUtD/bUWXHAY2NTOS9Kkyg037JCwJYDzYGf1iUUaxJZn872mu7lgNa9xdb9
1zWJlGOTOTn7cPzlLl7Z36lJnJK03TvkyAFZD0oG45kmcbKoRYHqgvVpkXcP
f6lJhNDWvw93xXqueJXogJ8fvR91rsuNA0uO9x+cwd8/ZD/sJO/JgelPFz19
mjUJt3FjRbeDHBiwv/x15Lwm4Rhd8/HqIQ58GXSyjj+lSdislC77dwTv57i2
9BEPTWJXdYCbqR8HHm4oj7ytq0kYw+tNOUc5MPJeWaJ0uSax7Tl35HMgB3Ku
qssyPmkQXI+iKspxrOc5TaHiSxoE/Y+wd3gIB7aXF7NF/DSILSnuml1hHAh/
8FcxmqxBrL++pfbASfzczyDHvUSdkDdN9b0ajc87t3ZCylKdkO6fpPyL5cDe
imspboLqhMjCmw3ZpzlQFSxIzzdTI/7mrQ/6fIYDv84XiraNqxJTWtFMSgqu
h7/PrmxMUiW+WJvceJjOgTfoA2Vl62aiq+L1rfkCDmQZOY3XT6kQHhU0Piri
wJ3VvPiP4SqEaEXymsgSDqQnfFcJF1MhdMr1g4UrODD3rfn9SUllovb8FerC
Wg4sTTso6PJPkUgrPlUudYcDN0kBN+04awhS8afnFm0c+HboX1X+KgWiqwgJ
p3dwIMw+5cXHmVWESNGko9xDDny+UHApsW4lEVjoLL/6OQc8M4z+pG2WJezy
WIlKQ1i/Q2JWF7PEiKnc9OYDX3B8/nplOwSIEGm5/C/lo3i9d1l1frZCRFdO
mb4qnwOr0iZWlB/606qTLfVPc4YDC2/EVWlajrT2ZXlrHpnjQHcYuPo9HWgN
yrq3t/YPByTr1oc9/vG8tTYz7DpFkAu17SWRdxJu6ihmjPgyxLkQ/29z+vGX
33Ra0/WKjkly4brkbZszUz909qafe9y0hAsiSi+d7b7+0klP26POleGCh5f8
bpQ6p0NKq7UNW86FlzaMn7f1/uo8SpWIb13BhXSzgrDMgX86Yqm3P4ECF6bc
U5xiDgmhkrMKMifXcgEkV+SI5wsjdDZI9+56Ltzxv3Ji4y0RdCxFs1BfmQvn
jaQWhYyIIdmU+K7YTVw4nfV4Ef/7AlSb/HHunioXzN2TjziPLkQjSTnWxlvw
+iYSitV3xRFF+uyZFhIXjO9ab1Kul0DBGfF3t1C5cMqrRd06RxKJ5wdpyTC5
sDRsY+jhrUuQxbojB2LYXNA7af4tS2wpyi1xy5vmcsH962iF0K2lSP3CngVv
dblQk/R+Q+qpZeioxg7eTj2sx62lZckvl6GWy3r+twy4sJynOOG7VgqJULkX
KEZc8K12kjZ2lkKmjdQP5024kFu/fKnqOSmUzlJfvmInF/78Pv1jXa8Uetui
aHLKnAurVJfcRZLSSAlWRf624ILX4FBiDkcaHborde3QHi4cfexko+MmjRoN
Fn37YM2FsrSOLShRGs13Cmy0sOOCXa+L/KVL0shgx4xNmz0X1LZFbMh5II2S
uvlJ2o5Yv2BPc9mP0ujl7uG2SmcujCt5XtaalkZrX72fW+XKhe4vnYZ/xGSQ
m91L0hk3LtR5v1Q8LS2DLr975PbPgwti1q+NvsnLoBmn9nzfg1zg7lzTQV0j
g+BTS8/HQ1x4PTNWdERBBsW71y+08uGC1d/Uj1dWyKDu0Ys69/24sE7ILkti
qQxaebj0KDuACy2XEtvPCMkgpx+5VdVBXCguDwgympBGlUdT+9cGc2F7mmOj
2Xtp9GP6lNzZUC7Irco4faVDGrFDIk2Fw7mQN+AkEHFRGp2cP3YyIBLnQ8ri
tV1YjweRPteHo7hQ3fX5W7mXNJIW9fhuG8uFjTza8Q360sgu3lGpK54LpPht
naYK0qhEwtpO5zQXTCwdhlnjUogqbdChmMKFgEUDVwuSpFBoBu9PeioXjqP3
ftq2UqhtJZ2yIIML0SlSKi/WSyHLdUqFX3O4YLpG/7RHxTKUX7L6+b58LgiU
95mFuy1Dn5RlxLsLuZDwsVujX3EZCtAQCqwvxfWlKVsVv2kpar08e1GlnAuU
urYDz1KWIDHqj4HsSi7Yvzydz55cjDJZ/TvCLnGhY3Nd+9BlSXTNoFXZ4BoX
lDyal/iML0KzTsEvXj3gQknZzla5FmHUf1dOff0jLgj9MfgTMCmE7qvURXg8
4YLktymKt4YQyh77qj77jAvB0r0GiWkCSPvYvpOr3uH8lyc76KXN6fglg9Y+
PhecJA69ONYwomM38Ta67Mf//SJXP582pKO753jft5+4fmV3Oiy4MqizbPXV
mBMzXCja7zD53uCVTk35xrfnBHkgAALa/Wr1raM3xU4NyvDAXAs2hlV/b+1Z
X/peTQ7zM1WfEOkfrU1RiOa/kgfHyAVZhV0TrfFGxz4Ir+GBx8/T25tZU60q
L0boyio8WG+U9Zn540/rEmbs6UObedD/NqQ1J3O+dTJXcaBBjQetSj7T0goC
RJvT3kQDLR6c/9x02PeaIOEy1jXozuTB5kxPC58eEcLYzJNZy+b9/z5sqiNV
lCBfFU2a4fJAruXAoz3mYoTAMR3WKV0e2CdTbS7dWUAUCtcmVxnzILTKp5kb
KU7Eupl+njDlAclme/eOzRLEoc4vbI4ZD6o2BxY1PZQguMkbhh7u5kHXreN1
lAWLib5Vadxv9jxIuFgRVrpjKXFb7njccUcebA8XdP/ycSlRKe3YI+rCAyZb
T0OfvYwIFFf3WOvOg1eiy8qU7ywj9olJ1VV58mDRSHZJkqAUoSc0/VfbG38/
krXuNU+KkJm7k2bmywPTyTsp7dVSxNxk5fs3/jxQ2a8hrPtBihj8kaTqEcgD
v6oavvkSaaLz29Gjv45hPWXFlw+ypInaETsiIoQHtiPz5AFnaSLrM4gvPoHP
579DlBMrTZwYUNmTE8GDlrmGHW/LpYkD7ySLlKN4INM503nlrjRh+npi9EoM
Dww3vWRWvpUmqC966TrxPPBxWGJb/UOaWPW0NeJBAo7HNeeRKiEZQvDR+YdW
Z3gwFZJSmbJUhvhyP0HuYzLW95fdHuOVMsSTNh/nI6n4PF6RNW0KMkTjLavq
3+n4uUqb3xjmwhbudFwWD9b4fXSqwZ+Pua64VTaXBwaZ5xjT+Pe86xeeKcrn
wbK31xvq8HqWtd9faZzjQXwiP6d7XJrgVD9XbCrmweNx4VJ2nzShWNl8SP88
D37sakx+3ypNLDpfdP1pOQ/EZzvWXiiUJsbPxQo7XOCButbUkrjj0sSrPO+d
oxd54MUTWXfATJpozbLICazhwQfvK4tJ66WJsjTmJ6ErPCgQa815/lWKSExe
q5Vcx4Om3aOR6KoU4X9aJHh1I45fwVT0Pn8pwi5utK3iOg+cNUqdV2tJEbpR
3UtpN3iw0rj25YHPy4jN4Y12t27y4CR6X6KauYyYDjw53nuHB/oXOUFFj5YS
7/08OAfaeWAs5SQhv3gp0XF4Z+yPezyQOnJ/2ygsIdLdVimIP8L5be+e9Sda
kghxEXDPfMIDh6XnLo2nSxAuDkNXFHt44CK8xqE0W5wgWV015LzCek59i6oK
XkissMhOvfeaByfkt/66YrOAmN9x4t3utzxQ6Hj/652qGNGlb+zvPcADqsiv
/EVlwkSdLql15iMPhJoPoZadQkQuT25RzBAPPulSPGZHBQgP+mBhwVceiG7g
xkz8+t1qRr4/ovqdB6rTie/f9c20amvW0BrHedAmdIxUdX6yVUQ5+MHjSR64
Zm213N/+rfXreqfle2fw/kvvJpdVD7X2KBg4Dc/x4M1xEdWoq+9bm1dqXPT/
y4Ov5UIuAWpPWotlpaf+/ePB7w0OzNtPv9/8DzksrEE=
           "]]}, Annotation[#, "Charting`Private`Tag$28261#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.01], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 4.963083675318166*^-24}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{2, 4.2599801546480925`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 4.2599801546480925`*^-22}, {2., 
        4.2599801546480925`*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{3, 0.}, {3, 1.3234889800848443`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 6.617444900424222*^-24}], {Arrowheads -> Small, 
       ArrowBox[{{3., 6.617444900424222*^-24}, {3., 
        6.617444900424222*^-24}}]}}, {
      PointSize[0.01], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 2.6469779601696886`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 1.3234889800848443`*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{4., 1.3234889800848443`*^-23}, {4., 
        1.3234889800848443`*^-23}}]}}, {
      PointSize[0.01], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, -1.0587911840678754`*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.36054667152722*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.36054667152722*^-20}, {
        5., -1.36054667152722*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, -4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.44218668610888*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.44218668610888*^-20}, {
        6., -5.44218668610888*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.}, {7, 1.6940658945086007`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{7, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{7., 8.470329472543003*^-22}, {7., 
        8.470329472543003*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, -6.776263578034403*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{8, -8.707498697774207*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8., -8.707498697774207*^-19}, {
        8., -8.707498697774207*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 2.710505431213761*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{9, 1.748276003132876*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{9., 1.748276003132876*^-18}, {9., 
        1.748276003132876*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.894775504986358, 0.04969024160430335}, {
        13.894775504938154`, 0.04969024160430335}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.}}], 
      GrayLevel[0], 
      PointBox[{11, 0.4503097583956967}], {Arrowheads -> Small, 
       ArrowBox[{{10.446190811187066`, 0.4503097583956967}, {
        14.446190811219582`, 0.4503097583956967}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 1.}, {12, -8.673617379884035*^-19}}], 
      GrayLevel[0], 
      PointBox[{12, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5}, {14.500004349862268`, 0.5}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 1.}, {13, 1.0722325369815907`*^-45}}], 
      GrayLevel[0], 
      PointBox[{13, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5}, {14.50000434986227, 0.5}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 1.}, {14, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{14, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{10.553817827815443`, 0.5496902416043034}, {
        14.553817827844115`, 0.5496902416043034}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{15, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.105213499360364`, 0.9503097583956966}, {
        15.105213499358733`, 0.9503097583956966}}]}}, {
      PointSize[0.01], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16., 1.}, {16., 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{17., 1.}, {17., 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956968}], {Arrowheads -> Small, 
       ArrowBox[{{17.89478650053864, 0.9503097583956968}, {21.89478649870423, 
        0.9503097583956968}}]}}, {
      PointSize[0.01], 
      LineBox[{{19, 0.09938048320860672}, {19, 1.}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{18.446182172155865`, 0.5496902416043034}, {
        22.446182177751005`, 0.5496902416043034}}]}}, {
      PointSize[0.01], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 1.}}], 
      GrayLevel[0], 
      PointBox[{20, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{18.49999565013773, 0.5}, {22.49999565614549, 0.5}}]}}, {
      PointSize[0.01], 
      LineBox[{{21, -6.505213034913027*^-19}, {21, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{21, 0.49999999999999994`}], {Arrowheads -> Small, 
       ArrowBox[{{18.49999565013773, 0.49999999999999994`}, {
        22.49999565614549, 0.49999999999999994`}}]}}, {
      PointSize[0.01], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{22, 0.45030975839569665`}], {Arrowheads -> Small, 
       ArrowBox[{{18.553809188780438`, 0.45030975839569665`}, {
        22.55380919511704, 0.45030975839569665`}}]}}, {
      PointSize[0.01], 
      LineBox[{{23, 9.486769009248164*^-20}, {23, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{23, 0.04969024160430337}], {Arrowheads -> Small, 
       ArrowBox[{{19.10522449403046, 0.04969024160430337}, {23.10522448304655,
         0.04969024160430337}}]}}, {
      PointSize[0.01], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 2.3852447794681098`*^-18}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{24, 1.1934694226813092`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{24., 1.1934694226813092`*^-18}, {24., 
        1.1934694226813092`*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{25, 2.117582368135751*^-21}, {25, 7.589415207398531*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{25, 3.8052955155399443`*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{25., 3.8052955155399443`*^-19}, {25., 
        3.8052955155399443`*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 5.421010862427522*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{26, 2.72109334305444*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{26., 2.72109334305444*^-20}, {26., 
        2.72109334305444*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, -1.2585168176455822`*^-48}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, -7.940933880509066*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{27., -7.940933880509066*^-23}, {
        27., -7.940933880509066*^-23}}]}}, {
      PointSize[0.01], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, -6.776263578034403*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{28, -3.40136667881805*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{28., -3.40136667881805*^-21}, {
        28., -3.40136667881805*^-21}}]}}, {
      PointSize[0.01], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{29, 5.293955920339377*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{29., 5.293955920339377*^-23}, {29., 
        5.293955920339377*^-23}}]}}, {
      PointSize[0.01], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8444357854939203`*^9, {3.8444480483185034`*^9, 3.8444480970657673`*^9}, 
   3.84444834793646*^9, 3.8444502375240803`*^9, 3.8444510087848625`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"c6f828ee-1146-4287-b929-83feef51b7fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"442894b3-418d-4bc4-b4db-\
12b253b50133"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "v0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedInitialSign\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v1", ",", " ", "v2", ",", "c", ",", "status", ",", "iterTable", ",", 
        "updateValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
          "v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e", ",", " ", 
           "dv1sign", ",", " ", "dv2sign"}], "}"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v0", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"v0", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<ok\>\"", ",", "0.", ",",
            "0.", ",", "0."}], "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "2.", ",", "0.", ",", 
                "0."}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"iterTable", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"updateValues", "=", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{"updateValues", ",", "p0", ",", " ", 
                  RowBox[{"pyrfunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                  RowBox[{"threshold", "*", 
                   RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                  "\"\<ConstrainedInitialSign\>\""}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"updateValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{"updateValues", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], ",", " ", 
                 RowBox[{
                  RowBox[{"updateValues", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", 
                  RowBox[{"updateValues", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                 RowBox[{"updateValues", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"i", "*", "2"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "iterTable"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.843834362022087*^9, 3.8438344150614185`*^9}, {
   3.8438345567901006`*^9, 3.8438346039124*^9}, {3.843835076663509*^9, 
   3.8438350769760375`*^9}, {3.84384927747968*^9, 3.8438492805985184`*^9}, {
   3.843849390184264*^9, 3.8438493904102345`*^9}, {3.8438507300249376`*^9, 
   3.8438507319495664`*^9}, {3.8438529975555964`*^9, 
   3.8438529995112753`*^9}, {3.843854116314721*^9, 3.8438541398282475`*^9}, {
   3.844259999298771*^9, 3.8442600013136473`*^9}, {3.844349561095193*^9, 
   3.8443495810156527`*^9}, {3.8443502934725266`*^9, 3.844350294121453*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"c9b76b1a-1222-44a6-8150-b11ad5d9db43"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"9500677b-47ae-454e-a7fa-\
d33ab1ac2f88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iter", "=", 
  RowBox[{"PyrFlow1DIter", "[", 
   RowBox[{"10", ",", " ", "11", ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0."}], "}"}], ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", " ", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
    "noteBookMode"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, {3.843834619168625*^9, 
   3.843834632287681*^9}, 3.843849361597576*^9, {3.8438507365290756`*^9, 
   3.843850739632452*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"da479219-da0c-4c71-833a-5e483d5120da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.4344878027816816`", ",", "4.121298119970021`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4912045613903264`", ",", "2.5690561775517757`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.495962816407281`", ",", "2.5087112627783643`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4963648977058146`", ",", "2.5036525474353657`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4963988886205999`", ",", "2.5032250924327806`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964017622232486`", ",", "2.5031889564875427`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020051592242`", ",", "2.5031859015340863`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020256971726`", ",", "2.5031856432657658`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020274334628`", ",", "2.5031856214315407`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275802492`", ",", "2.5031856195856563`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275926588`", ",", "2.5031856194296047`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275937078`", ",", "2.5031856194164117`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275937961`", ",", "2.503185619415296`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275938046`", ",", "2.503185619415202`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275938055`", ",", "2.5031856194151936`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275938044`", ",", "2.503185619415194`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275938053`", ",", "2.5031856194151922`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.4964020275938041`", ",", "2.5031856194151936`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.496402027593805`", ",", "2.503185619415194`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.496402027593806`", ",", "2.5031856194151922`", 
       ",", "\<\"converged\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.000902390531135`", ",", "2.9990245138588643`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9070231274561001`", ",", "3.092965505856547`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8930629443385051`", ",", "3.1069361384101093`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8912359851551731`", ",", "3.1087645098885974`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8910022308106078`", ",", "3.108998446847666`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909724131947885`", ",", "3.109028287932662`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909686111522819`", ",", "3.1090320929888766`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909681263781556`", ",", "3.1090325781499413`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.890968064568099`", ",", "3.1090326400096746`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680566871494`", ",", "3.1090326478970005`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.890968055682307`", ",", "3.109032648902661`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555541868`", ",", "3.109032649030887`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555378522`", ",", "3.109032649047236`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555357686`", ",", "3.10903264904932`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555355031`", ",", "3.109032649049586`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.89096805553547`", ",", "3.10903264904962`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555354648`", ",", "3.109032649049624`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555354644`", ",", "3.109032649049625`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555354641`", ",", "3.1090326490496247`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8909680555354654`", ",", "3.109032649049626`", 
       ",", "\<\"converged\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.6700246601700326`", ",", "3.3299756988631577`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5773285517655166`", ",", "3.4226715567885906`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.55637099772802`", ",", "3.443629017144538`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5540220427416136`", ",", "3.445977958572531`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538262292965493`", ",", "3.446173770838906`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538105486532435`", ",", "3.4461894513874882`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538092972546544`", ",", "3.446190702778516`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.553809197413886`", ",", "3.446190802618682`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091894484303`", ",", "3.446190810584089`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091888129348`", ",", "3.4461908112195814`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887622338`", ",", "3.4461908112702813`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887581886`", ",", "3.446190811274327`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578654`", ",", "3.446190811274649`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578398`", ",", "3.446190811274675`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578387`", ",", "3.446190811274677`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578376`", ",", "3.446190811274677`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.553809188757838`", ",", "3.446190811274677`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578369`", ",", "3.446190811274677`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578374`", ",", "3.446190811274677`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5538091887578378`", ",", "3.446190811274677`", 
       ",", "\<\"converged\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8444357856099277`*^9, 3.844448048400715*^9, 
  3.844448097147499*^9, 3.8444483480240993`*^9, 3.8444502376126685`*^9, 
  3.8444510088772373`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"2a2074a5-98ee-49f3-a746-1e9ef232d4d1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1920., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"af6b88de-81e4-4e94-a08f-75d722a93ed5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 533, 8, 97, "Title",ExpressionUUID->"7afc5b65-0b5e-4320-8af8-efa1ad27aa25"],
Cell[1116, 32, 479, 9, 28, "Input",ExpressionUUID->"d6613b5f-169d-4924-a7bf-e1328c874886"],
Cell[1598, 43, 590, 16, 47, "Input",ExpressionUUID->"41e1c256-78cb-4820-90cf-01209722e819"],
Cell[2191, 61, 535, 8, 47, "Input",ExpressionUUID->"8671407a-4f01-418c-b8d5-eb14191aec4b"],
Cell[2729, 71, 519, 10, 28, "Input",ExpressionUUID->"d1bc8fcf-74b6-4b1d-a5a8-1732c355759d"],
Cell[CellGroupData[{
Cell[3273, 85, 337, 5, 66, "Section",ExpressionUUID->"49cdbca1-85b1-42e3-a9fb-95cdbab14151"],
Cell[3613, 92, 2440, 58, 160, "Input",ExpressionUUID->"63e606eb-af9d-4b38-8042-9c69524c2133"],
Cell[6056, 152, 2147, 64, 160, "Input",ExpressionUUID->"26805c80-4731-40a2-851e-420a0b82d2d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[8240, 221, 219, 4, 52, "Section",ExpressionUUID->"18e1ac0b-2e67-4ae4-85a8-851f071e6799"],
Cell[CellGroupData[{
Cell[8484, 229, 162, 3, 55, "Subsection",ExpressionUUID->"4d85132e-f9aa-4886-993d-13ba7706c410"],
Cell[8649, 234, 35531, 749, 1995, "Input",ExpressionUUID->"4fdc4427-ab7c-4822-8290-a142d2bfc29e",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[44217, 988, 191, 3, 53, "Subsection",ExpressionUUID->"ae9c1c19-996f-4736-a4d8-9d1e6e3e2062"],
Cell[44411, 993, 1591, 34, 85, "Input",ExpressionUUID->"8afbc134-2a96-4829-a98d-261227ff5001"],
Cell[46005, 1029, 502, 10, 47, "Input",ExpressionUUID->"df917fe6-c171-4677-bfcd-46b626c18e59"],
Cell[CellGroupData[{
Cell[46532, 1043, 2412, 46, 85, "Input",ExpressionUUID->"9aa1df55-4b50-4c69-af76-58c3366fca58"],
Cell[48947, 1091, 381, 9, 32, "Output",ExpressionUUID->"0afd420e-3ebd-4508-8967-b37fcab784c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49365, 1105, 1162, 22, 47, "Input",ExpressionUUID->"8ac72149-7774-43cb-be5f-c0e6e76366d9"],
Cell[50530, 1129, 31123, 531, 237, "Output",ExpressionUUID->"2efe45be-5376-46bb-bcf0-2674a371b964"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81702, 1666, 182, 3, 55, "Subsection",ExpressionUUID->"9476c611-cedb-4e14-b4f1-a7f3e4e663c4"],
Cell[81887, 1671, 212, 5, 34, "Text",ExpressionUUID->"dc51e695-7873-4d23-8fd3-56cf6235c000"],
Cell[82102, 1678, 12402, 215, 701, "Input",ExpressionUUID->"2ba813e8-f4d4-445d-9ef4-e02d9a926ee0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[94529, 1897, 182, 3, 45, "Subsubsection",ExpressionUUID->"ba5cc455-fcf1-4e82-9c11-345ce239926d"],
Cell[94714, 1902, 240, 6, 34, "Text",ExpressionUUID->"d665bf0a-b30b-44e3-a00d-ac5233747928"],
Cell[CellGroupData[{
Cell[94979, 1912, 4113, 84, 235, "Input",ExpressionUUID->"92b9953a-3f65-4581-92ba-aa1b6d592b38"],
Cell[99095, 1998, 384, 9, 32, "Output",ExpressionUUID->"4c60910e-7560-49a0-ac46-a0b0f4ccd9d7"],
Cell[99482, 2009, 346, 7, 32, "Output",ExpressionUUID->"5c1e69ac-1e86-4c8d-bee3-3088bec46fa7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99865, 2021, 1552, 26, 47, "Input",ExpressionUUID->"9f5e2abd-c86d-409d-b148-1edc64ec627b"],
Cell[101420, 2049, 47824, 805, 234, "Output",ExpressionUUID->"c5bc62c5-c098-4a43-b30b-201d9c1ebabe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149317, 2862, 275, 4, 66, "Section",ExpressionUUID->"48df32ca-fd60-406d-8945-a49b0001894a"],
Cell[CellGroupData[{
Cell[149617, 2870, 292, 5, 55, "Subsection",ExpressionUUID->"155883ba-978a-41a6-93c7-b6d9e5f422e9"],
Cell[CellGroupData[{
Cell[149934, 2879, 182, 3, 45, "Subsubsection",ExpressionUUID->"c9b86259-19bb-47f6-b975-2475f6a3f617"],
Cell[CellGroupData[{
Cell[150141, 2886, 1268, 29, 47, "Input",ExpressionUUID->"1bfb77de-7d5d-48b9-b030-f47911106b61"],
Cell[151412, 2917, 103647, 1803, 582, "Output",ExpressionUUID->"c6f828ee-1146-4287-b929-83feef51b7fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255132, 4728, 325, 5, 66, "Section",ExpressionUUID->"442894b3-418d-4bc4-b4db-12b253b50133"],
Cell[255460, 4735, 12159, 220, 495, "Input",ExpressionUUID->"c9b76b1a-1222-44a6-8150-b11ad5d9db43",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[267644, 4959, 182, 3, 45, "Subsubsection",ExpressionUUID->"9500677b-47ae-454e-a7fa-d33ab1ac2f88"],
Cell[CellGroupData[{
Cell[267851, 4966, 993, 20, 28, "Input",ExpressionUUID->"da479219-da0c-4c71-833a-5e483d5120da"],
Cell[268847, 4988, 8677, 253, 183, "Output",ExpressionUUID->"2a2074a5-98ee-49f3-a746-1e9ef232d4d1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

