(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    261555,       4952]
NotebookOptionsPosition[    256719,       4857]
NotebookOutlinePosition[    257317,       4878]
CellTagsIndexPosition[    257274,       4875]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Sign method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, {3.8438311022867823`*^9, 
   3.8438311031615887`*^9}},ExpressionUUID->"7afc5b65-0b5e-4320-8af8-\
efa1ad27aa25"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431434791889243`*^9, 3.843143480644304*^9}, {
   3.843151614814394*^9, 3.8431516186171865`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d6613b5f-169d-4924-a7bf-e1328c874886"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"41e1c256-78cb-4820-90cf-01209722e819"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{{3.836396430700433*^9, 3.836396440553816*^9}, {
   3.836396483243249*^9, 3.836396483782277*^9}, {3.8363965197501154`*^9, 
   3.8363965208316736`*^9}, 3.8363965992226734`*^9, {3.843049966234662*^9, 
   3.8430499668751907`*^9}, {3.8431516435129576`*^9, 3.843151644468534*^9}, 
   3.843831128636213*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"8671407a-4f01-418c-b8d5-eb14191aec4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedInitialSignStepsLeft\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.8438311391343627`*^9, 
   3.8438311426299357`*^9}, {3.8438492182877655`*^9, 
   3.8438492191012626`*^9}, {3.84385067814329*^9, 3.843850678687092*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d1bc8fcf-74b6-4b1d-a5a8-1732c355759d"],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"49cdbca1-85b1-42e3-a9fb-\
95cdbab14151"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "4"}], ",", 
           RowBox[{"30", "-", "4"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9, {
   3.8438334199494677`*^9, 3.843833421550555*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"63e606eb-af9d-4b38-8042-9c69524c2133"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
        ",", 
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"26805c80-4731-40a2-851e-420a0b82d2d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 
  3.8363952460112877`*^9}},ExpressionUUID->"18e1ac0b-2e67-4ae4-85a8-\
851f071e6799"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"4d85132e-f9aa-4886-993d-\
13ba7706c410"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "status_", ",", "e_", ",", "dv1sign_"}], 
        "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], 
     ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", "c", ",", 
         "d1", ",", "d2", ",", "dv1", ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign"}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e", ",", "0."}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", "0"}]}],
             ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign"}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e", ",", "0."}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "if", " ", "p", " ", "at", " ", "initial", " ", "position", 
                " ", "and", " ", "failed"}], "..."}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"p0", "\[Equal]", "p1"}], " ", "&&", " ", 
                 RowBox[{"p0", "\[Equal]", "p2"}]}], ")"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "we", " ", "could", " ", "use", " ", "the", " ", "root", " ", 
                 "to", " ", "find", " ", "the", " ", "new", " ", "dv1", " ", 
                 "too"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"we", " ", "feed", " ", "new", " ", "dv1sign"}], 
                 "..."}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "v1", ",", "v2", ",", "\"\<oksign\>\"", ",", "e", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], 
                    "/", 
                    RowBox[{"-", 
                    RowBox[{"(", "d1", ")"}]}]}]}], "}"}], ",", "p0", ",", 
                  " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"fline1", ",", "dfline1"}], "}"}], " ", ",", 
                    RowBox[{"{", 
                    RowBox[{"fline2", ",", "dfline2"}], "}"}]}], "}"}], ",", 
                  " ", "threshold", ",", 
                  "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "v1", ",", "v2", ",", "\"\<oksign\>\"", ",", "e", ",", 
                    "dv1sign"}], "}"}], ",", "p0", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"fline1", ",", "dfline1"}], "}"}], " ", ",", 
                    RowBox[{"{", 
                    RowBox[{"fline2", ",", "dfline2"}], "}"}]}], "}"}], ",", 
                  " ", "threshold", ",", 
                  "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], "]"}]}],
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e", ",", "0."}], 
               "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", "e", 
           ",", "dv1sign"}], "}"}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<oksign\>\"", ",", "e_", ",", 
         "dv1sign_"}], "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], 
     ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", "p2", ",", "c", ",", "d1", ",",
          "d2", ",", "dv1", ",", "dv2", ",", "r0"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p0", "-", "dv1sign"}], ")"}], "-", "v1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitude", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign"}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e", ",", "0."}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"v1", ",", "v2"}], "}"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"dfline1", "[", 
                RowBox[{"p0", "-", "dv1sign"}], "]"}], "*", "d1"}], "<", 
              "0"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", "0"}]}],
             ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign"}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e", ",", "0."}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign"}], " ", "*)"}], 
         "\[IndentingNewLine]", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", 
                RowBox[{"e", "+", "1"}], ",", "dv1sign"}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e", ",", "0."}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<oksign\>\""}], "]"}], ",", 
           "e", ",", "dv1sign"}], "}"}]}], "\[IndentingNewLine]", ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "status_", ",", "2", ",", "dv1sign_"}], "}"}],
        ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "0.", ",", "status", ",", "2", ",", "0."}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_", ",", "dv1sign_"}], 
        "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e", ",", "dv1sign"}], 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_", ",", "dv1sign_"}], 
        "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e", ",", "dv1sign"}], "}"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_", ",", "dv1sign_"}], 
        "}"}], ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e", ",", "dv1sign"}], 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "::", "usage"}], "=", 
     "\"\<\nFunction to update values of v1 and v2 with Constrained standards\
\nInput\[Rule] [{v1,v2,status,e},p0,{{f1,df1},{f2,df2},threshold}\nOutput-> \
{v1,v2,status}\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status of the \
solution (ok, sign, mag, flip, converged)\ne= counts the amount of \
constraints not met\np0= point of interest\n{f1,df1}={function 1, derivative \
of function 1}\n{f2,df2}={function 2, derivative of function 2}\nthreshold= \
threshold to respect magnitude constraint\n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840548890802074*^9, 
   3.840548895672971*^9}, {3.8405489566370993`*^9, 3.8405489677693124`*^9}, {
   3.840558898944503*^9, 3.840558919673791*^9}, {3.8405590751929426`*^9, 
   3.8405590905799665`*^9}, {3.8405786182601976`*^9, 
   3.8405786202723913`*^9}, {3.8414190328513837`*^9, 3.841419038459272*^9}, {
   3.8414202168521104`*^9, 3.841420329531598*^9}, {3.841420439013297*^9, 
   3.8414205133814917`*^9}, {3.8414205831457896`*^9, 
   3.8414205862091703`*^9}, {3.8414212543379865`*^9, 
   3.8414212550688157`*^9}, {3.8414217649166536`*^9, 3.841421771344642*^9}, {
   3.8414218060941353`*^9, 3.841421831565406*^9}, {3.8414223452355947`*^9, 
   3.8414223582096825`*^9}, {3.8414865132710576`*^9, 
   3.8414865464466257`*^9}, {3.841495145124576*^9, 3.8414952155814676`*^9}, {
   3.8414953307795877`*^9, 3.8414953942366886`*^9}, {3.841508125479186*^9, 
   3.8415081301234617`*^9}, {3.842637401140934*^9, 3.8426374123839664`*^9}, {
   3.8426374548457556`*^9, 3.842637457843338*^9}, 3.843049982100257*^9, {
   3.843050021340685*^9, 3.8430500999008293`*^9}, {3.8430501434061136`*^9, 
   3.8430501534972377`*^9}, {3.843050317710548*^9, 3.843050374728256*^9}, {
   3.843050532771618*^9, 3.8430505426132917`*^9}, {3.8430505912578697`*^9, 
   3.843050629003641*^9}, {3.843050769213539*^9, 3.8430508007053356`*^9}, {
   3.843050857941908*^9, 3.843050893728114*^9}, {3.8431562683776445`*^9, 
   3.843156300047364*^9}, {3.8432380519579687`*^9, 3.8432380595109124`*^9}, {
   3.8432383702531567`*^9, 3.843238373254682*^9}, {3.8432386407608576`*^9, 
   3.8432387147264*^9}, {3.8432387609363174`*^9, 3.8432388099733896`*^9}, {
   3.843318401941639*^9, 3.8433184420460978`*^9}, {3.843320006904053*^9, 
   3.8433200112934194`*^9}, {3.8433202677981052`*^9, 
   3.8433202867001824`*^9}, {3.843320823628084*^9, 3.8433208263772078`*^9}, {
   3.843321370194274*^9, 3.843321371975088*^9}, {3.843321438098985*^9, 
   3.84332144108267*^9}, {3.8433215405595207`*^9, 3.8433215452146764`*^9}, {
   3.8433238994156475`*^9, 3.843323908020013*^9}, {3.843324426639652*^9, 
   3.843324427655038*^9}, {3.8433245969655886`*^9, 3.8433246284943953`*^9}, {
   3.84332472235494*^9, 3.843324751813099*^9}, {3.8433251453789067`*^9, 
   3.843325244881585*^9}, {3.8433254327524137`*^9, 3.8433254396671004`*^9}, {
   3.8435886977439137`*^9, 3.8435887006809373`*^9}, {3.843588734341316*^9, 
   3.843588736964617*^9}, {3.843657623112109*^9, 3.8436576258550887`*^9}, {
   3.843657672813307*^9, 3.8436576734384823`*^9}, {3.843657704089922*^9, 
   3.8436577052782707`*^9}, {3.843657794121241*^9, 3.843657882071515*^9}, {
   3.843658133191927*^9, 3.8436582945712557`*^9}, {3.84365851961432*^9, 
   3.843658521663968*^9}, {3.8436585793200884`*^9, 3.843658716872859*^9}, {
   3.8436588045824523`*^9, 3.8436588049949584`*^9}, {3.843658863053029*^9, 
   3.843658961505745*^9}, {3.843659043035465*^9, 3.8436591702348037`*^9}, {
   3.8436599006955757`*^9, 3.843659992999459*^9}, {3.843660619810734*^9, 
   3.843660698842578*^9}, {3.843660799915493*^9, 3.843660800440464*^9}, {
   3.8436608401266212`*^9, 3.8436608405104103`*^9}, {3.843660949146835*^9, 
   3.843660954051989*^9}, {3.843661000414298*^9, 3.8436610224729176`*^9}, {
   3.8436611014606276`*^9, 3.8436611298293953`*^9}, {3.843661197665208*^9, 
   3.843661254265544*^9}, {3.843661550414008*^9, 3.84366157741346*^9}, {
   3.843661658275545*^9, 3.8436617022235255`*^9}, {3.8436617540912647`*^9, 
   3.8436617792385283`*^9}, {3.843661857169232*^9, 3.8436618843083487`*^9}, {
   3.8436619600753984`*^9, 3.843661961715836*^9}, {3.8436622514912148`*^9, 
   3.8436622635466537`*^9}, {3.843662413438278*^9, 3.843662448400967*^9}, {
   3.8436625285918655`*^9, 3.8436625471865697`*^9}, {3.8436626135925455`*^9, 
   3.843662661976474*^9}, {3.843662724660755*^9, 3.84366272547377*^9}, {
   3.843662763298168*^9, 3.8436628277886276`*^9}, {3.8436629883722124`*^9, 
   3.843662990351551*^9}, {3.843663265773568*^9, 3.8436632660029507`*^9}, {
   3.843663624473485*^9, 3.8436636836013775`*^9}, {3.8436638758273687`*^9, 
   3.843664023666267*^9}, {3.8436641359683046`*^9, 3.843664142494645*^9}, {
   3.843664185610051*^9, 3.8436642410585537`*^9}, {3.8436643673624783`*^9, 
   3.8436644473962812`*^9}, {3.843664481875358*^9, 3.843664496689361*^9}, {
   3.8436645319383373`*^9, 3.843664562815386*^9}, 3.843664609261511*^9, {
   3.843664665585013*^9, 3.8436646739273057`*^9}, {3.8436647495305347`*^9, 
   3.843664782514429*^9}, {3.843664961648424*^9, 3.843664964318406*^9}, {
   3.84366504056983*^9, 3.843665052694545*^9}, {3.843665090619931*^9, 
   3.8436650909375334`*^9}, {3.8436651233461323`*^9, 3.843665126897846*^9}, {
   3.843665209910304*^9, 3.843665216647706*^9}, {3.8436654162553616`*^9, 
   3.843665419537364*^9}, {3.8436654965013795`*^9, 3.8436655779694576`*^9}, 
   3.8436656975706797`*^9, {3.8436657540746517`*^9, 3.843665765869897*^9}, {
   3.84373988851646*^9, 3.8437399592309017`*^9}, {3.8437402002474284`*^9, 
   3.843740249369633*^9}, {3.8437404455371885`*^9, 3.8437404546797605`*^9}, {
   3.8437411272918453`*^9, 3.8437411784718847`*^9}, {3.8437414253265247`*^9, 
   3.843741430878599*^9}, {3.8437422526881843`*^9, 3.843742280332114*^9}, {
   3.843831236498489*^9, 3.843831244666244*^9}, {3.8438316444280415`*^9, 
   3.843831676956211*^9}, {3.8438333194973483`*^9, 3.843833324633465*^9}, {
   3.843833573862584*^9, 3.8438335842731075`*^9}, 3.8438336149044266`*^9, 
   3.843833644966114*^9, {3.843833873065646*^9, 3.8438338778213515`*^9}, {
   3.8438339337966547`*^9, 3.8438339516206846`*^9}, {3.8438351131820297`*^9, 
   3.843835127868786*^9}, {3.8438362047018023`*^9, 3.843836257490957*^9}, {
   3.84384913667455*^9, 3.8438492603924522`*^9}, {3.843849293285287*^9, 
   3.843849323433752*^9}, {3.843850686361608*^9, 3.8438507095946765`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4fdc4427-ab7c-4822-8290-a142d2bfc29e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"ae9c1c19-996f-4736-a4d8-\
9d1e6e3e2062"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e", ",", "dv1sign"}],
       "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0.", ",", "0."}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "15"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.8438317262806945`*^9, 3.843831758878952*^9}, {
   3.84383230217494*^9, 3.8438323408943057`*^9}, 3.8438333519274297`*^9, 
   3.8438334402400837`*^9, 3.843833497494026*^9, 3.8438336588116317`*^9, {
   3.8438337015966387`*^9, 3.84383370202672*^9}, 3.843833787385521*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"8afbc134-2a96-4829-a98d-261227ff5001"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}, {
   3.843832275680855*^9, 3.8438322921697855`*^9}, 3.843832601497947*^9, {
   3.843833506562276*^9, 3.843833528608164*^9}, 3.8438337842905464`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"df917fe6-c171-4677-bfcd-46b626c18e59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2", ",", "status", ",", "e", ",", "dv1sign"}], "}"}],
    "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status", ",", "e", ",", "dv1sign"}], 
      "}"}], ",", "p", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "noteBookMode"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9, {3.8438317402397795`*^9, 3.843831747944312*^9}, 
   3.843831869854334*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"9aa1df55-4b50-4c69-af76-58c3366fca58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.4671948019729686`"}], ",", "0.8541658577156048`", 
   ",", "\<\"oksign\"\>", ",", "0.`", ",", "5.754252017237166`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.843753781453285*^9, {3.8437538247061377`*^9, 3.8437538766980343`*^9}, {
   3.8437539859951963`*^9, 3.8437539911962633`*^9}, {3.8437540290644183`*^9, 
   3.843754081708538*^9}, {3.8437541570103893`*^9, 3.8437541746237764`*^9}, {
   3.8437542144241033`*^9, 3.8437542186355944`*^9}, 3.843754834347181*^9, 
   3.8437553710565844`*^9, 3.843761830971588*^9, 3.8438317053669834`*^9, {
   3.843831748436038*^9, 3.843831869258667*^9}, {3.8438322615491805`*^9, 
   3.8438323424485416`*^9}, 3.843832604267045*^9, {3.8438333431323304`*^9, 
   3.843833354264048*^9}, {3.843833426653608*^9, 3.843833442875879*^9}, {
   3.8438335001607876`*^9, 3.8438335423238735`*^9}, {3.84383359065244*^9, 
   3.8438336188268337`*^9}, {3.843833650805727*^9, 3.843833704282631*^9}, {
   3.8438337902486725`*^9, 3.84383380274102*^9}, {3.8438338410926633`*^9, 
   3.843833912728427*^9}, 3.8438339607916503`*^9, 3.843834051805001*^9, 
   3.8438349066307974`*^9, 3.84383508078699*^9, 3.8438351331688995`*^9, 
   3.8438493400714617`*^9, 3.843850751539435*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"b5f3817e-f86c-4a55-b16e-a518830d31ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "+", "dv1sign"}], ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9, 3.84383369028327*^9, {
   3.8438338299677925`*^9, 3.8438338367674365`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"8ac72149-7774-43cb-be5f-c0e6e76366d9"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
n/uN3eh7cTdHkIv+B9Bf5F8=
        "]]},
      Annotation[#, "Charting`Private`Tag$28554#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$28554#2"]& ]}, {}}, {
    PointBox[{{15, 0.694873740832853}, {15, 0.8180346849817542}, {
      15, 0.5717127966839518}}], 
    PointBox[{{11.712942784735803`, 0.694873740832853}, {15.854165857715605`, 
     0.694873740832853}}], 
    LineBox[{{15, 0.8180346849817542}, {15, 0.5717127966839518}}], 
    LineBox[{{11.712942784735803`, 0.694873740832853}, {15.854165857715605`, 
     0.694873740832853}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{11., 0.11753724341554095`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{11, 19}, {0.11753724341554095`, 0.8233855372764347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.843753851173655*^9, 3.8437538671892476`*^9}, 
   3.8437539961259604`*^9, {3.843754030172044*^9, 3.843754047933215*^9}, 
   3.8437540807259073`*^9, 3.8437541859766674`*^9, 3.8437542173459377`*^9, 
   3.8437548343970814`*^9, 3.843755371113119*^9, 3.843761831068266*^9, 
   3.843831705542291*^9, {3.8438317523296747`*^9, 3.843831873459344*^9}, {
   3.8438322792628174`*^9, 3.8438323435534697`*^9}, 3.84383260899738*^9, {
   3.8438333372911673`*^9, 3.843833355446021*^9}, {3.843833426702411*^9, 
   3.84383344413294*^9}, {3.8438335014043555`*^9, 3.843833543455291*^9}, {
   3.843833592662918*^9, 3.84383362020121*^9}, {3.84383365226965*^9, 
   3.8438337058816233`*^9}, {3.84383379241653*^9, 3.8438338041220922`*^9}, {
   3.843833837358432*^9, 3.8438338483370595`*^9}, {3.8438338858171353`*^9, 
   3.8438339118637805`*^9}, 3.843833962097587*^9, 3.8438340530030775`*^9, 
   3.8438349066786675`*^9, 3.8438350808318367`*^9, 3.84383513321574*^9, 
   3.843849340121345*^9, 3.8438507516066504`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"194bdf17-b069-4fd4-9179-ce7b3a3bc49b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"9476c611-cedb-4e14-b4f1-\
a7f3e4e663c4"],

Cell["\<\
pyrfunctions : all levels of pyramid. {l1,l2,l3,l4,...} or {l1}\
\>", "Text",
 CellChangeTimes->{{3.840190264918742*^9, 
  3.84019029066455*^9}},ExpressionUUID->"dc51e695-7873-4d23-8fd3-\
56cf6235c000"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", " ", "pyrfunctions_", ",", "threshold_", 
      ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v1", ",", " ", "v2", ",", "c", ",", "d", ",", "dd", ",", "cc", ",", 
        "status", ",", "e", ",", "dv1sign", ",", "iterTable", ",", 
        "updateValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
          "v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e", ",", " ", 
           "dv1sign"}], "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0.", ",", "0."}], 
          "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "2.", ",", "0."}], 
               "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"iterTable", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"updateValues", "=", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{"updateValues", ",", "p0", ",", " ", 
                  RowBox[{"pyrfunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                  RowBox[{"threshold", "*", 
                   RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                  "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}]}], ";"}],
               "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"i", "*", "2"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"updateValues", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"updateValues", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"updateValues", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PyrFlow1D", "::", "usage"}], "=", 
   "\"\<\nFunction to update values of v1 and v2 over all levels of a \
pyramidal function representation\nwith OverConstrained standards.\nInput\
\[Rule] [i, p0, pyrfunctions, threshold]\nOutput-> {v1, v2, status,e}\ni= \
number of iterations\np0= point of interest\npyrfunctions= list with the \
dimensions of {pyrlvl, number of image(1 or 2), kind of function(f or df)}\n\
where pyrlvl is the pyramidal level\nthreshold= threshold to respect \
magnitude constraint\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status \
of the solution (ok, sign, mag, flip, converged)\ne= Counts the amount of \
times the constraints were not met\n\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405786523932867`*^9, 3.840578657988408*^9}, {
   3.8414189828506317`*^9, 3.8414190153348923`*^9}, {3.8414201999561043`*^9, 
   3.8414202059767733`*^9}, {3.841422235821972*^9, 3.8414222386898837`*^9}, {
   3.842637171335677*^9, 3.842637171767519*^9}, {3.8430502619890904`*^9, 
   3.843050270518544*^9}, {3.843050460398434*^9, 3.8430504611482496`*^9}, {
   3.8430511064726257`*^9, 3.843051108768953*^9}, {3.843059830007685*^9, 
   3.8430598306316833`*^9}, {3.8431563089552684`*^9, 
   3.8431563349852266`*^9}, {3.8435877450299177`*^9, 3.843587927732647*^9}, 
   3.8435879648494453`*^9, {3.8435882518247757`*^9, 3.8435882583050823`*^9}, {
   3.8435884431319437`*^9, 3.843588446792751*^9}, {3.843588502609065*^9, 
   3.8435885039545493`*^9}, {3.84358854311246*^9, 3.84358855472566*^9}, {
   3.843659177420129*^9, 3.8436591938425274`*^9}, {3.843663546652871*^9, 
   3.8436636100555925`*^9}, {3.84366370307749*^9, 3.8436637094891386`*^9}, {
   3.843663835431464*^9, 3.8436638656803412`*^9}, {3.8436657352242646`*^9, 
   3.8436657482571917`*^9}, {3.843666159144108*^9, 3.8436661632291436`*^9}, {
   3.8436663018785105`*^9, 3.843666306822632*^9}, {3.8436664460298877`*^9, 
   3.8436665476066637`*^9}, {3.843666582354282*^9, 3.843666582822295*^9}, {
   3.843666794547901*^9, 3.843666795475816*^9}, {3.84366687001715*^9, 
   3.8436668781864004`*^9}, 3.843667267634773*^9, {3.843667418386608*^9, 
   3.8436674400611563`*^9}, {3.8436676285197315`*^9, 3.843667628818766*^9}, {
   3.8436678394563875`*^9, 3.843667862134698*^9}, {3.84374042807281*^9, 
   3.843740432503826*^9}, {3.8437404739313974`*^9, 3.8437404797123957`*^9}, {
   3.843740549711228*^9, 3.8437405596339397`*^9}, {3.8437406315099144`*^9, 
   3.843740631785816*^9}, {3.8437407528485146`*^9, 3.8437407539730225`*^9}, {
   3.8437416380222497`*^9, 3.8437416609835267`*^9}, {3.843831885008831*^9, 
   3.843831895846131*^9}, {3.843831930040265*^9, 3.843832010857004*^9}, {
   3.843832043973868*^9, 3.843832095327493*^9}, {3.8438321275150204`*^9, 
   3.8438321934420013`*^9}, {3.843835065528225*^9, 3.8438350660889874`*^9}, {
   3.8438492653977942`*^9, 3.843849269401266*^9}, {3.8438493770922575`*^9, 
   3.8438493773653746`*^9}, {3.843850718357809*^9, 3.843850720319829*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2ba813e8-f4d4-445d-9ef4-e02d9a926ee0"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"ba5cc455-fcf1-4e82-9c11-\
345ce239926d"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"d665bf0a-b30b-44e3-a00d-\
ac5233747928"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initializing", " ", "values"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", 
      RowBox[{"max", " ", "lvl"}]}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", 
      RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"i", ",", " ", "p", ",", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
      RowBox[{"0.0001", "*", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437553466508884`*^9, 3.8438322358191843`*^9, {
   3.843833973504225*^9, 3.8438340019471693`*^9}, {3.843834062048588*^9, 
   3.8438341209426413`*^9}, 3.8438349655313034`*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"92b9953a-3f65-4581-92ba-aa1b6d592b38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.1936978430949705`", ",", "0.8063026805766904`", ",", "\<\"flip\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.843754515185701*^9, {3.8437546168767614`*^9, 3.8437546376807137`*^9}, {
   3.8437546764692883`*^9, 3.843754740906331*^9}, 3.843754834451845*^9, 
   3.8437553711579976`*^9, 3.8437618311450253`*^9, {3.84383222905735*^9, 
   3.8438322379764614`*^9}, {3.843833307600621*^9, 3.843833309161517*^9}, {
   3.8438334267922273`*^9, 3.8438334520764723`*^9}, {3.843833967881869*^9, 
   3.843834002493126*^9}, {3.8438340554508724`*^9, 3.8438341224928493`*^9}, {
   3.8438349632282143`*^9, 3.8438349723718033`*^9}, 3.8438350809579573`*^9, 
   3.843835133268011*^9, 3.843849340179592*^9, 3.843850751678123*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"40c08a4f-6589-48c6-9167-a4a04c980472"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.000000523671661`", ",", "\<\"flip\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.843754515185701*^9, {3.8437546168767614`*^9, 3.8437546376807137`*^9}, {
   3.8437546764692883`*^9, 3.843754740906331*^9}, 3.843754834451845*^9, 
   3.8437553711579976`*^9, 3.8437618311450253`*^9, {3.84383222905735*^9, 
   3.8438322379764614`*^9}, {3.843833307600621*^9, 3.843833309161517*^9}, {
   3.8438334267922273`*^9, 3.8438334520764723`*^9}, {3.843833967881869*^9, 
   3.843834002493126*^9}, {3.8438340554508724`*^9, 3.8438341224928493`*^9}, {
   3.8438349632282143`*^9, 3.8438349723718033`*^9}, 3.8438350809579573`*^9, 
   3.843835133268011*^9, 3.843849340179592*^9, 3.843850751680118*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"e58a757b-f720-4497-aa85-f73c6febfae6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9, 3.843833456936058*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"9f5e2abd-c86d-409d-b148-1edc64ec627b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
cvvL/wE0tV4f
        "]]},
      Annotation[#, "Charting`Private`Tag$28603#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/VLszQkljx8pMa+Q51QcSwvy/1vyTbA=
        "]]},
      Annotation[#, "Charting`Private`Tag$28603#2"]& ]}, {}}, {
    PointBox[{{15, 0.9503097583956966}, {15, 1.}, {15, 0.9006195167913933}}], 
    PointBox[{{11.80630215690503, 0.9503097583956966}, {15.80630268057669, 
     0.9503097583956966}}], LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
    LineBox[{{11.80630215690503, 0.9503097583956966}, {15.80630268057669, 
     0.9503097583956966}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 20}, {-0.028786032866411626`, 1.0288023941428994`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8437546791477213`*^9, 3.843754743906592*^9}, 
   3.843754834503641*^9, 3.843755371211456*^9, 3.8437618312391663`*^9, {
   3.843832229145735*^9, 3.8438322397297473`*^9}, 3.8438333107100368`*^9, {
   3.843833426843731*^9, 3.843833459201456*^9}, {3.843833970288867*^9, 
   3.8438340040015583`*^9}, {3.84383405757343*^9, 3.8438341242937956`*^9}, 
   3.843835081011814*^9, 3.8438351333343773`*^9, 3.843849340244052*^9, 
   3.843850751749819*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"c1b98384-5fb0-40a5-8140-3c609bb0a7f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"48df32ca-fd60-406d-8945-\
a49b0001894a"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"155883ba-978a-41a6-93c7-\
b6d9e5f422e9"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"c9b86259-19bb-47f6-b975-\
2475f6a3f617"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"1bfb77de-7d5d-48b9-b030-f47911106b61"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
5M3vFTN80EFbnC7W3yRPMwoGddP5oIuPZ60i6A9Z/3vC7OIvPhh8dy9x9Ppf
MrXJ6xuZix/KqiN+2V1gQCIO8l/fa/PDF9uD1++PMSI/41zffzv4oduVWdU0
dCtqVGT8orSXH+jaS317mZiQ48/Jz6H2/HD7wW3/T/LMqCinfJIrmh9mL2g7
uJiyom9n+D31LvCD2u7tXltesyJD9/MTzhn88AObCR43Z0MfNDzHq67xw5XY
1BM1iB0RhQfceqv5we53/lGzRnYUvQljP+v4Qf5hilGSGgeS6JYbhTZ+aHRx
ebiPmRMFNeS4+vfww8EkR7OY45zo6RWGT5lUvD8Bp588GeBELgETIyMz/KBD
PaBen8mFbh+0cdmyyA+6JUoKsl+40O/trR9UfvNDQaHT9w0DbnSVuex9OJcA
SFVzvAt8w42KN85HuIsIwKTZnTaiOA8qXvQWspQTgEbXe3rvXXnQlZl9DfpE
ATizcbx9dzEPKhpVsZHVFwD5nZaCBgO4h9gX2Mn4+5rXW1K28KLC1z/Sl80E
QIT22mOrOi8qwHrxwlYAyJdUiqMO4H50v/P1EQFQUhdmfRqA+84l34e+AvBw
kGaSH8OLLpeHbb1+UgC+lQotvkvlRfmF9uUXo/DnNyZq7DJxZxqg8AsCwLFW
xz5yEfcF8VG3TAEYq5uqM4jjRXlRG9EWhQKg8HXQyDiIF+WeHBXTLxeAgbtj
Zk/x+Lm+WKPMHQF4K+EdGqeK+0i5HfsjAVA3bXFy/s2DLh26sPSTIgAdJpZF
Em08KMfMN2fslQAUk/z7LiXgNjbTfD0oAFmCp4qyDHlQtp5az4NPAnCX92Xe
xDQ3ylLjDLr2FZ/P7a1HHVNwy86zXqQLAMt1LO+FLDfKFH5TGfZbAJCb3NDi
PS6UwVm/141JENzT0JOHOri35E2a8wiC/Y7ozyO3OVH6Wni8npgg6JzXoOmJ
c6K0eQdpGXlB+HSmMSo7hgOlfTZsZiMJgrZeqFzLMDu6+EHC+ec2Qdj/uuVc
BoEdpb4cy39lIQgOo5GfrYtYUWpzq+6Dw4KgmXJDbvI5C0qpv9FfelQQir37
Mw6PM6PkUj+usFOC8Izznr/oylaUlGd+++hZQQjeKsLPNs+IEi8Szc2TBCE0
ac1N9P0WdOH0wgXpK3g8Bp3mMu5/5IRj/QS2m/j/LRRzdfM3yQmeDdjSXUHQ
d1wsifv3i3zuQMRGZ6sgSJ3csuNFwjI5TulvaOg3QWh9enehzWuCHCc5wXd0
SRBsnAZ9sf1D5Fj+F7Vmm4LAQBw/LHXsETnmT9J3KT4huGO3Naxq5R0lisrt
1WkgBGJvoj5k0Fco4UnSh6RShGB7sm6D9GcubAtx9Mb7HCEo2B2f1LedF8vq
K1nOLxYCrprIiQedfNgtUaki7lohmFL2TTmsLIiN3ZIY/zssBL48vzQOLYli
Zn2ixyflhWHoq2XxthY5bDj0HaWUJAwvVIryGw8RMC/RQj6X7cLwsCLM7OU0
AYvxEHk4aCEMnBkRlAlmBaxuSWijLUQYblQKmXlpKWHGhcP7z0ULQ4HLriM3
HyhhXUb513YlCgM/pr8muU0Z+5IouOdRoTB49RvWsmmpYBKiAherKMLwoWb1
uPxvVay6eWDE65UwhJ/gEgn1VsP0PS6RZAeFQdVxm/DNV2rYwVt8/YVfhOF+
tyfD3yQi9ulAP8GOJgxHlrd5DI4SsaCl7DC+X8KwGkX5+0lbHUs04hW9yCUC
qdTM8dlOdYx/oi9gn4gIhJhXXi7gJGHXErOebpETASZbgdA+CxKmrmbNRVET
gafQUuuXQMKaerndovVEgNE7K0n/EQnbF9p7f7uxCBxkPaHNPUXCBkUyt/w0
FQHhGJPZl2wamEfz/sP3bUTgFe/vWT01DWzenavymIsI9POdCSbt1cCimXpW
VXxE4HbvzduJDhoY26108+nj+Pv5AWP83hrY5QNWxWVnRKDk4b3dtwI0MPkl
jjnX8yKQd/YIj5y/Bna/oMtYPF0E5Axd4qzcNLBdRmnZ1HwRaDXM7Waw1sBe
j1tMXromAh+7f2gJb9fAHBLZ9axrRGABHfxyVEQD+6z6OpGjQQRcP1co1S2Q
sJDe1LcdzSJQxUQlTlJI2N9T5qoXXoqA7lKnZkcyCUsXYYtGb0Qg7rfvMX1T
EibW3Nm98V4Efh8rlNjyRx2rck+RbpoSAc7LJhFb7qhjekxmJ8PnRMCo3b6J
w0Yda61hea69KgI0swcSSz+IWFe386V9/0TA5E1+sm4yERteuOvpwiYKdbZF
w4ZiRGyMn0H3JL8oWNcHHpgqV8Nm9Q8zJkqIgmTXwx1cCmrYsmPVYJGCKBjG
KE3lXVXF/kb/unGPJAqdVf7ZDpyqmMDz63vfkUVhzySvJGO/MiY1vSQ4ZyYK
Dvd70yoVlTFlVtNphkOiwBPKJf/rpBJmdGAukegtCrmHns0qfVfATEOQPQoW
hXOkpDtPxBQwm7xcJbvTonAiMu5xqLE85vPBsCM2RRR2jtf3vw6Qw05sphfk
5ohCeEjKmMmYDBYpO+5XfUUU+jeDVohvpbBM3yTWgTui0F7SvxKfLIYVpb5/
9+WhKJSQGBl9yCLYjTvqNb9bRCE/21bDf0IQa1wcMFfsFwWxzKMHgtq4sVYh
JfEdH0ShTGNY8/s5NqzLIHL2wJQoTPiYfojh24qNx8qknVnG+yt34uCzrAUK
G8ex7i4xMdAzr0nXD96CBDQoV8cJYjDbwCr1RpYNSdnwBy8TxcCi9WqexCYP
0il4zCVjjDuDP9E+TwS5yDNZn/IUg6NbycdbX8ijuztL+0VviwHDA4ZQj0Ad
1HiUXkZ6IAYPP6dJvwvVRa3n9p7a/UwMFA5/OuAYq4eoHbP8x/rEYEWsV+RU
/jb013b7YcqSGHwPvI+W23agg8feUH2MxOHKjokD7WuA2Erz2433icP1tK1S
aud2oxd9zg9EDopDwGy4+0uWPUhfdzrnlZc4jF6w4/vHvRdJ/Fq3IqWJA5tY
WtnSPxM0TKTsZM4Xh6nnZdezTu9Dma4X1MZKxUF5klgj+m0fYmjlZs2pF4dN
vbvXrdpM0dPFwZWAZnGIeX735011MxSmUDS9+6U4mEXqSZrkmKGvyfIvfr4X
h3bhr7WNB8xRWdNMXc+UOPg7SJ7bXmWOnL/fvV45Jw764bMLTr/NkYBUaFbc
qjhoSlHvLVtYoJ4DBrGODBLguOF1ciLfAiXFbx7T5pCAXIro16URC0Suf+7C
LiQBXwUi2xmlLNH6VLLFlLQE7K9ka/nqaInqhfYbNqtIQJ28dcLpLEsUZMqv
kq8jAXyGvR1JmCVSjHwrfNxIAoJzOYwXvlui0VtXmUz3ScDdsbTCJD4rVPDR
46fMQQl4+3owVV7bCtlwK0+tOUnAOIN/21ULK/yG9qO/30sCHmv3/Op0tUIv
QuqwW8ES4MaSMhYbaIVibpyuTYiQgF5NKcX8k1Zo+/DO0iPnJGDNgS928oQV
ojEzZOinScCQ+reru/ytUI3By2jufAlwdVHVi3GyQl6BaYFfSyUgLdt+JWKP
FZK6etAJq5aAQ5HL+VuVrBC1R8isqB4f3/OL7ev/LFHW3w/bTjVLQKlY8XaN
IUtkrn1d0fKlBHASb5eeuWaJGL18BBXeSMDPG+S7tZ6WqDlPjXHzvQTYaX8S
uoXPX/jLBfrwlAQoxLOmGb+xQJprD8bvzeHzuWsfZU+UBZpRjepLXpWAz0IS
PtkSFqjMhdziziAJbY84NH83mCNByqtifiFJ8GKyXU98ZYZ6aJkXv0tLgjBX
w1HbfWYomXA4sk1FEr5nQ31RkylCh8X8S3Qkgdk4oVJT3hStJ47anzaSBHLr
xtz38/tQQ+MNE+t9kpDQobOz4p0JOvbNX0/loCTMbdYgHQUTNGa1xPfBSxJ6
7h03Jlzdg4piH/+rD5YEzYT2Yp3O3ejQ/ZiFtAhJKNh5MjrkG6B2AdaeXWmS
QBKpEr4lSEZxJj1PhfMlQfE3cbe14C5kEHHp1kKpJDDxxDKzbO5Atz9IppTV
S4IhqXbOK2UbmrgYvjzwVBJg2wlPP1s9JLqz13NruyS031OyO8ymgxKL43b5
vZWESD795if+qsjtyOSi+oYknHtGOGOptE7O59zpfpRJCowaqngY1Vcp3c25
PVncUmBbsF4hHsWPGUqZVC/KSkHfcqZfFVEJExitcn1sIgUZ5s+j4mYMMPPM
f6+/HZCCm5XZ/VRfIyze2MlAwlEKrgcce0hbImNzpewCsYFSsK0ieBaT2It1
uAV37smSAruuJslDZZZY9ISObt87KXByv3N+VNEeq8tJu/5vAu/PS3KdmLwD
NgOfuXS+S4FZ7U0dcVlHzK48fyZvUwre5b10OinqjGl6rZU4E6RBL+LGsfzf
rpiPgA1HOlEaglt+e8vQjmJXX9SceaYnDdUlP1giJ90wNgUXW1lTachwMH52
0N0Dm/r8jPVLkDSUnGy7tqjmhYnlC58WCZcG5LjgxlrkhR00OTFlFisNlsIW
chxM3tizCtmW29nSUP4hfpcz1RtbsoskfiqShosv7Kb8dvpgaswDhdw3pIHb
zEp2usQHK/BNCA15KA0rM1nL9519sR7hj+PlLdKw9nX4HfbAF9vaoXdgqEMa
ukw1vz3n8MNClL+obP8gDfR5LmXZ+35Y1Vvjy/5T0jAmmn7NaNMPG00uYLzy
Qxre+vOM9OzzxyxnzEY3/kjDN7KIdn+vP8ZjGvf3L4sM5OUc1B7mCMAGKx7K
MvLJwOIoj+v63gCsYOsPYBaXAY6te9RkowKwI14ELzZ5GVj/+JZb/XYAJvfc
8QKnugxgJs3xf98GYNOyWRU8+jJwSnx0+ey/AKwmrv0lv7EMELYTPycpBGLB
o7+/CpnKwFhETuvfPYGY9i4dNrGDMtD0+A/j66OB2HKxv5qkkww8G3aX6wwL
xJp+lVrKeMoAw+2KrI+JgVis0/AxQpAMXo88bfuWE4jtecyRqRgmAxHzmdsG
CgMxFpHdtSoxMtAnyONy5kog1hV+5g0xSQbKvFSrWy4HYllD9+gaWXj/H3Xl
JmcEYra60/w6hTJAn53KfRgbiIlcktDTL5OB7BE3aWJgIDZCs7EzuCUDc96k
mtfWgdh165TTOxtkgMtrx63TmoGYz72WAuNmGWCtDyvgYwvEVLmWH0M73h7p
9ZeYjwHYXBDxw95eGRioV+EurQnA6l57/DZ9KwMUydiEwycDsHDVQknLcRl4
bvq4OUErADNM6d114JsMzPO0a3LP+mObX7a62SzKgIPNpUPUq/7Yc5Od8Yd/
y8Dvr1zFLWb+WPLNkDKHrbKwUqsYVzPnh1kyVj935pIF38SOsMg0P2wQE2Ty
kJGFR53uxw7V+WIFMpZK3iqy0Dyv6yxr6Iu5xJ4z9dOWBb9LZtquTT7Y553z
qcF7ZGHi+dypu+XeWM0VhdsnrWShj8X5VSKHNxa87twdaicL9Tso4/bHvLDl
Rx3cUX6ycOIDUS1YyBNrEvqjGXNSFtz+cptFuHpgMWF6NvGRsrDMuHeD2dAd
Y9Ypy01Kk4UcRXlxV0ZXTORulGhurSy8miBpyT63w0Y46gwvP5aFcO0tL76+
sMWuBX51LmrF/Ufwy0i9Daaicrjk2iDev7FOkSd3zTHDGyTCnVXcL24rRRUr
YZsM3ntq/8kCw8NHSczM7ykT93vqnZjkQMY/481OiiKq4Nk6dIRbDixIbPJy
PoA0ek4Ke8nKgXaQ98DeHXboK6PJo32KcpBIVSXbVDuish1i9mpqcpBHk+xM
VzqChKpb8+m6cvDNop4qpOKJfp/nF4o3lYPuB8TCK0UB6JXBA4GS43LQ+M1I
jUkgHCWcSGmID5WD+uif03u4T6NdlUdsvc/IQchY5hdltgh0X4Apl3heDq4t
Twi93DiDCubt+J/ky0H5wR2vqgbPIp+bq7xvm+WgSb1Fp+HceSQz0nX/Sasc
eO0ptN74fh6957t+sPSlHAic7uv5bJuArOLMsn3eyMF2SV5pFskLiOmRpJb5
sBzwMK8m/4q+gCg/aH3qH+Sga235/L93F5CucxHPzyk5OD294tKYmojmsoNr
387IwSs7ar/cp0RU1QHWT+fkoO5pCis/KQmJ689mnl+VA0Y7uZmV1iQ0GNSi
4bshB2/+fFapYE5GGeWXes0ZCMCZts3ZyjQZMfDu5ObjIEDQduOWtafJ6Ok+
nns/eQiw2NOf0riQjMJjpva/EyRAme690EnpFKT5oHHuqRgBbss/t7A3T0Ez
s2kZ16QJsMNp4/3C8RRUJudOSpAnQEaW5VxaVgpycdTr8VUhwJtzpQdZbqcg
oSzWYAsSAXZ+n+ozbk1Bfe0fOTV0CPAviX07z0AKSt24f4dvOwH28jIcsvuU
gvboJlot7ySA+e5HP+YmU9BmgNOPd4gA296JDj7E/eg6Kb3ZhADkDJH+1I8p
6MRbBvXrFgSokCyr3/cmBalyU7sSrAlwHm7uefUsBU3tvRXkd5gAIo08B+dv
pqCS6FgOSycC5BoM3LiUmILyQ67OfnAlQJTv4xZbzxSU4ffkVaAnAeKFzm7X
MkxBia7vqn/5EkDv6UAYB3sKirVdSb4YRACpnpBPnUPJKMJc0E/8JAFeYdzv
LIuS0Qmyzr5bYQQY4XDrinBIRn76BxV3RBJgUF5UWosnGbkRj299HUMAFLuw
zRFLQg5y6VNO5wlQm33l7GBgErIWufX8WxIB7r3ptUvkTkKmXJ1lkWkE6GwA
VZvbiQgxfolnyyZAaG21qzgkIsN1RveiPALYGzY5tfVdQNoLcmTVIgIIdahc
0HG4gORGXDfNygkg2/brz4x1AhLrj/74rpIA56Q7Jdew84ivo+ip/20CfDn0
mtFJ7Tza0jAcmfIA3x/GiVk7Xsej39VLjqJNBAgxMZvOCo5DS6V8BtXPCKB9
V5bx5r8YNHVx/0rHSwKYWDzrll+OQiPxQcMOXQSYtnMQkLKPRIOnUx987SOA
zfF6B1pFBGrzbD/F8p4AdSEOPIgvDFXs2LWw7zsB5FYkvC7I+KESLZde6gIB
mszanuY+90T5SpF3fX8SwKPbsDsp1gUl8T8MStokAHx6MTuhQUZ+s+oz7Tzy
8Fl3iu3sigfmNm7RYScoDw1/h6epkX6YA9W/clpUHuquJtbPiwVjZs9vejMR
5KHay8QqezAMU70iObFXTx66hC+HsA7FY3LZO7AhA3n4tX1P5eqp85hYkuM1
713yUG8nxxm3mYCxn8pzvbBPHrgSf4zvEk7GvptzfnjhKA8RrIixdG8GNkVW
a7J1lYdDhT843nZlYh/1zQqnPOQh4e2212wHs7EeuQv2jEHywHkunnFG6RJ2
b/33wO4YeVi7s/Q1hjEf21w51Kp3Xh7mbdM707F8bP/PmlqlZDyeUyNDz5nL
2Ny8Qzp7Dt6/bnF/eF+A7fpxL2ojXx5ue8VerIgvxDK+MQXMX5EH7urXC1fk
ijDS5waTgZvy8CA1NLjowBUsZoJdr61GHvoO/I4aeH8F6xn1IDy6Jw9OfM8f
bhwpxqQ+PuatbpAHEx9X0ftvi7Fj73n+Fj2WB89Rz5IL5lexp1TfubRn8tDE
60/mr7+KcQw9G4l5Lg/W2VvWabwlmEu/4OsTHfLwh9bR9tinBLvdG/TYo1se
ql7uL2G4X4L97npeadsvD+YVqjFeCyWY5SuxfBOqPHTK0o+eli/Fil+eTNg+
gve/x3DXgGUp9v1FR4jquDyIGRfx8/iXYjtbpd0lpuWhjaXifVtEKZbWEn6A
a1Ye2FsW09OiSrGRp91Gf+flYeCniPLvE6WYWpM8kb4kD8LoVvlth1Is8lGU
2NSaPGC65F962qXYq4Z+luFNfH94HVPR3CjBxOpUVl5uUYAxrw5lncclWMC9
uM+PWRRAv3N6cdi7BGu6TR24xakA9xRcL9QzlGBsNaTWq3wKIMv1guqWeRVz
qrxQmymsAPlCdz+Hs1/Fam6MlMRL4O31369ODy/G1q/rpJ+SVQBGqpeUUd8V
zLw0NcpbUQGmH7rskhS5ghUVj/vbqylAKJMGY7tVEfatcLuDmSbenuPJgN4T
hZjh5UyTHXoKYLrnceCbuAIsNXdaV91QAcKdihm8zl7GVDJzeXn3KICIY+qH
IsM8LCJt9g+DmQJE+1P4jq9fwjpSYG7JSgHeL33p1LmZg/klLLx6a68AOZcx
+HAyHWuM3/f4lYsCRMY9Pa60JxVjiS2pfOquAKQ/JicFZhKxqjOWCdcCFYDe
GHRR2uosthpeHpJzQgHKhD8zb0aHYaah624JYQrg0VJ9yyDPD/saXGXkF6sA
5/bKNVzgdkbbg/6oOSUogJydjc1Zk5Mo2d9OzDIFb+/Kqv+HgCik5MW4onFJ
AQyveSnNiKegcHfnz7IFClDnn9HzoDQDtbvWDfBfVQBF9xw+G9Il5OPoVrtS
oQDtBgt/040KUcX+p/4tTQpAmdxx/NCRG8iIwKBd1KIAUjXXuONUKtDgyr71
0BcKIPPhwfsExir079pAqmqPAiyRt7388OUWcln8ditvHH9uTAnM1qtHiy81
Q09MKwBzdJXtY8cGlFocvtNiVgGu1pFU+BIfoEd7Gbr/LinA/bltfxtXHiG+
AtG5QBZFcH0plxOCmlF10NGHJpyKcHxphOpW/QyR0c0YWT5FmI+Xta4WpeD1
pyY3VVwRLofGFFqntqKOnaaaoKEI+rFe2c/ut6GY8fAQETtFCKt5nvW9sgsJ
PnxquOikCA6kw5EvcrvR7VSGLT1HFeGDbgYpPKEHvdPJuHTeXxH+HTlA4Avq
Q7qJNxvmohVBSGzXjjn1AfRNdXD5RbkicGoH6GUdoCK7UK2okzRFaAszu/JP
eAypsWDnVn/i7fP8Tu6/Oob+XrFOjV1XBI83h+ybCOPo1vPjhelblOAsq4MI
VWQC/eW7+6haUAkqTC7/ypWfRDX3VZfGDZTApUeh4uy2zyh2b9Mvv11KQL0h
Kyh65jOyfWe2ZQGUILJsWiGq6TP689ePb9NCCciNKmvxO6eRrXWlppirEvj3
ETZkjb6gP3OEYzbnlGDXK0+Nr8QZNHiuPvRdohJc8Zu9M+M3g2qEdke7XVQC
ida6P0E3ZpDtLo+LwblKoGfhOvNF9BuqSb9WnVqhBOoGjYH6m99QrKzmfd5b
SvBPu1usR28W2T5oaSy4pwQftT7qtQXNoj8jn15WNCpB46RFNOUt/pwoOd36
SgkyihbHQqq+IxXK7R9mvUpw3vhEYvr772jz0M6ffQNKEK5TrvmZ/QeqjnJm
HB1RAtc7KUcNg36gzVeFcr/mlGAo8GvzFsIcGnBVUT23qAT57JXSGfvnUBW9
UYt1VQks91CldM7MoUNib8nC/5SgUOEb9uQ1/txf6KgOvzJQFtn00r3n0RDj
aJiEiDJoRPb4PkqbRwzXKtO2SiqDhQY28aZuHrkMb2+iKirD/d8TgVO/5lHK
yX99FDVlyInzp05ILaCHHK++VGsqgylbz95P5AXEvdtZMNpQGVyYxj6/jV9A
Oz8RiN7GynBoair007UF5HfmO+zfowx7S8OxH88WUOu9sydk9ivD0fPzVvqr
Cyhc4trrF+7K4Da9ub/jKA2VP/KbuOOjDDEZ2p9DT9NQn43WWn6gMsxj1nf3
ZNCQakqron+YMixd/3XJ6TEN2ctfNLKJVAbpplHOym4aSmg5ZLsjVhle6h4J
I4zT0MefU/GcKcrglPfN6+MWOmLLvlOwnK4Mr5L4WI9x0JE+MfzeaI4ysF92
/VckQEdZHswf7xcrQ+npJou3BDpq3uhdLLquDE83w7q+qdLRt4ICtoQKZSBz
3dm8rkVHe3pVttvVKoOo9udBxl10dDKAvt/4gTLo/86urN9NRyVbn3grNymD
dRNvCqcZHb2+dj6at0UZ9u9r4hHYT0erOywvrT9XBv6Y8aEOGzpSoArUTHYo
Q6LBx+Pq9nRkE/KR0tWtDKm2W8J3O9PRrarguRKqMowIKMqnetDR293btiaP
KMPy8Z71Zm86Yhz9I35yXBm2568WVfvRkVZkh7bTtDIkeKxf2R9IR66C2Wa7
Z5Xh+T2VvLvH6OhiraMbcUEZ3jmMSL4+TkeNFnKnBX8qw63tft03T9LR5+lv
6ZtryiChSthBPkVHfOfqb3zZVAZBFs/NK6F0ZCwZ/aRviwpE3Tl7tymMjoIa
9/Q/ZlEBjZ8dE1fD6ajwEOdMGacKiDUVae87TUftc0N/LvKpgCzVVK8R92JK
iVCYsAooKamco+OWUfBVd5VQAYEL2bUruC0pGnv2yapA12uqfSfuM86rTpqK
KqA3fJDbH3fFMuWkqJoKaMUeDn6Lx+vPTklm0FSB6uvbOURx/yHalM7qqkCc
yME4It4/YofYw0EDFSh+tuQugPff0XOyq3mXCkwGnzHtD6GjxM1bkxW7VcCQ
Ue+1Lz7++sLQ9UxTFUhwPBs/jM/PmK4R7xkrFagyq2KQCcb7l3nAl8tGBQbz
sUyfIDp6NOPeXG6nAmmFrW6ZAXSUUZLo33NUBUpG3X6l+dDR2mpBi6eXCizV
nXD28qIjr0O3BNf8VKDX2YpIwNdzB0sfRghRAb79NlYuR/DxeUwIPw5XgVCl
HzrvnPD5b146tj9KBQ4vGzSCAx19PSkqdiZBBTJye9rH8P2T/8EjpCdfBa7X
Kekf20dHDPphHZ5XVKBDOH/PqT10dCwrSWqtVAXc6uLMTyB8/+69/YpQrQLv
K+/52+6gI/rdn3JnnqjAy1ONGjMkOrI6lzxAGFOBH+m5t32E8P0xUqTyeEoF
9rFeCzvNT0fy2+7E7p/Bx2PwdOYSDx2tz75RO0NXgd0f2P8usdGRj8lUPNeK
Ckx8uL99Jwsdvbm2TC3/pQLd963McrfSUdVh8YQeRlVwtOGRXt6kIYFa9fee
rKrweenisMg6DcWykTXXOFVBlXe0zuMnDdm1eI0QhFVhh5YXR8B3GmJUuat7
RkUVxn0PlxuO0NCJ85RULpIqVGqujqe8paEPH/vHyrVVYcSXUPN7kIbqclbS
enaowvsrgawWPTQk+YN10pOsCoNDDY8VXtNQ8j4Jg7U9qpC1+klBroOGjv4m
fybsV4W7ISSvmFYaemV3aMdjG1UwZI478LGFhvTve2fvt8f7u8mm4tJMQxw+
qUZn3FRhJlvh3aNGGoqgFF/i8laFYwHjHZce0tCk2L2Zcn9V8JfReJfeQENN
vQN5PSGqIFj6Nv19LQ2d1ZL+1XZaFdZPbJay3qMh8qUAt+ZoVfgrYf/V8Q4N
bfn5oK0hXhXmazkGX92ioXa7f6q3E1Uh09Csz7mGhlIaLbPKL6rC9Zf65hzV
NGQpVvCzKAt/3/vP3Q+VNMQdPemUk6cKBoTuwM4KGur/SKKkFKmCFeerH4M3
aSjPOFIhvlQVvmrJlG3coCGH622pETdUgVqy9hNwi2/hXThejc+fe5zdjXIa
+uTlctj3rio8Tf6kKYv7entlk2u9KhjJ7qI3ltGQl/KitF2jKigZdDIH4lZK
3XXBqlkVjD9Vf9LH/W025dueVlUwk2KbEsd9x2rowM6XqsDBLHBBFPeJezIP
dLpUwbqCRtLArcMbJKb2RhWGWLv3u+BeDnkUKzesCt7GfQev4X48yPBZ9IMq
tNsq3FzHHa2/35x3TBWa7JcfBOD9My4ovMfyWRXY7I7R5nEzrE8J/J1Rhcgj
DS9S8PG1OWtGrsypwpuon8Xb8PlIbo4anVvE4z1z+rKK20L65Z7pVVWw0OXi
7cbnjyuer+bjhiqszhgk1ePz+2biCPcQgxqU/WB+dKuKhnL3VId2MasBj1UZ
5wN8PcRYyMZPeNXA1G5qchVfv4/+F2/UCalBufiYkTa+vtdeD7PWiKvB8Cnr
U5F3aUgx89hggYIajPJvU9C7T0PaQlf8ww3UQD73Qd7uRzT08/R0z7FdajB7
cv7JJL7fGt9p6XrvVoMn1nOKGU00tOtqx+YhKzVIMp2M/YPvT3P55Uta7moQ
XrabtKeNhjgT0ZqyjxqIsRkHKr7Ev7df0lxlAtVgceyAHVcnft5uEVS4w9Tg
CL/T7PcuGvLQPvjse7Ia3OKo+TeIn6co8u2vlbVqoOnK6NU3hX9/z0wrJT9Q
g2O+Akkt0zSUUSfj69ekBo1nnlrd+kpDZfJ5n5VfqIE62igMx8/vK5aYiWqq
GtTyHvnVtUhDg6hRNnVEDfxFzVhy8PP+KZLuFjCuBjcMpNwPrNAQ/bvPqOqs
Ghy2uP2qFs8PYm8OjNzaVIMm/1Pmf/7SkDxbqnjaFiJgefbPdzLQEWn3C6cg
FiIYx15bp+OGB9vfEfmI8Cd237wVI56/50JEOIWJ8JzLs5eO207pjv0PcSIQ
LM+x5eD5yb9QdviOAhEomAm1hYmOQvqdBTNUiRB3svrifmY6imbPtw3WIMLn
Z6ljVNxZZ9kGSAZEuCm75/57PN8VPdzDx72LCIl33x2wZaWjG/MxB+eBCPwd
foMduBvdF3vvWRJhZ9bcYBmeL1uL1LmzDhLB9WHZKRZ2Ouoa8N1/wo4Ieg6v
jfxxj+0d6dJ0IwL35lKhBH5/+RYjxMHrTYS8M/X7j+NeemRtQfMnwoej7qHN
uJlV2zrvnyLCLWcmB0tOOuLx/MOSE0GExq9N29NxixUbmIacJUJm77veTtzy
Q6eSbM4RYf41RmLgwueP6267dhIRrhS+8dHHvX3f1638aUQ4tOSb4oMb4uT2
LmYR4ePlycoc3JaPXRIG8oiwalw+0ITbjp7/vL6ICAFVW6VGcbupvWHILSXC
Qpp/wR/cAV7sEHqDCDbV6rYS3HQUenVvvG01Eawe13ro4Y4ZjqXo3iVCRcTB
IXPcydxNfwTqiSBZHtzsgjvHdGnXz0dEiFjyIQbiLo4nxQw9JUKYcqFOOO6b
TX7NDzAivF/3nDqL++5i2e+8diL4KClan8PdSPy4I/w1EUb8dyWfx93qLRxl
14fvj7PsJfG4u0oONukPESFH+ntZNO5h6sU1off4+NmMq0Jxj/G0b1/5RAT2
dY8Wf9zfzP6epk7i8WserjnjXjpn+OjRVyI4Ugv8LHDvjHqmt+cHEcRc98cY
4L5wChr6aPh4RHJBAXdPYLv2kWUi3PFMeM6FW8jL/P7MOhH4Sg24l/H5cnXp
0Qj/Q4Sryj06H3BX2trcZWBUh3xXF+Nn/6/PXqdb4pzq8M+0d3cM7jijTypV
vOrA3vTVwRl3p55Hla6QOty39k7/fz2dFANuWkmrA4MfLe0Lvv5RzJGlsVrq
sJyx7aQe7hd/NiQ59NVB6awlx1bcHKvxxQWG6mB9/vK2AXx/FX9NKby/Wx3P
NwanA3E/6yy8NHlYHTTIGQrp+H5lSHuctC9SHcoWM/Ou4/vdPMGIaTBGHZ7l
evS54b4UjSW4nVeHVG3es9K45Y91xp9JUwf3j4FeV/Dzs3f/u6hbJepgQV77
mYGfr2SetePcz9VBsjkx6iR+PvtYzs5deakO11zCTpBwi/77G6Tchbf38XPj
LH6ea2gsAWhIHV78fhDti7urX8Tr1Bd14Pu35OSN1wPcedsdqOwkWO+Pd2P/
R0O1uT8/t/GQgIPuefASnk+sc+tONQiS4JvK3lpJ3FmXiJnZ0iQQmGJsNPhD
Qzw5Mu0WOiTgPHdmPmMD/3/2x0OG20mQ6WtrrYrbOrtoXNmIBB+9SdIdv/H/
ZwlsbN1Hgpnbo0zsuHkyWXQpTiSo9tq2eQfPZ7UZbdjdoyQo5mHvdcFtnXHu
wFUvEhwd+sjJhTsr/XdAZDAJDlTHDZ1eoyHN9MerfqdIEN1o7aqJuy8tPNE+
ggQRY9KHZ1fx9tMWruueI8GnyCdpfrhrL97RICSRwORHUrcqbuuLAc28aSSI
ijgUPY/n16zUqbdzeSSwf/eFEIdbM/W6z8cifH7u1kpY4u5LcV16XUqCoKsR
58Vw86S85a6uJkHLi61Xni3j7SfnXb18lwRXN15Z5OK2TrZRS6wngcWBzIAg
3AtJ3I9DG0nw8rHNignurKQuE89mEvAbCdIJuDWTUgYPtpJA/d2w0xbcfYkm
HuSXJBDJuKz1Gf8enEjcskDqIkGfs314J26eRMpZyTckcAIhlVrctRfOsnMM
k6AWDZoV4ra+YFi4/p4Ew47ZbxNwLySsKM6MkuB1qtVQCO6shIYG6hQJLg2y
kD1xayachPYZEihtey5ih7vvPKmvYY4EF+uij1r8H//87JHyRRI8M9ET2P1/
/PNVs9mrJGhd/K5v9H/8c95n4jbw9h6XvzT4P/45OebjDBqgV+DYvv3/+PGj
uUeYNeBmJpeO4f/x44vlLDk0YLq0lXPX//HjHWsNeTVguSPMbs//8eOEdqkI
acAwmzKn1f/x4wZeC4trQJL3Oy2H/+PHZTkyyWgA47uUF97/x4+1+rIkrwGH
vQ3awv6PH8sWNqmiAafYvuok/x8/5iVDP0kD3DvyeK7+Hz8mIYuiowEypeDc
8H/8GCR1b7sG3MmY4+/5P/7ZzVtXjTSA43Kh4TfcvGcjXkbu0wB9+vc3Kv+v
547YXEFLDRgnRQ6Z4+5Zv+Bea60Bn+4brRzDnRZx6ddnRw34kOqb14Q7YFtR
R5yrBrwf6+adwm22fC1P3FMDiGcDbnPj+4kp9K7GwSAN6E022XkM95T2g9+z
J/D+rV7QKsX9nPakMzFMA9rv/NozgDvueKfn0xgNEPie0o7w/bweMHVZKRvv
f4OW7nb8PLxVmfVqzdOAajuCeBTuR19pWkeKNGBtl4UMBXeoz5/XOeUaUDRh
dMEaP19z7mJ/Nx7g/Q+7+zj1Fw11ych2FzRpQKK5Tc4n3LdGlYp0WjQgzpuY
ooufX78jerr+HRpwJvj8m2ncEw7WfoPvNSCo62mXF17PUITt9Y6PakDrAN/l
Ttylw0cY2KY0IFC2NFYTzx8utoHFxj80oCXT6RYjnl+GDyT21fzB/9/ocqwd
z0evTZ5uj5fXBPWjud2DeL5q0FVmJQVrguFHrbe8eH58/0qy9n6IJhwxL3W0
xf3Hjd9e77QmjJOTkvJxm6dv3tgZpwkXOsvvi+L5dezzINkiRxNC9oo1i+L3
DaboV1968jXh05qPjANuNT5Khs0VTSjU/4rl4Q7fdWvE8YYmnDT1TubC8zn7
5fgIv4ea8KPT9voSbk3109LfmzSBq9k6VA3P/3bPg9qPt2hC0LYdwu64r83b
C5zu0ITDWGNeB+72C1ZP1rs0oci66fA67lnx3R4xbzQh1yfprir+fdE3JdVe
eK8Jworui4m4XT4R7FlH8fEdGHlehzs+VHQzbVITujb//BzB3XWN0TL3uyZc
n5c0JeLfM7r+Ol2YpgmttYmWB3ELd88XXvmpCedXQqNCcXusvf9StqkJHoIt
sg9wJ2f2ZShu0QKDoJSz/bjvKLTr1TBrgbLpw64fuPufPBlR59ACzpnof0z4
93j14P3z93m0oD1DgEsKt9TXClU9QS3QONMwpY17d0zxm0ZR/P9fL53ei9tP
ICdip5QWZIh/azyMO6MmSZoipwVGh+aKPHE3kM+271bSAoFeKvdx3O+GQ469
VNOChZ6PrBG4N4P8BCw0teB+zraoGNzyW1yf9Ohqga6ThN3/9xezwkMeNgZa
YOv9PO3/+0uwhhnrsJEW0BY9ef9/ntu2q9YRtODrXr3h/+8/j5117T+aaIHI
leDu/+9Hn2gqm24WWnBEZ99MEG7GZOmbUwe0IH//srgbbhUpQUs/Wy24Tqy3
t8a9v4FtcdZBCxw5H2QY/X9fM/9bePyIFpRo6tQr4S4c+0ledNeC/cNej/6/
vzwLn/0S7qMF+3bFp9Px+ZziGM9YD9AC76oWpQHcbOXDejHHteCCrX1ELW4N
g66Rf6e0IOlc7MlU3La92PkLEVpgHnJ8qzvuSO9HqqxntaDS01VRF/e1X7ff
pMVrQVz++fYtuNuyyyJ4ErWg1lzobe//991n6e3CmVqQpe8ucgR3uvPT6I1L
WsAT6Fclgptt7Zv2ZIEW1Ow5396L70dGXdPSu2VaUGiX4aOJO/5N+OHcSjxe
u0XbO3y/bwbfZI+8rQU7LR4FxuBerWaI2PtQC4L+aZs9xs9L2D4tktoTLWgJ
4DlyADd96ugUD0ULWBz0Q8bw8/ddutl6pFMLvqkvOy7i53M877TKqY9aMN8f
o/0ery9cdSpGHSa0YNH3nacJ7pG+wbxdX7Tg1dH7rHfw+80wuzYDGw2f/y+n
gvzx+8w0Oh18cIs2pGmE7d2G54sbWRlmL7Zqw5VQ7uh6PL94jt6U38aiDR//
bsuSx/PPWPTgewlObcg45ZbwBc937x9p7fsqpA0X3U0Y/uL1VwGTmZyzqDao
xqVe1KbTkP1ht41ucW2QmH/g4LqA12f0jPp6GW3IhnlaOV6/9ah/l45V1Ybb
RwmJy3j911pesSq4SxucQ/b76g7h+ZnePJBM1gZjaWOS0QBef6Ohu79AG56Q
OreavqGhp5+2eI/v0waO9SFRn24aeijq/ub2QW1gm2DdOYDXp6F+EbelbbWh
cvfGj1/P8fr/UWZSjp02rPJMCqm14t8722dGEc7a4Hmq7m/JMxqqyRSv2e2t
DQorl4u+4/UxyzPqjTRfbfjSnCZ46iEN+Xy/VDrkrw2iAYGbDA9oSNaMI883
WBvOueROkutoKOZ0R2btCXw+Lz94MV9LQyM3E1LXQrTh8fXgj9X38Plh2Ii9
eFobpDntYhFery9rPo4cPKMNJE/nH9K3acj2aFiYZLQ2cIdUuLDj9X1dutYJ
nxhtUG4oM2asoSHupz8C7sVpw0z5Exb2ahoK+lbtvXoOb/+Ji6pMFV4Pi/i4
oQvawBJOE9pTSUPK++ScU5O0AVl9Jp+uoKHEsE+HB1K0oftJuVjTTfz7WF5k
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$28652#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwUl3c41e8bxyV775V1rGOTtMTnuWVGSaKsMsqWJGQmsqPsTSnZXzOl9flI
KEIIlTKjKOkYZYR+5/fXuV7X837u+33f7+e6PtchOV+0cKGloaHpY6Sh+f/v
UtNYEQ0NBRkenCoWst//PE/t77SPDAXl2tCm3Jbhx3UrBJVGjSno8Omm43Of
ZPCUAvNHj1MpKLv1izTXUU38gMCFLfJDCtrLbBFGz3AQn7iVoJc1QkH+G+on
6Ap1cLXrrW/9pBeRcaPDh6bdevjw5hj/pNEikuV9f+H5EQP8auBfu+Pei8iE
vcOJYm6E93pozio1LSIhfhP6CBVT3Nu8lGbGcAmFVVr0fuU+gfN1tRqe9FpC
XppdeuOfT+BP9caTXtxaQlZ9z5j47ljgLPuFhIs+LKHCCY3+GE5LvKFO04Ft
awntk+sIm39qidsqnrgfQlpGupIrr6YcrfAKscTdpz2XkfAgSu7POIWbZ5de
ab+5jKQcLtQuS5/G17hePt/TuIy4da1erFWdxu8kju+8+34ZXXX+l/Vb2Ro3
pts8wrW5jNirL9P9K7XGKeFCKVclV5Alw5NRBREbPHtVc3hefwUt2Iz8SYy1
wb9+v+DcmbyCcm69PqBnaovfPJ9Yvr9hBU0eLmVuu2eL7x0rXbg/vIIoqeGe
vb9t8c+nX2ry/V1Bri6n1K7o2uHR/eMhURK/0cT9A8rvYu1wZdPNForeb7R2
SHnvarsdPtgmxOjg/hsZcx0UX9u2w8Owvcd6kn6jS6xuT7/vtselm0+kH6r/
jTgF8IkvZ+3xrt0+HyuGfqNmIUPntRh73K8qUUJo4zfi3WTg0ymzx0Vky1xi
xf+gxnKmro5We7y16GXVyuE/SJvxpHXlB3vcU2hi0dntDzKkWUjbnLXHudM2
9/ff+IN8wiaPDSzb482swldR3R908vzeM7BujzvG7G37b/APSr2zmGFHZaZ/
J1hE1/+gl8LinQdW7PHaIB/zRLFVFN/c2jM/Z4+fWkrMWtNdRUEu3wKTRuzx
ba+yz66uq0iDOSNHucMeL515KTWUuIpOJfUxTFXb42YOE+56taso5H1J5oub
9vifD5s19e9WEXonJDzhZY8XWgj/llhbReCu6WKhb4/rd+89dFN0DYlG/Dum
ImSPzxtYRG7CGvKiiSqL+WaHZxA+rzxd1lDP4EsD3wY7XPvgDfaPCWtocrp7
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
SW//npBFhYPxt2zCMLP9T5x/mUMFb/VH7f/7o6fP6u0U86nAiYk4+r8/8qB9
XXa4EOdDrq3V//5IIGPDvaYiKrj5vrIPxpw1aR0mWkqFZ4uPH/fDvMUqibqr
DK8XcLPAHXNHY9tIfgUVYqs33rDF7LDi97kvF/D+r6vd/d/fTQaRrWjVVNA+
t6uChjmx110yooYKpa4rbP/XQ4lVeOdhLRU2LfndKYT5Rs7zYyvqqPC4KOTr
J6ynxZy41v4GnO8bVl6+i3nUTvdzzTUqFGSYiZ3DHHkjKG+uiQovBYsHAzGv
VKjZZdBCBfODp+kmmGtDPy1IbaWC7Ksz46sxG75b1fruFhVUjTeJjuB8eM/b
dVT1Ls7fzpeuVzEHFsapBbRj/exWCx7DvPjfzf5b96hQLnj0IQsz95baDpsu
KoRV7Kv93x89W+8sfP4xFdRqxy65Y/aKzGrid1PB8ePpc/KYc7aKqMS9oELy
uyklX5z/pFL2255XVMiuuZUnh/m+sG/q2j4qmLZmdl3D9TLV9m6+4T3W79J+
xW+43pKUZRsEB6hwO8tGLRKzcqzxwR0fqRD0fM/VZZgtDa+9+jRMBXe7AwsV
cb1e6UyplflBhW3KN7UlRcbRWEbrs90/qaBb/iE1DNe/isvYVNokFWqyWzRG
cX/InzPkyc5RwYk+P1iP+0m8+r9OWWEa/FwaN74G+6G70xrfLEVpMEYvD7mK
+9X8XbtlGQtowE81/8rD/c3fvtFquSQNHr6I0uTgfulw5tDH5ctpsLppCeXN
Dz7Ksc0Ts1pBg4yn5JeUcdyflTtVM+VpkP3FtjP6Ox8ZtSr5yK2lwcTk5C75
r3ie89/8kdtEA5v7CwaW4fuk+C5juZUsGvxa8ykv5wWeb2uOsWw4NIh6cvxQ
5zM870fK7LN5NDi3ZOH+uad8NBkpWLpyKw2Y8iZHnPF9tv/qdS15ExpQc5cL
muP77urwIQvbHTRwnJAfTm/H/dpENjDHDO/vXMre9/+/L/p4pEXekgZf3kqV
ReD79DXZTUar9tFg/5oll5fg+/ZEv6W3nSMNSDZmf6Ou4/vupZPJuc40OHM5
VE8Q389L9N+/WOVGg+qsXr/l+D7/Tkpy1s6DBua5ZbRLV/lo5XuWQp4XDaAg
7/zOK3i+BGa4rD5Cg644pFdbw0edW+/G7PWlgcHA6Z2+l7AfWvqjMs+fBk/W
6rT8//7geIUpf/UxGjxSlQqau4Dnl3+wtH0wDdZ7dhd+rcT+DFXS80NpoO9D
+TBSwUeuvcKhCpE0uNa02nFpOfYvmx+Xn4migUUZ+Z5yGR+Rj2U/nY+hgalr
duWO83h/913+HImnQUTmTFJcKY73Cs1NAwk0ePBmTvR5CR99dp/eZXGGBguf
G+ZQMXddux16N5kG0uvin5cXY/+0ILGClkqDTnvXbVsw51hb9ZSl00BEM8b3
QRGOV8X6v3JZNCjWShsNwew2PbopPocGoSIM9jbMOwwbLGbzaOBnIj+2HjMt
KzzMq5AGducHTy/HvGrYqPJNEQ3kLnPKNmAWZMg+My2lQbjEo7v6mL/Evv97
s4wGR2yR/0nMj19WbtaqpEEHk4N6Mder+O8uqqKBvZFnnSHeX14g74TUJRos
Uffb+xTzyY4FF05epkFz2PydAHw+D7meZz+v4HwaaAygYz12uuXPu9bTwGNy
279lWC96o5vqy0YaKNrt/LoQ66kgRrY0bMLxu3yifQ3WW8jq94nrN2hwKT1M
3hzH40tZ+wXVVhqQq376FeF4PZlMfp57iwb1yaf2La3io0Z9u38Sd2kg+XnY
teAiH+VnKKmFtdNghfE1WROcD1Gfv1t+v0eDKw5FMysvYz9Nbwp3fECDxjsm
+QtwPjFe7Hih+4QGh2dO7zJqwP5beaVA3VMa9C3yCy7A+SkSMKim9JwGa0db
zsrifO6RDYoQe02DysyNzYcIPrruqnsx6A0NSkpSBs3v8NG5eomXX97hevgj
stkW14u3ZZH6w0EatKwuZ755yEcW572suJ9pILReabXVEz5i/aJFXhrG8Z4w
MZrp4SOx9M6XyWO4Pk9wrtX38VHRs4lIyykabG+UWL9mDPupjTer22do4Hze
qHwA94dD/nGvtH/TQNYx8MVT7OfYMgqa8gJ0WL24sGY1vq+9sNDvfbeIDsoF
OtP/z3vxnqwt7mvosI1cZjyuNI5SBBccr1lHB++YWakFm/G8JQfendxAh4jE
3A/r1MeRYoqlTbQKHdwLCoIsyOOItVPqZLEWHYxI5/9l8cZRa1hE1xcyHXoi
7RzyYBzpXeLLkWh02GEnk5W5Dc97yccXW5l0WJbgHnHECM/PBwkv3ujS4ZNx
Zlac5Tj6Pju7bqMeHWZY+9RVrPG8VvX08jKgg0D0W++rtuMoIt7w34wxHcak
PwwmOYwjseuNRrADr9dllvjWCc/HYeX0ODM61Dzc/Uh6P56/BiKqcpZ0MDk5
/o/qPo4UAv3991nRQfJyoJuCJ573ZYM3z9vQ4b74wZ1fvMbR5he7Fo7Z0eGP
mZ5fpjf2FyK3Laj76KDGOp6ofBjf72mkgmBHOjyLiLBOPzKOmvefG77tTIeA
ge4zAz7jCNKWUBa50iF9+cCIhB+e73fCQs3d6HD51SYVaf9xZDox1pHlQQeD
wdV/JzD3bLCX+uBFhzd8quqlo9hf7nq4V+UQHfjNQ64oAM/XCHb5oSN0EJyv
8qrE7Fp7Ybzelw5n/ad/DWEe/bCS88efDhtebm39//8ln6XxMdsC6UDpF478
gHlSZ/pJwjE66Jlemc7EHHzYbVVPMB1ePb/9di1mgcIXrvJhdDhMqx4NwOvH
PtK77BROh1jl4Te5eH+Sf+tmKyLpUOIy4pWIz5OqsVGPH0XH81DVwsgX+wX7
1CTtWDoMVa017cZ6FJ4WfB0WT4el6khmPdZL6YbPxvYEOugMCLowsJ5Vox8O
SZ6hw6+4dxOyWG/SKrPru5PpcOX19ohrOD6NRq1CeWfx85TmtjUHxhHnuOaO
wTQ6bPW4EGzgMo5uVeZnqWbSQX5Voj3JcRwZ9EoM+mTTYdrptVLfXux3GKOB
//Lp8DwrycID51Ovm+1tg3M4P/581DA2x/4q875EUjHWu//EqyET7Dcmy4sU
yukgt8wpzmTrOBpXkvu6v5IOht1pglI4nwMtY+gXq+gQMztMT2Rgv1S3/wHr
Mh1ovl2NhbgerrodUbh6hQ43NV63luH6+SQfclitHuvDbttvtgbfByJSpVc3
0SGEuXtRNPZnwdRC17QbdOhaF9slITqOLg5daJRopUN1otd+x//fX+y4bffn
Dh0CQ00fJ+D6B4FH1Ufb6eAq+f2neyu+39X1zo/do4Pq5F13Hzy/XsiPl7zr
okPtxe16U6G43w2t/dr6kg5hZTYrQ+Rx/85R4zFe43qfRNPW89/RP1Pt5Mtv
6BBv8YxpMPgdudTtoBb14/xfxv5uVPEdqUaEhkSO0sE4vcozTfk7sqPGP5od
o0OicUZZkdB3lDiUts6PTwezu6U2Ze+/oXHTi3ddfuH4v3TfEp/2DTXK90no
zWO9wrX6bcbH0Jeuz/taBLQhceyJyr22MbQq4sdlmrA2rBsJV5DLHkNhQwst
lRdqg+jBkCEvzhjSq2Pki0lrw83iScfEgK/oqWmGRqeyNmTtO6eb2jKChASK
T+hu1ga0ei+1JHIE0eqqu5vUtMHlUmrdV/0RlC3fdrRKC6+3cOiabtcX5DA0
0XKapQ1fqyiczO5hNBZuvmPnDm3gbJCMaWv5jG5KCxL5Znj9jZcM8kM/o6Sy
K6Svu7Th7NLUAlnuZ0R6KC0bb6UNzt+ruLNNn9BRuRd9tx21Yabycq7U1Y/o
d7WtB91PG8K2tlQdzxpA4n0uUQpZ2iApy4j8fakPvfGWmfTK0YYayXOmPpv6
UPW/u25NedrwnHzXzqj4NdqprGxsVaQN8YkGJaaZveisz/CylAvaMGTmnpYZ
+xKtXOBdKNyiDdsPh1doxvegkRyFZRat2mAacJilJtmDmjUeRRbd0gaL59Rc
hbNPkb3FlgO8dm3QVd6uvqCwGxUVjKsHPdaG9JunIj+deoQ20QKaRvvx841z
beqFHSifsiZb86M2+J+qpQQ+bUfLyO2BPp+1oU7oVl7tgnY0o7mcNjWiDYEK
dT9ZYXfRg00NNYI/teFooEf7iaRbSEdl3xm9SW1wnH1IsmgkUJ2SqHfcNNZ3
OF8hx6oV5W/Yo7r4jza8M7T4Flt9Ax1aPVm6UpQBuhe+bOJcaUSD8gUn9y5g
wOIyP2fpmAZktVLfuXARA/vroc88p3qkszxjrdISBtg9eqqzVeMqWraUnqO1
ggGvIrSDysnVKHrxuyA/eQaMZTXUIOMqNCsRY9WwmgF/2GtZ23wq0eDCFzKc
9QxwmdZWHv14HtUJBSQZqOLv95f2Nz/IR5sF1xw6pc6AIM2eC+87c1D+vzaT
Lk0G7Hk6n2o3kImi/8gusqAwYPK6x0kFm7NoZq5lOJ3G+P/90+PYQ2fQoVnX
jlfaDNhWKm+x0DYeWU3VR+3jMGB6v62IpU8YevDL3qWIx4CN5exXK/YcRein
iO5HxIARu2jldEV3tHncct5DjwH5NRnr/j7bTeR///P2ogEDKEU99777exLL
vp2/8X07A677jSsGaxwlZkd+HTu6gwGh873GiUsjicNf8q2vmTFgPq3Ivdc8
mhgc0tOe28WA9oTWvW4H44gHH9N/hlsxYK9rj1nbljOEziC3544NA4Yrr6b2
9CYTdf2fakX3MiBS3DHHTOsskf+Odvi0IwNszy5fOBOeRix7+9b0sTMD1qdx
ttsmpRMxfdHqUq4McEwYmH11OoOY69UQt3RjgPjSO5fuHsskDr96/iXTgwH0
pqxfB/dkEYMvQu+99mLAkw1rHNcrZhNWz5XKFQ4xgD0geYL0IZt40NMV7XiE
AbPJGwa/JuYQ6OnR/SW+DLjVsVyhRD2XcNrdZCR3lAEpXlevqt3LJSJe/NVK
CGRAoVO95YNdeUSR9Va5+WMMiJ5nnhl6mEfceh37xzeEAdU5+4Y/0fOJ/r0P
Bz+HMeBoHPqulpJPCLxf2mkbwQDDNX801r7JJ9Y7WV5+dJIBMbW1W5RWFBAw
mJ2hG8OApMzgEyV6BYST67uQhjgGdCkFVczvLyAihja4qCbgeNXepRUGFBBF
Hm7bCxIZ4JkcdmXoeAFxe7Rqi1QyA07L3ank+RYQg9582ZizWK+8mrKF9gWE
EJ/6eyYN56O/E/USu4BQ9D024J2J8/fnr7cpiwuIrT9b7vVnM8DZ75Sm/It8
wiVAsMYyjwGKepzai2fziZPT+un3CxiQ0bpp/NK2fKLkeEIwtwjHh+F9LOZr
HnHn92On2hIGrBNWeZ51Ko8YDJMxVCrD+RHkl2S8No8QErDRzK7Az78epghX
5RLbRAZmw6sZELDh236FyhzCNVa5/2fN/+e5sGD76hwieqFXh/sVBrjuOn17
aVw20Sb5M9WsEeeTCu38IuMsQm+5qMa6WwxYctDc/k58OuGaZSSddocB6Y+9
v4w8TCOi5ZNmxNoZIErO+fhaPI1oX7Oi/Xsnzj/DrN0Xws4SBiqqDq3PGLBa
o6Vka3QiYcjYkbJvmAEmF4SneWEnCI+ms4FPRxgQIRFwx54dQsRzXtrrj+Hz
3w2REhA4RtxHjqqaPxhwKW7tmMZFX2L7dt87f+YYcHiMfYfcaEV4PGio9PnL
AK9JgeqB1wZEvOlc0qd/+PdMo64MbJhv7TSP2tslwgSd4wtvXXa2RMa2Gb/y
ljDB897On8S0NxK/cWLu8zImxPg9KdYM8UGdCh4CJBkmPPzmIMTx8EPb+9mS
bSuY0Nz2UyNUMhAt3KokvWQVE5THVmZtbAtC90oXr7RRYELtis+zvl7HkYF7
/8ax9UxoW351ZDQqFIl1dqpqb2TCbF2P3KnpMNSuVqcVocyEBd9fhzbYhSO9
7zEcWTUmPB7+Jm8+E4GEzY/oOmgwQWtDiPTI2Uh054qNYeUWJiQdzbvXsvEk
0g1Q382lMmEPvWFBPCkKCbyStY2lM8ElvtWl6WIUusWcd+hmMMHjdvCqnHXR
KDx32HUVmwmTPT/k9BKjkc6fbi9XLhNIterw6kc0mt/X7FOjw4RNpqQTR8xj
0E2iNHAGmJCQs6BJtTIGhW44E7p1GxO8Tjf1Ks7GIG5U4MlEfSa8lt3ZHrQt
Fv355Bj/0pAJZZsfuenHxaIbBkZJ642ZcLFJp6yyLRYFV1LSvUyZMN1c5dH6
OxaxxRVy63fi86yTzynViENzB0WL5s2ZYNJ3dm2AdRxqevS9bPtuJki8Vxgw
C41Dx7R6L6buYULvmjv3zfPiEPPs7StvrZlwKfHUzfT6ODQzUXVNxY4JfmtC
Kpj349A1y/SbPvb4+3cLD9u+jEOBjWF3mx2YEOTzZ07mQxzSXuneKeLMhIqV
+bSYwTg0ddz8yc79TDhVEyP8oD8ONbxhvcg+wARZ5dtm/17HoaO8jW8G3ZnA
OGIluPVxHKKdkxzQ8GLCu/AdApdvxqFfAlNDgd44vkY1tP2VcajO5cPYrcP4
fLciYkOS4pBf2/0JcV8mnHzZ9U7WJw5RVK7OWPozofFErqLpjjj0Iy5vvjAA
52f1D66OShyqHYkWGQliwtSuPtmFWC8fk8Pi1GAm3HGxT+14GIu0LlkvCwtl
wrWn4QWZ2bHo+xJduXsnmFB/1nRthnMsqvFRU5CKZEJaxoM/71VikQbt76ay
GCaw6HN+98tj0FjGkCY/jgmVjTf6ip1j0MXpJ1RWAhNmDHcCWz4Gqd0oQY+S
mBByQKxsdXg0GlVI1F9xlgkprzhHCzWj0YUTASbOaUwwV3YZ2P06Cm3eut16
MosJwuuK6Q82RyGVzm+H1xQzQXvtPZUlFyPR2Rr/0OxSJvbn7xc95EWiP2mz
p2TKmTDq1zto9jgCPXMQLVt0EevVMks/1ROOIn4pvJmsx/E82Wl4a3ko6ltn
avj4PhN0bSY017GPIn3RHkujhzge+8x1ZTn+qHbU2qXtERNqbF65Urh+KK5h
f1hzDxMSzx9XXgY+iGYSUlf+lgnXHaLkb1R7oKTAqnXh40xAn2/fDZ/ajWb3
kjTnJpjwe87VMSHJHLnqNrIDJplQJRWby/E3RhzJO3sOzjHhi6n1sgE6B5X/
MNw/9IcJShVfZx3aNJH0q0c+zv/w86Lm9Vs8FqAvxa9PW4uwgGpc4h/3nErs
jnPM6RFjQciT4j9RxTpEq/fn8h2LWNCrSkQ9jtUjMhg/bm9bwoIAm0q5Ra47
ia2PFs5orWSBSmtz/4Y5a+LS1STRi6tY8Lx2ZRPrly2xMltWRmUNC/Yv1gpK
7t1L8F3Wb1FQZMHCXOUFJGdHwm57OSdLiQWTi9T1JaOciA5NDSPpTSy40cFX
45k4E/kzDNeFGiy4stAs3e+mC7Hg/U3fqC0sOF53drzdfT/hd3db+DyJBeab
d5X4L3Ql3lV2Jh6nsuD18YHlpedcie1JZrm/6CxobM68FqJ5gKjzf1FxhMmC
5L9tP5WuHiDW2u5tGGWz4K/lLe0OTTdicqN7dz9iwYHEwyeTxN0JkYBPxuZb
WTCwVHfxLi93QrrDuZ3Qw59/mH946rY7sWHFB6RliH/fUmiyVMqDIHnYNxca
saCQN/H9hK0HodP0mrbElAU2q75VVed4EDvErS+H7WTB4xP+QRY9HoT93ueq
38xZkD0vWpoh7El4Ve86b78br6+pHJqn6Ukc//t4bdceFoie27XrlLknEb/T
NIdjwwKlYQnfaG9PIvNcp8xFOxYcyXmuejXSkygbN0hatY8F9UYaDxgpnkS9
btvCBEcW5J5OK2JnexJ3UnWjZp1Z8GYi4feHHE/i6cfWvx6uLCDLpKnuyPAk
+mncY71uLLCI0DhekeBJfI9pmjD0ZMHso1dM2WBP4u9L7UPXDuJ8SF5+7fp+
T0Jyc/2wymEWFNu6bW029CRWHSe7ZPqwYBNhrKqj4kmoPqh5K+qP9dq9rdnz
nwfBXK1hHRDAgtGL3dtcnnkQBt4Xnn4KYsE1O3/ZHSUexJ6bKqaWwSyY+Xkx
2Mzbg3Bdcr7jbigLjkn8bksiexB+jht0qeEsEKEP6JIm3IkUQQVt6WgWVEoG
LNZycycKLXJqI2OxfoMbZ1/KuxOXSuXUf8Tj/a703hXY6UY80Jda332GBfTp
B5GkNW7E68ykXJTCAu+OwamM2weIL8MSyy+nsmCXfqZ0vMsBQjRBTDwpC9dH
cU9QRa4rAY9//zQpxvGdqU0eHnYhGqyG7t2rZ0HLY3GTjVsciCL3G0eINyxw
W7Ov8SHNhNiZ/W6R6HsWpLat0jttbkT8uf+v1LifBeq1i1qCfQwJGzW93hef
WHBaZ/DHo9Zt2F93wdg3FiSxCyzE9VlE6xp+H3mcBfq5j44t6KMT3julAoIm
WBCh9idl6gSFuH95zwWhaXxep22mwzObiHC/91LyAmxwLYt/R88idDRKBaod
hNhwo3u9n2rsAtT3TNHgvAgbtCQtr9yskUPadPdgrUVsEBsOkz9GKKNPB07J
BkiwYan0cfKtq2ooNfNiTfNiNqzZsDckLkQLfZ/mD+pLs4GQqlN+ZEhD+Zul
w07LssFY3jv11yFt7FdoK57KseFBjfPX9+FMVN58zMR+NRucz5k0/HPnIsuv
uZ+L17DBKf7Tk2s6OkhI4Wb48Do2pJ4RXL5aEJBDmGC9nxIbRjQWH9Or1EWS
NRt3Xldhw9PONyf5h7ai5vf6X/5uZkNcp5R1uNo2JAcJCqc02aATbiP6JF4P
tflUNz7WYgMjlFP/RE0f+RU/NpelsGHUU+2ldps+eiwkE3NO+399uhWa3xmg
UCp93WcmG9az7eRWOBgiNVfrJjUOG0J3pGvYvzREvenHd/vw2DAr9KXzgsF2
FNue960BsWHJiVab9Ze3I9rUzbjfumygDEZs619qhAZV+jfo6uH9W2T/WuRp
hFKshVpiDdhQ/vPQy5vNRogXr2TVtZ0ND4e9diuIGqPR6wbjUiZs+Gkx80J/
uzHKHvFIsN7Bhqs24fftoo2RwarTSgVmbDig4JkR0mSMfhlfah3cxYbY22sr
7g8bo5KQJzabLdmQeXCRh8tSE2Re/WPikBUbFumkbvUkmaD5tzJn6mzYYG2v
WPzX2ARVL9beNGvHBqFRxe/I0QTZ6djc1tnHhijxv2nmh0zQwiPBe6Md2WAx
IP/XLMAENZ7Ln+x0ZsPY2cE0hyAT5NrdmrzUFe8f3bqT72+CpAUHVPe4seHg
EoVfal4m6BZZuC3Xgw36GxxTVfeaoMMuyg79Xjh+eRMLmgxMkEKa4YzyITYk
FSNiVsMEBRqK5eYfYcOCXsXldAkT1P27jSPjx4YW34l9Jz8aI7XaqHenjuJ8
+VozJt5ojKJct4YLBLHh5m0b2ZmTxujtSsENQcfZcNh3fJO/sTHSfkTc+RbC
BtmgwOAySawvnSf2JoINqkFmm19EGiG90d8Vu6LYIHiwVFWZboQKC5uN7sew
4VzFcMPTj9vRrgXMMw0JbFD5vvXGZ+p2VHVjaovGGTb4/bDrO/fCEIn4NHSX
JLNhE+lA915/Q3S9lyKbks6GeQuLMydKDZD0mR8NYlk4P0nacwxtA+StW2sd
lsMGB+6ShOx2fbSuSjPPq5ANf57mO/zq00OxIZsV9Svx/rN0+XmftiLLtWtJ
czfYULpDs7Bci4dqet4+9Wllw5YmfvmNZVy0MC7Pf/gWG86sqNpjNM5GN/gr
rz1vZ0NNqjhPvpqJFG/L6Fx+wgaBexl7M9bRUGhAzwflHjY0LaW2HP9LQS9V
z0bmP2eDpVz3xMG3ZHQqdUn7qddsMIhd9Suep4XG9y8ydf2I64NwIBeFqiDj
lfe/9X3G+295WGK3Vwmd74pN3vWFDdyHhuv36ioia7rIM51vbJB+MfI+1kQB
tYr9s5WfZkPkR7cbcqcWoZU3bv5OnsWfN361TYYuhPyOhBaI/cH9oiR6tkR5
Ske5d7b/pwAHfmaZugmdfd6aeOGX+2NxDrg+upEkv02CiOHZqK5ezAHd9MOH
2vWWESee3hh1X8oBjdol7j+6pQmf2ZOHBGU5sEDvUoRO2QrC88zQlp1yHAhs
i9L+9k2ecNlgPJ67kgNGbTkHq9YrEJZGUv60NRzYp5pLNCiuJ3a8O0qLXMeB
qaP3j8+v3kAY+PZOPtrAgYb4w4veiisSzJxzx9xVOLBcak7nY+dGgqwpzK7f
zIG/px5e3p2rRKjddvstoM6B6Gdjp4eclAmFEc0TuVocGO2fWi34VIVYHnYW
DZM5IHbhYe6T4E3EEqlJARqNA9uM76/auXozsaDM5k6ENl6vw0Ww6OpmQoDV
EvWIyYHY9VL1X0CVmO1ap7+Kw4EuW6Nskw5VYsIpSsydx4ELRyNlxraqEZ/i
jU8JbOVAkXWnq7+iOvFOocZ4hx4HZja2ixbHqBMva6Ukcw044NyX/SynX514
ohfwaGg7BwTDmqmRVA3ifm9vEtWEA2OLi04Hn9AgbntzzSN2cMAwmYALtzWI
ZoEiqUdmHNAUTr5O+qtB1KULP5O34ABxMNqGRtYkqje7p7tZcmDdw+Wxr/Zp
EmUtD/bUWXHAY2NTOS9Kkyg037JCwJYDzYGf1iUUaxJZn872mu7lgNa9xdb9
1zWJlGOTOTn7cPzlLl7Z36lJnJK03TvkyAFZD0oG45kmcbKoRYHqgvVpkXcP
f6lJhNDWvw93xXqueJXogJ8fvR91rsuNA0uO9x+cwd8/ZD/sJO/JgelPFz19
mjUJt3FjRbeDHBiwv/x15Lwm4Rhd8/HqIQ58GXSyjj+lSdislC77dwTv57i2
9BEPTWJXdYCbqR8HHm4oj7ytq0kYw+tNOUc5MPJeWaJ0uSax7Tl35HMgB3Ku
qssyPmkQXI+iKspxrOc5TaHiSxoE/Y+wd3gIB7aXF7NF/DSILSnuml1hHAh/
8FcxmqxBrL++pfbASfzczyDHvUSdkDdN9b0ajc87t3ZCylKdkO6fpPyL5cDe
imspboLqhMjCmw3ZpzlQFSxIzzdTI/7mrQ/6fIYDv84XiraNqxJTWtFMSgqu
h7/PrmxMUiW+WJvceJjOgTfoA2Vl62aiq+L1rfkCDmQZOY3XT6kQHhU0Piri
wJ3VvPiP4SqEaEXymsgSDqQnfFcJF1MhdMr1g4UrODD3rfn9SUllovb8FerC
Wg4sTTso6PJPkUgrPlUudYcDN0kBN+04awhS8afnFm0c+HboX1X+KgWiqwgJ
p3dwIMw+5cXHmVWESNGko9xDDny+UHApsW4lEVjoLL/6OQc8M4z+pG2WJezy
WIlKQ1i/Q2JWF7PEiKnc9OYDX3B8/nplOwSIEGm5/C/lo3i9d1l1frZCRFdO
mb4qnwOr0iZWlB/606qTLfVPc4YDC2/EVWlajrT2ZXlrHpnjQHcYuPo9HWgN
yrq3t/YPByTr1oc9/vG8tTYz7DpFkAu17SWRdxJu6ihmjPgyxLkQ/29z+vGX
33Ra0/WKjkly4brkbZszUz909qafe9y0hAsiSi+d7b7+0klP26POleGCh5f8
bpQ6p0NKq7UNW86FlzaMn7f1/uo8SpWIb13BhXSzgrDMgX86Yqm3P4ECF6bc
U5xiDgmhkrMKMifXcgEkV+SI5wsjdDZI9+56Ltzxv3Ji4y0RdCxFs1BfmQvn
jaQWhYyIIdmU+K7YTVw4nfV4Ef/7AlSb/HHunioXzN2TjziPLkQjSTnWxlvw
+iYSitV3xRFF+uyZFhIXjO9ab1Kul0DBGfF3t1C5cMqrRd06RxKJ5wdpyTC5
sDRsY+jhrUuQxbojB2LYXNA7af4tS2wpyi1xy5vmcsH962iF0K2lSP3CngVv
dblQk/R+Q+qpZeioxg7eTj2sx62lZckvl6GWy3r+twy4sJynOOG7VgqJULkX
KEZc8K12kjZ2lkKmjdQP5024kFu/fKnqOSmUzlJfvmInF/78Pv1jXa8Uetui
aHLKnAurVJfcRZLSSAlWRf624ILX4FBiDkcaHborde3QHi4cfexko+MmjRoN
Fn37YM2FsrSOLShRGs13Cmy0sOOCXa+L/KVL0shgx4xNmz0X1LZFbMh5II2S
uvlJ2o5Yv2BPc9mP0ujl7uG2SmcujCt5XtaalkZrX72fW+XKhe4vnYZ/xGSQ
m91L0hk3LtR5v1Q8LS2DLr975PbPgwti1q+NvsnLoBmn9nzfg1zg7lzTQV0j
g+BTS8/HQ1x4PTNWdERBBsW71y+08uGC1d/Uj1dWyKDu0Ys69/24sE7ILkti
qQxaebj0KDuACy2XEtvPCMkgpx+5VdVBXCguDwgympBGlUdT+9cGc2F7mmOj
2Xtp9GP6lNzZUC7Irco4faVDGrFDIk2Fw7mQN+AkEHFRGp2cP3YyIBLnQ8ri
tV1YjweRPteHo7hQ3fX5W7mXNJIW9fhuG8uFjTza8Q360sgu3lGpK54LpPht
naYK0qhEwtpO5zQXTCwdhlnjUogqbdChmMKFgEUDVwuSpFBoBu9PeioXjqP3
ftq2UqhtJZ2yIIML0SlSKi/WSyHLdUqFX3O4YLpG/7RHxTKUX7L6+b58LgiU
95mFuy1Dn5RlxLsLuZDwsVujX3EZCtAQCqwvxfWlKVsVv2kpar08e1GlnAuU
urYDz1KWIDHqj4HsSi7Yvzydz55cjDJZ/TvCLnGhY3Nd+9BlSXTNoFXZ4BoX
lDyal/iML0KzTsEvXj3gQknZzla5FmHUf1dOff0jLgj9MfgTMCmE7qvURXg8
4YLktymKt4YQyh77qj77jAvB0r0GiWkCSPvYvpOr3uH8lyc76KXN6fglg9Y+
PhecJA69ONYwomM38Ta67Mf//SJXP582pKO753jft5+4fmV3Oiy4MqizbPXV
mBMzXCja7zD53uCVTk35xrfnBHkgAALa/Wr1raM3xU4NyvDAXAs2hlV/b+1Z
X/peTQ7zM1WfEOkfrU1RiOa/kgfHyAVZhV0TrfFGxz4Ir+GBx8/T25tZU60q
L0boyio8WG+U9Zn540/rEmbs6UObedD/NqQ1J3O+dTJXcaBBjQetSj7T0goC
RJvT3kQDLR6c/9x02PeaIOEy1jXozuTB5kxPC58eEcLYzJNZy+b9/z5sqiNV
lCBfFU2a4fJAruXAoz3mYoTAMR3WKV0e2CdTbS7dWUAUCtcmVxnzILTKp5kb
KU7Eupl+njDlAclme/eOzRLEoc4vbI4ZD6o2BxY1PZQguMkbhh7u5kHXreN1
lAWLib5Vadxv9jxIuFgRVrpjKXFb7njccUcebA8XdP/ycSlRKe3YI+rCAyZb
T0OfvYwIFFf3WOvOg1eiy8qU7ywj9olJ1VV58mDRSHZJkqAUoSc0/VfbG38/
krXuNU+KkJm7k2bmywPTyTsp7dVSxNxk5fs3/jxQ2a8hrPtBihj8kaTqEcgD
v6oavvkSaaLz29Gjv45hPWXFlw+ypInaETsiIoQHtiPz5AFnaSLrM4gvPoHP
579DlBMrTZwYUNmTE8GDlrmGHW/LpYkD7ySLlKN4INM503nlrjRh+npi9EoM
Dww3vWRWvpUmqC966TrxPPBxWGJb/UOaWPW0NeJBAo7HNeeRKiEZQvDR+YdW
Z3gwFZJSmbJUhvhyP0HuYzLW95fdHuOVMsSTNh/nI6n4PF6RNW0KMkTjLavq
3+n4uUqb3xjmwhbudFwWD9b4fXSqwZ+Pua64VTaXBwaZ5xjT+Pe86xeeKcrn
wbK31xvq8HqWtd9faZzjQXwiP6d7XJrgVD9XbCrmweNx4VJ2nzShWNl8SP88
D37sakx+3ypNLDpfdP1pOQ/EZzvWXiiUJsbPxQo7XOCButbUkrjj0sSrPO+d
oxd54MUTWXfATJpozbLICazhwQfvK4tJ66WJsjTmJ6ErPCgQa815/lWKSExe
q5Vcx4Om3aOR6KoU4X9aJHh1I45fwVT0Pn8pwi5utK3iOg+cNUqdV2tJEbpR
3UtpN3iw0rj25YHPy4jN4Y12t27y4CR6X6KauYyYDjw53nuHB/oXOUFFj5YS
7/08OAfaeWAs5SQhv3gp0XF4Z+yPezyQOnJ/2ygsIdLdVimIP8L5be+e9Sda
kghxEXDPfMIDh6XnLo2nSxAuDkNXFHt44CK8xqE0W5wgWV015LzCek59i6oK
XkissMhOvfeaByfkt/66YrOAmN9x4t3utzxQ6Hj/652qGNGlb+zvPcADqsiv
/EVlwkSdLql15iMPhJoPoZadQkQuT25RzBAPPulSPGZHBQgP+mBhwVceiG7g
xkz8+t1qRr4/ovqdB6rTie/f9c20amvW0BrHedAmdIxUdX6yVUQ5+MHjSR64
Zm213N/+rfXreqfle2fw/kvvJpdVD7X2KBg4Dc/x4M1xEdWoq+9bm1dqXPT/
y4Ov5UIuAWpPWotlpaf+/ePB7w0OzNtPv9/8DzksrEE=
           "]]}, Annotation[#, "Charting`Private`Tag$28652#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.01], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 4.963083675318166*^-24}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{2, 4.2599801546480925`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 4.2599801546480925`*^-22}, {2., 
        4.2599801546480925`*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{3, 0.}, {3, 1.3234889800848443`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 6.617444900424222*^-24}], {Arrowheads -> Small, 
       ArrowBox[{{3., 6.617444900424222*^-24}, {3., 
        6.617444900424222*^-24}}]}}, {
      PointSize[0.01], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 2.6469779601696886`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 1.3234889800848443`*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{4., 1.3234889800848443`*^-23}, {4., 
        1.3234889800848443`*^-23}}]}}, {
      PointSize[0.01], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, -1.0587911840678754`*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.36054667152722*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.36054667152722*^-20}, {
        5., -1.36054667152722*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, -4.235164736271502*^-22}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{6, -5.44218668610888*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.44218668610888*^-20}, {
        6., -5.44218668610888*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.}, {7, 1.6940658945086007`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{7, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{5.895100774197678, 8.470329472543003*^-22}, {
        9.90989457134555, 8.470329472543003*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, -6.776263578034403*^-21}}], 
      GrayLevel[0], 
      PointBox[{8, -8.707498697774207*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.998491191503541, -8.707498697774207*^-19}, {
        11.998491421726438`, -8.707498697774207*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 2.710505431213761*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{9, 1.748276003132876*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{7.634348354401519, 1.748276003132876*^-18}, {
        11.637652531412504`, 1.748276003132876*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{8.890098658640323, 0.04969024160430335}, {
        12.890098756946488`, 0.04969024160430335}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{11, 0.4503097583956967}], {Arrowheads -> Small, 
       ArrowBox[{{9.84194258442871, 0.4503097583956967}, {13.84194011293955, 
        0.4503097583956967}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 1.}, {12, -8.673617379884035*^-19}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{12, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.303411909695914`, 0.5}, {14.303408913985304`, 0.5}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 1.}, {13, 1.0722325369815907`*^-45}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{13, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.68589316580822, 0.5}, {14.685890833952165`, 0.5}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 1.}, {14, 0.09938048320860673}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{14, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{11.166009016535753`, 0.5496902416043034}, {
        15.166008070598656`, 0.5496902416043034}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{15, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.80630215690503, 0.9503097583956966}, {15.80630268057669, 
        0.9503097583956966}}]}}, {
      PointSize[0.01], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16., 1.}, {16., 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{17., 1.}, {17., 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{18, 0.9503097583956968}], {Arrowheads -> Small, 
       ArrowBox[{{18., 0.9503097583956968}, {18., 0.9503097583956968}}]}}, {
      PointSize[0.01], 
      LineBox[{{19, 0.09938048320860672}, {19, 1.}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{19, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{17.83399355262459, 0.5496902416043034}, {21.8339778534081, 
        0.5496902416043034}}]}}, {
      PointSize[0.01], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 1.}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{20, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{18.314106277977842`, 0.5}, {22.314070641684726`, 0.5}}]}}, {
      PointSize[0.01], 
      LineBox[{{21, -6.505213034913027*^-19}, {21, 0.9999999999999999}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{21, 0.49999999999999994`}], {Arrowheads -> Small, 
       ArrowBox[{{18.696585704688296`, 0.49999999999999994`}, {
        22.69654146360784, 0.49999999999999994`}}]}}, {
      PointSize[0.01], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.9006195167913933}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{22, 0.45030975839569665`}], {Arrowheads -> Small, 
       ArrowBox[{{19.15807191265206, 0.45030975839569665`}, {
        23.158036346204817`, 0.45030975839569665`}}]}}, {
      PointSize[0.01], 
      LineBox[{{23, 9.486769009248164*^-20}, {23, 0.09938048320860673}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{23, 0.04969024160430337}], {Arrowheads -> Small, 
       ArrowBox[{{20.109755104198047`, 0.04969024160430337}, {
        24.109758234297633`, 0.04969024160430337}}]}}, {
      PointSize[0.01], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 2.3852447794681098`*^-18}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{24, 1.1934694226813092`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{21.362695665549435`, 1.1934694226813092`*^-18}, {
        25.35900744615287, 1.1934694226813092`*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{25, 2.117582368135751*^-21}, {25, 7.589415207398531*^-19}}], 
      GrayLevel[0], 
      PointBox[{25, 3.8052955155399443`*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{21.001506112068085`, 3.8052955155399443`*^-19}, {
        25.001509001011318`, 3.8052955155399443`*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 5.421010862427522*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{26, 2.72109334305444*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23.132061308142056`, 2.72109334305444*^-20}, {
        27.115279353203547`, 2.72109334305444*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, -1.2585168176455822`*^-48}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{27, -7.940933880509066*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{27., -7.940933880509066*^-23}, {
        27., -7.940933880509066*^-23}}]}}, {
      PointSize[0.01], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, -6.776263578034403*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{28, -3.40136667881805*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24.594903221401854`, -3.40136667881805*^-21}, {
        28.600571784951676`, -3.40136667881805*^-21}}]}}, {
      PointSize[0.01], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{29, 5.293955920339377*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{29., 5.293955920339377*^-23}, {29., 
        5.293955920339377*^-23}}]}}, {
      PointSize[0.01], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{32.3171548213442, 0.}, {29.13520805349078, 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedInitialSignStepsLeft\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843754771597447*^9, 3.8437547938858976`*^9}, 
   3.8437548346158285`*^9, {3.843755368690957*^9, 3.8437553713235874`*^9}, 
   3.843761831397399*^9, 3.8438343107356777`*^9, 3.8438350811395884`*^9, 
   3.843835133469493*^9, 3.843849340365414*^9, 3.8438507519047856`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"4365ef37-721e-484b-90f5-f066b072cbe7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"442894b3-418d-4bc4-b4db-\
12b253b50133"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "v0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v1", ",", " ", "v2", ",", "c", ",", "status", ",", "iterTable", ",", 
        "updateValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
          "v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e", ",", " ", 
           "dv1sign"}], "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0.", ",", "0."}], 
          "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "2.", ",", "0."}], 
               "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"iterTable", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"updateValues", "=", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{"updateValues", ",", "p0", ",", " ", 
                  RowBox[{"pyrfunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                  RowBox[{"threshold", "*", 
                   RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                  "\"\<ConstrainedInitialSignStepsLeft\>\""}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"updateValues", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{"updateValues", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", " ", 
                 RowBox[{"updateValues", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"updateValues", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"i", "*", "2"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "iterTable"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.843834362022087*^9, 3.8438344150614185`*^9}, {
   3.8438345567901006`*^9, 3.8438346039124*^9}, {3.843835076663509*^9, 
   3.8438350769760375`*^9}, {3.84384927747968*^9, 3.8438492805985184`*^9}, {
   3.843849390184264*^9, 3.8438493904102345`*^9}, {3.8438507300249376`*^9, 
   3.8438507319495664`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"c9b76b1a-1222-44a6-8150-b11ad5d9db43"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"9500677b-47ae-454e-a7fa-\
d33ab1ac2f88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iter", "=", 
  RowBox[{"PyrFlow1DIter", "[", 
   RowBox[{"10", ",", " ", "11", ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0."}], "}"}], ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", " ", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
    "noteBookMode"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, {3.843834619168625*^9, 
   3.843834632287681*^9}, 3.843849361597576*^9, {3.8438507365290756`*^9, 
   3.843850739632452*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"da479219-da0c-4c71-833a-5e483d5120da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.5741804788005431`", ",", "2.452045435228925`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.6927384637046592`", ",", "2.3084537534982523`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.704864400896418`", ",", "2.2942499170591923`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7062234596724482`", ",", "2.2926742048254716`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063770656008341`", ",", "2.292497656386127`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063944428889817`", ",", "2.2924778537264516`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063964089711567`", ",", "2.292475632278979`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.706396631418125`", ",", "2.292475383075268`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966565863111`", ",", "2.2924753551193593`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.706396659433901`", ",", "2.2924753519832377`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597560836`", ",", "2.292475351631424`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597925357`", ",", "2.292475351591958`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597966609`", ",", "2.292475351587532`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.706396659797127`", ",", "2.2924753515870337`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.70639665979718`", ",", "2.2924753515869787`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597971858`", ",", "2.292475351586971`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.706396659797187`", ",", "2.2924753515869716`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597971865`", ",", "2.2924753515869702`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597971876`", ",", "2.2924753515869707`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.7063966597971871`", ",", "2.292475351586971`", 
       ",", "\<\"converged\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.3135161317300792`", ",", "2.6862722632498945`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.202224652501659`", ",", "2.7977083254117887`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1695881746411405`", ",", "2.830392230654443`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1609844451401448`", ",", "2.839008783265957`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1587947411861155`", ",", "2.8412017243162717`", ",", "\<\"ok\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1582427830854414`", ",", "2.84175448380604`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1581039946737384`", ",", "2.8418934695455653`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580691184859515`", ",", "2.841928394237708`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.158060355814047`", ",", "2.8419371688224886`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580581542722281`", ",", "2.8419393732883784`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.15805760116031`", ",", "2.841939927117611`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574621976836`", ",", "2.8419400662561`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.15805742728504`", ",", "2.841940101211833`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574185136705`", ",", "2.8419401099937533`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.158057416309973`", ",", "2.8419401122000325`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.158057415756322`", ",", "2.8419401127543162`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.158057415617224`", ",", "2.841940112893569`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155822771`", ",", "2.8419401129285524`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155734966`", ",", "2.8419401129373414`", 
       ",", "\<\"converged\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"converged\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.1580574155712906`", ",", "2.8419401129395507`", 
       ",", "\<\"flip\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8438346245133677`*^9, 3.843834633100296*^9}, 
   3.8438350812463303`*^9, 3.8438351335662622`*^9, {3.8438493406297455`*^9, 
   3.8438493625839205`*^9}, 3.8438507519838276`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"455b31d2-3ce7-4100-9f8b-eff31aa371a6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1140.6, 580.1999999999999},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>0.95 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1568a5f1-f1b0-4aa8-90b0-c91f6361339f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 533, 8, 92, "Title",ExpressionUUID->"7afc5b65-0b5e-4320-8af8-efa1ad27aa25"],
Cell[1116, 32, 479, 9, 26, "Input",ExpressionUUID->"d6613b5f-169d-4924-a7bf-e1328c874886"],
Cell[1598, 43, 590, 16, 45, "Input",ExpressionUUID->"41e1c256-78cb-4820-90cf-01209722e819"],
Cell[2191, 61, 535, 8, 45, "Input",ExpressionUUID->"8671407a-4f01-418c-b8d5-eb14191aec4b"],
Cell[2729, 71, 422, 8, 26, "Input",ExpressionUUID->"d1bc8fcf-74b6-4b1d-a5a8-1732c355759d"],
Cell[CellGroupData[{
Cell[3176, 83, 337, 5, 63, "Section",ExpressionUUID->"49cdbca1-85b1-42e3-a9fb-95cdbab14151"],
Cell[3516, 90, 2440, 58, 153, "Input",ExpressionUUID->"63e606eb-af9d-4b38-8042-9c69524c2133"],
Cell[5959, 150, 2143, 63, 153, "Input",ExpressionUUID->"26805c80-4731-40a2-851e-420a0b82d2d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[8139, 218, 219, 4, 50, "Section",ExpressionUUID->"18e1ac0b-2e67-4ae4-85a8-851f071e6799"],
Cell[CellGroupData[{
Cell[8383, 226, 162, 3, 51, "Subsection",ExpressionUUID->"4d85132e-f9aa-4886-993d-13ba7706c410"],
Cell[8548, 231, 30747, 662, 1914, "Input",ExpressionUUID->"4fdc4427-ab7c-4822-8290-a142d2bfc29e",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[39332, 898, 191, 3, 49, "Subsection",ExpressionUUID->"ae9c1c19-996f-4736-a4d8-9d1e6e3e2062"],
Cell[39526, 903, 1439, 29, 81, "Input",ExpressionUUID->"8afbc134-2a96-4829-a98d-261227ff5001"],
Cell[40968, 934, 448, 8, 45, "Input",ExpressionUUID->"df917fe6-c171-4677-bfcd-46b626c18e59"],
Cell[CellGroupData[{
Cell[41441, 946, 2311, 43, 81, "Input",ExpressionUUID->"9aa1df55-4b50-4c69-af76-58c3366fca58"],
Cell[43755, 991, 1324, 21, 30, "Output",ExpressionUUID->"b5f3817e-f86c-4a55-b16e-a518830d31ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45116, 1017, 1051, 19, 45, "Input",ExpressionUUID->"8ac72149-7774-43cb-be5f-c0e6e76366d9"],
Cell[46170, 1038, 13307, 236, 225, "Output",ExpressionUUID->"194bdf17-b069-4fd4-9179-ce7b3a3bc49b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59526, 1280, 182, 3, 51, "Subsection",ExpressionUUID->"9476c611-cedb-4e14-b4f1-a7f3e4e663c4"],
Cell[59711, 1285, 212, 5, 34, "Text",ExpressionUUID->"dc51e695-7873-4d23-8fd3-56cf6235c000"],
Cell[59926, 1292, 12064, 206, 690, "Input",ExpressionUUID->"2ba813e8-f4d4-445d-9ef4-e02d9a926ee0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[72015, 1502, 182, 3, 42, "Subsubsection",ExpressionUUID->"ba5cc455-fcf1-4e82-9c11-345ce239926d"],
Cell[72200, 1507, 240, 6, 34, "Text",ExpressionUUID->"d665bf0a-b30b-44e3-a00d-ac5233747928"],
Cell[CellGroupData[{
Cell[72465, 1517, 4057, 82, 225, "Input",ExpressionUUID->"92b9953a-3f65-4581-92ba-aa1b6d592b38"],
Cell[76525, 1601, 835, 14, 30, "Output",ExpressionUUID->"40c08a4f-6589-48c6-9167-a4a04c980472"],
Cell[77363, 1617, 800, 12, 30, "Output",ExpressionUUID->"e58a757b-f720-4497-aa85-f73c6febfae6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78200, 1634, 1548, 25, 45, "Input",ExpressionUUID->"9f5e2abd-c86d-409d-b148-1edc64ec627b"],
Cell[79751, 1661, 48956, 822, 222, "Output",ExpressionUUID->"c1b98384-5fb0-40a5-8140-3c609bb0a7f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128780, 2491, 275, 4, 63, "Section",ExpressionUUID->"48df32ca-fd60-406d-8945-a49b0001894a"],
Cell[CellGroupData[{
Cell[129080, 2499, 292, 5, 51, "Subsection",ExpressionUUID->"155883ba-978a-41a6-93c7-b6d9e5f422e9"],
Cell[CellGroupData[{
Cell[129397, 2508, 182, 3, 42, "Subsubsection",ExpressionUUID->"c9b86259-19bb-47f6-b975-2475f6a3f617"],
Cell[CellGroupData[{
Cell[129604, 2515, 1216, 27, 45, "Input",ExpressionUUID->"1bfb77de-7d5d-48b9-b030-f47911106b61"],
Cell[130823, 2544, 104035, 1802, 338, "Output",ExpressionUUID->"4365ef37-721e-484b-90f5-f066b072cbe7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234931, 4354, 325, 5, 63, "Section",ExpressionUUID->"442894b3-418d-4bc4-b4db-12b253b50133"],
Cell[235259, 4361, 11545, 206, 492, "Input",ExpressionUUID->"c9b76b1a-1222-44a6-8150-b11ad5d9db43",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[246829, 4571, 182, 3, 42, "Subsubsection",ExpressionUUID->"9500677b-47ae-454e-a7fa-d33ab1ac2f88"],
Cell[CellGroupData[{
Cell[247036, 4578, 989, 19, 26, "Input",ExpressionUUID->"da479219-da0c-4c71-833a-5e483d5120da"],
Cell[248028, 4599, 8639, 252, 265, "Output",ExpressionUUID->"455b31d2-3ce7-4100-9f8b-eff31aa371a6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

