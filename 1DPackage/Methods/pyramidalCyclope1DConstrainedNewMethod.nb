(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    802094,      15100]
NotebookOptionsPosition[    791545,      14913]
NotebookOutlinePosition[    792102,      14933]
CellTagsIndexPosition[    792059,      14930]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Constrained method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, 
   3.843831097875743*^9},ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-\
04efcb90444f"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 3.843153621995445*^9}, {
  3.843752212635614*^9, 
  3.8437522150627623`*^9}},ExpressionUUID->"564bd16b-5ad2-477e-879c-\
a49b47193581"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431523924971895`*^9, 3.84315239273125*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->
  "In[691]:=",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{
  3.843747328636345*^9, {3.8437486091702127`*^9, 3.8437486224305134`*^9}, {
   3.8445130212660832`*^9, 3.844513027637513*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.8444602155397797`*^9, 
   3.844460218580969*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-\
e28adb0822c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dis", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.8527432872559943`*^9, 3.8527432891307516`*^9}, {
  3.852820564514149*^9, 3.852820594366195*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"bcce114e-be95-4be9-af3b-e98691bcc37f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "dis"}], ",", 
           RowBox[{"30", "-", "dis"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9, {
   3.8445119817060966`*^9, 3.844511983305078*^9}, {3.8522966047840776`*^9, 
   3.852296606303194*^9}, {3.85274328091955*^9, 3.852743295758687*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
       ",", 
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}, {3.8445127985159717`*^9, 
   3.8445128295209723`*^9}, {3.852820576515012*^9, 3.8528205805400867`*^9}, {
   3.855166295150268*^9, 3.855166302058202*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
       "]]},
     Annotation[#, "Charting`Private`Tag$26191#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
       "]]},
     Annotation[#, "Charting`Private`Tag$26191#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.855760730563846*^9, 3.855760845228918*^9, 
  3.8557630667443*^9, 3.8557631978194056`*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"080b2475-be31-4ef9-be90-292abdaec90d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D (PyrFlow1D)", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.843153511988031*^9, 
  3.843153515512398*^9}},ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-\
301a424457b1"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"86d2106e-d02d-4249-a85a-\
97f3df8af812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "update", " ", "values", " ", "of", " ", "v1", 
    " ", "and", " ", "v2", " ", "with", " ", "Over", " ", "Constrained", " ", 
    "standards"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Any", " ", "value", " ", "that", " ", "does", " ", "not", " ", "meets", 
    " ", "the", " ", "constraints", " ", "becomes", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}], ",", " ", 
        RowBox[{"and", " ", "counter", " ", "e"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status", " ", "and", " ", "e"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", "c", ",", 
         "d1", ",", "d2", ",", "dv1", ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<oksign\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e"}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitud", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<okmag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e"}], "}"}],
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}],
                "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", 
                "0"}]}], ")"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"e", "<", "2"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                  RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e"}], 
                 "}"}], "]"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"e", "<=", "n"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v1", "+", "dv1"}], ",", 
             RowBox[{"v2", "+", "dv2"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{"{", 
                  RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.01"}], 
               ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", 
             "e"}], "}"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", "status", ",", "e"}], "}"}], 
            "]"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "No", " ", "other", " ", "solution", " ", "will", " ", "be", " ", 
     "calculated", " ", "when", " ", "status", " ", "records", " ", "an", " ",
      "error", " ", "message", " ", "in", " ", "this", " ", "pyramidal", " ", 
     "level"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840549828869686*^9, 
   3.840549841777425*^9}, {3.8405509817557898`*^9, 3.840550982064629*^9}, {
   3.8405510933457384`*^9, 3.8405510984627314`*^9}, {3.8405511395527105`*^9, 
   3.840551141478009*^9}, {3.841319162361234*^9, 3.841319168699852*^9}, {
   3.842638275839821*^9, 3.842638283825076*^9}, 3.843047150844548*^9, {
   3.843047683246418*^9, 3.8430478826039906`*^9}, {3.8430662477842984`*^9, 
   3.84306626706721*^9}, {3.843066357433008*^9, 3.84306638005869*^9}, {
   3.843066471098827*^9, 3.843066471456827*^9}, {3.8430665682341595`*^9, 
   3.8430665823535037`*^9}, {3.843066614023039*^9, 3.8430666158403826`*^9}, {
   3.8430666478257236`*^9, 3.8430666560026145`*^9}, {3.843066691062875*^9, 
   3.843066695028036*^9}, {3.8430670820101533`*^9, 3.8430670822719493`*^9}, {
   3.8431531584724064`*^9, 3.8431532415742707`*^9}, {3.8431541924011116`*^9, 
   3.8431542010920024`*^9}, {3.8431543579685593`*^9, 3.84315458831942*^9}, {
   3.8436736200598516`*^9, 3.843673659839816*^9}, {3.843675802266506*^9, 
   3.84367580324864*^9}, {3.843676094738164*^9, 3.843676095993743*^9}, {
   3.843676148112191*^9, 3.843676217593154*^9}, {3.843747759180975*^9, 
   3.8437478035510416`*^9}, {3.843747837199093*^9, 3.843747911811542*^9}, 
   3.8437479433562737`*^9, {3.843748377618887*^9, 3.843748418267103*^9}, 
   3.8437487463423266`*^9, {3.8437522385411882`*^9, 3.8437522397665625`*^9}, {
   3.843752288076639*^9, 3.843752310561741*^9}, {3.843752372567502*^9, 
   3.8437523938328533`*^9}, {3.8437532528926954`*^9, 3.843753253873748*^9}, {
   3.8437532996776743`*^9, 3.8437533168563538`*^9}, {3.8437535125676455`*^9, 
   3.843753519661378*^9}, 3.8437535832591257`*^9, {3.8437536229410996`*^9, 
   3.8437536714702573`*^9}, {3.843753713138695*^9, 3.843753713497829*^9}, {
   3.8437538032027535`*^9, 3.8437538110533333`*^9}, {3.8437541111506634`*^9, 
   3.843754123500203*^9}, {3.843756514694689*^9, 3.8437565228370256`*^9}, {
   3.844259791226394*^9, 3.844259814136951*^9}, {3.8443564826670113`*^9, 
   3.8443564849271317`*^9}, {3.8443619303990293`*^9, 3.844361934480361*^9}, {
   3.844368304375413*^9, 3.8443683086155677`*^9}, {3.8444602254264507`*^9, 
   3.8444602371283655`*^9}, {3.84451200345923*^9, 3.844512005814104*^9}, {
   3.8445156047558804`*^9, 3.844515606918198*^9}, {3.8445158304009256`*^9, 
   3.8445158324047036`*^9}, {3.84451649753236*^9, 3.8445165016123977`*^9}, {
   3.8447823272091274`*^9, 3.844782349008145*^9}, {3.844782526684991*^9, 
   3.844782536256265*^9}, {3.8447826509613276`*^9, 3.8447826523153005`*^9}, {
   3.8447826850334997`*^9, 3.844782691498364*^9}, {3.845918060041156*^9, 
   3.8459181031181545`*^9}, 3.8459184702466784`*^9, {3.845999275777835*^9, 
   3.845999282502781*^9}, {3.8459997280634265`*^9, 3.84599975722418*^9}, {
   3.8459997899691124`*^9, 3.845999798075818*^9}, {3.8460001536819735`*^9, 
   3.8460001549021235`*^9}, 3.8460207290920916`*^9, {3.846086347396666*^9, 
   3.8460863496307783`*^9}, {3.8460864047584777`*^9, 
   3.8460864419004726`*^9}, {3.846086481744698*^9, 3.8460864838225775`*^9}, {
   3.8460865281713114`*^9, 3.8460865302178683`*^9}, 3.8460880621541615`*^9, 
   3.846088327560858*^9, {3.8460946963941307`*^9, 3.8460946974679675`*^9}, {
   3.8460947275175343`*^9, 3.8460947691694527`*^9}, {3.8460950090659475`*^9, 
   3.846095010209775*^9}, {3.846095545515373*^9, 3.8460955733652983`*^9}, {
   3.8460956070630035`*^9, 3.846095607370658*^9}, {3.8485005221415615`*^9, 
   3.8485005351640396`*^9}, 3.848500596684627*^9, 3.849033011396132*^9, {
   3.8490330991837425`*^9, 3.8490331139771614`*^9}, {3.849034018861663*^9, 
   3.849034024719659*^9}, 3.849034099764724*^9, 3.852306597585452*^9, {
   3.852383682075785*^9, 3.852383685820044*^9}, {3.852744070632491*^9, 
   3.8527440730820713`*^9}, {3.8527441202585278`*^9, 3.85274413073687*^9}, {
   3.852744165658305*^9, 3.852744167923217*^9}, {3.8551468207372737`*^9, 
   3.8551468407398677`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"09c54b45-a793-4cfd-ad20-\
2e7a5f10a972"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "3", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "11"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.844782546275529*^9, 3.8447825467162204`*^9}, 
   3.844782672224075*^9, {3.846084808331871*^9, 3.846084901361394*^9}, {
   3.84632906290853*^9, 3.8463290682357426`*^9}, {3.846329127978734*^9, 
   3.8463291611583424`*^9}, {3.84632922227293*^9, 3.846329239028186*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}, {
   3.844515659297496*^9, 3.844515674142517*^9}, {3.852820617799965*^9, 
   3.852820640371076*^9}, 3.8528207094904556`*^9},
 CellLabel->
  "In[361]:=",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", "p", 
     ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "1", ",", 
     "noteBookMode"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9, {3.849033302647654*^9, 3.849033303632023*^9}, {
   3.855146848885496*^9, 3.855146849296422*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3305086043762214`", ",", "0.18457954426342438`", ",", "\<\"ok\"\>", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.855760730867036*^9, 3.8557608453418937`*^9, 
  3.8557630668203516`*^9, 3.8557631978924065`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"f2b5a29d-d3a0-4e65-8dff-7f97369b05ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9, 3.8445156454523244`*^9},
 CellLabel->
  "In[364]:=",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$26240#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
7wyrj/36xYOuo8WBa9H/B13HtJg=
        "]]},
      Annotation[#, "Charting`Private`Tag$26240#2"]& ]}, {}}, {
    PointBox[{{11, 0.4960812650787159}, {11, 0.5194665705307795}, {
      11, 0.47269595962665234`}}], 
    PointBox[{{10.669491395623778`, 0.4960812650787159}, {11.184579544263425`,
      0.4960812650787159}}], 
    LineBox[{{11, 0.5194665705307795}, {11, 0.47269595962665234`}}], 
    LineBox[{{10.669491395623778`, 0.4960812650787159}, {11.184579544263425`, 
     0.4960812650787159}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{6., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{6, 16}, {0., 0.6687693583759161}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8557607309567456`*^9, 3.855760845403365*^9, 
  3.855763066889207*^9, 3.8557631979530544`*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"8aac183e-9f73-463c-a310-1e3042a4b3fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"a4c25ec2-f772-4494-87f0-\
6c86ae6eb27a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"random", " ", "values", " ", "between", " ", "10", " ", "and"}],
      " ", "-", "10"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"allowed", " ", "failed", " ", "levels"}]}], ",", " ", 
    RowBox[{"u", "=", " ", 
     RowBox[{
     "shift", " ", "on", " ", "v", " ", "solution", " ", "through", " ", 
      "levels"}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"newValues", "[", 
    RowBox[{"i_", ",", "n_", ",", "u_", ",", 
     RowBox[{"{", 
      RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
     "newv0_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "r", ",", "rs", ",", "newVals"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"v1", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"e", ">", "n"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0."}], "}"}], "}"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "\[NotEqual]", "0."}], " ", "&&", " ", 
          RowBox[{"status", "\[Equal]", "\"\<ok\>\""}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"newVals", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"r", "=", 
               RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"r", ",", 
                 RowBox[{"1", "-", "r"}]}], "}"}], "*", "v"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"u", "\[NotEqual]", "0."}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{"newVals", ",", 
              RowBox[{"newVals", "-", "u"}], ",", " ", 
              RowBox[{"newVals", "+", "u"}]}], "]"}], ",", "newVals"}], 
           "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", "newv0"}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8444612782790546`*^9, 3.844461325604576*^9}, {
   3.8444614444947405`*^9, 3.844461444680009*^9}, {3.8444616627212477`*^9, 
   3.8444617077996845`*^9}, {3.844461750131506*^9, 3.844461922366767*^9}, 
   3.844461992692705*^9, {3.844512017440218*^9, 3.8445120256983542`*^9}, {
   3.8445122065868797`*^9, 3.8445122095714564`*^9}, {3.844513491064845*^9, 
   3.844513494072491*^9}, {3.8445142258228316`*^9, 3.844514312429041*^9}, {
   3.844514415782257*^9, 3.844514441020333*^9}, 3.8445145878545675`*^9, {
   3.844516209750566*^9, 3.8445162128424377`*^9}, {3.844516353977727*^9, 
   3.8445164220099287`*^9}, {3.8445200934575386`*^9, 
   3.8445200959212675`*^9}, {3.844955341554967*^9, 3.8449553524295*^9}, {
   3.8450304282022247`*^9, 3.8450304305575495`*^9}, 3.845037288844064*^9, {
   3.845037352023071*^9, 3.8450373985419507`*^9}, {3.8450374655873547`*^9, 
   3.8450374689407897`*^9}, {3.845037715084822*^9, 3.845037758048954*^9}, {
   3.8450448673646674`*^9, 3.845044868815566*^9}, {3.845046972287678*^9, 
   3.845046973292132*^9}, {3.8459181523994007`*^9, 3.845918212292648*^9}, {
   3.8459184851144123`*^9, 3.845918488148816*^9}, {3.845918637593907*^9, 
   3.845918651943948*^9}, 3.8459188651809173`*^9, {3.8460197890200834`*^9, 
   3.8460198128202815`*^9}, {3.8460198949855614`*^9, 3.8460199127711*^9}, {
   3.846020910983465*^9, 3.846020914248888*^9}, {3.846020948908036*^9, 
   3.8460209591148877`*^9}, {3.846021089282728*^9, 3.846021127719087*^9}, {
   3.8460851128439245`*^9, 3.8460851170900936`*^9}, {3.8460856051591797`*^9, 
   3.846085605331028*^9}, {3.846095612450843*^9, 3.8460956798514886`*^9}, 
   3.8460957584121923`*^9, 3.846095806312417*^9, {3.8460959465482035`*^9, 
   3.84609598682932*^9}, {3.848500539732272*^9, 3.8485005439937525`*^9}, 
   3.848500601273676*^9, 3.8490333981906986`*^9, {3.8490338103468447`*^9, 
   3.8490338106280293`*^9}, 3.85230660551797*^9, {3.8551434446329966`*^9, 
   3.855143505442374*^9}, {3.855143600689752*^9, 3.8551436090310946`*^9}, {
   3.85514364962446*^9, 3.8551437522459106`*^9}, {3.8551437833140087`*^9, 
   3.8551438273049507`*^9}, {3.855143865001834*^9, 3.8551438665448036`*^9}, {
   3.855146203414523*^9, 3.855146261354411*^9}, {3.8551665354856873`*^9, 
   3.8551665500895023`*^9}, {3.855236633498632*^9, 3.855236695755658*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "We", " ", "create", " ", "the", " ", "list", " ", "of", " ", "values", 
     " ", "in", " ", "case", " ", "v"}], "=", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8450447961470428`*^9, 3.84504486192747*^9}, {
   3.8450477213099747`*^9, 3.845047735608878*^9}, {3.845998533077533*^9, 
   3.845998537668522*^9}, 3.846021855425663*^9, 3.8460219091850967`*^9, 
   3.852308794093945*^9},
 CellLabel->
  "In[697]:=",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1701821990156093`", ",", "0.02981780098439071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3403643980312186`", ",", "0.05963560196878142`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5105465970468279`", ",", "0.08945340295317214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6807287960624372`", ",", "0.11927120393756284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8509109950780465`", ",", "0.14908900492195354`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0210931940936558`", ",", "0.17890680590634428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1912753931092652`", ",", "0.20872460689073496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3614575921248744`", ",", "0.23854240787512568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5316397911404838`", ",", "0.2683602088595164`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.701821990156093`", ",", "0.2981780098439071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8720041891717023`", ",", "0.3279958108282978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0421863881873117`", ",", "0.35781361181268856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.212368587202921`", ",", "0.3876314127970792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3825507862185304`", ",", "0.41744921378146993`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5527329852341394`", ",", "0.4472670147658606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7229151842497488`", ",", "0.47708481575025136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.893097383265358`", ",", "0.5069026167346421`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0632795822809675`", ",", "0.5367204177190328`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.233461781296577`", ",", "0.5665382187034235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.403643980312186`", ",", "0.5963560196878142`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5738261793277952`", ",", "0.6261738206722048`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7440083783434046`", ",", "0.6559916216565956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.914190577359014`", ",", "0.6858094226409863`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.084372776374623`", ",", "0.7156272236253771`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.254554975390232`", ",", "0.7454450246097677`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02981780098439071`", ",", "0.1701821990156093`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05963560196878142`", ",", "0.3403643980312186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08945340295317214`", ",", "0.5105465970468279`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11927120393756284`", ",", "0.6807287960624372`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14908900492195354`", ",", "0.8509109950780465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17890680590634428`", ",", "1.0210931940936558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20872460689073496`", ",", "1.1912753931092652`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23854240787512568`", ",", "1.3614575921248744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2683602088595164`", ",", "1.5316397911404838`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2981780098439071`", ",", "1.701821990156093`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3279958108282978`", ",", "1.8720041891717023`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35781361181268856`", ",", "2.0421863881873117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3876314127970792`", ",", "2.212368587202921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41744921378146993`", ",", "2.3825507862185304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4472670147658606`", ",", "2.5527329852341394`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47708481575025136`", ",", "2.7229151842497488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5069026167346421`", ",", "2.893097383265358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5367204177190328`", ",", "3.0632795822809675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5665382187034235`", ",", "3.233461781296577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5963560196878142`", ",", "3.403643980312186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6261738206722048`", ",", "3.5738261793277952`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6559916216565956`", ",", "3.7440083783434046`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6858094226409863`", ",", "3.914190577359014`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7156272236253771`", ",", "4.084372776374623`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7454450246097677`", ",", "4.254554975390232`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4000000000000004`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8000000000000003`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8000000000000003`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6000000000000005`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.800000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.6000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.2000000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.4000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.4000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.8000000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.4000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.8000000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.6000000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.800000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "5.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8557607310513067`*^9, 3.8557608454796777`*^9, 
  3.8557630669587393`*^9, 3.8557631980195084`*^9, 3.8557658357994366`*^9},
 CellLabel->
  "Out[699]=",ExpressionUUID->"0daf70bd-533f-4478-97e9-2db6ff00d676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nV", "=", 
  RowBox[{"newValues", "[", 
   RowBox[{"10", ",", "1", ",", "0.25", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1."}], ",", "\"\<ok\>\"", ",", "1."}], "}"}], ",", 
    "newv0", ",", "\"\<ConstrainedNewMethod\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Total", "/@", "nV"}]}], "Input",
 CellChangeTimes->{{3.8444617140346737`*^9, 3.8444617347846212`*^9}, {
   3.844461808872343*^9, 3.8444618170070076`*^9}, {3.8444619033008537`*^9, 
   3.8444619337709484`*^9}, {3.8445122194771366`*^9, 
   3.8445122413158827`*^9}, {3.844512362020856*^9, 3.844512362180772*^9}, {
   3.8445143201938887`*^9, 3.8445143394214225`*^9}, {3.844514444454789*^9, 
   3.844514453803335*^9}, 3.844516223273226*^9, {3.8450374078987455`*^9, 
   3.845037428030212*^9}, {3.84504487350133*^9, 3.8450448751270533`*^9}, {
   3.845047741752062*^9, 3.8450477436917725`*^9}, {3.8459182397694316`*^9, 
   3.8459182457373877`*^9}, {3.845998523959859*^9, 3.845998524451099*^9}, {
   3.846021755261832*^9, 3.8460217586190915`*^9}, {3.846085848611929*^9, 
   3.8460858946636086`*^9}, {3.8460860381303816`*^9, 
   3.8460860426293545`*^9}, {3.8460865712288933`*^9, 
   3.8460865730409603`*^9}, {3.846095815516721*^9, 3.846095829278038*^9}, {
   3.8460958773960066`*^9, 3.846095881233713*^9}, {3.8460959604244823`*^9, 
   3.8460959614994926`*^9}, {3.852308827707631*^9, 3.85230883938664*^9}, {
   3.8528214016878104`*^9, 3.8528214163500533`*^9}, {3.855146269297724*^9, 
   3.855146286718229*^9}, {3.8552367150751543`*^9, 3.8552367686268826`*^9}},
 CellLabel->
  "In[700]:=",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1143212266431015`"}], ",", 
     RowBox[{"-", "0.8856787733568985`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7976526213699642`"}], ",", 
     RowBox[{"-", "0.20234737863003582`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2623911491497912`"}], ",", 
     RowBox[{"-", "0.7376088508502088`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8165825606584707`"}], ",", 
     RowBox[{"-", "1.1834174393415293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.678207099748418`"}], ",", 
     RowBox[{"-", "1.321792900251582`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4433762645607682`"}], ",", 
     RowBox[{"-", "0.5566237354392318`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4245596262719493`"}], ",", 
     RowBox[{"-", "1.5754403737280507`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9170393743386054`"}], ",", 
     RowBox[{"-", "0.08296062566139462`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9580841038483707`"}], ",", 
     RowBox[{"-", "1.0419158961516293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9932775392311397`"}], ",", 
     RowBox[{"-", "0.006722460768860294`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3643212266431015`"}], ",", 
     RowBox[{"-", "1.1356787733568985`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.047652621369964`"}], ",", 
     RowBox[{"-", "0.4523473786300358`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5123911491497912`"}], ",", 
     RowBox[{"-", "0.9876088508502088`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0665825606584707`"}], ",", 
     RowBox[{"-", "1.4334174393415293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.928207099748418`"}], ",", 
     RowBox[{"-", "1.571792900251582`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6933762645607682`"}], ",", 
     RowBox[{"-", "0.8066237354392318`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6745596262719493`"}], ",", 
     RowBox[{"-", "1.8254403737280507`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.1670393743386054`"}], ",", 
     RowBox[{"-", "0.3329606256613946`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2080841038483707`"}], ",", 
     RowBox[{"-", "1.2919158961516293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2432775392311397`"}], ",", 
     RowBox[{"-", "0.2567224607688603`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8643212266431015`"}], ",", 
     RowBox[{"-", "0.6356787733568985`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5476526213699642`"}], ",", "0.047652621369964177`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0123911491497912`"}], ",", 
     RowBox[{"-", "0.4876088508502088`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5665825606584707`"}], ",", 
     RowBox[{"-", "0.9334174393415293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.428207099748418`"}], ",", 
     RowBox[{"-", "1.071792900251582`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1933762645607682`"}], ",", 
     RowBox[{"-", "0.3066237354392318`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.17455962627194932`"}], ",", 
     RowBox[{"-", "1.3254403737280507`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6670393743386054`"}], ",", "0.16703937433860538`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7080841038483707`"}], ",", 
     RowBox[{"-", "0.7919158961516293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7432775392311397`"}], ",", "0.2432775392311397`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8557607311141405`*^9, 3.855760845529215*^9, 
  3.8557630670137186`*^9, 3.855763198073402*^9, 3.8557658375959697`*^9},
 CellLabel->
  "Out[700]=",ExpressionUUID->"e47f6614-4c3d-4bbd-9053-91403a51fddb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8557607311141405`*^9, 3.855760845529215*^9, 
  3.8557630670137186`*^9, 3.855763198073402*^9, 3.8557658376019516`*^9},
 CellLabel->
  "Out[701]=",ExpressionUUID->"1ead4aa7-3acf-4dfe-9599-b8c9556e2d7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "will", " ", "give", " ", "back", " ", "a", " ", "value", 
     " ", "that", " ", "converged", " ", "or", " ", "is", " ", "on", " ", 
     "\"\<ok\>\"", " ", 
     RowBox[{"status", ".", " ", "If"}], " ", "not"}], ",", " ", 
    RowBox[{"error", " ", "is", " ", "returned", " ", "and", " ", 
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2"}], "}"}], " ", "goes", " ", "back", " ", "to", 
     " ", "0."}]}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pickNewValue", "[", 
    RowBox[{
    "tableNewVals_", ",", "condition_", ",", "\"\<ConstrainedNewMethod\>\""}],
     "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "newValOk", ",", "newValCon", ",", "newValAny", ",", "noFakeConverge"}],
       "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Criterias", " ", "to", " ", "select", " ", "a", " ", "solution"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newValCon", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
              "\"\<converged\>\""}], ")"}], "&&", 
            RowBox[{"condition", "[", "#", "]"}]}], "&"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newValAny", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<ok\>\""}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<oksign\>\""}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<okmag\>\""}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<converged\>\""}]}], ")"}], "&&", 
            RowBox[{"condition", "[", "#", "]"}]}], "&"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newValOk", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<ok\>\""}], "||", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<oksign\>\""}], "||", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<okmag\>\""}]}], ")"}], "&&", " ", 
            RowBox[{"condition", "[", "#", "]"}]}], "&"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"noFakeConverge", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<ok\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<oksign\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<okmag\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<converged\>\""}]}], ")"}], "&"}], ",", "1"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"No", " ", "solution", " ", "meets", " ", "criteria"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"newValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"newValAny", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"newValOk", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"noFakeConverge", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverged\>\"", ",", 
              RowBox[{
               RowBox[{"tableNewVals", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "4"}], "]"}], "]"}], "+", "1"}]}], "}"}], 
            "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", 
              RowBox[{"noFakeConverge", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
              RowBox[{"noFakeConverge", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "solution", " ", "meets", " ", "criteria", " ", "but", " ", "it", 
           " ", "did", " ", "not", " ", "converge"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"newValCon", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "solution", " ", "meets", " ", "criteria", " ", "but", " ", 
             RowBox[{"isn", "'"}], "t", " ", "ok", " ", "or", " ", 
             "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"newValOk", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"newValAny", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"newValOk", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
                "\"\<ok\>\"", ",", 
                RowBox[{"newValOk", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"newValCon", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844462754631737*^9, 3.8444628201358075`*^9}, {
   3.8444628882695293`*^9, 3.8444629100440626`*^9}, 3.844463007546508*^9, {
   3.8444630757865353`*^9, 3.8444631139402637`*^9}, {3.844463401643854*^9, 
   3.8444634786750946`*^9}, {3.844463586249464*^9, 3.8444636494751883`*^9}, {
   3.844463682583321*^9, 3.8444637031772294`*^9}, {3.844463924790797*^9, 
   3.8444639289631586`*^9}, {3.8444639810663843`*^9, 3.8444641244819984`*^9}, 
   3.8444687035611553`*^9, {3.844512874276967*^9, 3.8445129886481595`*^9}, {
   3.8445141007182693`*^9, 3.844514126835699*^9}, {3.844514163494574*^9, 
   3.8445141666815147`*^9}, {3.844514595376998*^9, 3.8445146477215595`*^9}, {
   3.8449553556067853`*^9, 3.8449553559599857`*^9}, 3.8450378756013985`*^9, {
   3.845037940092245*^9, 3.845037999784536*^9}, {3.8450384331500416`*^9, 
   3.845038435309373*^9}, {3.845038775409644*^9, 3.8450388297344503`*^9}, {
   3.8450389859878855`*^9, 3.8450390344000597`*^9}, {3.8456575620143347`*^9, 
   3.8456575685119963`*^9}, {3.845998611362694*^9, 3.845998617607574*^9}, 
   3.8460020989436474`*^9, {3.846018677328916*^9, 3.846018677775216*^9}, 
   3.846018880796386*^9, {3.846019116136244*^9, 3.846019173366503*^9}, {
   3.8460192515065284`*^9, 3.8460192528890114`*^9}, {3.846019610710576*^9, 
   3.846019619271961*^9}, 3.846020801971831*^9, {3.846021529128915*^9, 
   3.846021536340768*^9}, {3.8460852132039795`*^9, 3.8460852169216146`*^9}, {
   3.846085530410911*^9, 3.8460855309110503`*^9}, {3.8460869673692822`*^9, 
   3.846087000251961*^9}, {3.8460871143659906`*^9, 3.8460871172715235`*^9}, {
   3.8460877961782217`*^9, 3.846087844208644*^9}, 3.850837236413035*^9, 
   3.8508372722343097`*^9, {3.852296462099272*^9, 3.852296464911374*^9}, {
   3.8523854352975464`*^9, 3.8523854547360992`*^9}, {3.852385496361577*^9, 
   3.85238562039371*^9}, {3.8527432088486824`*^9, 3.8527432218235254`*^9}, {
   3.8527435019009695`*^9, 3.8527435541477547`*^9}, {3.8527437064598026`*^9, 
   3.8527437211275034`*^9}, {3.8527441958724775`*^9, 
   3.8527442339899826`*^9}, {3.852744271335647*^9, 3.8527442887340937`*^9}, {
   3.8527443426410046`*^9, 3.8527443753010826`*^9}, {3.8527444786250196`*^9, 
   3.8527445026695147`*^9}, {3.852744559128996*^9, 3.852744561137597*^9}, {
   3.852744721260515*^9, 3.852744731960111*^9}, {3.8527449994285345`*^9, 
   3.8527450516374097`*^9}, {3.852749940217804*^9, 3.85274995512965*^9}, {
   3.852750067314996*^9, 3.8527500688591976`*^9}, {3.8527502641293297`*^9, 
   3.852750370426917*^9}, {3.852750421148426*^9, 3.852750595515209*^9}, {
   3.8527515442537084`*^9, 3.8527515928277674`*^9}, {3.85297081698942*^9, 
   3.852970860546382*^9}, {3.8529709291186075`*^9, 3.8529709649686575`*^9}, {
   3.8529711236231775`*^9, 3.8529711263697677`*^9}, {3.8551521455991807`*^9, 
   3.8551521623206778`*^9}, {3.8551522617913895`*^9, 3.855152429126685*^9}, {
   3.8551528484009542`*^9, 3.8551528559939003`*^9}, {3.8551529070755835`*^9, 
   3.8551529134625826`*^9}, {3.8551530963727336`*^9, 3.855153120830872*^9}, {
   3.8551532812074757`*^9, 3.8551532861816883`*^9}, {3.855153387492076*^9, 
   3.85515338809706*^9}, {3.8551534416957507`*^9, 3.8551535203025956`*^9}, {
   3.855153610884737*^9, 3.855153611229391*^9}, 3.8551536487098727`*^9, {
   3.8556559910564337`*^9, 3.8556560093210025`*^9}, {3.855656394588664*^9, 
   3.855656401750655*^9}, {3.8556590431601486`*^9, 3.855659048136428*^9}, {
   3.855660475487583*^9, 3.8556604817032766`*^9}, {3.8557606677063026`*^9, 
   3.8557607197596273`*^9}, {3.8557607945493555`*^9, 
   3.8557608409524345`*^9}, {3.8557630289229317`*^9, 3.855763030902635*^9}, {
   3.855763185096842*^9, 3.8557631950930204`*^9}, {3.8557632889367094`*^9, 
   3.855763294949029*^9}, {3.8557633544692287`*^9, 3.8557633668868732`*^9}, {
   3.855764099897932*^9, 3.855764152546324*^9}, {3.8557642308248053`*^9, 
   3.8557642558182864`*^9}, {3.855764331814102*^9, 3.855764339373496*^9}, {
   3.8557643754814777`*^9, 3.855764380517579*^9}, {3.8557647663608*^9, 
   3.855764767997353*^9}, {3.855764930992894*^9, 3.8557649337759805`*^9}, {
   3.855765228993084*^9, 3.8557652408744197`*^9}, {3.855765275229665*^9, 
   3.8557652886897087`*^9}, {3.8558429360649214`*^9, 3.855842963751007*^9}, {
   3.8558430017861567`*^9, 3.8558430187176776`*^9}, {3.8558430906754856`*^9, 
   3.855843097706618*^9}, {3.8558431318403845`*^9, 
   3.8558431619377146`*^9}},ExpressionUUID->"3b77723e-5b7c-4b87-a566-\
76e628ef95bf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "condition", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"condition", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
      RowBox[{"0", "<", 
       RowBox[{"(*", 
        RowBox[{"Abs", "["}], "*)"}], 
       RowBox[{"Total", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], 
       RowBox[{"(*", "]", "*)"}], "<", "1"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{3.8557652938245554`*^9},
 CellLabel->
  "In[703]:=",ExpressionUUID->"08e05903-787d-43a8-99d8-db087c7053c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"updateValues", "=", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
    "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ", "fed", 
     " ", "to", " ", "the", " ", "function", " ", "to", " ", "try", " ", 
     "all", " ", 
     RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nV", "=", 
    RowBox[{"newValues", "[", 
     RowBox[{"10", ",", "1", ",", "0.02", ",", 
      RowBox[{"updateValues", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tableNV", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tValues", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tValues", "=", 
          RowBox[{"PyrUpgrade1D", "[", 
           RowBox[{"tValues", ",", "p0", ",", "  ", 
            RowBox[{"pyrf12", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"threshold", "*", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", "1", ",", 
            "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"pickNewValue", "[", 
   RowBox[{"tableNV", ",", "condition", ",", "\"\<ConstrainedNewMethod\>\""}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.844512465652463*^9, 3.8445126589651527`*^9}, 
   3.844512696700407*^9, {3.8445127397523556`*^9, 3.8445127770015326`*^9}, 
   3.844512836960084*^9, {3.844514523287268*^9, 3.844514592311226*^9}, 
   3.8445146572758875`*^9, {3.8445157328956614`*^9, 3.8445157967537203`*^9}, {
   3.844515854741083*^9, 3.8445158692234373`*^9}, {3.844515900171852*^9, 
   3.8445159113818007`*^9}, {3.844960825416167*^9, 3.8449608326621675`*^9}, 
   3.8450378099077854`*^9, 3.845038006025897*^9, {3.845039038790265*^9, 
   3.8450390397869205`*^9}, {3.845044890366269*^9, 3.8450448920499763`*^9}, {
   3.845047769282398*^9, 3.845047795159435*^9}, {3.84591828507213*^9, 
   3.8459182912915144`*^9}, 3.846019257618719*^9, {3.8460208160192947`*^9, 
   3.8460208645720215`*^9}, {3.8460209788702793`*^9, 3.8460209926060295`*^9}, 
   3.846021742436345*^9, {3.8460218159794292`*^9, 3.8460218163150682`*^9}, {
   3.8460219593228226`*^9, 3.846022029946898*^9}, {3.8460220758808374`*^9, 
   3.8460220762055054`*^9}, {3.8460230529286184`*^9, 3.8460231106115284`*^9}, 
   3.8460960212472897`*^9, {3.8490342669233866`*^9, 3.8490342670952153`*^9}, {
   3.849034307882209*^9, 3.8490343280495815`*^9}, {3.8523088791885805`*^9, 
   3.852308897030178*^9}, {3.852744926915022*^9, 3.8527449271632814`*^9}, {
   3.855150297949961*^9, 3.8551503005235343`*^9}, {3.85515037942356*^9, 
   3.8551503956349363`*^9}, {3.855765301593768*^9, 3.8557653039136367`*^9}},
 CellLabel->
  "In[741]:=",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9759797253581454`", ",", "0.00931544297071852`", 
   ",", "\<\"converged\"\>", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8557607312507696`*^9, 3.855760846111477*^9, 3.855763067145919*^9, 
   3.855763198249487*^9, 3.8557633706279325`*^9, 3.8557641232588577`*^9, 
   3.855764155721552*^9, 3.8557642594840975`*^9, {3.855764342469016*^9, 
   3.8557643849639645`*^9}, 3.8557647722470074`*^9, 3.855764815732953*^9, 
   3.8557649367040625`*^9, 3.855765245549889*^9, {3.8557653070644207`*^9, 
   3.8557653186320853`*^9}, {3.8557658203882585`*^9, 3.8557658509808655`*^9}},
 CellLabel->
  "Out[748]=",ExpressionUUID->"8ba2a3db-ef0c-4f1a-8d68-a2f43d351b44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8460218930933437`*^9, {3.846023115078058*^9, 3.8460231176116033`*^9}, {
   3.8523089129205112`*^9, 3.8523089196145062`*^9}},
 CellLabel->
  "In[749]:=",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
5canavYkLlc3QZy+3dSjp13N/gcQSMmT
        "]]},
      Annotation[#, "Charting`Private`Tag$53682#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
EP/TylveoPv7fzQTONA=
        "]]},
      Annotation[#, "Charting`Private`Tag$53682#2"]& ]}, {}}, {
    PointBox[{{13, 1.}, {13, 1.}, {13, 1.}}], 
    PointBox[{{12.024020274641854`, 1.}, {13.009315442970719`, 1.}}], 
    LineBox[{{13, 1.}, {13, 1.}}], 
    LineBox[{{12.024020274641854`, 1.}, {13.009315442970719`, 1.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{8., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{8, 18}, {-0.028785786544566577`, 1.028802662743831}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.855760731336356*^9, 3.855760846211975*^9, 3.855763067187561*^9, 
   3.855763198416755*^9, 3.8557633720846834`*^9, 3.8557641245541935`*^9, 
   3.855764157475317*^9, 3.855764260735632*^9, 3.8557643866413*^9, 
   3.855764773915336*^9, 3.855764817405689*^9, 3.8557649381223087`*^9, 
   3.855765247081686*^9, 3.855765320799421*^9, {3.855765821968441*^9, 
   3.855765851854849*^9}},
 CellLabel->
  "Out[749]=",ExpressionUUID->"bf3e9d45-c305-4901-8066-442514272b38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"allowed", " ", "failed", " ", "levels"}], ",", " ", 
      RowBox[{
      "shift", " ", "on", " ", "v", " ", "solution", " ", "through", " ", 
       "levels"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", "n_", ",", "u_", ",", " ", "p0_", ",", "listv0_", ",", 
      "condition_", ",", " ", "pyrfunctions_", ",", "threshold_", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", " ", "updateValues", ",", "nV", ",", "tableNewValues", ",", 
        "tValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
        "Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<=", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", "n", ",", "u", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "listv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
             " ", 
             RowBox[{
             "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ",
             "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", "n", ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", "\"\<ok\>\""}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "We", " ", "only", " ", "update", " ", "updateValues", " ", 
             "with", " ", "the", " ", "tValue", " ", "that", " ", 
             "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"pickNewValue", "[", 
             RowBox[{
             "tableNewValues", ",", "condition", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.843752560973708*^9, 3.8437525791150923`*^9}, 3.843752658661976*^9, {
   3.8437532609577184`*^9, 3.8437532630116253`*^9}, {3.843753321731477*^9, 
   3.8437533404766655`*^9}, 3.8437535235027065`*^9, {3.8437542615756073`*^9, 
   3.8437545058254924`*^9}, {3.843754584362295*^9, 3.843754613448418*^9}, {
   3.843754788152096*^9, 3.8437547901701674`*^9}, {3.84446023967266*^9, 
   3.844460243138896*^9}, {3.8444607278874874`*^9, 3.8444607297363987`*^9}, {
   3.844460774388563*^9, 3.844460843946801*^9}, {3.844462037391844*^9, 
   3.844462105400992*^9}, {3.844462169596165*^9, 3.84446222491173*^9}, {
   3.8444623679769106`*^9, 3.844462391371277*^9}, {3.844462439619422*^9, 
   3.844462440758129*^9}, {3.8444624986906347`*^9, 3.8444625790197444`*^9}, {
   3.844462952206507*^9, 3.8444629975774703`*^9}, {3.8444630353273516`*^9, 
   3.8444630422572412`*^9}, {3.8444630963197064`*^9, 3.844463097574968*^9}, {
   3.8444631367198167`*^9, 3.8444631620261145`*^9}, {3.8444631957424603`*^9, 
   3.844463217092122*^9}, {3.844463279949193*^9, 3.844463282173604*^9}, {
   3.8444635938104506`*^9, 3.844463601998819*^9}, {3.8444638964881496`*^9, 
   3.844463899627947*^9}, 3.844464021984146*^9, {3.844464194811337*^9, 
   3.844464197865275*^9}, {3.8444642413958893`*^9, 3.844464282685113*^9}, {
   3.844464603077302*^9, 3.8444646428051577`*^9}, {3.8444647003023415`*^9, 
   3.8444647101585493`*^9}, {3.8444650402932653`*^9, 3.844465047181552*^9}, 
   3.8444687193751507`*^9, {3.844469164171029*^9, 3.84446916505202*^9}, {
   3.844469262191881*^9, 3.844469273354315*^9}, {3.8445147154312534`*^9, 
   3.844514920195876*^9}, {3.8445150225856075`*^9, 3.8445150482989445`*^9}, {
   3.844515133898366*^9, 3.8445151681683445`*^9}, {3.8445152348500757`*^9, 
   3.844515453692839*^9}, {3.8445154857004576`*^9, 3.8445154866340466`*^9}, {
   3.8445159926576605`*^9, 3.844515993121111*^9}, {3.844516074572565*^9, 
   3.8445160903677597`*^9}, {3.8445161517680817`*^9, 
   3.8445161878225985`*^9}, {3.844516251196046*^9, 3.844516273742357*^9}, {
   3.84451646477081*^9, 3.8445164780299234`*^9}, 3.8445165295396204`*^9, {
   3.8445165629572544`*^9, 3.844516592682452*^9}, {3.8445169157063313`*^9, 
   3.8445169192029696`*^9}, 3.844516963591753*^9, {3.8448672233060846`*^9, 
   3.844867245115175*^9}, {3.844867353997981*^9, 3.844867357674706*^9}, {
   3.8448674432605042`*^9, 3.8448674485507154`*^9}, {3.844869076768549*^9, 
   3.844869085865178*^9}, {3.8448731333838654`*^9, 3.8448731338260813`*^9}, 
   3.8448737701146564`*^9, {3.844955365518254*^9, 3.8449553724457283`*^9}, 
   3.845030439682123*^9, {3.8450375386523123`*^9, 3.845037545723833*^9}, 
   3.8450382282659655`*^9, {3.845038281748803*^9, 3.8450383149303274`*^9}, {
   3.8450384076219177`*^9, 3.8450384106480255`*^9}, {3.8450384691870403`*^9, 
   3.8450384694118032`*^9}, {3.845038525051551*^9, 3.8450385294382544`*^9}, {
   3.8450390760778513`*^9, 3.8450390898653*^9}, {3.8450391231991873`*^9, 
   3.845039124190837*^9}, {3.845044900308997*^9, 3.8450449085151877`*^9}, {
   3.8450478878754888`*^9, 3.8450478911507916`*^9}, {3.845918130250128*^9, 
   3.845918143807156*^9}, {3.8459988288087425`*^9, 3.8459988385172453`*^9}, {
   3.8459988752133303`*^9, 3.8459988833283424`*^9}, {3.84599903561343*^9, 
   3.8459990448355284`*^9}, {3.8459990809048405`*^9, 3.845999094061246*^9}, {
   3.845999185714033*^9, 3.84599920077864*^9}, 3.845999453539628*^9, {
   3.845999812775424*^9, 3.8459998209297647`*^9}, {3.846000004463835*^9, 
   3.846000008580392*^9}, {3.8460009720676517`*^9, 3.8460009811076927`*^9}, {
   3.8460197840505905`*^9, 3.8460197844570885`*^9}, {3.846019863658993*^9, 
   3.846019868489476*^9}, 3.846019942481623*^9, {3.8460210288916287`*^9, 
   3.8460210293879004`*^9}, 3.846085913627901*^9, 3.846085981096647*^9, 
   3.8460880792910357`*^9, 3.8460883386833396`*^9, {3.846092834426603*^9, 
   3.8460928488245487`*^9}, {3.846094490813854*^9, 3.846094491057413*^9}, {
   3.846094812361848*^9, 3.8460948175266514`*^9}, 3.846094876780088*^9, {
   3.846094965181115*^9, 3.8460949743163085`*^9}, {3.846095037921819*^9, 
   3.8460950403162622`*^9}, {3.846095070558279*^9, 3.8460950769618917`*^9}, {
   3.8460951140344286`*^9, 3.8460951234958487`*^9}, {3.8460952865340257`*^9, 
   3.8460952952741537`*^9}, 3.8460954210148797`*^9, {3.8460955191167483`*^9, 
   3.8460955195314646`*^9}, {3.846095621104643*^9, 3.846095627437854*^9}, 
   3.8460957744472537`*^9, 3.8463283255360327`*^9, {3.8463283779065075`*^9, 
   3.84632843784424*^9}, {3.8463284954456854`*^9, 3.8463284974766197`*^9}, {
   3.846328747191173*^9, 3.8463287484723854`*^9}, {3.8463288529685507`*^9, 
   3.8463288665369644`*^9}, {3.846328962699226*^9, 3.846328975097176*^9}, {
   3.846329196527423*^9, 3.846329203266567*^9}, {3.8463292857804523`*^9, 
   3.8463292869853487`*^9}, {3.846329559633199*^9, 3.846329596163855*^9}, {
   3.8463296327608476`*^9, 3.846329639537835*^9}, {3.8463297026085835`*^9, 
   3.8463297028175774`*^9}, {3.8463299835875034`*^9, 3.846329985632037*^9}, {
   3.846330040372553*^9, 3.846330041582344*^9}, {3.848498810425356*^9, 
   3.8484988107865243`*^9}, {3.8485005525416346`*^9, 3.848500552982191*^9}, 
   3.848500606539936*^9, {3.8490331293172626`*^9, 3.8490331374091053`*^9}, {
   3.8490335009474487`*^9, 3.8490335110198793`*^9}, {3.849033862943802*^9, 
   3.8490338691610503`*^9}, {3.84903415954405*^9, 3.849034159824979*^9}, 
   3.85230351622507*^9, 3.8523066366174097`*^9, 3.855146154973547*^9, {
   3.855146302143237*^9, 3.855146318472378*^9}, {3.855146348989067*^9, 
   3.855146356044076*^9}, {3.8551464034754276`*^9, 3.8551464208663516`*^9}, {
   3.8551468742536554`*^9, 3.855146874542386*^9}, {3.855164498762229*^9, 
   3.8551645013324347`*^9}, {3.8551665801616864`*^9, 
   3.8551665830343313`*^9}, {3.8557653330357637`*^9, 3.855765348171381*^9}},
 CellLabel->
  "In[750]:=",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1677df7d-d338-4ae0-86ef-\
227ba8502fad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "condition", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"condition", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"x", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
    RowBox[{"0", "<", 
     RowBox[{"(*", 
      RowBox[{"Abs", "["}], "*)"}], 
     RowBox[{"Total", "[", 
      RowBox[{"x", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], 
     RowBox[{"(*", "]", "*)"}], "<", "1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8557653726933913`*^9, 3.8557653749240737`*^9}},
 CellLabel->
  "In[751]:=",ExpressionUUID->"b3e9302c-f436-4a5a-8d84-0d7bab68e55c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}]], "Input",
 CellChangeTimes->{{3.846328896022578*^9, 3.8463289074786158`*^9}},
 CellLabel->
  "In[672]:=",ExpressionUUID->"b14c0653-3e9f-41bc-ad3b-fb428643f9e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"1", ",", "0.02", ",", "newv0", ",", "condition", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "30"}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"0", ",", "0.02", ",", "newv0", ",", "condition", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.8463289105203114`*^9, 
   3.846328933151903*^9}, {3.846328999885933*^9, 3.8463290037897797`*^9}, {
   3.849033430776492*^9, 3.8490334403055115`*^9}, {3.849034375957921*^9, 
   3.8490343857681007`*^9}, {3.8551467760707083`*^9, 3.855146780342425*^9}, {
   3.855147874949031*^9, 3.855147884864988*^9}, {3.8551479152537065`*^9, 
   3.8551479280205803`*^9}, 3.8551480181420155`*^9, {3.855148168929095*^9, 
   3.8551482071331615`*^9}, {3.8551482494181504`*^9, 3.8551482583580112`*^9}, 
   3.8557649591724815`*^9, {3.8557658707823973`*^9, 3.8557658807619715`*^9}},
 CellLabel->
  "In[758]:=",ExpressionUUID->"a2f96ad6-157a-40a4-b5dc-b0107b8c5ea4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9771516825383908`", ",", "0.01779719326174847`", 
     ",", "\<\"converged\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.09044026213897097`", ",", "0.8681466463100724`", 
     ",", "\<\"converged\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.49997475818471165`", ",", "0.5000043497962607`", 
     ",", "\<\"converged\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.873386738085072`", ",", "0.08203253318385885`", 
     ",", "\<\"converged\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01819783339681063`", ",", "0.9818021666027509`", 
     ",", "\<\"converged\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00035118269893485835`", ",", "0.9872913320658772`", 
     ",", "\<\"converged\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9883372426456777`", ",", "0.011662757354267118`", 
     ",", "\<\"converged\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.015593178587070098`", ",", "0.9724489739200336`", 
     ",", "\<\"converged\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.11677570713082665`", ",", "0.8742904932184382`", 
     ",", "\<\"converged\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4999834024312175`", ",", "0.499995650108939`", 
     ",", "\<\"converged\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8767305607607249`", ",", "0.12326943923371564`", 
     ",", "\<\"converged\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.017352408824777735`", ",", "0.9826475889629965`", 
     ",", "\<\"converged\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.007216308278014987`", ",", "0.9771010778804062`", 
     ",", "\<\"converged\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "30"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8557607318801394`*^9, 3.855760846821321*^9, 3.8557630677597175`*^9, 
   3.8557631989907618`*^9, 3.8557633757065353`*^9, 3.8557641287018003`*^9, 
   3.8557647025734587`*^9, 3.855764778674139*^9, 3.855764831765059*^9, {
   3.855764941441967*^9, 3.8557649600250053`*^9}, 3.855765250921813*^9, 
   3.8557653800075026`*^9, {3.8557658558898687`*^9, 3.8557658817298503`*^9}},
 CellLabel->
  "Out[761]=",ExpressionUUID->"11bea0bd-5dff-4714-9d2c-4c5b53d0ede3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$53844#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$53844#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 6.88214269644119*^-22}, {2., 
        6.88214269644119*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3., 4.235164736271502*^-22}, {3., 
        4.235164736271502*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4., 8.470329472543003*^-22}, {4., 
        8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.3552527156068805`*^-20}, {
        5., -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.421010862427522*^-20}, {
        6., -5.421010862427522*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      GrayLevel[0], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6.017358847810595, -8.131516293641283*^-20}, {
        7.017352871006488, -8.131516293641283*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      GrayLevel[0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.017352871006488, -7.589415207398531*^-19}, {
        8.017352441849319, -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      GrayLevel[0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.01892440313285, 1.734723475976807*^-18}, {
        9.013173396960516, 1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.890759353734955, 0.04969024160430335}, {
        10.868813181823798`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.500025241815289`, 0.5000000000000001}, {
        11.50000434979626, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.126613261914928`, 0.9503097583956966}, {
        12.08203253318386, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      GrayLevel[0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.98180216660319, 1.}, {13.981802166602751`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13.990162919315765`, 1.}, {14.990162919314338`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      GrayLevel[0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15.011662757354323`, 1.}, {16.011662757354266`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.986142494894274`, 1.}, {17.9703269132888, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.883021339224868`, 0.9503097583956969}, {
        18.874180091504535`, 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{18.50001659756878, 0.5000000000000001}, {19.49999565010894, 
        0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{19.123269439239277`, 0.04969024160430336}, {
        20.123269439233717`, 0.04969024160430336}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      GrayLevel[0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{20.982647591175223`, -1.6263032587282567`*^-18}, {
        21.982647588962998`, -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      GrayLevel[0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{21.982647588962998`, 1.3552527156068805`*^-20}, {
        22.98264755815068, 1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      GrayLevel[0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22.98264755815068, -2.0328790734103208`*^-20}, {
        23.98264712899351, -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24., 7.623296525288703*^-21}, {24., 
        7.623296525288703*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{25., -6.352747104407253*^-22}, {
        25., -6.352747104407253*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26., 1.164670302474663*^-21}, {26., 
        1.164670302474663*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27., 3.441071348220595*^-22}, {27., 
        3.441071348220595*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28., 1.9852334701272664`*^-22}, {28., 
        1.9852334701272664`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29., 2.6469779601696886`*^-22}, {29., 
        2.6469779601696886`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8557607318801394`*^9, 3.855760846821321*^9, 3.8557630677597175`*^9, 
   3.8557631989907618`*^9, 3.8557633757065353`*^9, 3.8557641287018003`*^9, 
   3.8557647025734587`*^9, 3.855764778674139*^9, 3.855764831765059*^9, {
   3.855764941441967*^9, 3.8557649600250053`*^9}, 3.855765250921813*^9, 
   3.8557653800075026`*^9, {3.8557658558898687`*^9, 3.8557658822983465`*^9}},
 CellLabel->
  "Out[762]=",ExpressionUUID->"3c1bcbd0-c4ba-45db-913f-97dedabbe034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"4d225df1-a7b8-4e3e-b420-\
6ff5f34abf9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"0", ",", "0.1", ",", "newv0", ",", "condition", ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"p", "-", "5"}], ",", 
       RowBox[{"p", "+", "5"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"0", ",", "0.1", ",", "newv0", ",", "condition", ",", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"p", "-", "6"}], ",", 
     RowBox[{"p", "+", "6"}]}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.846328944814293*^9, 
   3.8463289588384256`*^9}, {3.8527448744504375`*^9, 3.852744875646369*^9}, {
   3.8551468977516117`*^9, 3.8551469117386503`*^9}, {3.855765896768709*^9, 
   3.855765947888356*^9}},
 CellLabel->
  "In[803]:=",ExpressionUUID->"9fd57488-dee4-4f36-8bcc-ab84a909ef9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.00810540734520845`", ",", "0.9704262854176811`", 
     ",", "\<\"converged\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10897082980360709`", ",", "0.8702662948096732`", 
     ",", "\<\"converged\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.49988288071300707`", ",", "0.5000022524450712`", 
     ",", "\<\"converged\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8677955999667801`", ",", "0.09534809365578142`", 
     ",", "\<\"converged\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0016122759845486816`", ",", "0.9751419584858836`", 
     ",", "\<\"converged\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0013227014575551243`", ",", "0.9843125478786209`", 
     ",", "\<\"converged\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9843125478693792`", ",", "0.001322701457795341`", 
     ",", "\<\"converged\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9839336969295045`", ",", "0.01486010599211401`", 
     ",", "\<\"converged\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08944186720780019`", ",", "0.8721743259567151`", 
     ",", "\<\"converged\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4998912046879838`", ",", "0.4999935763511391`", 
     ",", "\<\"converged\"\>", ",", "19"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8557607332188*^9, 3.855760848077813*^9, 3.855763069041318*^9, 
   3.8557632002050395`*^9, {3.855765894169043*^9, 3.8557659488550873`*^9}},
 CellLabel->
  "Out[806]=",ExpressionUUID->"500457df-194d-449c-b25d-082aef3f1061"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
IHWyX9V/kGSJXQ==
           "]]}, Annotation[#, "Charting`Private`Tag$54660#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
MSrEW4+/OI4cY1QV1/aJCkNJ5+4dQc4yefCw5DPavy3esgeR64/emrn4HxXm
qpoHdJC7LK4LWH1D7x8miKshj1r5K+nMUOHrzSU2bTU+7J09eL5T4XAW5fx2
5N1ndn5OXkT7vX/27Q8Uj8beZO4rv9H49a7/mUK2Pi9JtFuhgn9ZVcsHZP9L
3A4KHMrwiTK9pxW5Nqxv5Ok6ZQhy+fPrFnLH9dbl2+uVoeF8qUEE8khUrUQQ
vzLIDWzaewl5OT7f0mCDMswf+qNujayZdaFvQEwZWBUt+lLIhrnu87XiyhCj
dJJDCNkq31o4V0IZbpgNn/6D9vel+3qmHlLKoHRip93wav54ItKxRFIG2w2E
lkRkte7K5xK7lMH3xXjgL5RvUpV3+CioKcOHtTbCY8iLUeXknRrKED9MsG5H
rjIovXlwtzI0WVZKZCCrNxVaBOkrw/QWSXdtZM3H6d8+m6P+Jc05n0X5T+d2
0OZyH2VYWUiffYzyq56bsdP+KmWYc+gL+o7yfah1TrBhjTLs/Y8zsxe5+fBC
9sFaZYha96DpMfJe7YyRIw3K8HejKf0ysu6maXP7VmW4FCtYxoUMz6IMLg0o
w9LvbnsJTjYWVPbB1X9IGV6NyRX+QedLQ8GOsMARZUgN9OcbQ8bihhvDPiqD
9KSochGyjouSVsKkMvzIl+ZWR9be8Eq5eBH1/yYHvx06r/y5pY1LfytDSN+f
Cj3k2qVzJ8tXlEFkLuwmBVlrQqLwKQcNJp5RS2fQeahZfVKmmZcGH00MionI
6k58m9+L0+DTQasNd/6wsB1PDywKadCAq+y/qyx0nkqMpXqyNJElvtu1I3Pw
T050a9MgrZ//dgFyl234mzigQdT+K9I2yCd5nt8XNqBBGK+uw+sldJ6ba9uI
WdDgFY9X60t0XkcERvX+tKTB7vRiwyJkz3tDB95Z0UAvaFk+Eln7j59qqi0N
tuq9nTFCfpf/eIOEKw3673tXvkXnv9ACrWn7RRrcX9hH+o3qgx/br6r/9aFB
dHmVwUfkkf2dpaN+NFjbuLulBfn+7VO3s/1pUPcuuPsWsv7eoguEUBroTnyX
2IVMPfNrak04DUZ2/RWSQhZO2ecwHkGDjUPbbdYhf5yaOHgnigaaEinrhlF9
4p9AUCAl0iDn0tmkcGSnWu/MtUk0WLATtzqHbPgF3/wlmQZjqT1+tsjimrYc
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
fA==
           "]]}, Annotation[#, "Charting`Private`Tag$54660#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      GrayLevel[0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.98343695836344, -7.589415207398531*^-19}, {
        8.983436957419872, -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      GrayLevel[0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.01913230849811, 1.734723475976807*^-18}, {9.0140538686855,
         1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.883681248804354, 0.04969024160430335}, {10.86985259818487,
         0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.500117119286992`, 0.5000000000000001}, {
        11.500002252445071`, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.13220440003322, 0.9503097583956966}, {
        12.095348093655781`, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      GrayLevel[0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.998387724015451`, 1.}, {13.975141958485883`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13.998677298542445`, 1.}, {14.984312547878622`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15.01568745213062, 1.}, {16.001322701457795`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.020939101398646`, 1.}, {17.01841047160441, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.883213376706404`, 0.9503097583956969}, {
        18.869855337694247`, 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{18.500108795312016`, 0.5000000000000001}, {
        19.499993576351137`, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{19.132217748478556`, 0.04969024160430336}, {
        20.095353893287527`, 0.04969024160430336}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {8., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{8, 20}, {-0.0287859446018422, 1.028802544331626}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8557607332188*^9, 3.855760848077813*^9, 3.855763069041318*^9, 
   3.8557632002050395`*^9, {3.855765894169043*^9, 3.8557659494172955`*^9}},
 CellLabel->
  "Out[807]=",ExpressionUUID->"a473a6e1-d79f-4cc0-8252-a9a8a8ec54e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1addfeb2-5c39-4529-bb6d-\
d0c229ca6ab7"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"880a687b-6dd2-4828-9358-\
0c01b407a3f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "3", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"m", "\[Rule]", " ", 
     RowBox[{"max", " ", "lvl"}]}], ",", " ", 
    RowBox[{"n", "\[Rule]", " ", 
     RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
  RowBox[{"PyrFlow1D", "[", 
   RowBox[{"i", ",", "1", ",", "0.02", " ", ",", "p", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
    RowBox[{"0.0001", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437553466508884`*^9, 3.8444611315278234`*^9, {
   3.8444611768614936`*^9, 3.8444611887169385`*^9}, 3.844462125512904*^9, 
   3.844462356446972*^9, {3.8444633170999546`*^9, 3.844463321081232*^9}, 
   3.844463957058437*^9, 3.8444640642630997`*^9, {3.844464176408199*^9, 
   3.8444642066331835`*^9}, {3.844464361712132*^9, 3.8444644432157106`*^9}, {
   3.8445155082491083`*^9, 3.8445155337439795`*^9}, {3.84451594973834*^9, 
   3.8445159707794123`*^9}, {3.8445160028143573`*^9, 3.844516016773574*^9}, {
   3.844867278823122*^9, 3.8448672867837*^9}, {3.8448674780006113`*^9, 
   3.844867482844355*^9}, {3.8448675512620215`*^9, 3.844867552535472*^9}, 
   3.8448690922499695`*^9, {3.8450375572578297`*^9, 3.8450375788333464`*^9}, {
   3.845038492456919*^9, 3.845038495570486*^9}, {3.8450391079598455`*^9, 
   3.845039108408127*^9}, {3.8450401552418346`*^9, 3.845040155409791*^9}, {
   3.8450449183244*^9, 3.8450449251510773`*^9}, {3.845998917876772*^9, 
   3.8459989184715147`*^9}, 3.8459989522552752`*^9, {3.8460211607198453`*^9, 
   3.8460212127086706`*^9}, 3.8460927662680087`*^9, {3.8463293246755347`*^9, 
   3.8463293261140614`*^9}, {3.8463293581547394`*^9, 
   3.8463293659078813`*^9}, {3.8463293973199778`*^9, 
   3.8463293984381676`*^9}, {3.8463294366454444`*^9, 3.846329444948153*^9}, {
   3.846329501624301*^9, 3.8463295154348464`*^9}, {3.846329660714734*^9, 
   3.846329681480458*^9}, {3.8551469174833937`*^9, 3.855146919967126*^9}, {
   3.8551504468889384`*^9, 3.855150494510594*^9}, {3.855765997912092*^9, 
   3.855765999229164*^9}},
 CellLabel->
  "In[808]:=",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"okmag\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.855760734074957*^9, 3.8557608489135647`*^9, 
  3.855763069818798*^9, 3.8557632010677214`*^9, 3.855765999705783*^9},
 CellLabel->
  "Out[813]=",ExpressionUUID->"4b8e3add-dccd-476b-b32a-1e3890ef4c9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "\<\"okmag\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.855760734074957*^9, 3.8557608489135647`*^9, 
  3.855763069818798*^9, 3.8557632010677214`*^9, 3.85576599970887*^9},
 CellLabel->
  "Out[814]=",ExpressionUUID->"9b900423-8c9a-491d-8c74-038185c9227c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9, 3.8445155022047677`*^9, {3.84451610892062*^9, 
   3.84451616442041*^9}},
 CellLabel->
  "In[815]:=",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/Q+tdot+
        "]]},
      Annotation[#, "Charting`Private`Tag$54757#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
3Iz57PyZekrXkQ2P339lSmD+e8gjofbFC9dDpNunToBLfG7M8bzozQaniyvl
eTF/qm34fR982HBnMODoWvSFyJbVV33ZMKt3o1IO2k04ycgikA0Wf9TXX8d8
LCIr5156mg2+UrKO1zGfO65Wv302nQ1d4HNcBOuFZJv0t7W32fD3r3KrHbrh
mCCrP4MNP7yD8m+jV1UMFBr8x4bFW+K7CdYbwY33asZz2VA6dGHQH+tRvpXW
Z6dKNngsaUqeXIT51ktPaXU7G/x1Vl/bJoP5rexdxLMOjLeuP8xMND3Ps3/H
e7we7Df9F70zPene0W42/LovF3B9Ce5f+9ia0i9suHazMvGHLJfsMcrbojfC
BrPI9IgUrMcOcRfLFPhpSGzwN5NVxvq4b+5nVTkaIvO51/1oLtF1PDrFI09D
zlWtWe3oCpuvi9vRt15Te/Q4XFJlVLspZjkNSt6Ri/k0sT9WjsrhKtMwfP+x
wXktLmnqEQgsoWgIiThmmbUK49dWQNxUh4ZXGjprn+riflj6U0prabBd0Fav
oof13bhv4yR6d74NFYkeW/3s6H09GvhvkN1G+tg/SER2ia+jYduK8ztrsB8S
auS/02lEQ+ZJzyNF6zG/bOJf57WNhg3bzRY6G2M+SKzrX7Mdx+fLJIVowc8x
F2bvoEHm+qisgAnmp2DxT5dtaPBNfPIxC11UKB/5xJ4G1wVnjg1gP2eosPaF
lBMNTxsamnZtwXgYP2j7xIuGU8LrxMcssZ/aqMV79iANW7VXTupaYT2/+PuO
jTcNR9veHQpBs1gnJgYP4fp6HPgttBXzs3N0mpQvDf9cXTZLz/Sjr9I/HzhO
A/egl4os9qvjsnvPrgmkQUh9E9sO7eHBXD37BA0vZTRyEtFmc/KiLgfRoHpl
t4QY9ruSayuZT07RMJLQsnkSfet22yGpKBriNkrtL8V+OjWlW/YDeurQd4ch
9OX4vme3TtNg9pWuUMD+OyZkdKnWGXTl7dII9BEHsfotZ2fmEx1jgv261zYp
30XnaDizQfnhUfTezXLyHeigwL0WGWh7HQ2/vedpUFYMS+LF54H1kibLQ+Np
SEq3Ts1F6y6weGFyiYYFg341HehVfDuOiibQYJEXYDgHnyfUf7q8TEmk4U9l
ueV2tOjLk8ceJNEwCie8uGjBmkjl4Ks0/Kjt2yiBzyt85Wdfb0ymgdPn4aWN
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
Aw8hhMo=
        "]]},
      Annotation[#, "Charting`Private`Tag$54757#2"]& ]}, {}}, {
    PointBox[{{15, 1.0021605838390064`}, {15, 0.995923913894118}, {
      15, 1.0083972537838946`}}], 
    PointBox[{{15., 1.0021605838390064`}, {15., 1.0021605838390064`}}], 
    LineBox[{{15, 0.995923913894118}, {15, 1.0083972537838946`}}], 
    LineBox[{{15., 1.0021605838390064`}, {15., 1.0021605838390064`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 20}, {0., 1.0238152143304011`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8557607341573*^9, 3.855760848979218*^9, 
  3.8557630698978653`*^9, 3.8557632012480507`*^9, 3.8557660016323547`*^9},
 CellLabel->
  "Out[815]=",ExpressionUUID->"3bdeaa5a-3bd5-4938-b71d-0e9b86ee5027"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"d69ea01b-c1ef-4113-8cab-\
b11ccf013757"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"c8124fb5-6975-4957-950c-\
1a0ca8f99e5a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"8aa49981-e1b7-40e4-b201-\
cbbe28e3204e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"1", ",", "0.02", ",", "newv0", ",", "condition", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"1", ",", "0.02", ",", "newv0", ",", "condition", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.8551469467352247`*^9, 
   3.855146956689831*^9}, {3.8557662129647484`*^9, 3.8557662327008734`*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.015084088305736596`", ",", "0.9766950785057028`", 
     ",", "\<\"converged\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9758577720680975`", ",", "0.007204428230780271`", 
     ",", "\<\"converged\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.11607023471300155`", ",", "0.8701332881264122`", 
     ",", "\<\"converged\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4999561049605902`", ",", "0.49981408673840766`", 
     ",", "\<\"converged\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9104311950690582`", ",", "0.07572307930031157`", 
     ",", "\<\"converged\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.011917683681758474`", ",", "0.9816610091945521`", 
     ",", "\<\"converged\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0023371385822562735`", ",", "0.9852969995991445`", 
     ",", "\<\"converged\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"ok\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.021398457180679932`", ",", "0.9762274311486758`", 
     ",", "\<\"converged\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001277356026607638`", ",", "0.9660650354214987`", 
     ",", "\<\"converged\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0902066515448301`", ",", "0.8714384396187914`", 
     ",", "\<\"converged\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4999647317244322`", ",", "0.49980589158871447`", 
     ",", "\<\"converged\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8876652567473423`", ",", "0.11233474325169159`", 
     ",", "\<\"converged\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9806192852321608`", ",", "0.01938071472823821`", 
     ",", "\<\"converged\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.002525574675245248`", ",", "0.9737760748657741`", 
     ",", "\<\"converged\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "30"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8557607354609327`*^9, 3.8557608502478175`*^9, 3.855763071344469*^9, 
   3.855763202595628*^9, {3.855766216105136*^9, 3.855766234288953*^9}},
 CellLabel->
  "Out[824]=",ExpressionUUID->"47a41a3a-f6a0-4592-b495-d63447cf637f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$54994#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$54994#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 6.88214269644119*^-22}, {2., 
        6.88214269644119*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3., 4.235164736271502*^-22}, {3., 
        4.235164736271502*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4., 8.470329472543003*^-22}, {4., 
        8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.3552527156068805`*^-20}, {
        5., -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.421010862427522*^-20}, {
        6., -5.421010862427522*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{7., -8.131516293641283*^-20}, {
        7., -8.131516293641283*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      GrayLevel[0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.022268532390905, -7.589415207398531*^-19}, {
        8.010157033141843, -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      GrayLevel[0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.023368177895726, 1.734723475976807*^-18}, {
        9.007492436470836, 1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.882115500199525, 0.04969024160430335}, {
        10.868797459629002`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.50004389503941, 0.5000000000000001}, {
        11.499814086738407`, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.089568804930941`, 0.9503097583956966}, {
        12.075723079300312`, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      GrayLevel[0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.988082316318241`, 1.}, {13.981661009194552`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13.997662861417744`, 1.}, {14.985296999599145`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[0, 1, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15.978705274899111`, 1.}, {16.975394487173023`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.98597705836281, 1.}, {17.973532133947565`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.882899861632627`, 0.9503097583956969}, {
        18.869746155794783`, 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{18.500035268275568`, 0.5000000000000001}, {
        19.499805891588714`, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{19.112334743252656`, 0.04969024160430336}, {
        20.11233474325169, 0.04969024160430336}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      GrayLevel[0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{20.019380714767838`, -1.6263032587282567`*^-18}, {
        21.01938071472824, -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      GrayLevel[0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{21.991292687762886`, 1.3552527156068805`*^-20}, {
        22.974784657740482`, 1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23., -2.0328790734103208`*^-20}, {
        23., -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24., 7.623296525288703*^-21}, {24., 
        7.623296525288703*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{25., -6.352747104407253*^-22}, {
        25., -6.352747104407253*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26., 1.164670302474663*^-21}, {26., 
        1.164670302474663*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27., 3.441071348220595*^-22}, {27., 
        3.441071348220595*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28., 1.9852334701272664`*^-22}, {28., 
        1.9852334701272664`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29., 2.6469779601696886`*^-22}, {29., 
        2.6469779601696886`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8557607354609327`*^9, 3.8557608502478175`*^9, 3.855763071344469*^9, 
   3.855763202595628*^9, {3.855766216105136*^9, 3.8557662354141793`*^9}},
 CellLabel->
  "Out[825]=",ExpressionUUID->"1ae4220e-7bc3-42a9-bace-986ee8f3a4a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"b94d5e78-6273-405e-baaa-\
6e385d5d2376"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pickNewValueIter", "[", 
   RowBox[{"tableIterNewVals_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
  ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newIterValCon", ",", "newIterValAny", ",", "newIterValOk", ",", 
      "noIterFakeConverge"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newIterValCon", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
             "\"\<converged\>\""}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "<", "1"}]}], ")"}], "&"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIterValAny", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<ok\>\""}], " ", "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<oksign\>\""}], "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<okmag\>\""}], "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<converged\>\""}]}], ")"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "<", "1"}]}], ")"}], "&"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIterValOk", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<ok\>\""}], 
              " ", "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<oksign\>\""}], "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<okmag\>\""}]}], ")"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "<", "1"}]}], ")"}], "&"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"noIterFakeConverge", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<ok\>\""}], " ", "||", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<oksign\>\""}], "||", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<okmag\>\""}], "||", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<converged\>\""}]}], ")"}], "&"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"No", " ", "solution", " ", "meets", " ", "criteria"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"newIterValCon", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"newIterValAny", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"newIterValOk", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"noIterFakeConverge", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "If", " ", "any", " ", "kind", " ", "of", " ", "ok", " ", "does", 
             " ", "not", " ", "meet", " ", "the", " ", "criteria"}], ",", " ", 
            RowBox[{
            "there", " ", "is", " ", "no", " ", "solution", " ", "in", " ", 
             "this", " ", "lvl"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"tableIterNewVals", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverge\>\"", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Last", "[", 
                   RowBox[{"tableIterNewVals", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "+", "1"}]}], "}"}], "]"}], 
             "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"noIterFakeConverge", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"noIterFakeConverge", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"noIterFakeConverge", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], "}"}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "solution", " ", "meets", " ", "criteria", " ", "but", " ", "it", 
          " ", "did", " ", "not", " ", "converge"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"newIterValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"solution", " ", "meets", " ", "criteria", " ", "but", " ", 
            RowBox[{"isn", "'"}], "t", " ", "ok", " ", "or", " ", 
            "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"newIterValOk", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"newIterValAny", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"newIterValOk", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Last", "[", 
                    RowBox[{"newIterValOk", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "\"\<ok\>\"",
                   ",", 
                  RowBox[{
                   RowBox[{"Last", "[", 
                    RowBox[{"newIterValOk", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], "}"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"newIterValCon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844466207590722*^9, 3.8444663304974847`*^9}, {
   3.844466467059284*^9, 3.844466482937065*^9}, {3.8444669028168545`*^9, 
   3.8444669220431056`*^9}, {3.8444670322139096`*^9, 
   3.8444670870482016`*^9}, {3.8444671566049376`*^9, 3.844467158920144*^9}, {
   3.844467196948223*^9, 3.8444672718024893`*^9}, {3.844467321158042*^9, 
   3.8444673278403487`*^9}, 3.844468299730402*^9, {3.844468502462919*^9, 
   3.8444685083530297`*^9}, {3.844520161191785*^9, 3.8445202245778556`*^9}, {
   3.844520332705359*^9, 3.844520377455515*^9}, 3.84452048068826*^9, {
   3.8445205845433617`*^9, 3.84452068650521*^9}, {3.8445209863115625`*^9, 
   3.8445209977867584`*^9}, {3.844955378499539*^9, 3.844955378702995*^9}, {
   3.8450399851794863`*^9, 3.8450399905968895`*^9}, {3.8450402066544905`*^9, 
   3.845040239394699*^9}, {3.8450434161210747`*^9, 3.8450434242961826`*^9}, {
   3.845043604555329*^9, 3.8450436349903736`*^9}, {3.8450478558828373`*^9, 
   3.845047867869722*^9}, {3.8456575526918926`*^9, 3.8456575749662375`*^9}, {
   3.846000761958229*^9, 3.84600076666483*^9}, 3.8460020837549314`*^9, {
   3.8460186851196623`*^9, 3.8460186856315947`*^9}, 3.846018886808941*^9, {
   3.8460189616153903`*^9, 3.846019059973849*^9}, {3.846019103568391*^9, 
   3.8460191037534432`*^9}, {3.846019638725012*^9, 3.846019644968521*^9}, {
   3.846086647334755*^9, 3.846086666377084*^9}, {3.846086708054812*^9, 
   3.8460867093045206`*^9}, {3.8460870240121717`*^9, 
   3.8460870976665087`*^9}, {3.8460873018211837`*^9, 
   3.8460873044143124`*^9}, {3.846087339218552*^9, 3.846087399411335*^9}, {
   3.8460874432447863`*^9, 3.846087446900208*^9}, {3.8460876173270864`*^9, 
   3.8460876318802443`*^9}, {3.8460876965682096`*^9, 
   3.8460877516886625`*^9}, {3.8508372581114907`*^9, 3.850837263091693*^9}, {
   3.8522965309940023`*^9, 3.8522965322534323`*^9}, {3.852968052962956*^9, 
   3.852968185273698*^9}, {3.8529682158799944`*^9, 3.85296822633492*^9}, {
   3.85296991268752*^9, 3.852969940706086*^9}, {3.852969995282267*^9, 
   3.8529700071252728`*^9}, {3.852970650559586*^9, 3.8529706778025503`*^9}, {
   3.852971101081891*^9, 3.852971103299384*^9}, {3.8551639164802256`*^9, 
   3.8551639166976075`*^9}, {3.8551641531771183`*^9, 3.855164324709685*^9}, {
   3.855164357277613*^9, 3.8551643695269933`*^9}, {3.855164714969814*^9, 
   3.8551647396075153`*^9}, 3.8551650214032183`*^9, {3.8551650784914217`*^9, 
   3.8551650793452015`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PyrFlow1DIter", "[", 
   RowBox[{"10", ",", "1", ",", "0.02", ",", "p", ",", "newv0", ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
    "noteBookMode"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.8551652279135513`*^9},
 CellLabel->
  "In[410]:=",ExpressionUUID->"6afb2ab1-6406-455a-ab94-2769a5499948"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"ok\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.855760737015905*^9, 3.8557608518073654`*^9, 
  3.85576307303622*^9, 3.8557632041382403`*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"8dd0ef4c-808d-43c2-965f-ab4ea0d7cf2a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updateValues", "=", 
   RowBox[{"{", 
    RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.844519953596135*^9, 3.8445199606029215`*^9}, {
   3.8445200284976707`*^9, 3.844520080540944*^9}, {3.8445201144548054`*^9, 
   3.84452013632008*^9}, {3.8445204044409313`*^9, 3.8445204048126707`*^9}, {
   3.844521111054682*^9, 3.844521111228567*^9}, {3.845038037655663*^9, 
   3.8450380378721824`*^9}, {3.845038171548463*^9, 3.8450381719784317`*^9}, 
   3.8450400525206423`*^9, 3.845040270633919*^9, {3.8450435281953635`*^9, 
   3.8450435292420616`*^9}, {3.8450449581286364`*^9, 
   3.8450449584168606`*^9}, {3.8460012756798897`*^9, 3.846001276159388*^9}, {
   3.846001463969864*^9, 3.8460014671759553`*^9}, 3.8551651986511493`*^9, 
   3.855165296083802*^9},
 CellLabel->
  "In[411]:=",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
    "\[GreaterEqual]", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
      RowBox[{"updateValues", "=", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", 
         RowBox[{"updateValues", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "}"}]}]}], "]"}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
       "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude",
        " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ",
        "v0"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"random", " ", "values", " ", "between", " ", "5", " ", "and"}],
       " ", "-", "5"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nV", "=", 
     RowBox[{"newValues", "[", 
      RowBox[{"10", ",", "1", ",", "0.02", ",", 
       RowBox[{"updateValues", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableNewValues", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "We", " ", "initialize", " ", "whith", " ", "values", " ", 
        "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", " ", 
        "calculated", " ", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tValues", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"updateValues", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iterTable", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tValues", "=", 
            RowBox[{"PyrUpgrade1D", "[", 
             RowBox[{"tValues", ",", "p0", ",", "  ", 
              RowBox[{"pyrf12", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"threshold", "*", 
               RowBox[{"2", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", "1", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"goodValIter", "=", 
    RowBox[{
     RowBox[{"pickNewValueIter", "[", 
      RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Last", "[", "goodValIter", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8445199189976206`*^9, 3.8445199365460973`*^9}, {
   3.844519973444282*^9, 3.8445200208896346`*^9}, {3.8445201321606035`*^9, 
   3.8445201335175266`*^9}, 3.8445204255897226`*^9, {3.8445207635164404`*^9, 
   3.844520772183606*^9}, {3.844521615845844*^9, 3.8445216204018307`*^9}, {
   3.8449608965047283`*^9, 3.8449609389132614`*^9}, {3.845038043311702*^9, 
   3.845038045807271*^9}, {3.845043232309779*^9, 3.8450432374252357`*^9}, {
   3.845043271633041*^9, 3.845043280468442*^9}, {3.845043388631222*^9, 
   3.8450433948913903`*^9}, {3.845043436701793*^9, 3.845043458830859*^9}, {
   3.8450434913708134`*^9, 3.8450435144542074`*^9}, 3.8450435634013424`*^9, {
   3.845043652260578*^9, 3.845043652741896*^9}, 3.845044961232326*^9, 
   3.8450478485078444`*^9, {3.845918357722026*^9, 3.8459183622702703`*^9}, {
   3.8460012212613683`*^9, 3.8460012264810104`*^9}, 3.8460217144186335`*^9, {
   3.8460231595946617`*^9, 3.846023165534622*^9}, {3.846023197994383*^9, 
   3.8460231990390916`*^9}, 3.8460961034288235`*^9, {3.8551505369518566`*^9, 
   3.8551505522269382`*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.3351760887640527`"}], ",", 
     RowBox[{"-", "1.6648239112359475`"}], ",", "\<\"okmag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8557607370891666`*^9, 3.855760851868148*^9, 
  3.8557630730842724`*^9, 3.8557632041986837`*^9},
 CellLabel->
  "Out[419]=",ExpressionUUID->"975f170e-6e6a-48a3-93f0-9fee4aff796e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8557607370891666`*^9, 3.855760851868148*^9, 
  3.8557630730842724`*^9, 3.855763204200679*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"90819adc-2332-4dff-85a2-cdbf71342396"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["goodValIter"], "Input",
 CellChangeTimes->{3.85297061961178*^9},
 CellLabel->
  "In[421]:=",ExpressionUUID->"b5aab08a-f9a0-4958-8e09-335872c0ec55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.3351760887640527`"}], ",", 
     RowBox[{"-", "1.6648239112359475`"}], ",", "\<\"okmag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.855760737151001*^9, 3.8557608519168077`*^9, 
  3.85576307312425*^9, 3.855763204245294*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"e47c4e9c-83af-4a3d-9525-efd558957abf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{
     RowBox[{"Last", "[", "goodValIter", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845040090183707*^9, 3.845040128420087*^9}, {
  3.8460007875636425`*^9, 3.846000801253723*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
+OBf3eiDKaOVf//o6wyBlxoCV778D61MDgg=
        "]]},
      Annotation[#, "Charting`Private`Tag$26639#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$26639#2"]& ]}, {}}, {
    PointBox[{{1, 0.}, {1, 0.}, {1, 0.}}], PointBox[{{1., 0.}, {1., 0.}}], 
    LineBox[{{1, 0.}, {1, 0.}}], LineBox[{{1., 0.}, {1., 0.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 6}, {-0.000765347695487052, 0.0005652956208763081}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.85576073723225*^9, 3.855760851987135*^9, 
  3.8557630731848793`*^9, 3.8557632042941637`*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"7744daed-c345-40dc-9733-34dd5fe849e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"allowed", " ", "failed", " ", "levels"}], ",", " ", 
      RowBox[{
      "shift", " ", "on", " ", "v", " ", "solution", " ", "through", " ", 
       "levels"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", "n_", ",", "u_", ",", " ", "p0_", ",", "newv0_", ",", " ", 
      "pyrfunctions_", ",", "threshold_", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", "updateValues", ",", "newVals", ",", "tableNewValues", ",", 
        "tValues", ",", "iterTable", ",", "goodValIter", ",", "nV"}], "}"}], 
      ",", 
      RowBox[{
      "(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<=", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", "n", ",", "u", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"iterTable", "=", 
                RowBox[{
                "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", "n", ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "=", 
            RowBox[{"pickNewValueIter", "[", 
             RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"Last", "[", "goodValIter", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.844362111190406*^9, 3.844362121675807*^9}, {
   3.844460247556864*^9, 3.8444602629714775`*^9}, 3.844465539884472*^9, {
   3.844465612855119*^9, 3.844465633559856*^9}, {3.8444656735616617`*^9, 
   3.8444657778591137`*^9}, {3.8444658333678555`*^9, 
   3.8444658639118805`*^9}, {3.8444659988895426`*^9, 3.8444660455485296`*^9}, 
   3.844466163146289*^9, {3.8444667480392838`*^9, 3.8444667624380555`*^9}, {
   3.844466856125552*^9, 3.8444668566340017`*^9}, {3.8444673031048746`*^9, 
   3.844467313894212*^9}, {3.8444673578772583`*^9, 3.844467358944499*^9}, {
   3.8444679481500235`*^9, 3.8444679562208757`*^9}, {3.8444680363683558`*^9, 
   3.844468068400166*^9}, {3.84446843803209*^9, 3.844468495636952*^9}, 
   3.844468729720846*^9, {3.8444692499050045`*^9, 3.844469250302681*^9}, {
   3.8445194746865516`*^9, 3.8445194778982077`*^9}, {3.8445196492146997`*^9, 
   3.844519681203652*^9}, {3.844519712403158*^9, 3.8445197430357046`*^9}, 
   3.844519790054809*^9, {3.844520712407405*^9, 3.84452075661621*^9}, {
   3.84452089517029*^9, 3.8445208997409673`*^9}, {3.844521591603115*^9, 
   3.8445215932704096`*^9}, 3.8445216953082337`*^9, 3.844521792030468*^9, {
   3.844523094337858*^9, 3.8445230949554443`*^9}, {3.844524092322474*^9, 
   3.844524096286628*^9}, {3.844528920321431*^9, 3.844528951245701*^9}, {
   3.8448659934702606`*^9, 3.8448659940698223`*^9}, 3.844868957719557*^9, {
   3.844869197092396*^9, 3.8448692031366224`*^9}, {3.8449553839120035`*^9, 
   3.8449553896059885`*^9}, {3.8450381992746*^9, 3.8450382174107485`*^9}, 
   3.8450438414452667`*^9, {3.8450439365198903`*^9, 3.845043941073431*^9}, {
   3.845044970362219*^9, 3.8450449749652495`*^9}, 3.84504790511629*^9, {
   3.845918420937899*^9, 3.845918426274135*^9}, {3.8460015072013903`*^9, 
   3.84600154481453*^9}, {3.8460015963097467`*^9, 3.8460015965694647`*^9}, {
   3.846023301078119*^9, 3.8460233050893593`*^9}, {3.846086750529233*^9, 
   3.846086761370406*^9}, 3.8460880921680574`*^9, 3.8460883495558047`*^9, 
   3.84609607933205*^9, {3.8551469962763605`*^9, 3.855147055060351*^9}, {
   3.855147178347909*^9, 3.8551471825240517`*^9}, {3.855164575841445*^9, 
   3.8551645787363553`*^9}, {3.8551653492241726`*^9, 3.855165368583276*^9}, 
   3.855165933372058*^9, {3.8551664788846865`*^9, 3.855166509561144*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8529680163947754`*^9},
 CellLabel->
  "In[424]:=",ExpressionUUID->"5fe77e72-3787-42b0-922b-c84a01b1a3a6"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-\
481b488627c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PyrFlow1D", "[", 
    RowBox[{"10", ",", "1", ",", "0.04", ",", "p", ",", "newv0", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, 3.8444602703342605`*^9, 
   3.8444657790598745`*^9, 3.8444658517453156`*^9, 3.844467337496135*^9, {
   3.84446810899422*^9, 3.8444681207636952`*^9}, {3.8444690196543484`*^9, 
   3.8444690537755437`*^9}, {3.8444692346263294`*^9, 
   3.8444692429257164`*^9}, {3.8444693087297163`*^9, 
   3.8444693418978047`*^9}, {3.844521729294717*^9, 3.8445217319462013`*^9}, {
   3.8445219790342903`*^9, 3.8445219906796007`*^9}, {3.844869018428*^9, 
   3.844869027052926*^9}, {3.844869216681383*^9, 3.8448692177693863`*^9}, {
   3.8450380595407257`*^9, 3.845038066363885*^9}, 3.8450449792125807`*^9, {
   3.845045066071169*^9, 3.845045066668535*^9}, {3.8450470968326883`*^9, 
   3.8450470996875415`*^9}, {3.845047134527914*^9, 3.8450471376710906`*^9}, {
   3.84504718148096*^9, 3.845047182877651*^9}, {3.845657156700632*^9, 
   3.845657158718465*^9}, {3.846001168170922*^9, 3.8460011691828656`*^9}, 
   3.8460233467870703`*^9, 3.84608841182693*^9, {3.855147076691366*^9, 
   3.855147115404775*^9}, {3.8551657085131006`*^9, 3.855165724973741*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"ok\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"oksign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8557607386203413`*^9, 3.8557608533169074`*^9, 
  3.855763074635513*^9, 3.8557632056372128`*^9},
 CellLabel->
  "Out[425]=",ExpressionUUID->"def2d792-448a-451e-b13c-2bb869469657"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{"10", ",", "1", ",", "0.04", ",", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445219867175174`*^9, 3.8445219991011286`*^9}, {
   3.8448692242987785`*^9, 3.844869225296276*^9}, {3.845038072374775*^9, 
   3.845038075093134*^9}, 3.845044985460975*^9, 3.8450471983336673`*^9, 
   3.8456571610417123`*^9, 3.845657206167536*^9, {3.8460007155152283`*^9, 
   3.8460007186018267`*^9}, 3.846001175303458*^9, {3.8460016281623354`*^9, 
   3.846001630633064*^9}, {3.846001678204561*^9, 3.8460017159634113`*^9}, 
   3.8460233480474925`*^9, 3.846088415138697*^9, {3.8551471267241583`*^9, 
   3.8551471294209414`*^9}, 3.85516573919258*^9},
 CellLabel->
  "In[426]:=",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9891264343704484`", ",", "4.4393963932187415`*^-16", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9955072337417763`", ",", "0.0010162411629538676`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10275204162115877`", ",", "0.8842913935998468`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8766925022241515`", ",", "0.08339380053622826`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.003106370092744119`", ",", "0.9968936299070877`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0017136303660553803`", ",", "0.9982863696335558`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"ok\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.998286369633101`", ",", "0.0017136303664738231`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.017925352085640122`", ",", "0.9749854402367538`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10969373811879858`", ",", "0.8789523919268594`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8826944096994247`", ",", "0.117305590295476`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9749160087243771`", ",", "0.025083991206691292`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6.165827891213309`*^-18", ",", "0.9891263685592485`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8557607407753115`*^9, 3.8557608552674274`*^9, 
  3.8557630766834974`*^9, 3.8557632077380743`*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"436a42a4-f02e-4146-89f3-0d03b95d2fac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "10", ",", "1", ",", "0.02", ",", " ", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "==", 
    RowBox[{
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{"10", ",", "1", ",", "0.02", ",", "p", ",", "newv0", ",", " ", 
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
       "noteBookMode"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445221438362274`*^9, 3.844522149421374*^9}, {
  3.844869258717738*^9, 3.8448692675606394`*^9}, {3.845038079850918*^9, 
  3.8450380918328047`*^9}, {3.845044990996796*^9, 3.845044992268646*^9}, {
  3.845657164114723*^9, 3.845657166006479*^9}, {3.8551506255590167`*^9, 
  3.8551506328501463`*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
   "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.8557607441543083`*^9, 3.855760858453734*^9, 
  3.8557630800579076`*^9, 3.855763211132058*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"4c261972-9ec2-459f-a9dd-ef9a2959cd49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"27418d46-f597-4820-9d54-\
72d01137cc93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "List", " ", "of", " ", "initial", " ", "values", " ", "we", " ", "are", 
    " ", "going", " ", "to", " ", "try"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", "newv0", "]"}]}]], "Input",
 CellChangeTimes->{
  3.8450450496882987`*^9, {3.8450479351213055`*^9, 3.8450479543324203`*^9}, {
   3.8460881550816407`*^9, 3.84608816086804*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJzt0DFLAzEYxvFwtngcHUq5xcGC4Ogi6CgJKi6CQnEQx8LpqIODH0C/gIOj
izha3TomSzcdb9blBgWxFVLrTSr3PAf39itYKOXfNwnJb6F73EkCpdTe7/fv
93Rx/umkF7m5/iBp3+R2dfboIpkJ3dVo2a98f9nx68PawX7dxUvX59u73vYf
c79zF7jLwyju3n7as/vN3kagXHv9fWs0/rDFebktznvDfm+L/RnWD22x/hnz
DPMUnaIHVokP5hpzjf3oVON8jfMx95hnGvfTuB/WK4P7a7zP4H3YXzd4v4aP
gQ/Oiwz8NB3pSke60pGudKQrHelKR7rSka50pGvVMSsd6So9q45p6UhXOtKV
jnSlI13pSFc60pWOdKUjXelIV9zSVW/dEt0U3RAdiq6JVqInwmko+mXKUcy1
2C96IlqZatZEh6IbopuiW6Jj0eX/TuwT/e9a7WnXHwp5Yi0=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.855760744338161*^9, 3.855760858548182*^9, 
  3.8557630801112137`*^9, 3.85576321120626*^9},
 CellLabel->
  "Out[428]=",ExpressionUUID->"798c5e6a-bdb3-46e1-90b3-d95824c1ca21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{"1", ",", "0.04", ",", "newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]], "Input",
 CellChangeTimes->{{3.844460992649581*^9, 3.84446100281861*^9}, {
   3.8444650287524195`*^9, 3.8444650299651155`*^9}, {3.844465076147544*^9, 
   3.84446508980591*^9}, {3.8444651218401146`*^9, 3.844465122987401*^9}, 
   3.8445228563042336`*^9, 3.8448659693383055`*^9, {3.8448692845010266`*^9, 
   3.844869286212863*^9}, 3.8450380999025164`*^9, 3.8450450085264883`*^9, {
   3.8450450881570735`*^9, 3.845045099085638*^9}, 3.8460880491262136`*^9, 
   3.846088254265647*^9, 3.846092237210523*^9, {3.8551660290499353`*^9, 
   3.855166031756174*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
mHiyS1t0SdD0UE1pwHYOPSCZeYVlQIJTa0dzsh3mUJfOqWt1hiRodDez5ToR
76V68Y0KMxJ0df1Bue5zaMTQr5u7LElA2bRL/qIHMY9kmFcXWpMAfd3a1+k5
h+b94qlPtyOBy37dlYEjc2hphf1dQUcS8OuuZVX5zqFVDjVNcU4kOCm7od7B
fw5tEFrfvOxC5I837h4OmENbsENYmDvB34a6L3uPEfNSYHPLDw8SuNowrU8G
zaEvd21+7OtFgt6fz8Pjgol5oN+vbdSHBP8SPBrdj8+howntT1x9SXC9YtZH
9ATxnjF2dL71J0HpT7fpCwT+MxHaZXOMBNW8t0o+EZi3qKe7O5gERYHtn/8Q
WMhcqXdfCAlIA0XC/1+XWBXz8lEYCej9CvEpBN5R+/YV5xQJwlesy1YTWPEw
eaAhkuD/vy1PUCK/1pbzbzWjSDBodtgMiPo4HSPvK2MI/SrUc1YT9eud4n6S
iydBQaHnSmLgHGqmlv25OJEEA20rI88IPuw+zXyRTCaBID519TnBl/sFg9GM
8yT4u0u25BzBp69OybhQGglCz58n8XnPoSHzCxMJF0iwN1uukXqYeP/LLad5
Mkmg+u7tBRlCL9W2ywcDsklgf3Jf9nNnwk/D3599yCWBp41vINlxDk3k2cs2
KSCB36/aTDPCDxSZjMp7RSSI+3Y+VNp6Dv3MHt6qVEKC1rseKcVmc2iqvdbZ
nFIS6E1WGPUYzqHjmX1ex8uJ/ZWqKSjhx6yaXW+GrxP1GBksnWTOoXt7gvQt
qwi/hcYNO5Pn0ML1YvLqd0gwUSY1s1NhDjVUOpRZWEuCVw1WS39liPlEv3b1
+gYSPDrjZh1B9ItFjPXw2D0S8B7E692IeeTfpTLLAw9IsH7dS8uzxLxQ+eBn
SytO7BfVO3Zukrh//1y8dLmVBGF3ZpbpbbPoHYkR4U1PSFDr+x55T9xXzhTK
6dMdJAik2jhWF8yijQH9Bx27ScAGs+fv/GfRwylyXR09JKisTPhP1Za4j24c
ZzNeEn4Ori+4jMyivqPi2zYPkMAh0H3DN8FZVNZp/5vuzyT4bDo3n5c7gz4P
v6rPHSH4+tSbWX1yBg3Pna+/MUrkOxaz2Gs/g/a/zMpMmiTB+5HmB4pbZtAk
o9eWe+dJYKudUvAifhqleis8rP5NggdrP4x/dZ5Gh+NDNHcsksDHr19nhjaN
ch5KbPy7TPRDgEL70y9T6BzdtqueXwveosd+pWpOoUX7y9ly67VAL0WwUn7V
FGoU/LsyY4MWHB3T1G/umUSv3Mo5GyCqBeVSJ5KWfSdRO/kBfSUpLShZK+zl
mz+BPhS1f1iooQXn6jfL5DwfR4U3mVl8JmkBr8muI52Z46jDBp1P8hQtEJqf
bPd2HEd/rFP7d4uhBadi1Zd/j46hcv94mA+1teBdbWPw4O9RNGGsovqrtRac
DNn1L5DvK2rUvHBJPUwLUEmbAtrYEJrdNK0eHK4FSc7yKapXhtDhhuEHdyO0
4PzH4MktbkPoqTtd7yBaCyR3rgpqqf+EVl0r2WKdrAWPMW0L16IP6MYL+9JC
C7VA+kTEHZWQQbT/cO7plhYt+Lw4rnwyuRftGlXaTHtM4Bu5Kkf5e9FWr/s3
brRpgWzi86zkxB60zufjQHanFgj6LyQuib5As/zkyH79WvDk5pPyftYzNHWm
vmP4tRZc8/Z8u2DciSYEGLjaDWqBxKGvNoquHWjIsSMpOh+1oFlw1nFVxhP0
wInqsa3jWlD8Vtp4jUwravZL+3TahBZE6t7YP234GNUPfSm+ZloL1AdmpC6c
fITSTv7SnvuuBYeCVkt5jLSgEpGcwvYlLXhgVjyx99V9VHj5uRZnWQtclOf/
Xva7h64949Jxh4cMlzuOagwKN6G/omJ+Fa4hg8NE/tvfRxvQN3FPLYI3ksG9
uFLcJPUO2rPGYWxchAz0ClejpaPV6NOEyUhncTIc1Gtw7Cm7hTYmCd8w3EqG
e0/dtZV8K9FqgRJtfDsZvK1v8e71rkArkkkDFBkyfGmo9BA4fg3NPW+zRnY3
GXp4Ppq/aSpF0zeMFmTJkyHsS8Wp0J8laFJqqNZ6RTK0q+dt+xlajIal57v8
UiUD6815s5vfc1C7zKGmLhqRb6+/t/+xJNRic5DFXiYZ6naLHXoiHYvuy149
dpdNBvb2Bk7c8imUkasgXgZk0Ax7cbP8pBuqubWxUlKHDAd0rlI5D0VxxXxD
7VQ9MgzJykjxfHTDtxb6+p80IsP29ls7HoucxEWll/lmTcjAs/H+ykfDKFyw
OK3Aw5zIP3U/XvZ9LL54qeapuQ0ZdFxP4KWhyfgPWV2XtgNkkF3zcTwiJgWf
uPxqnmVPhrv/PguMaabjb8sWdik4k8H4X61qXE8GHsSnMXjMleCjvab08vRF
XODw4bQH7mRwU66XUviTiZe0FegJHCaD2VWVTx4/s3CGQt+SjRcZHtUlqN95
n42/SOCvKfEh4vfTzJ3rc3DPMcR76igZXGKq4vHIXHzZ4IQMw58MH1h2Eoq0
PDyr4kZ/bCAZDMIr9SY/5uGqAsPJL4LI0PlAzO5gWD7e6iOpvf0EGXxi+DK6
eQtwx06z356hZDiuO03POl2A/1COv1lzkgxTUUjq6qkCPPnc/UPLp8jwqs57
0Ne4EN859X2r0WkypB587yRXVIg3mij2ZEWRYde8gGvk50Lc4qZzwucYor4l
N7lnkkX4+IYsjlo8GVZP2cy66hThZ/yf/QhLJPTUsV6T4VaES7xYdb31LBmO
nXleeSe4CL+lwXDZdJ4Mk9spcmLhRbheuv/mg6lk+J71u17gRBH+fu7Ks/J0
MpgfSboy7lGEH7d8F/0zgwwdm20pq42K8PU1Igw0iwy0zf3Xq+SK8FLRfTPJ
OWRw+hpgyJgvxFnBp6+8ziPDNG+B7Z/7hXjvyzqHXYVk+DTRJqlzshD3pkxu
8i8mw9etbr3eaoU4T9bOJ00lZLgh9KHtwUABnjNvG7mmjAxcqGRlnSrA2xta
vxWWE3oeXGyQvJ6PO29ZujR+nQynEGeDo5R8fD6UdIBSRYYim1c+KY15uByz
+NGzajLobcRDUqpy8ft5/WFbaslQclN0QkQ6F7daFNQ4VE+GX0HsVbWJOXj0
/dCCxSYi3uFu1VyTbFxS6palfjMZYs9v7Ywpz8KrI0bWZWBEPz5fknrzLxP/
yLU8rvSYOO8Fg3mB4os4p0XZ1K6LDIpthlO19en4S1m31Ve6ifjttMMbJ9Lw
I9E5TbM9ZIjj23QF80jF8/byKSS+IvT0HnfstjiH/2r9sFz/kQy3ZLuqvm2O
x+90pFeLfSf0OxqsmfbsGD6Vhb20/kmGjAkJ6eFxP1zBferXxXkyUJ46ydhb
e+OFiwZc8UUyOJutM3ZecMDftJ9wtflL3DcKW89PnLbARS+WxWYuE/3UzMM/
psTEk1RWOsRXU8D0fm5NUIQR+vi36rTNGgqUm0tZxKUfQJcfO2zKWkcBsVb1
hVc5LmjwwYYDm4UosJg1q3Lawxt1TvH7snkzBfaG/0ix/RmM5tkXrD2whQJO
wY9G/9w9gfbLdyhlb6XAdcE2n6yjoaghJhcoIUOBVaLWNy+WhKNxyVYXD8hS
QJnX1tRjVwSKHYhqyN5FgZrU068FMiNRyuy7vxJ7KHAMz7zzZncUGnBfQNZW
iQJl1aJlwm1RaGUiXSdHhQL3Z/PHi5yj0R2yF89u0aRA++u95uRTMajDVEuV
rRaRH5NxDVyOQTMbZ17kUChwJTjySnB4LCpoaSQhyaSARRu7nOUUh+pJhzHt
2BSIumy7n9oah0Z9u3owl0sBl05/CQ+5ePRe/cszAyiR38XFfTgyHp2PXlUm
uZcCAdHr7jzriUc1zTTa7XQpEGGuF86WTkCPbHP6lqtPgZhvv6imhxLQq6PJ
QoP7KJAVsOgoVZaADtU0amw1psCJVeoere8T0O1nRq3sTSnwBwtod92UiB4w
Fg/JM6fAzydFi0JIInphy968QUsK6HOyw0YOJ6JdXwKat9pQ4Amb3siblIiu
qy76ZH+AAuajzqTYK4no3ohnvPl2FGhwnHSMvp+IRuz7I//WgQKv79+7Lfk8
Eb0rvsdwmxMF0hVuXPEYTER/DNn4OrhQoP5+fk3UUCKqejMmLd+NAooFXpZJ
w4mo18nqmreHKNA0MruQ/SkRLdX7+GqbJwV0GkV2Pn2TiH4QEfrj4E2By9Qb
2vRniajkR6ZUwREK3IjI71tpSkStK73Qd74UYN58YMwl6ksNyXLfHkABpbEf
cuuTE9GOvY/jHY9RwMxI8nXc0USUb+P3ioJgCiT8Wv+mbV8iiryT6Xp3ggIP
1ldd+rYzET1ZbjK7PYzQ8/rr8vW/E9C64HDRg+EUUJ3z8TJ4moDOoBXUwggK
6K7oHGjMSkA9BlZHSEVTQPiX7uVy+QTUSLH7WkosBUqYx8/8G45HSWG5vcvx
hJ8FNLxdC+PR5S1qez4nU2AyjHxvcHU8+tXrt6VVCsGn+k9rWk0c2nX3YcTj
NAoEFirbqxL+ybM90Hc1k4j3bGrtseuxaFS57D+JHAr0lU5/WmMci3r+ntiT
lEeBr05W8S3fYlBKzpnII8UUKKgkZ5N3xKDdrysUNSoocKCvM2TMLwqtUwi2
LqmkwIWfeA3vnzNoQQj3tMhNCmQ0umfWip5BvSX6Xv68QwHe5W/+VzmRKO+B
pdON9ynwYvDb85Cgkyj9lekr7RcUGFhcVcAqO4bKyEvy1PZSIPLnhk8K1wNR
vhPDynL9FOJ9GksZdQlA+8RDo9YOEv3vbpSUHHMU9bUpUXk2TOibLxbz679D
qNWVIwc4X4l+KCn6rCLjjjL/o0TfHKOA2k1OepypK7o2s+N12hQFNm171Vwa
bY+WvPwRbfOLApxqb7fncvvQhN0PqtoWKOD8IU4p9Jk26hec+Ia2RIFeznz2
cQYdZYlJqW3locI8unP3jewP2M5Do7bJvFTwmjyfNhG5B+evrY5Z4qOCMMPO
Mb+chr+y0hv4IECF64ObOt/d0sObSzeuNheiwg77/vbWbCO89MegWoswFRZW
ifULWZrjgRn+saViVLiVorh4docNLtiXo+4lTYXfmf/ON/EfxNNXrTt5awcV
vM+deXC12gmXIIU8nt9JBZtJT9oDfRd8V7qNXZwCFUQEzlNIO9zwCvxx6TNF
KmiEOqlQe9xw9VmtaVEVKtjdZi0+DXPHmWYiMZc1qPAp47v1tjuHcCwyqmuc
RIXvT+8uiGt74Lo3ZyU0KVQo/uh+fWuHB9753tktlEaFv5LffugbHsYthLpv
YAwquD4A9/sPD+Ov2dxfa9hU2CXiGpel5YkfPFoFplwqpNlzR38WeOLencmv
3mlToeuDYNFdOy985s+fHbt1qcC9MrbeocoLP67kc+SIPhXqjzvOLC544Yt2
A3V39lHhTObB3kbEG49KMlhZMKLCj32ftWsivfG1jQ2GYEoFjzefutY0eOPn
x+QzE82psCfebKV3zBsX3ZL1sduSCpk5uz2pYj54jj6fkoQNFb5Z7081Y/jg
UiHBwU4HqJC9MsjHsfXBS68OP7hiR5z/U/kBqUAfXPGVJf+UAxX0WPWbhGN9
8Ft8D63ITlSYtF7ANdJ9cApFsyjchQrKQV7fL+X44PcOXRp76EaFQ28XSJF5
PjhcFNYS8CD47S0VHs3ywdsfRUZYeFLhX5Gj+J/zPrjJj6n2HG8qbIrb2tN/
2gfv23lQ5NMRKnh29HXnHPXB7SyfOSr4UcG+NrLI1doH/xjFuuYXQAVW4qYO
U5oP7lF9fa7uGBUOJkd/jBT3wSc+SbL/BlNhK++TIxtnvPHAjUnxOiFUeEx+
syj72BufR36/SA4jsEfF9t6L3ni4v+e2vnAqOL7VdEBcvXGe4lceWyOp8GTQ
UydR0RsX+lf7pzyaCrfP1Rkq3PTCM1R3687GUqH3aWNUk48XLnkwI5WWQAXN
qzrZpbu8cLn7gbvbkqkwZdGePnfWE6+c+OQnlEL4t7IyLYPhiWtuM2+0TiP8
0DRTwjdyGGefVDMdvkiFQYEA9Zekw7gVfSJkpZDw93pwPVZ1CB/wtH+of4kK
my+JOE3qHsKds5+uT71MhRmR+ZdK79zxI/PXSqSuUSG6svOQ/yp3PLr2UCfz
NhXyOCUhfgxXvMYzQKrmDhWWuyujugNd8JGtp/yV6wj/nHuv+8TPGd8XlSG6
vYkK708cb15xOYgLmz50+PuICjKFZ39sVLfDC0dlJrHXVAg9/izroo853p2n
zKUPUuFUTGneNmtTfMWElnb7HRWsVBa/eoIx7l5rSi4ZokJ785gIpmiAK0VF
nIqeoMIEf3vWuxgEdyAnPf8zRQV5oS5TkzoWfn704o6gWSrcFGqL5P1Nw+dM
bjx2/4/g85NIEPOIBt6w9e163WUq8GhQlBqqV+HjXV+dmnloIJt2bN36pGlk
W9T325TVNHAOV3+4/fJGNHKU30aenwYfLJ2M1Y/uRm/liV8rEqSB8kszmaJP
iuiQiezC5g00GLFeHrywUx3VraUXrhWlgcriGa4NPwUN8dSZOS1Og1LyaqHz
LjS0fKs5/JaggQWWl9BfzEAFozxHxrbTYK9MPf3raw7KIQfRXGVowJQWN7Lp
QVD/0cikAVka9LhKD6XbA9prkqXaIU+DjmsdT0S370V5eS6f1lakwYnb5u7R
k3tRSm1VT5MyDUbrLgrq39FBPT0bd2mp0YCmfT402VcXzd3aerxSgwadHzVc
w6T10M6uF+27tGiwXfLEKWarHrp05p1kAYUG+0Oton676qPOoz+azzFpQOm7
vUsk0gBNz1sW5uPQ4PawlHrLXwP0kYmgWwRCAx6dv8uiwfvQ/1Y21/4HNMiL
1DUhD+1D5Wt3rvHToQEuNdVlpGuIHvBUs/2qRwP+G9/osZcM0aStzOtO+2iw
upasu/aHIXqvS3fplRENVrCWin9sI3TqjIWpmSkNXOwTpS5GGqEPRFfhheY0
sKRf4/OoNUJTr97RnLSkwbm3wvKqw0aoC8O9lGlDA8HmgOMbBI1RzWei4kkH
aNBqE/pNScUYXeX8OP61HQ0apPvDy/SM0b654N9yjjR4lUbZUWhvjJbFyvkE
O9FASs7gOdXLGD0u8ertQxcaJFvfO5Xhb4zqXY832eROA6Eczs7+AGNUgkPD
nD1oUOYVUSd11Bgd6x7VuOlJA11EUTXV1RhtdMu5vORNg6mLM6eNLIzRs/8Z
iBkdpUHm58iyYJYx6pC4EJfrRwP1krh0lR3GqPK2679GA2jQte8OJ3PZCF2q
svemBtFAz6am+MWAEdqFCr6NPU6DS2zazZWbRmhh3z3jvhAaTIdOOuufNkL9
Dh99IHuSBgvRUZVthkYosrBdI+AU4Z++soRLm4zQjee6Sh5E0iDgy+qJ+T5D
dEg6UlQoigYvVM2fTaQbojE6H+cr4mhQbeo2TOcxRK1fp3r9TqCB3Jb4Nf13
9qFyPuig3lnCT/9Mo7Nd9qHtqSXNwyk00Fp91kmi2oCozj1WKocGJaSmskZF
fWL2E5s/kkeDo9u3JyK4Hlq18tizqYDoh29ZYYtWeqiZvLzRgRIasLakuxYG
6aIXAsc2pV+nQdCPGyiavReVXOdbvLqZBsJ8tgpBW7noHsqJpokhGjjsP2Q1
m66IFmpJ56p9oUHt5rMZ1jkK6CZSW0jgVxostkRNmpXJoQtqmym/vtFAnIf3
n2C3LNq5p/7Wqp9EvtRdHlp/RFFEwSlFd54Gj/nUtd79EkZr5db4Jv4m+nkE
rbi1kx8t3LlfacNfGuTGFW97OzKP+G2fL5NcQ4dJc6PLW/MWseGtRTGO6+ig
5n352sgoL35AUs+tWIAOvuoXAnZY8+PI5iwZOWE6DMvW2t+xFMFrxLj/PDfR
4UWM73OkVQzfI/r13XVROjyQVdvTIyuBb9pIzdPYQgeJWMs/m/K24XEbPoQG
baXDDO/fcsN6KfzP+vgD9dvp4EFlX89tlsGH+V+JsWXpkJvBy9+uvxM/sC7y
R+QuOiyZTb56r7IL71wj39siR4fsHYdX86/bjdfynkjVV6KDVpNVrVyJHK64
StrvrAod3n/61uPgLI8XrrQad6nR4ekruzh1MQU87q+4gJUWUe8k3xe62x58
YbF5LJNCh0yfw0o1i3twvz8e7W9odMgIGmFbn1PED/yqi3Vi0yFxKG4pI0MJ
7/zvoHsJlw6Msg6dEAFlHP3Jp/0FpcPRquBUgTBlvO571Q6FvUS+SnGlgI/K
uOKczbK3LlG/CeLWwVHBC2f+vr+hTwexvTFxrIsq+KbpK/dn9hH1MoKGRj6r
4HGTJvkkYzpQhy49mlBUxf98+y/suCkdNowVhvl7q+L+44W2d83psP3vonlG
iSo+PKpLW7Skg3y3cXZYryp+4OuUONeGDlJCO/N0llTxzi+ZP88coMOgh9C1
zTJqODLM6XtkR/CVeElQhKWG1w6NVK9xpMPaXb7iduZquOKn82n7nIj9I6tF
Njir4YUfKP7nXOhgE7FgauWphm96/96k240O8XnvJI281fD4t3EqIh50SJhA
cAkPNXxxQFXQxpMOqjJ1qW/t1XD/N/3j2d50OPClq/+uoRo+/CriyeAROnwY
3/aph6yGH+iXuyblR4esDxpLBpJqeGdfV5xLAB3sAotC0N+qONp7/FDpMTp8
M58vHuxRxV2tmwwljhP8qEXaG11WxaNe/dNIDqHDu4G7nvhRVbzEdq/Echgd
qkUnUzw0VfGWwYS/x07RIT//YPbhWRV8yPHZ8NdIol5NK4OZChWc5+PGDvso
OthningrO6ngMJybpR1Ph4NtfBK+Dcq4q8eHU/WJxLpoK6nDURmPGt3prpRM
hy+qHm+T/irhDycq1UXS6CDc6TT7UVMJ3/uz+clQLh1+lr75edtnD+5+YtUt
mwI61NgjeydnFPCY33qZT4vogHyotR0LVMAfLXW7VpcS/jca/q/nqDyuw/f5
z5kqQs9704/Je3fjupvXqO5oocOjuym7hTSkcY8cQ9GLj+iw6Xpu8LXF7Xjc
1tSFtW0EJp1ksdu24W3SW9pmOugwtPqbZ42dJK6voOSMvaSDeE1b75EYMdyz
wk9X6zUdGq3xAF9zUTxBuUb52gAdUpMnFuRkRPB2dfbvlA90sPVfJ6wVtwE3
oJumO40R/AuttdZ25MO9my6E9H6jQ3huduDb3bx4Evv1Qb0p4v7Ijcuvm1jB
nqIuSmrfCX2tUgOzjv7Gxh+Wbbz8kw6eZYWryCY/MX7d8XnxX3Tgi9L6qZY0
g+3bd+zR30U6dPnsl6r6+wHz7qyvCPxHh4iGhMRmxW4syWQxdWSFDjwkM2b9
51iswyLWsYuPAW33j11z/foWMbLP+q9AmAGSSuNzy1I/EcH7pxe/bmIApcNK
vYmYZjukvHk0xRjAaDZqdzJaQPYNsYRatzBgtcuQRo7kP4R/r5yo8DYGHJuJ
yG49uII8KdsgaSfFANq+vpa1bTyovtfQ7ilZBtR6dSRe6OFF13Z0KNF2M4BP
oWp3a9tqtE25ViNKngF+pi8lpKv5UN2ZeLa4MgPGGqdz3nqsRVdbBGg7qzLg
hK9r4DmNdeijO3YGFeoM2OsjQV2aXYdqn1Cx5pAZUC5jLFltJYDyvBG3T6Ay
oFffMFp7XgBtYSw799CJ8+SePaqcKoieyR/z2MZigE6n8d906fUo8rfniAeH
AaSsF3YFZevRZad7gbcQBojdsbkWICuEPsDLQhaAAXGvtglSMoXQiJ0pEXt1
GJBzz+268IoQyokNiTmvxwBfSZ/r8m4b0L8jLkmvDRiAXwvUuHRvA3pf3zBV
1ogBXtKNrpfXC6PhFVqZR0wYcJxyxt3KRhhlCUrl15kxYKpsjcNApjC6eHRN
ybIFAyp2n/O1fy6MNj2fubrPmgEnj5rjS/+E0TCNgRsZ+wm+yBmhXxU2oowL
D++8t2VABPniPc6+jejCj8q7Cg4MSNmdcXOP+0b0rk3mg8CDDIi+332i6/hG
NKQh8vE9ZwaY1CYxLKM2ojRJrw4+Nwb8fLSy7X3cRvTXSYsXZocYYFgavPdi
zEa0/h3zVe5hBpgJyPUXntyIHufufjfsxYCZ2xbzMkc2opRLQp9VjzBAxIz5
DLXZiP7H82s0xJcB1wqkT8kzNqK17p+mWvwZUGPBVf61eSMa1Pr0h+AxBmyW
H/j3ZloY1VKoWbAJZkBVj9r277gw+j2xYLn4BAMurD9d7nVeGK3+Fsf3LZQB
WSn8T92shdFAY39BcjjBv/CG0jWbhVGNm7abIiMYcF//mcPJ3g3ojLC2xJPT
DOiYjtnyJWkDeitQWUokmgFF94P/ebM3oKqUf3uuxhN831gZdMsQQqeyRtVm
ExmwxN22fSddCL3x+wWZmcyAl699t2W9WY8q3y9Fn6cS511qHCcLrUcnpM7r
bbnAgA0LJN4bJYLo9dMnjN0uMuDu28/+ASRBVHHvPtv5HAZUan19HbZPAFXo
mPaXvkzkMw76r8liHXrhVnBEbhkDhoQay5Jb1qJ/L/45K3aNAZfkvjf5qa1F
XzqvuSpwgwHrWbEGait8aNR/Uu/m6xhwQHmT9OdEXvTtDhOD7qcM2Mev9kj5
ziKit6bPxvAZUY95nEuB6x+kesLWvfU5A55Yflfdu2kBSaw/FHmvjwG8ZrnV
DcfmEYrxqdpr7xlwLnKqfdBgDkkNqdxxZo4BLf9WMWds3yJ/HDXVFn8wYNsj
S6r+4CvEQ7uBdWKeAWG368Kbg3sRttCj/UcXGSAo1x6v/N9D5Np3g0Ojfxlg
BZLvVl2pRUTfPA90WyHiRXg/OPIlFRm/PHjOlo8JAh7jzttU7mHWiS55fWuZ
ULOd8XiS2ophvl+vmQowodINbzgo8QzLon9/qCPMBJ8DohsdN/Rje5/zL2hI
MsHocG8n35VP2M2a1DU3tjHh7LmG4NkdnzHJXHExBWkmRKadMop2GcZm3WXV
pXYxYZPOLZ9DdSOYw75r7Bw5JlATudj2zq9Yu5qqoegeJryXTfy5r28UK1yg
e/CrMiE34rxk371xbN3HB8di1Zkg0u8jnl3wDQt6rHNmWZMJ1yt1BS4FTGAf
KjrOnyQz4W2n2j9Z+iS2L9U8/z8qE3avUH+Z/5jEaoNflQcwmCAo6r/ocnkK
k7F3rJ9gEefvHt0YrzuNze/26hlCmZBy9EPCR68ZjO/EiJHFXiaUi0qf5IzO
YKLtbm24LhP4i33tv9rPYju3fEI1DJjgZ/jOXfDxLKbpffBesSETeBU53jOb
5jCkaZAibMKE5JDrM/rsOcxU0PZ2pBkTdqlz3ctd57CDjv1K0xZMODx12lUx
eg47UmV55aA1E/6Z/UoYLpzDTv7rlunaz4TbP5WDZ2rnsCQzkzy2HbE/7Moj
j/Y5LPtSh9gNByasCp8Qde6fw67O6aducyLqy4lb9fPDHFan3cqf7MKET76L
Kpwvc9ijDO3YP25MYOW91LAamcN6v2D/vD2Y0NWUU2n6eQ4bonDCBjyZgPp2
Mw3ezmEz8U0/DHyYYG62Em77Yg7795rmd/coEy7/u7M+p2UOE1KsG1PwZ8LE
Fv+zMrfmsG0nSe7ZgUwYZd2/sDZ3DlPqvPV+TTATSHw7H3mdnsMY21VtT5xg
QrzInkYHtzlM3/d670goE0p59osswBy2/4GCiU04E7YHaB21k57DPISvtD+O
IPiZT2lXnJ7Fglx2apPPMMEkhqJ+Nm8WS18lRRONY4L6BM3i6dAMVmyVVx2d
wAQK506UQMQMdrNMQuV7EuGv71/FF0RmsE49EdmeFMKvQfdtStWnscHs1Hw0
nQnzdeEhLfVT2PjY+s23M5igv480bsGYwtYkrxVMzWFCltnD8hTNSQy6l34a
Xyb8aLtlw+CPcaz+wOiTJ3VEv1jOSj/79gUr8bofgL9jQuGOD/HBP3sxs9wP
Ams+MkG2Vq95trYH+/t0pcxoiPC3ucFR55luzE5Zd+DVCBOkttQbBAh3Ypum
u2BqmgmBqkMldlUtGCY9+5Y0R6xzl3l5XzdjvmYiJ0J/MGHGdtzDybsRe3p7
/3Xe30zYL25febj0NnYm6KPIVh4WoEe3nuEf0EVUy3iqnHlZ8N+lSJ0lwTTk
7ctd+lf4WODyJlagfqYIoVG9wjUEWNDc9M5rvqYKGTl8VvzEehbQNl/yvFp0
B8nIvnHr3gYWlGgt9ba21SEzv2eH9URZ4KTziZ/x+B5SqCgaeU6cBdUdEbO0
vAfEvELZ0ivBgrtqYe6g3IJcuxdmfHA7C/IP7W2Sxx4hNpP5Xy9Ls0A5/0PN
/f8eI7xSD86M7WDBGZ8/SKlMG+IcuaouSI4FWYefKgmZPkGEbu02a1RgwUfH
tRJfLZ8i9z7qjf9TZMHq029vNxl1IBKQLHVWjQW/BxzWrdr6DGkNrGro1mCB
xbsLVh0zz5Cgy90W4losKCg87slo6kK6ecXiL9FYsGvWanWDajcSQabu+Mpg
wRfDwa3bXncjyh62TcpsFtz8JSvec/wFMpB50jqQy4KdN0MPRvP1IAltBdP1
KAsap+K8/A17EMqvB4lL2iw4MZWfqnu2BxlWGNqprcuCVmcp6tbWHiTdlrc5
QZ8Fa38dxVYt9iDcJLkDXftYEO8xlSKm0otMNOrPiRiz4OFBnnUetr1I7jfv
ZFtTFuy5IJjCf6YX0d92Tq7InAXCdX6xEqW9yH9GN7FhSxb0hJ43LWvpRUpP
vbBTtGHB69QOs9a3vYhF1fcffgcIPm8kTqTO9SLL78VSau1YoBGlFCfJ24dU
baDt+ePAAiNc5EzIxj7EAbF7iDgR69vLEEyyD+EPCHeMc2GBgT4orJHpQxou
Fc53uLFg+odxnuuOPsSjB0vb6MGC8y8Vl75K9SGiqz4r7fck8uUzb1dK9CEt
pNWt+d4sUFkckmwV6kP83eWdh46wYP5KdIHBSi8iddFgQd6PBRzT0/lGM71I
iMHa/MIAFsRNnnzIO9CL9Cy1ssWCCD7XfjDofdCLKFfHfjh7nAVN77uO9V7q
RWI99p7hCWXB5pv+sTKne5H3kqt2hp4k/NQw1vLSrhehPccfTZ9iQQ7NyV9I
k+CXyl37LooFnrl9Sif6exDdiaVyy1gWyP2Wanl3uQcpLr5n+DSeBQJPF15r
+fYglusYKfXJLKCG/FRD514glfd/qaumsGB/fV/6m+AXCF9gfU9pGgv4u5c3
q/zoRhoHtMTTM1lgGONV8eHTc0Q05Xv92hwWZEoy26+bP0d8tattI/NYoHA6
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$26736#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$26736#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 6.88214269644119*^-22}, {2., 
        6.88214269644119*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3., 4.235164736271502*^-22}, {3., 
        4.235164736271502*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4., 8.470329472543003*^-22}, {4., 
        8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.3552527156068805`*^-20}, {
        5., -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.421010862427522*^-20}, {
        6., -5.421010862427522*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{7., -8.131516293641283*^-20}, {
        7., -8.131516293641283*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8., -7.589415207398531*^-19}, {
        8., -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{9., 1.734723475976807*^-18}, {9., 
        1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{10., 0.04969024160430335}, {10., 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      RGBColor[1, 0, 0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{11., 0.5000000000000001}, {11., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{12., 0.9503097583956966}, {12., 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13., 1.}, {13., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14., 1.}, {14., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[0, 1, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16., 1.}, {16., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{17., 1.}, {17., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{18., 0.9503097583956969}, {18., 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{19., 0.5000000000000001}, {19., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      RGBColor[1, 0, 0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{20., 0.04969024160430336}, {20., 0.04969024160430336}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{21., -1.6263032587282567`*^-18}, {
        21., -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22., 1.3552527156068805`*^-20}, {22., 
        1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23., -2.0328790734103208`*^-20}, {
        23., -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24., 7.623296525288703*^-21}, {24., 
        7.623296525288703*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{25., -6.352747104407253*^-22}, {
        25., -6.352747104407253*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26., 1.164670302474663*^-21}, {26., 
        1.164670302474663*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27., 3.441071348220595*^-22}, {27., 
        3.441071348220595*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28., 1.9852334701272664`*^-22}, {28., 
        1.9852334701272664`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29., 2.6469779601696886`*^-22}, {29., 
        2.6469779601696886`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.855760745802919*^9, 3.8557608599501963`*^9, 
  3.855763081582997*^9, 3.8557632126711893`*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"278d9b42-f3ba-42cd-b76c-6b60fdddcd62"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "initial", " ", "Values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.845045263868204*^9, 3.8450452694034853`*^9}, 
   3.8450476199467487`*^9, {3.8450479635610037`*^9, 3.845047975491262*^9}, {
   3.8460006615647287`*^9, 3.8460006668143864`*^9}, 3.8460872315102835`*^9, {
   3.846087771965379*^9, 3.84608777251213*^9}, {3.8460922546844273`*^9, 
   3.8460922579585743`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dis", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pixelInitialValueGraphics", "[", 
  RowBox[{
  "10", ",", "1", ",", "0.04", ",", "p", ",", "listv0", ",", "dis", ",", " ", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.001", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.8444610720575733`*^9}, 3.844465103128627*^9, {
   3.844468954478764*^9, 3.844468955836996*^9}, {3.8445223288621674`*^9, 
   3.844522331588422*^9}, {3.8445224254548025`*^9, 3.844522442397056*^9}, {
   3.844523120633779*^9, 3.8445231264669933`*^9}, {3.844865883020569*^9, 
   3.8448658976377945`*^9}, 3.844865928166531*^9, 3.8448688843438253`*^9, {
   3.845045172614132*^9, 3.8450451828856764`*^9}, 3.8450452794504633`*^9, 
   3.8450455327267056`*^9, {3.845047989488798*^9, 3.8450480081172156`*^9}, 
   3.8460874847973375`*^9, {3.846088028094764*^9, 3.8460880409247837`*^9}, {
   3.8460881130570087`*^9, 3.846088139269883*^9}, 3.8460882479390144`*^9, {
   3.846092261895195*^9, 3.846092278344483*^9}, 3.8460961301642113`*^9, {
   3.8551661464711957`*^9, 3.8551661508206663`*^9}, {3.8551662323122654`*^9, 
   3.85516623279241*^9}, 3.855166423799381*^9, 3.855166459895472*^9},
 CellLabel->
  "In[433]:=",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10395568483073354`, 0.8832598727600193}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.02121108536353864, 0.47878891463646134`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09672169777106474, 0.8896317310354724}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.04242217072707728, 0.9575778292729227}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10393069441699081`, 0.883286848801266}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.06363325609061593, 1.436366743909384}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10000910910312559`, 0.8866845038334458}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.08484434145415456, 1.9151556585458454`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1005423297220876, 0.8862064691368722}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.1060554268176932, 2.393944573182307}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1008703918459777, 0.8859249765456214}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.12726651218123186`, 2.872733487818768}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09684147965502182, 0.8895152516022314}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.1484775975447705, 3.3515224024552293`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10999066148326876`, 0.8784195881019015}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.16968868290830913`, 3.8303113170916907`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10383799737420561`, 0.8833677612790284}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.19089976827184776`, 4.309100231728152}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10512507074944695`, 0.8822811743833443}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.2121108536353864, 4.787889146364614}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10232695744629533`, 0.8846511781563328}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1092473319532774, 0.878980649928181}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.47878891463646134`, 0.02121108536353864}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11225718522412464`, 0.8767742617639506}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.9575778292729227, 0.04242217072707728}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11145883121557708`, 0.8773401058635241}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.436366743909384, 0.06363325609061593}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10990461728988471`, 0.8784866032414933}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.9151556585458454`, 0.08484434145415456}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1101418509368257, 0.8783059856490878}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.393944573182307, 0.1060554268176932}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1159230925536357, 0.8744478607396415}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.872733487818768, 0.12726651218123186`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11670867833387367`, 0.8740231991988247}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.3515224024552293`, 0.1484775975447705}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.0981863170929435, 0.8883050091642662}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.8303113170916907`, 0.16968868290830913`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11051815843305125`, 0.8780220332976475}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{4.309100231728152, 0.19089976827184776`}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{4.787889146364614, 0.2121108536353864}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11276573445297794`, 0.8764235921437296}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.5, 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10079793082747167`, 0.8859796987826386}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10998017040596772`, 0.8784286812435843}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09701582819360827, 0.8893586422575286}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10206032919346032`, 0.8848807707359847}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.5, 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11066890335122634`, 0.8779111672464652}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10250557326613537`, 0.8845008060144358}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.5, 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09924664441630289, 0.8873561542804455}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{4., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10227601442348493`, 0.8846964009310326}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{4.5, 0.}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{5., 0.}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09887086402241736, 0.8876962505538788}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1042124981639355, 0.8830498792813856}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 1.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11535299359870642`, 0.8747728066320271}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 1.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11371673072123853`, 0.875785758512381}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 2.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11345170293451971`, 0.8759655970181047}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 2.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09976035822349713, 0.886896032428116}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 3.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10554821138564523`, 0.8819360172227597}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 3.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1048072532822278, 0.8825490212961533}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 4.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1041274301888461, 0.8831198854982686}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 4.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09888606499937161, 0.8876802876464168}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 5.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11315941408612062`, 0.8761598762053204}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.101323905096697, 0.8855230918696955}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.25, 0.25}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10271090932271237`, 0.8843210003902235}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.5, 0.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11205471108909774`, 0.8769151257893787}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.75, 0.75}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09675630761003172, 0.8895938233224426}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 1.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1151007167338964, 0.8749201589209188}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.25, 1.25}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11043300865702459`, 0.8780885407183834}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 1.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11412765423689988`, 0.875525570860893}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.75, 1.75}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11064407426192595`, 0.8779279715053407}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2., 2.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10187760909156231`, 0.8850399443594195}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.25, 2.25}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11493185887105876`, 0.8750249953203113}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.5, 2.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11535300717079157`, 0.8747722773986052}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11641404301943586`, 0.8741801571859605}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.125, 0.375}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11610875729683005`, 0.8743444065357041}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.25, 0.75}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09947321263060895, 0.887149934241874}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.375, 1.125}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1086260011017223, 0.8794645790636507}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.5, 1.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10773391556258416`, 0.8801643132192626}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.625, 1.875}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1163862621546554, 0.874194706261856}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.75, 2.25}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1072248873527774, 0.8805653423943184}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.875, 2.625}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1056184643916298, 0.8818790016276221}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 3.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10194990225122011`, 0.8849843023531657}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{1.125, 3.375}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.25, 3.75}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10626010485257517`, 0.8813529188897943}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11019692909882417`, 0.878265687327863}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.375, 0.125}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11499386968464749`, 0.874984863660936}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.75, 0.25}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11164564495268935`, 0.8772015304224301}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.125, 0.375}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10101018221708202`, 0.8857997150415354}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 0.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10528732383760213`, 0.8821525517870943}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.875, 0.625}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09993057466005041, 0.8867467040544704}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.25, 0.75}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09752092696572517, 0.8888995487005847}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.625, 0.875}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10227905053423492`, 0.8846927630695393}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3., 1.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10964937865683567`, 0.8786753544630183}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.375, 1.125}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09942997021437405, 0.8871878351540465}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.75, 1.25}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10207209128779235`, 0.8848785563517086}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09662843397992864, 0.8897178956819125}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.2, 0.3}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11018579853303816`, 0.8782713034386643}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.4, 0.6}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10770466453307868`, 0.8801816985702089}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.6000000000000001, 0.8999999999999999}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1154276579266523, 0.8747291993037761}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.8, 1.2}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11482238944076854`, 0.8750940133722743}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 1.5}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10940950003376439`, 0.8788570665531596}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.2000000000000002`, 1.7999999999999998`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11580347494865993`, 0.8745167728426471}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.4000000000000001`, 2.1}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09916193701751878, 0.8874362976255334}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.6, 2.4}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11265423718962607`, 0.8764985125906256}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.8, 2.6999999999999997`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1023854195730357, 0.8846007699801642}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2., 3.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11669354323478623`, 0.8740330723171146}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 0.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11251179615643316`, 0.8765968791266148}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.3, 0.2}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10112842241026988`, 0.8856966042933173}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.6, 0.4}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10276149428831059`, 0.8842840625783145}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.8999999999999999, 0.6000000000000001}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.09839819848186697, 0.8881094663316986}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.2, 0.8}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10519366051538982`, 0.8822272137231281}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 1.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10812909415371738`, 0.8798476465987818}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.7999999999999998`, 1.2000000000000002`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10379676412291203`, 0.8834015715448041}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.1, 1.4000000000000001`}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.11675009310954826`, 0.8740015759212226}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.4, 1.6}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.1173013076536646, 0.8737335794965045}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.6999999999999997`, 1.8}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.116360607593391, 0.874205480220201}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3., 2.}], 
       PointSize[0.03], 
       RGBColor[0, 1, 0], 
       PointBox[{0.10101385944939743`, 0.8857999844376562}]}}, {
      Thickness[Large], 
      GrayLevel[0], 
      LineBox[{{1, 3}, {-1, 5}}]}}, PlotRange -> {{-1, 1}, {-1, 1}}, Axes -> 
    True], "\"ConstrainedNewMethod\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8557607480203004`*^9, 3.855760862152486*^9, 
  3.8557630837181735`*^9, 3.855763214893893*^9},
 CellLabel->
  "Out[438]=",ExpressionUUID->"ae6d648e-3e91-4016-8472-36b212a330da"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"pixelInitialValueGraphics", "[", 
    RowBox[{"10", ",", "1000", ",", "p", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "dis", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
     RowBox[{"0.001", "*", 
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.84446109126562*^9}, 3.844465109413933*^9, 
   3.844522645686282*^9, {3.844523132263279*^9, 3.8445231640872555`*^9}, {
   3.8450306042313957`*^9, 3.8450306073687077`*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1920., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f18ac198-8579-4ade-8334-41343ab1cfed"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 512, 8, 97, "Title",ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-04efcb90444f"],
Cell[CellGroupData[{
Cell[1117, 34, 359, 6, 66, "Section",ExpressionUUID->"564bd16b-5ad2-477e-879c-a49b47193581"],
Cell[1479, 42, 430, 9, 28, "Input",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],
Cell[1912, 53, 594, 17, 47, "Input",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],
Cell[2509, 72, 366, 7, 47, "Input",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],
Cell[2878, 81, 314, 8, 28, "Input",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3229, 94, 337, 5, 66, "Section",ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-e28adb0822c9"],
Cell[3569, 101, 271, 6, 28, "Input",ExpressionUUID->"bcce114e-be95-4be9-af3b-e98691bcc37f"],
Cell[3843, 109, 2545, 60, 85, "Input",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],
Cell[CellGroupData[{
Cell[6413, 173, 2264, 65, 160, "Input",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],
Cell[8680, 240, 84800, 1412, 234, "Output",ExpressionUUID->"080b2475-be31-4ef9-be90-292abdaec90d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93529, 1658, 277, 4, 66, "Section",ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-301a424457b1"],
Cell[CellGroupData[{
Cell[93831, 1666, 162, 3, 55, "Subsection",ExpressionUUID->"86d2106e-d02d-4249-a85a-97f3df8af812"],
Cell[93996, 1671, 18140, 374, 813, "Input",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[112173, 2050, 191, 3, 53, "Subsection",ExpressionUUID->"09c54b45-a793-4cfd-ad20-2e7a5f10a972"],
Cell[112367, 2055, 1404, 29, 85, "Input",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],
Cell[113774, 2086, 428, 9, 47, "Input",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],
Cell[CellGroupData[{
Cell[114227, 2099, 2311, 43, 85, "Input",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],
Cell[116541, 2144, 348, 8, 32, "Output",ExpressionUUID->"f2b5a29d-d3a0-4e65-8dff-7f97369b05ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116926, 2157, 971, 18, 47, "Input",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],
Cell[117900, 2177, 12578, 229, 241, "Output",ExpressionUUID->"8aac183e-9f73-463c-a310-1e3042a4b3fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130527, 2412, 182, 3, 55, "Subsection",ExpressionUUID->"a4c25ec2-f772-4494-87f0-6c86ae6eb27a"],
Cell[130712, 2417, 5529, 111, 457, "Input",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[136266, 2532, 1670, 51, 104, "Input",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],
Cell[137939, 2585, 8745, 214, 145, "Output",ExpressionUUID->"0daf70bd-533f-4478-97e9-2db6ff00d676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146721, 2804, 1677, 29, 47, "Input",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],
Cell[148401, 2835, 4338, 126, 70, "Output",ExpressionUUID->"e47f6614-4c3d-4bbd-9053-91403a51fddb"],
Cell[152742, 2963, 1225, 36, 32, "Output",ExpressionUUID->"1ead4aa7-3acf-4dfe-9599-b8c9556e2d7c"]
}, Open  ]],
Cell[153982, 3002, 12098, 244, 701, "Input",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf",
 InitializationCell->True],
Cell[166083, 3248, 862, 25, 66, "Input",ExpressionUUID->"08e05903-787d-43a8-99d8-db087c7053c6"],
Cell[CellGroupData[{
Cell[166970, 3277, 4596, 100, 479, "Input",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],
Cell[171569, 3379, 705, 13, 32, "Output",ExpressionUUID->"8ba2a3db-ef0c-4f1a-8d68-a2f43d351b44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172311, 3397, 562, 14, 47, "Input",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],
Cell[172876, 3413, 50865, 856, 234, "Output",ExpressionUUID->"bf3e9d45-c305-4901-8066-442514272b38"]
}, Open  ]],
Cell[223756, 4272, 19847, 340, 851, "Input",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[243628, 4616, 182, 3, 45, "Subsubsection",ExpressionUUID->"1677df7d-d338-4ae0-86ef-227ba8502fad"],
Cell[243813, 4621, 802, 23, 47, "Input",ExpressionUUID->"b3e9302c-f436-4a5a-8d84-0d7bab68e55c"],
Cell[244618, 4646, 219, 5, 28, "Input",ExpressionUUID->"b14c0653-3e9f-41bc-ad3b-fb428643f9e5"],
Cell[CellGroupData[{
Cell[244862, 4655, 4417, 96, 179, "Input",ExpressionUUID->"a2f96ad6-157a-40a4-b5dc-b0107b8c5ea4"],
Cell[249282, 4753, 4010, 97, 89, "Output",ExpressionUUID->"11bea0bd-5dff-4714-9d2c-4c5b53d0ede3"],
Cell[253295, 4852, 103870, 1807, 581, "Output",ExpressionUUID->"3c1bcbd0-c4ba-45db-913f-97dedabbe034"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357214, 6665, 182, 3, 45, "Subsubsection",ExpressionUUID->"4d225df1-a7b8-4e3e-b420-6ff5f34abf9d"],
Cell[CellGroupData[{
Cell[357421, 6672, 4165, 96, 179, "Input",ExpressionUUID->"9fd57488-dee4-4f36-8bcc-ab84a909ef9e"],
Cell[361589, 6770, 1837, 49, 51, "Output",ExpressionUUID->"500457df-194d-449c-b25d-082aef3f1061"],
Cell[363429, 6821, 66629, 1171, 581, "Output",ExpressionUUID->"a473a6e1-d79f-4cc0-8252-a9a8a8ec54e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[430107, 7998, 182, 3, 45, "Subsubsection",ExpressionUUID->"1addfeb2-5c39-4529-bb6d-d0c229ca6ab7"],
Cell[430292, 8003, 240, 6, 34, "Text",ExpressionUUID->"880a687b-6dd2-4828-9358-0c01b407a3f7"],
Cell[CellGroupData[{
Cell[430557, 8013, 5461, 104, 235, "Input",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],
Cell[436021, 8119, 319, 6, 32, "Output",ExpressionUUID->"4b8e3add-dccd-476b-b32a-1e3890ef4c9f"],
Cell[436343, 8127, 306, 6, 32, "Output",ExpressionUUID->"9b900423-8c9a-491d-8c74-038185c9227c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436686, 8138, 1602, 27, 47, "Input",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],
Cell[438291, 8167, 25509, 440, 237, "Output",ExpressionUUID->"3bdeaa5a-3bd5-4938-b71d-0e9b86ee5027"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463873, 8615, 275, 4, 66, "Section",ExpressionUUID->"d69ea01b-c1ef-4113-8cab-b11ccf013757"],
Cell[CellGroupData[{
Cell[464173, 8623, 292, 5, 55, "Subsection",ExpressionUUID->"c8124fb5-6975-4957-950c-1a0ca8f99e5a"],
Cell[CellGroupData[{
Cell[464490, 8632, 182, 3, 45, "Subsubsection",ExpressionUUID->"8aa49981-e1b7-40e4-b201-cbbe28e3204e"],
Cell[CellGroupData[{
Cell[464697, 8639, 4000, 91, 179, "Input",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],
Cell[468700, 8732, 3828, 96, 89, "Output",ExpressionUUID->"47a41a3a-f6a0-4592-b495-d63447cf637f"],
Cell[472531, 8830, 103601, 1804, 581, "Output",ExpressionUUID->"1ae4220e-7bc3-42a9-bace-986ee8f3a4a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576205, 10642, 325, 5, 66, "Section",ExpressionUUID->"b94d5e78-6273-405e-baaa-6e385d5d2376"],
Cell[576533, 10649, 13282, 296, 588, "Input",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[589840, 10949, 514, 14, 28, "Input",ExpressionUUID->"6afb2ab1-6406-455a-ab94-2769a5499948"],
Cell[590357, 10965, 293, 6, 32, "Output",ExpressionUUID->"8dd0ef4c-808d-43c2-965f-ab4ea0d7cf2a"]
}, Open  ]],
Cell[590665, 10974, 1212, 25, 104, "Input",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],
Cell[CellGroupData[{
Cell[591902, 11003, 4968, 111, 441, "Input",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],
Cell[596873, 11116, 1242, 30, 32, "Output",ExpressionUUID->"975f170e-6e6a-48a3-93f0-9fee4aff796e"],
Cell[598118, 11148, 295, 6, 32, "Output",ExpressionUUID->"90819adc-2332-4dff-85a2-cdbf71342396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598450, 11159, 161, 3, 28, "Input",ExpressionUUID->"b5aab08a-f9a0-4958-8e09-335872c0ec55"],
Cell[598614, 11164, 1237, 30, 32, "Output",ExpressionUUID->"e47c4e9c-83af-4a3d-9525-efd558957abf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599888, 11199, 572, 14, 47, "Input",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],
Cell[600463, 11215, 32298, 550, 239, "Output",ExpressionUUID->"7744daed-c345-40dc-9733-34dd5fe849e3"]
}, Open  ]],
Cell[632776, 11768, 16112, 286, 832, "Input",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626",
 InitializationCell->True],
Cell[648891, 12056, 153, 3, 28, "Input",ExpressionUUID->"5fe77e72-3787-42b0-922b-c84a01b1a3a6"],
Cell[CellGroupData[{
Cell[649069, 12063, 182, 3, 45, "Subsubsection",ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-481b488627c2"],
Cell[CellGroupData[{
Cell[649276, 12070, 1999, 33, 66, "Input",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],
Cell[651278, 12105, 2768, 67, 51, "Output",ExpressionUUID->"def2d792-448a-451e-b13c-2bb869469657"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654083, 12177, 1221, 25, 66, "Input",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],
Cell[655307, 12204, 3357, 91, 77, "Output",ExpressionUUID->"436a42a4-f02e-4146-89f3-0d03b95d2fac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658701, 12300, 1271, 30, 66, "Input",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"],
Cell[659975, 12332, 677, 12, 32, "Output",ExpressionUUID->"4c261972-9ec2-459f-a9dd-ef9a2959cd49"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[660701, 12350, 182, 3, 45, "Subsubsection",ExpressionUUID->"27418d46-f597-4820-9d54-72d01137cc93"],
Cell[CellGroupData[{
Cell[660908, 12357, 500, 11, 47, "Input",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],
Cell[661411, 12370, 1804, 46, 239, "Output",ExpressionUUID->"798c5e6a-bdb3-46e1-90b3-d95824c1ca21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663252, 12421, 934, 18, 28, "Input",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],
Cell[664189, 12441, 103141, 1797, 583, "Output",ExpressionUUID->"278d9b42-f3ba-42cd-b76c-6b60fdddcd62"]
}, Open  ]],
Cell[767345, 14241, 2585, 81, 85, "Input",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],
Cell[CellGroupData[{
Cell[769955, 14326, 1910, 40, 141, "Input",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],
Cell[771868, 14368, 18369, 505, 392, "Output",ExpressionUUID->"ae6d648e-3e91-4016-8472-36b212a330da"]
}, Open  ]],
Cell[790252, 14876, 1253, 32, 122, "Input",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

