(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    337060,       6472]
NotebookOptionsPosition[    329544,       6340]
NotebookOutlinePosition[    330099,       6360]
CellTagsIndexPosition[    330056,       6357]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Constrained method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, 
   3.843831097875743*^9},ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-\
04efcb90444f"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 3.843153621995445*^9}, {
  3.843752212635614*^9, 
  3.8437522150627623`*^9}},ExpressionUUID->"564bd16b-5ad2-477e-879c-\
a49b47193581"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431523924971895`*^9, 3.84315239273125*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{
  3.843747328636345*^9, {3.8437486091702127`*^9, 3.8437486224305134`*^9}, {
   3.8445130212660832`*^9, 3.844513027637513*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.8444602155397797`*^9, 
   3.844460218580969*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-\
e28adb0822c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "4"}], ",", 
           RowBox[{"30", "-", "4"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9, {
   3.8445119817060966`*^9, 3.844511983305078*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
       ",", 
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}, {3.8445127985159717`*^9, 3.8445128295209723`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
XuVE/Ad94Us3
       "]]},
     Annotation[#, "Charting`Private`Tag$36451#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13lcTG8XAPDRXtq10qZNaJs7ldLynH6opI2UIiS0SYtsRYi0SdoQWkzN
jDZJ2ihuqJSSolWquSNKKkmlTd77/jWf72funXvuec45zzNrvYJ2HeWiUChP
VlAo//+cKh/IolAm0bG/ruFFt+n4Xb3FoUD1SXR94/anu3LpuGW+7MZ+m0lE
T5A4M15Mx5MynCqfJk+iSuNgG0oDHde78ur9CbVfqD7oJO3ubzoe4MSifLWa
QnqSkk9u2eXg30aPezVdn0YXfwZlBM7k4IlH4vM2lU6j6me5s8n/cnDDAdYE
s2sayVsK3M0TzMWj2gfDLyvPINm24puPFHNxtaqdqaaPZ1CKbuROtW25uOdV
w7qHHbNImFV2+E5yLv5J+a9Gypp5dMFK3ei8CgO36CC+im+ZRyUvEroK1zPw
3NgG5g3/eZSkUSzXjDHwgF83NK4/nUfToW+derYy8OVXqhqxexaQErf+Jm1f
Bq7qbaN+IXURGfl9k3xUyMCjV+sMLT1bRF3TrvwfnzDwH60SjHOcRWRnadrz
tZqBl23qUwujLiGvdpGB7mYGbiUYqHby/RJqfU5XGRtl4H5Fqar+K5cRxaqm
8q0GE2/1PMsZwZbRXX5OYZc2E8ek9+f47F1G+h5GlW00Jr4Qoal6NH8ZCYXK
cxItmXiC49O1ntb/ENsqSQ/zYOJuYUHihZYUuMB7dlAwkYnHfzwU7O9CgVvK
lIu/Upl4jc7utvV+FGBnhQQ33GHiaznGSXlJFIiOxGWNmUx81JZLnDVIgZGG
d0om1Uz8vMJNMXrECtjc9mPrgy9MPC+0OEAiaQX03H3YKzrCxDvevmmKzFkB
HTcHwo6OMXGdsIUrXm9WQPha37LBaSY+0HlwTk2CC7DHYvN8vCxcSCfMJU2N
C+qULdu+CrDwTVEppTxGXLC58abXE2EWnoTVB3zdywXBzZeTVkuxcMsbGwgW
gwv8aw7Nyaqy8MBvWyxkK7lAaU3ujWMaLPyu+f57MU1cYPy8OvmhFguf+nHD
xXeCC6DNrnhJl4UzbGaa1htzg5DzkF7DZhbeli267q4tN3BNdPIkmLPwpdl1
UUL7uYHduWsaAQt3Ye61+BHJDctJjQsh21g4H1dtaVEzNxh13Un468DCMfde
McUBbkiY71Og7WThB0umAq5PcoNd6P4zrs4svOqAxrpAaR7oCJzz8t7DwofK
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
8w0=
       "]]},
     Annotation[#, "Charting`Private`Tag$36451#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 30}, {-0.043836299904091436`, 0.6687693491405521}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.849033294717978*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"67607868-6aad-4521-8d44-c4cd6a14c8f6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D (PyrFlow1D)", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.843153511988031*^9, 
  3.843153515512398*^9}},ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-\
301a424457b1"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"86d2106e-d02d-4249-a85a-\
97f3df8af812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "update", " ", "values", " ", "of", " ", "v1", 
    " ", "and", " ", "v2", " ", "with", " ", "Over", " ", "Constrained", " ", 
    "standards"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Any", " ", "value", " ", "that", " ", "does", " ", "not", " ", "meets", 
    " ", "the", " ", "constraints", " ", "becomes", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}], ",", " ", 
        RowBox[{"and", " ", "counter", " ", "e"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status", " ", "and", " ", "e"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", 
         "c", ",", "d1", ",", "d2", ",", "dv1", ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e"}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitud", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e"}], "}"}],
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}],
                "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", 
                "0"}]}], ")"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"e", "<", "2"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                  RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e"}], 
                 "}"}], "]"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"e", "<=", "n"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v1", "+", "dv1"}], ",", 
             RowBox[{"v2", "+", "dv2"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{"{", 
                  RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.01"}], 
               ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", 
             "e"}], "}"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", "status", ",", "e"}], "}"}], 
            "]"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "No", " ", "other", " ", "solution", " ", "will", " ", "be", " ", 
     "calculated", " ", "when", " ", "status", " ", "records", " ", "an", " ",
      "error", " ", "message", " ", "in", " ", "this", " ", "pyramidal", " ", 
     "level"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840549828869686*^9, 
   3.840549841777425*^9}, {3.8405509817557898`*^9, 3.840550982064629*^9}, {
   3.8405510933457384`*^9, 3.8405510984627314`*^9}, {3.8405511395527105`*^9, 
   3.840551141478009*^9}, {3.841319162361234*^9, 3.841319168699852*^9}, {
   3.842638275839821*^9, 3.842638283825076*^9}, 3.843047150844548*^9, {
   3.843047683246418*^9, 3.8430478826039906`*^9}, {3.8430662477842984`*^9, 
   3.84306626706721*^9}, {3.843066357433008*^9, 3.84306638005869*^9}, {
   3.843066471098827*^9, 3.843066471456827*^9}, {3.8430665682341595`*^9, 
   3.8430665823535037`*^9}, {3.843066614023039*^9, 3.8430666158403826`*^9}, {
   3.8430666478257236`*^9, 3.8430666560026145`*^9}, {3.843066691062875*^9, 
   3.843066695028036*^9}, {3.8430670820101533`*^9, 3.8430670822719493`*^9}, {
   3.8431531584724064`*^9, 3.8431532415742707`*^9}, {3.8431541924011116`*^9, 
   3.8431542010920024`*^9}, {3.8431543579685593`*^9, 3.84315458831942*^9}, {
   3.8436736200598516`*^9, 3.843673659839816*^9}, {3.843675802266506*^9, 
   3.84367580324864*^9}, {3.843676094738164*^9, 3.843676095993743*^9}, {
   3.843676148112191*^9, 3.843676217593154*^9}, {3.843747759180975*^9, 
   3.8437478035510416`*^9}, {3.843747837199093*^9, 3.843747911811542*^9}, 
   3.8437479433562737`*^9, {3.843748377618887*^9, 3.843748418267103*^9}, 
   3.8437487463423266`*^9, {3.8437522385411882`*^9, 3.8437522397665625`*^9}, {
   3.843752288076639*^9, 3.843752310561741*^9}, {3.843752372567502*^9, 
   3.8437523938328533`*^9}, {3.8437532528926954`*^9, 3.843753253873748*^9}, {
   3.8437532996776743`*^9, 3.8437533168563538`*^9}, {3.8437535125676455`*^9, 
   3.843753519661378*^9}, 3.8437535832591257`*^9, {3.8437536229410996`*^9, 
   3.8437536714702573`*^9}, {3.843753713138695*^9, 3.843753713497829*^9}, {
   3.8437538032027535`*^9, 3.8437538110533333`*^9}, {3.8437541111506634`*^9, 
   3.843754123500203*^9}, {3.843756514694689*^9, 3.8437565228370256`*^9}, {
   3.844259791226394*^9, 3.844259814136951*^9}, {3.8443564826670113`*^9, 
   3.8443564849271317`*^9}, {3.8443619303990293`*^9, 3.844361934480361*^9}, {
   3.844368304375413*^9, 3.8443683086155677`*^9}, {3.8444602254264507`*^9, 
   3.8444602371283655`*^9}, {3.84451200345923*^9, 3.844512005814104*^9}, {
   3.8445156047558804`*^9, 3.844515606918198*^9}, {3.8445158304009256`*^9, 
   3.8445158324047036`*^9}, {3.84451649753236*^9, 3.8445165016123977`*^9}, {
   3.8447823272091274`*^9, 3.844782349008145*^9}, {3.844782526684991*^9, 
   3.844782536256265*^9}, {3.8447826509613276`*^9, 3.8447826523153005`*^9}, {
   3.8447826850334997`*^9, 3.844782691498364*^9}, {3.845918060041156*^9, 
   3.8459181031181545`*^9}, 3.8459184702466784`*^9, {3.845999275777835*^9, 
   3.845999282502781*^9}, {3.8459997280634265`*^9, 3.84599975722418*^9}, {
   3.8459997899691124`*^9, 3.845999798075818*^9}, {3.8460001536819735`*^9, 
   3.8460001549021235`*^9}, 3.8460207290920916`*^9, {3.846086347396666*^9, 
   3.8460863496307783`*^9}, {3.8460864047584777`*^9, 
   3.8460864419004726`*^9}, {3.846086481744698*^9, 3.8460864838225775`*^9}, {
   3.8460865281713114`*^9, 3.8460865302178683`*^9}, 3.8460880621541615`*^9, 
   3.846088327560858*^9, {3.8460946963941307`*^9, 3.8460946974679675`*^9}, {
   3.8460947275175343`*^9, 3.8460947691694527`*^9}, {3.8460950090659475`*^9, 
   3.846095010209775*^9}, {3.846095545515373*^9, 3.8460955733652983`*^9}, {
   3.8460956070630035`*^9, 3.846095607370658*^9}, {3.8485005221415615`*^9, 
   3.8485005351640396`*^9}, 3.848500596684627*^9, 3.849033011396132*^9, {
   3.8490330991837425`*^9, 3.8490331139771614`*^9}, {3.849034018861663*^9, 
   3.849034024719659*^9}, 3.849034099764724*^9},
 CellLabel->
  "In[132]:=",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"09c54b45-a793-4cfd-ad20-\
2e7a5f10a972"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "3", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "11"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.844782546275529*^9, 3.8447825467162204`*^9}, 
   3.844782672224075*^9, {3.846084808331871*^9, 3.846084901361394*^9}, {
   3.84632906290853*^9, 3.8463290682357426`*^9}, {3.846329127978734*^9, 
   3.8463291611583424`*^9}, {3.84632922227293*^9, 3.846329239028186*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}, {
  3.844515659297496*^9, 3.844515674142517*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", "p", 
     ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "noteBookMode"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9, {3.849033302647654*^9, 3.849033303632023*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4956799543594554`", ",", "2.50443537656429`", ",", "\<\"converged\"\>", 
   ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8490333042097936`*^9, 3.8490340454960403`*^9, {3.8490341077505093`*^9, 
   3.849034115201872*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"383aa955-eba6-467f-b657-10902228d591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9, 3.8445156454523244`*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$37788#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
YaUaOY3qF2SX1teZwPb46f+iYqfR/wGknV2w
        "]]},
      Annotation[#, "Charting`Private`Tag$37788#2"]& ]}, {}}, {
    PointBox[{{11, 0.3154091756204565}, {11, 0.5937268973116056}, {
      11, 0.03709145392930742}}], 
    PointBox[{{9.504320045640544, 0.3154091756204565}, {13.50443537656429, 
     0.3154091756204565}}], 
    LineBox[{{11, 0.5937268973116056}, {11, 0.03709145392930742}}], 
    LineBox[{{9.504320045640544, 0.3154091756204565}, {13.50443537656429, 
     0.3154091756204565}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{6., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{6, 16}, {-0.0003035954756135269, 0.9644489098391839}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.849033305678187*^9, 3.849034047354948*^9, {3.849034109609411*^9, 
   3.849034116998294*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"29162b78-cb54-4ec0-901a-0d60c0c903f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"a4c25ec2-f772-4494-87f0-\
6c86ae6eb27a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"random", " ", "values", " ", "between", " ", "10", " ", "and"}],
      " ", "-", "10"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"newValues", "[", 
    RowBox[{"i_", ",", 
     RowBox[{"{", 
      RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
     "newv0_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "v", ",", "r", ",", "rs"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"v1", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"e", ">", "n"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0."}], "}"}], "}"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "\[NotEqual]", "0."}], " ", "&&", " ", 
          RowBox[{"status", "\[Equal]", "\"\<ok\>\""}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "=", 
             RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"1", "-", "r"}]}], "}"}], "*", "v"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "i"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", "newv0"}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8444612782790546`*^9, 3.844461325604576*^9}, {
   3.8444614444947405`*^9, 3.844461444680009*^9}, {3.8444616627212477`*^9, 
   3.8444617077996845`*^9}, {3.844461750131506*^9, 3.844461922366767*^9}, 
   3.844461992692705*^9, {3.844512017440218*^9, 3.8445120256983542`*^9}, {
   3.8445122065868797`*^9, 3.8445122095714564`*^9}, {3.844513491064845*^9, 
   3.844513494072491*^9}, {3.8445142258228316`*^9, 3.844514312429041*^9}, {
   3.844514415782257*^9, 3.844514441020333*^9}, 3.8445145878545675`*^9, {
   3.844516209750566*^9, 3.8445162128424377`*^9}, {3.844516353977727*^9, 
   3.8445164220099287`*^9}, {3.8445200934575386`*^9, 
   3.8445200959212675`*^9}, {3.844955341554967*^9, 3.8449553524295*^9}, {
   3.8450304282022247`*^9, 3.8450304305575495`*^9}, 3.845037288844064*^9, {
   3.845037352023071*^9, 3.8450373985419507`*^9}, {3.8450374655873547`*^9, 
   3.8450374689407897`*^9}, {3.845037715084822*^9, 3.845037758048954*^9}, {
   3.8450448673646674`*^9, 3.845044868815566*^9}, {3.845046972287678*^9, 
   3.845046973292132*^9}, {3.8459181523994007`*^9, 3.845918212292648*^9}, {
   3.8459184851144123`*^9, 3.845918488148816*^9}, {3.845918637593907*^9, 
   3.845918651943948*^9}, 3.8459188651809173`*^9, {3.8460197890200834`*^9, 
   3.8460198128202815`*^9}, {3.8460198949855614`*^9, 3.8460199127711*^9}, {
   3.846020910983465*^9, 3.846020914248888*^9}, {3.846020948908036*^9, 
   3.8460209591148877`*^9}, {3.846021089282728*^9, 3.846021127719087*^9}, {
   3.8460851128439245`*^9, 3.8460851170900936`*^9}, {3.8460856051591797`*^9, 
   3.846085605331028*^9}, {3.846095612450843*^9, 3.8460956798514886`*^9}, 
   3.8460957584121923`*^9, 3.846095806312417*^9, {3.8460959465482035`*^9, 
   3.84609598682932*^9}, {3.848500539732272*^9, 3.8485005439937525`*^9}, 
   3.848500601273676*^9, 3.8490333981906986`*^9, {3.8490338103468447`*^9, 
   3.8490338106280293`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "We", " ", "create", " ", "the", " ", "list", " ", "of", " ", "values", 
     " ", "in", " ", "case", " ", "v"}], "=", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8450447961470428`*^9, 3.84504486192747*^9}, {
   3.8450477213099747`*^9, 3.845047735608878*^9}, {3.845998533077533*^9, 
   3.845998537668522*^9}, 3.846021855425663*^9, 3.8460219091850967`*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nV", "=", 
  RowBox[{"newValues", "[", 
   RowBox[{"10", ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "1.", ",", "\"\<sign\>\"", ",", "1."}], "}"}], ",", 
    "newv0", ",", "\"\<ConstrainedNewMethod\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Total", "/@", "nV"}]}], "Input",
 CellChangeTimes->{{3.8444617140346737`*^9, 3.8444617347846212`*^9}, {
   3.844461808872343*^9, 3.8444618170070076`*^9}, {3.8444619033008537`*^9, 
   3.8444619337709484`*^9}, {3.8445122194771366`*^9, 
   3.8445122413158827`*^9}, {3.844512362020856*^9, 3.844512362180772*^9}, {
   3.8445143201938887`*^9, 3.8445143394214225`*^9}, {3.844514444454789*^9, 
   3.844514453803335*^9}, 3.844516223273226*^9, {3.8450374078987455`*^9, 
   3.845037428030212*^9}, {3.84504487350133*^9, 3.8450448751270533`*^9}, {
   3.845047741752062*^9, 3.8450477436917725`*^9}, {3.8459182397694316`*^9, 
   3.8459182457373877`*^9}, {3.845998523959859*^9, 3.845998524451099*^9}, {
   3.846021755261832*^9, 3.8460217586190915`*^9}, {3.846085848611929*^9, 
   3.8460858946636086`*^9}, {3.8460860381303816`*^9, 
   3.8460860426293545`*^9}, {3.8460865712288933`*^9, 
   3.8460865730409603`*^9}, {3.846095815516721*^9, 3.846095829278038*^9}, {
   3.8460958773960066`*^9, 3.846095881233713*^9}, {3.8460959604244823`*^9, 
   3.8460959614994926`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", "0.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.849033312535949*^9, 3.8490334024863195`*^9, 
  3.8490338153298063`*^9, 3.849034123387442*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"8ebfde0b-d47d-4e8b-bdbd-82d73fa235b2"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output",
 CellChangeTimes->{3.849033312535949*^9, 3.8490334024863195`*^9, 
  3.8490338153298063`*^9, 3.849034123387442*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"6163bccb-da6e-4d64-8391-08aa861a12f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "will", " ", "give", " ", "back", " ", "a", " ", "value", 
     " ", "that", " ", "converged", " ", "or", " ", "is", " ", "on", " ", 
     "\"\<ok\>\"", " ", 
     RowBox[{"status", ".", " ", "If"}], " ", "not"}], ",", " ", 
    RowBox[{"error", " ", "is", " ", "returned", " ", "and", " ", 
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2"}], "}"}], " ", "goes", " ", "back", " ", "to", 
     " ", "0."}]}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pickNewValue", "[", 
    RowBox[{"tableNewVals_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newValCon", ",", "newValAny"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newValCon", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
              RowBox[{"(", "\"\<converged\>\"", ")"}]}], "&&", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], 
            ")"}], "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newValAny", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], 
            ")"}], "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"newValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"newValAny", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"tableNewVals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"newValCon", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"newValAny", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}], "!=", 
              "\"\<converged\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{"newValAny", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverged\>\"", ",", 
                RowBox[{
                 RowBox[{"newValAny", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "4"}], "]"}], "]"}], "+", "1"}]}], "}"}],
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"newValCon", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844462754631737*^9, 3.8444628201358075`*^9}, {
   3.8444628882695293`*^9, 3.8444629100440626`*^9}, 3.844463007546508*^9, {
   3.8444630757865353`*^9, 3.8444631139402637`*^9}, {3.844463401643854*^9, 
   3.8444634786750946`*^9}, {3.844463586249464*^9, 3.8444636494751883`*^9}, {
   3.844463682583321*^9, 3.8444637031772294`*^9}, {3.844463924790797*^9, 
   3.8444639289631586`*^9}, {3.8444639810663843`*^9, 3.8444641244819984`*^9}, 
   3.8444687035611553`*^9, {3.844512874276967*^9, 3.8445129886481595`*^9}, {
   3.8445141007182693`*^9, 3.844514126835699*^9}, {3.844514163494574*^9, 
   3.8445141666815147`*^9}, {3.844514595376998*^9, 3.8445146477215595`*^9}, {
   3.8449553556067853`*^9, 3.8449553559599857`*^9}, 3.8450378756013985`*^9, {
   3.845037940092245*^9, 3.845037999784536*^9}, {3.8450384331500416`*^9, 
   3.845038435309373*^9}, {3.845038775409644*^9, 3.8450388297344503`*^9}, {
   3.8450389859878855`*^9, 3.8450390344000597`*^9}, {3.8456575620143347`*^9, 
   3.8456575685119963`*^9}, {3.845998611362694*^9, 3.845998617607574*^9}, 
   3.8460020989436474`*^9, {3.846018677328916*^9, 3.846018677775216*^9}, 
   3.846018880796386*^9, {3.846019116136244*^9, 3.846019173366503*^9}, {
   3.8460192515065284`*^9, 3.8460192528890114`*^9}, {3.846019610710576*^9, 
   3.846019619271961*^9}, 3.846020801971831*^9, {3.846021529128915*^9, 
   3.846021536340768*^9}, {3.8460852132039795`*^9, 3.8460852169216146`*^9}, {
   3.846085530410911*^9, 3.8460855309110503`*^9}, {3.8460869673692822`*^9, 
   3.846087000251961*^9}, {3.8460871143659906`*^9, 3.8460871172715235`*^9}, {
   3.8460877961782217`*^9, 3.846087844208644*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "23"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"updateValues", "=", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
    "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ", "fed", 
     " ", "to", " ", "the", " ", "function", " ", "to", " ", "try", " ", 
     "all", " ", 
     RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nV", "=", 
    RowBox[{"newValues", "[", 
     RowBox[{"10", ",", 
      RowBox[{"updateValues", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tableNV", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tValues", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tValues", "=", 
          RowBox[{"PyrUpgrade1D", "[", 
           RowBox[{"tValues", ",", "p0", ",", "  ", 
            RowBox[{"pyrf12", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"threshold", "*", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", 
            "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"pickNewValue", "[", 
   RowBox[{"tableNV", ",", "\"\<ConstrainedNewMethod\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.844512465652463*^9, 3.8445126589651527`*^9}, 
   3.844512696700407*^9, {3.8445127397523556`*^9, 3.8445127770015326`*^9}, 
   3.844512836960084*^9, {3.844514523287268*^9, 3.844514592311226*^9}, 
   3.8445146572758875`*^9, {3.8445157328956614`*^9, 3.8445157967537203`*^9}, {
   3.844515854741083*^9, 3.8445158692234373`*^9}, {3.844515900171852*^9, 
   3.8445159113818007`*^9}, {3.844960825416167*^9, 3.8449608326621675`*^9}, 
   3.8450378099077854`*^9, 3.845038006025897*^9, {3.845039038790265*^9, 
   3.8450390397869205`*^9}, {3.845044890366269*^9, 3.8450448920499763`*^9}, {
   3.845047769282398*^9, 3.845047795159435*^9}, {3.84591828507213*^9, 
   3.8459182912915144`*^9}, 3.846019257618719*^9, {3.8460208160192947`*^9, 
   3.8460208645720215`*^9}, {3.8460209788702793`*^9, 3.8460209926060295`*^9}, 
   3.846021742436345*^9, {3.8460218159794292`*^9, 3.8460218163150682`*^9}, {
   3.8460219593228226`*^9, 3.846022029946898*^9}, {3.8460220758808374`*^9, 
   3.8460220762055054`*^9}, {3.8460230529286184`*^9, 3.8460231106115284`*^9}, 
   3.8460960212472897`*^9, {3.8490342669233866`*^9, 3.8490342670952153`*^9}, {
   3.849034307882209*^9, 3.8490343280495815`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.875063126368134`", ",", "0.09656164010763951`", ",", "\<\"converged\"\>",
    ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.849033318909446*^9, 3.8490334058917336`*^9, 3.8490338201568007`*^9, 
   3.8490341275739555`*^9, {3.8490342679697437`*^9, 3.849034344389121*^9}},
 CellLabel->
  "Out[310]=",ExpressionUUID->"c91e00d5-5754-4922-a0de-50a7541cb2e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8460218930933437`*^9, {3.846023115078058*^9, 3.8460231176116033`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
YWKa8YwZMq72Cxyr/gEJUMUT
        "]]},
      Annotation[#, "Charting`Private`Tag$39262#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
RqkEFYYtwjTaIYGH71jn/7EikmY=
        "]]},
      Annotation[#, "Charting`Private`Tag$39262#2"]& ]}, {}}, {
    PointBox[{{23, 0.04969024160430337}, {23, 9.486769009248164*^-20}, {
      23, 0.09938048320860673}}], 
    PointBox[{{19.124936873631867`, 0.04969024160430337}, {23.09656164010764, 
     0.04969024160430337}}], 
    LineBox[{{23, 9.486769009248164*^-20}, {23, 0.09938048320860673}}], 
    LineBox[{{19.124936873631867`, 0.04969024160430337}, {23.09656164010764, 
     0.04969024160430337}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{18., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{18, 28}, {-0.028785722342342144`, 1.0288022384436775`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8490333215494485`*^9, 3.8490334081880956`*^9, 3.849033822874904*^9, 
   3.8490341305419755`*^9, {3.8490342732966137`*^9, 3.8490342816071825`*^9}, {
   3.849034311912509*^9, 3.849034345388918*^9}},
 CellLabel->
  "Out[311]=",ExpressionUUID->"f100f8cd-bab7-427a-af6a-a28b91ed228a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "listv0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "c", ",", " ", "updateValues", ",", "nV", ",", 
        "tableNewValues", ",", "tValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
        "Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<=", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "n"}], "}"}]}]}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "listv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
             " ", 
             RowBox[{
             "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ",
             "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", "\"\<ok\>\""}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "We", " ", "only", " ", "update", " ", "updateValues", " ", 
             "with", " ", "the", " ", "tValue", " ", "that", " ", 
             "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"pickNewValue", "[", 
             RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.843752560973708*^9, 3.8437525791150923`*^9}, 3.843752658661976*^9, {
   3.8437532609577184`*^9, 3.8437532630116253`*^9}, {3.843753321731477*^9, 
   3.8437533404766655`*^9}, 3.8437535235027065`*^9, {3.8437542615756073`*^9, 
   3.8437545058254924`*^9}, {3.843754584362295*^9, 3.843754613448418*^9}, {
   3.843754788152096*^9, 3.8437547901701674`*^9}, {3.84446023967266*^9, 
   3.844460243138896*^9}, {3.8444607278874874`*^9, 3.8444607297363987`*^9}, {
   3.844460774388563*^9, 3.844460843946801*^9}, {3.844462037391844*^9, 
   3.844462105400992*^9}, {3.844462169596165*^9, 3.84446222491173*^9}, {
   3.8444623679769106`*^9, 3.844462391371277*^9}, {3.844462439619422*^9, 
   3.844462440758129*^9}, {3.8444624986906347`*^9, 3.8444625790197444`*^9}, {
   3.844462952206507*^9, 3.8444629975774703`*^9}, {3.8444630353273516`*^9, 
   3.8444630422572412`*^9}, {3.8444630963197064`*^9, 3.844463097574968*^9}, {
   3.8444631367198167`*^9, 3.8444631620261145`*^9}, {3.8444631957424603`*^9, 
   3.844463217092122*^9}, {3.844463279949193*^9, 3.844463282173604*^9}, {
   3.8444635938104506`*^9, 3.844463601998819*^9}, {3.8444638964881496`*^9, 
   3.844463899627947*^9}, 3.844464021984146*^9, {3.844464194811337*^9, 
   3.844464197865275*^9}, {3.8444642413958893`*^9, 3.844464282685113*^9}, {
   3.844464603077302*^9, 3.8444646428051577`*^9}, {3.8444647003023415`*^9, 
   3.8444647101585493`*^9}, {3.8444650402932653`*^9, 3.844465047181552*^9}, 
   3.8444687193751507`*^9, {3.844469164171029*^9, 3.84446916505202*^9}, {
   3.844469262191881*^9, 3.844469273354315*^9}, {3.8445147154312534`*^9, 
   3.844514920195876*^9}, {3.8445150225856075`*^9, 3.8445150482989445`*^9}, {
   3.844515133898366*^9, 3.8445151681683445`*^9}, {3.8445152348500757`*^9, 
   3.844515453692839*^9}, {3.8445154857004576`*^9, 3.8445154866340466`*^9}, {
   3.8445159926576605`*^9, 3.844515993121111*^9}, {3.844516074572565*^9, 
   3.8445160903677597`*^9}, {3.8445161517680817`*^9, 
   3.8445161878225985`*^9}, {3.844516251196046*^9, 3.844516273742357*^9}, {
   3.84451646477081*^9, 3.8445164780299234`*^9}, 3.8445165295396204`*^9, {
   3.8445165629572544`*^9, 3.844516592682452*^9}, {3.8445169157063313`*^9, 
   3.8445169192029696`*^9}, 3.844516963591753*^9, {3.8448672233060846`*^9, 
   3.844867245115175*^9}, {3.844867353997981*^9, 3.844867357674706*^9}, {
   3.8448674432605042`*^9, 3.8448674485507154`*^9}, {3.844869076768549*^9, 
   3.844869085865178*^9}, {3.8448731333838654`*^9, 3.8448731338260813`*^9}, 
   3.8448737701146564`*^9, {3.844955365518254*^9, 3.8449553724457283`*^9}, 
   3.845030439682123*^9, {3.8450375386523123`*^9, 3.845037545723833*^9}, 
   3.8450382282659655`*^9, {3.845038281748803*^9, 3.8450383149303274`*^9}, {
   3.8450384076219177`*^9, 3.8450384106480255`*^9}, {3.8450384691870403`*^9, 
   3.8450384694118032`*^9}, {3.845038525051551*^9, 3.8450385294382544`*^9}, {
   3.8450390760778513`*^9, 3.8450390898653*^9}, {3.8450391231991873`*^9, 
   3.845039124190837*^9}, {3.845044900308997*^9, 3.8450449085151877`*^9}, {
   3.8450478878754888`*^9, 3.8450478911507916`*^9}, {3.845918130250128*^9, 
   3.845918143807156*^9}, {3.8459988288087425`*^9, 3.8459988385172453`*^9}, {
   3.8459988752133303`*^9, 3.8459988833283424`*^9}, {3.84599903561343*^9, 
   3.8459990448355284`*^9}, {3.8459990809048405`*^9, 3.845999094061246*^9}, {
   3.845999185714033*^9, 3.84599920077864*^9}, 3.845999453539628*^9, {
   3.845999812775424*^9, 3.8459998209297647`*^9}, {3.846000004463835*^9, 
   3.846000008580392*^9}, {3.8460009720676517`*^9, 3.8460009811076927`*^9}, {
   3.8460197840505905`*^9, 3.8460197844570885`*^9}, {3.846019863658993*^9, 
   3.846019868489476*^9}, 3.846019942481623*^9, {3.8460210288916287`*^9, 
   3.8460210293879004`*^9}, 3.846085913627901*^9, 3.846085981096647*^9, 
   3.8460880792910357`*^9, 3.8460883386833396`*^9, {3.846092834426603*^9, 
   3.8460928488245487`*^9}, {3.846094490813854*^9, 3.846094491057413*^9}, {
   3.846094812361848*^9, 3.8460948175266514`*^9}, 3.846094876780088*^9, {
   3.846094965181115*^9, 3.8460949743163085`*^9}, {3.846095037921819*^9, 
   3.8460950403162622`*^9}, {3.846095070558279*^9, 3.8460950769618917`*^9}, {
   3.8460951140344286`*^9, 3.8460951234958487`*^9}, {3.8460952865340257`*^9, 
   3.8460952952741537`*^9}, 3.8460954210148797`*^9, {3.8460955191167483`*^9, 
   3.8460955195314646`*^9}, {3.846095621104643*^9, 3.846095627437854*^9}, 
   3.8460957744472537`*^9, 3.8463283255360327`*^9, {3.8463283779065075`*^9, 
   3.84632843784424*^9}, {3.8463284954456854`*^9, 3.8463284974766197`*^9}, {
   3.846328747191173*^9, 3.8463287484723854`*^9}, {3.8463288529685507`*^9, 
   3.8463288665369644`*^9}, {3.846328962699226*^9, 3.846328975097176*^9}, {
   3.846329196527423*^9, 3.846329203266567*^9}, {3.8463292857804523`*^9, 
   3.8463292869853487`*^9}, {3.846329559633199*^9, 3.846329596163855*^9}, {
   3.8463296327608476`*^9, 3.846329639537835*^9}, {3.8463297026085835`*^9, 
   3.8463297028175774`*^9}, {3.8463299835875034`*^9, 3.846329985632037*^9}, {
   3.846330040372553*^9, 3.846330041582344*^9}, {3.848498810425356*^9, 
   3.8484988107865243`*^9}, {3.8485005525416346`*^9, 3.848500552982191*^9}, 
   3.848500606539936*^9, {3.8490331293172626`*^9, 3.8490331374091053`*^9}, {
   3.8490335009474487`*^9, 3.8490335110198793`*^9}, {3.849033862943802*^9, 
   3.8490338691610503`*^9}, {3.84903415954405*^9, 3.849034159824979*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1677df7d-d338-4ae0-86ef-\
227ba8502fad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}]], "Input",
 CellChangeTimes->{{3.846328896022578*^9, 
  3.8463289074786158`*^9}},ExpressionUUID->"b14c0653-3e9f-41bc-ad3b-\
fb428643f9e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"newv0", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "30"}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.8463289105203114`*^9, 
   3.846328933151903*^9}, {3.846328999885933*^9, 3.8463290037897797`*^9}, {
   3.849033430776492*^9, 3.8490334403055115`*^9}, {3.849034375957921*^9, 
   3.8490343857681007`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"a2f96ad6-157a-40a4-b5dc-b0107b8c5ea4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.02000099020741256`", ",", "3.980066158311496`", 
     ",", "\<\"converged\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9815685136215504`", ",", "3.019569156627813`", 
     ",", "\<\"converged\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08679281746530071`", ",", "3.915473763946383`", 
     ",", "\<\"converged\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5549352195123832`", ",", "3.445078322525606`", 
     ",", "\<\"converged\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4999729772232078`", ",", "2.500027073784932`", 
     ",", "\<\"converged\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.5000887467761705`", ",", "1.4999111695674803`", 
     ",", "\<\"converged\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.4463842133113185`", ",", "0.5536189964721825`", 
     ",", "\<\"converged\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.8773443351477375`", ",", "0.12169681818604562`", 
     ",", "\<\"converged\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.007769818975848`", ",", "1.990377344989145`", ",", "\<\"converged\"\>",
      ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9899001938093972`", ",", "2.0105631369541537`", 
     ",", "\<\"converged\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10804008564828535`", ",", "3.867880789238127`", 
     ",", "\<\"converged\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5546560193818332`", ",", "3.445344458247616`", 
     ",", "\<\"converged\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000066876190932`", ",", "2.4999933271475636`", 
     ",", "\<\"converged\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.500028147805705`", ",", "1.4999719179952973`", 
     ",", "\<\"converged\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.4463486791374414`", ",", "0.5536295399351546`", 
     ",", "\<\"converged\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.8793742072685578`", ",", "0.12144583464316076`", 
     ",", "\<\"converged\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.018811947730238`", ",", "1.9843843115309137`", 
     ",", "\<\"converged\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.`", ",", "4.613120472860315`*^-18", ",", "\<\"converged\"\>", ",", 
     "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0198046893722004`", ",", "0.9854613146975558`", 
     ",", "\<\"converged\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.977493560381444`", ",", "0.02509281263172533`", 
     ",", "\<\"converged\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "30"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8490333257672043`*^9, 3.849033332086084*^9}, {
   3.849033411374817*^9, 3.849033441274042*^9}, 3.8490335144407587`*^9, 
   3.8490338279674215`*^9, {3.849034135759493*^9, 3.849034210141241*^9}, {
   3.8490343792381315`*^9, 3.8490343896419554`*^9}},
 CellLabel->
  "Out[320]=",ExpressionUUID->"6430c78d-c6af-411d-af40-1f4dd74ffcd6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwU13c8VW8YAHDJ3nuva7uurSi571PJLEl2sncqISGjZGWHkCjKagmVlNyj
iLKybkOZKSncS1ZR/c7vr/v5fs657/PO57wPweukrS8jAwNDFysDw/+/S4/G
rjEw0BHfmP67Ow/qW4q1NqZPKNKR5KcEpkrmHMruW6Lqo+Z09Cg/Mluk9Dol
p8Tm8ZNLdMRV/GhaoK2WYihy/I9KIx21idTKn1xtoExkX9xbMEJH3LyhOm9D
GilaF168CVVYRPvVw38qirZQ3m6OCU+aLaIqrZunXxJaKXERG0cOBi8ilnon
X4M7zyl9gfrf1B8toje/nvk4FLVTgm2qGL6YLqFBwTNty2OvKUJdL0wPH1tC
n96/Mc4T6KY07x3PeJ69hKyVpLcd39lD4TAQE7/2fgnl+aiNH/LvozTU6btz
/VlCp9x1H14NfkNxIR6qjCb8RNPrnpUH9fopt6TTdByDfqKzEWkMt6QGKDaF
VWdeZv1EPzSzCXIXByjrfG0teg9+IgWjG/v06AOUsrTxrTfe/UQEaYdtS4cG
KeZMmxZ8mz/RrIPxk+DaQQo9ViwnTm4ZxQR9v9LAPEQpXNN/O2eyjN59oF0f
chyifP1+3Ot15jLaGDpA/jo3RMnySasxaFhGr7y6/de0hinbxqoWKt8uIz/7
H+/lTwxTPjm26QttLKP3GuASWT1MSRwYj06QXUEKJ1wfsn4appCsNlvpe1eQ
WdHg/QlOKmW4XYzVPWAFmWhuExY0oFJiyNsO9GasIKkGkXu1R6kUhaZDeUb1
K2i4kh3a4qmULp0TH25RV5B/elmBRymVEnonTVbs9wr6NH08qqCRSpFQqvZN
lllF+vpM9eHdVMqLa213lvesopCNFWbOT1RKkNjEopf/Ksp7RoXAb1QKf+6m
wUD6Kir+tY14nU6lNHGKx6G6VZStfyvt2TKV4pG0rf3e8CoKpj0nDuBm+3eI
Q+rXKjK8KzA0h79/P/KETZr0Gvo5p7FfdpZKcVhKK1jfvYZK9arcIkeplL/H
qj/5+a2h7Yw8Q6x9VErVlzZ5atoa6hhZOzX6lEqxdp8I2Ht/De1Hq1vZK6iU
1febtfVD+PP6q4eKL1IppbbiK7Lra2jXw2iF8mNUiknPNqMsqXV0+5XSHg1L
KmVun+35TVhHwqe0IqyVqJR87ERnkO86itMipgr9Gabs2pHO/eHiOvqWVAPZ
A8OU6Ybqw2a168hmdVdA341hSjqp/cqjwXWEMUZ3ToYMU0Zk/yjlSv5CNWsG
B9u3DlPIw5Nf+Pb+Qmdj614UtQ1RbqZ2VGYH/UJsVa2Tf+OHKMGL2UqZT34h
7TWB/P6FQUp/ZfgXzslf6PkdDg+f8kHKNhfnyjS234gmwWwxYjNI+ftCXinV
8TcS3X3887OqAYrXGdYvLPG/EUNiTu+hAwOUTvW5iqSq3yjkCsFUfLGfkpP/
SPHCym/Ufnj9cI52P0Xez1wxLm8DoSPd6zfleynJEhrTm083kJBT14yrWQ/l
Rx9/xdmpDZTgfOjJM/9uykODjwpROptIprj3K3/Ja4op+wmF8DebaMHD5Xrk
u5eUwLt58kGcf5HYT7LVYGQzpc8jcuqb7l907FFIBdX1CUVX+OgNf5e/yPef
9wcN48eU37HK8r63/iL2NKMSmeUGSsbBJwQPs3+IT7Nr5GpKBcUp6iTfnd0M
0C9SITC9q5ScNuQZEmTPAHOqjmm+DDfJzzTs+tUCGYBhZ4RyuXs1mTBlmFOT
wwAez+xyG9nryN8tGfmqxhkguaD5ofv1JnKM1GXe8tgtYOR/qGoyqZ1cE1Yb
zJ+zBU5ccFKUDXlJHu7qfH3+xhaIizivV+DYQdaI+n3Bq3MLWIvNcNZKvyKP
Ud3XFfgZwaunfYiW0E3m0Iiyz1dgBEPCNXbfwz1kg8TcBqbtjCDfvDLKLddL
ztF9GfzFhRHMV3oDztzrI+/OJk5WVTCCM+PP4rSufvKJr3vJoo8ZYeP8TrPX
hAFysfHRqymvGQEdOfn6WsQAeelHtn3AAiPs2b4+2CM2SJbZe6vhPcNW6H+5
dpXJb5BsVfyC10JwKxR1GVEu1Q2SK8xXXqsZbgWLg98uBRkPkfuv86gUW26F
P66biZfjh8ibqyqJHEe3QuTGHbthyhDZvtKF/OP8VjBl2ca9X3+YnLAZdvVI
/lZwY3hq4BM0TK49nLneXbUVuqt0XliXDpNZGFsb7nZvBSUhm2jnX8NkXecP
vNJjW2Ei4MaskzyV7F63FJxJ3woRSeRds2ZUcgYrV9cfRibo1/4t8DuQSm5y
U1I5IcwEb3Xu8JxNpZKnH5ETx1SYwOegSv+Rm1QyH7fTpPVOJvCzMVlPf0ol
7/I5Rcb2M0HdxjuVjV4qObA57aqWOxNoizX9KxqlkgsEKtavn2KCweCncvaz
VPKLwBZ7vkQmONH6UF12kUpeaH3bcK6ACb5+iHn+dZlKlhCj8y7WMIH8uW8J
V3GbnmQ/7tnMBBzRvXwadCo5rEO+a6CXCc5lbeFKn6GSy6R3qeyZYAKvRBfh
yhEquSfcPrFhiQlK5Gt7g15TyevdJyblmZmBQ3uQ2v2ASlZUSCXniTJDWlhJ
3+MrVLJNdPnVrURm4Ho45SRzlkqOHXi6HraLGUKbooVpjlTybdVh+2lrZigw
21kprk0lv42fb7DzZIYg1bWazK1UMuM7Fr6XYczwipDyfOfgMFlTU+74tmRm
yP+NZfOVDJNdknZ0VRYxQ2PUmYd/PYbJKZ9sVUTuMAOL34X+Zblh8kO94MTk
FmaITH6SOPVxiDyRljS5+oYZvpbTTj2+NETmmrpG9p9iBsP4DUPvPUNkwx1N
V98tM4P1l4Zo6vwg+dLMd/smcRaw9j+72K0/SH5/FZPoUWcBeZFPwtsHB8hy
Nvnj48Ys8G2Qg801aIBc12QcyOrFAjs1zpeVpvWT14MFNCXDWcBQWS64WKCf
DISZJc1k3K/OlBGJb8j9F3NiHG6zQEaXtnO2QC9ZjOy7O+gZC/Cxeea3rnST
PZZ2sMT14Tb+djm0t4tMd/mcXbnEAiYbTudHnV+ReUnbby7vZIWJV4d4T35+
QXaY4AhgO8AKNS86c039n5Ov5Y+TpNxZoV/mOo9NC0bW/JPauPcCK3jITtdL
HHxCtu77+Dq3mxXK7u/pZ4muIhck1GVVjbICw6L4PdORUvLY9qTDT2m4F1S0
dW5nkE9c1xydFGSDizefTnP+vkTJDDlP13ZlA4P9jrKfhx5RhhUdHpmcYIPx
X8mHlD2fUqQ+EKOdzrHBqy09cW6MGOXu7uGt5yrY4JS+TP+8cTulR0BF9M0c
/v5+wo8KoT4K56Me4+Ox7JCuOqD7z/EDxTawnPF8NjtEVvDXblSNUIqlIzrz
y9nhRmuLscLqRwoxWfbQs5fs8OXYC14sb4xi6Rjqw8nDAZlm2iOfJicpF3+J
pt+6xgEfWRMdr334StHu7s/Y18AB4sOL4dyxM5S3JRezJl9yANNZv5/N0t8o
8rBxSXyeA+oDP6kKOMxSXvE/zHvEwAmvnlwJcpyfpZz8HHz5kBAnmK5Q5UXP
f6c8Sx4rumjECSJoL9fu0h8UL6fCYqWDnPDMXvuVudIchY1oU/LcixNOBAjx
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$39408#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwUl3c41e8bxyV775V1rGOTtMTnuWVGSaKsMsqWJGQmsqPsTSnZXzOl9flI
KEIIlTKjKOkYZYR+5/fXuV7X837u+33f7+e6PtchOV+0cKGloaHpY6Sh+f/v
UtNYEQ0NBRkenCoWst//PE/t77SPDAXl2tCm3Jbhx3UrBJVGjSno8Omm43Of
ZPCUAvNHj1MpKLv1izTXUU38gMCFLfJDCtrLbBFGz3AQn7iVoJc1QkH+G+on
6Ap1cLXrrW/9pBeRcaPDh6bdevjw5hj/pNEikuV9f+H5EQP8auBfu+Pei8iE
vcOJYm6E93pozio1LSIhfhP6CBVT3Nu8lGbGcAmFVVr0fuU+gfN1tRqe9FpC
XppdeuOfT+BP9caTXtxaQlZ9z5j47ljgLPuFhIs+LKHCCY3+GE5LvKFO04Ft
awntk+sIm39qidsqnrgfQlpGupIrr6YcrfAKscTdpz2XkfAgSu7POIWbZ5de
ab+5jKQcLtQuS5/G17hePt/TuIy4da1erFWdxu8kju+8+34ZXXX+l/Vb2Ro3
pts8wrW5jNirL9P9K7XGKeFCKVclV5Alw5NRBREbPHtVc3hefwUt2Iz8SYy1
wb9+v+DcmbyCcm69PqBnaovfPJ9Yvr9hBU0eLmVuu2eL7x0rXbg/vIIoqeGe
vb9t8c+nX2ry/V1Bri6n1K7o2uHR/eMhURK/0cT9A8rvYu1wZdPNForeb7R2
SHnvarsdPtgmxOjg/hsZcx0UX9u2w8Owvcd6kn6jS6xuT7/vtselm0+kH6r/
jTgF8IkvZ+3xrt0+HyuGfqNmIUPntRh73K8qUUJo4zfi3WTg0ymzx0Vky1xi
xf+gxnKmro5We7y16GXVyuE/SJvxpHXlB3vcU2hi0dntDzKkWUjbnLXHudM2
9/ff+IN8wiaPDSzb482swldR3R908vzeM7BujzvG7G37b/APSr2zmGFHZaZ/
J1hE1/+gl8LinQdW7PHaIB/zRLFVFN/c2jM/Z4+fWkrMWtNdRUEu3wKTRuzx
ba+yz66uq0iDOSNHucMeL515KTWUuIpOJfUxTFXb42YOE+56taso5H1J5oub
9vifD5s19e9WEXonJDzhZY8XWgj/llhbReCu6WKhb4/rd+89dFN0DYlG/Dum
ImSPzxtYRG7CGvKiiSqL+WaHZxA+rzxd1lDP4EsD3wY7XPvgDfaPCWtocrp7
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
SW//npBFhYPxt2zCMLP9T5x/mUMFb/VH7f/7o6fP6u0U86nAiYk4+r8/8qB9
XXa4EOdDrq3V//5IIGPDvaYiKrj5vrIPxpw1aR0mWkqFZ4uPH/fDvMUqibqr
DK8XcLPAHXNHY9tIfgUVYqs33rDF7LDi97kvF/D+r6vd/d/fTQaRrWjVVNA+
t6uChjmx110yooYKpa4rbP/XQ4lVeOdhLRU2LfndKYT5Rs7zYyvqqPC4KOTr
J6ynxZy41v4GnO8bVl6+i3nUTvdzzTUqFGSYiZ3DHHkjKG+uiQovBYsHAzGv
VKjZZdBCBfODp+kmmGtDPy1IbaWC7Ksz46sxG75b1fruFhVUjTeJjuB8eM/b
dVT1Ls7fzpeuVzEHFsapBbRj/exWCx7DvPjfzf5b96hQLnj0IQsz95baDpsu
KoRV7Kv93x89W+8sfP4xFdRqxy65Y/aKzGrid1PB8ePpc/KYc7aKqMS9oELy
uyklX5z/pFL2255XVMiuuZUnh/m+sG/q2j4qmLZmdl3D9TLV9m6+4T3W79J+
xW+43pKUZRsEB6hwO8tGLRKzcqzxwR0fqRD0fM/VZZgtDa+9+jRMBXe7AwsV
cb1e6UyplflBhW3KN7UlRcbRWEbrs90/qaBb/iE1DNe/isvYVNokFWqyWzRG
cX/InzPkyc5RwYk+P1iP+0m8+r9OWWEa/FwaN74G+6G70xrfLEVpMEYvD7mK
+9X8XbtlGQtowE81/8rD/c3fvtFquSQNHr6I0uTgfulw5tDH5ctpsLppCeXN
Dz7Ksc0Ts1pBg4yn5JeUcdyflTtVM+VpkP3FtjP6Ox8ZtSr5yK2lwcTk5C75
r3ie89/8kdtEA5v7CwaW4fuk+C5juZUsGvxa8ykv5wWeb2uOsWw4NIh6cvxQ
5zM870fK7LN5NDi3ZOH+uad8NBkpWLpyKw2Y8iZHnPF9tv/qdS15ExpQc5cL
muP77urwIQvbHTRwnJAfTm/H/dpENjDHDO/vXMre9/+/L/p4pEXekgZf3kqV
ReD79DXZTUar9tFg/5oll5fg+/ZEv6W3nSMNSDZmf6Ou4/vupZPJuc40OHM5
VE8Q389L9N+/WOVGg+qsXr/l+D7/Tkpy1s6DBua5ZbRLV/lo5XuWQp4XDaAg
7/zOK3i+BGa4rD5Cg644pFdbw0edW+/G7PWlgcHA6Z2+l7AfWvqjMs+fBk/W
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
           "]]}, Annotation[#, "Charting`Private`Tag$39408#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 4.963083675318166*^-24}}], 
      RGBColor[1, 0, 0], 
      PointBox[{2, 4.2599801546480925`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 4.2599801546480925`*^-22}, {2., 
        4.2599801546480925`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 1.3234889800848443`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 6.617444900424222*^-24}], {Arrowheads -> Small, 
       ArrowBox[{{3., 6.617444900424222*^-24}, {3., 
        6.617444900424222*^-24}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 2.6469779601696886`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 1.3234889800848443`*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{4., 1.3234889800848443`*^-23}, {4., 
        1.3234889800848443`*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, -1.0587911840678754`*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.36054667152722*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.36054667152722*^-20}, {
        5., -1.36054667152722*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, -4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.44218668610888*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.44218668610888*^-20}, {
        6., -5.44218668610888*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, 1.6940658945086007`*^-21}}], 
      GrayLevel[0], 
      PointBox[{7, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{6.015524355792994, 8.470329472543003*^-22}, {
        10.016029435913207`, 8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, -6.776263578034403*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{8, -8.707498697774207*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8., -8.707498697774207*^-19}, {
        8., -8.707498697774207*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 2.710505431213761*^-20}}], 
      GrayLevel[0], 
      PointBox[{9, 1.748276003132876*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{6.018893450928953, 1.748276003132876*^-18}, {
        10.011093305996017`, 1.748276003132876*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{8.890592536285443, 0.04969024160430335}, {
        12.890601835607335`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.}}], 
      GrayLevel[0], 
      PointBox[{11, 0.4503097583956967}], {Arrowheads -> Small, 
       ArrowBox[{{10.445271949024665`, 0.4503097583956967}, {
        14.445283217402398`, 0.4503097583956967}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, -8.673617379884035*^-19}}], 
      GrayLevel[0], 
      PointBox[{12, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.50000364680269, 0.5}, {14.50000364813515, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.0722325369815907`*^-45}}], 
      GrayLevel[0], 
      PointBox[{13, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.500076308283138`, 0.5}, {14.500076383222966`, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{14, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{10.553548856283816`, 0.5496902416043034}, {
        14.553551340284564`, 0.5496902416043034}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{15, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.086806757828363`, 0.9503097583956966}, {
        15.078878017812599`, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15.981107777423823`, 1.}, {19.979230414364693`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.981992569454697`, 1.}, {20.97998239808925, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956968}], {Arrowheads -> Small, 
       ArrowBox[{{17.881892269633912`, 0.9503097583956968}, {
        21.870732821106504`, 0.9503097583956968}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 1.}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{18.445753984029395`, 0.5496902416043034}, {
        22.445759643572377`, 0.5496902416043034}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 1.}}], 
      GrayLevel[0], 
      PointBox[{20, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{18.499985912804515`, 0.5}, {22.4999859343178, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {21, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{21, 0.49999999999999994`}], {Arrowheads -> Small, 
       ArrowBox[{{18.499996415574408`, 0.49999999999999994`}, {
        22.499996421390197`, 0.49999999999999994`}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{22, 0.45030975839569665`}], {Arrowheads -> Small, 
       ArrowBox[{{18.55418385812683, 0.45030975839569665`}, {
        22.554177925195624`, 0.45030975839569665`}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {23, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{23, 0.04969024160430337}], {Arrowheads -> Small, 
       ArrowBox[{{19.124588750718562`, 0.04969024160430337}, {
        23.125690371187346`, 0.04969024160430337}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 2.3852447794681098`*^-18}}], 
      GrayLevel[0], 
      PointBox[{24, 1.1934694226813092`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{20.981608712246985`, 1.1934694226813092`*^-18}, {
        24.981134470930325`, 1.1934694226813092`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {25, 7.589415207398531*^-19}}], 
      GrayLevel[0], 
      PointBox[{25, 3.8052955155399443`*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{23., 3.8052955155399443`*^-19}, {25., 
        3.8052955155399443`*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{26, 2.72109334305444*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23.01947100378757, 2.72109334305444*^-20}, {
        27.024728581396513`, 2.72109334305444*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, -1.2585168176455822`*^-48}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, -7.940933880509066*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{27., -7.940933880509066*^-23}, {
        27., -7.940933880509066*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, -6.776263578034403*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, -3.40136667881805*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{28., -3.40136667881805*^-21}, {
        28., -3.40136667881805*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 5.293955920339377*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{29., 5.293955920339377*^-23}, {29., 
        5.293955920339377*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8490333257672043`*^9, 3.849033332086084*^9}, {
   3.849033411374817*^9, 3.849033441274042*^9}, 3.8490335144407587`*^9, 
   3.8490338279674215`*^9, {3.849034135759493*^9, 3.849034210141241*^9}, {
   3.8490343792381315`*^9, 3.8490343899855967`*^9}},
 CellLabel->
  "Out[321]=",ExpressionUUID->"ae113fd5-2559-4f55-b11e-f0e6b6af9eb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"4d225df1-a7b8-4e3e-b420-\
6ff5f34abf9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"newv0", ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"p", "-", "5"}], ",", 
       RowBox[{"p", "+", "5"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"p", "-", "5"}], ",", 
     RowBox[{"p", "+", "5"}]}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.846328944814293*^9, 
   3.8463289588384256`*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"9fd57488-dee4-4f36-8bcc-ab84a909ef9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1addfeb2-5c39-4529-bb6d-\
d0c229ca6ab7"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"880a687b-6dd2-4828-9358-\
0c01b407a3f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "3", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"m", "\[Rule]", " ", 
     RowBox[{"max", " ", "lvl"}]}], ",", " ", 
    RowBox[{"n", "\[Rule]", " ", 
     RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
  RowBox[{"PyrFlow1D", "[", 
   RowBox[{"i", ",", " ", "p", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
    RowBox[{"0.0001", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437553466508884`*^9, 3.8444611315278234`*^9, {
   3.8444611768614936`*^9, 3.8444611887169385`*^9}, 3.844462125512904*^9, 
   3.844462356446972*^9, {3.8444633170999546`*^9, 3.844463321081232*^9}, 
   3.844463957058437*^9, 3.8444640642630997`*^9, {3.844464176408199*^9, 
   3.8444642066331835`*^9}, {3.844464361712132*^9, 3.8444644432157106`*^9}, {
   3.8445155082491083`*^9, 3.8445155337439795`*^9}, {3.84451594973834*^9, 
   3.8445159707794123`*^9}, {3.8445160028143573`*^9, 3.844516016773574*^9}, {
   3.844867278823122*^9, 3.8448672867837*^9}, {3.8448674780006113`*^9, 
   3.844867482844355*^9}, {3.8448675512620215`*^9, 3.844867552535472*^9}, 
   3.8448690922499695`*^9, {3.8450375572578297`*^9, 3.8450375788333464`*^9}, {
   3.845038492456919*^9, 3.845038495570486*^9}, {3.8450391079598455`*^9, 
   3.845039108408127*^9}, {3.8450401552418346`*^9, 3.845040155409791*^9}, {
   3.8450449183244*^9, 3.8450449251510773`*^9}, {3.845998917876772*^9, 
   3.8459989184715147`*^9}, 3.8459989522552752`*^9, {3.8460211607198453`*^9, 
   3.8460212127086706`*^9}, 3.8460927662680087`*^9, {3.8463293246755347`*^9, 
   3.8463293261140614`*^9}, {3.8463293581547394`*^9, 
   3.8463293659078813`*^9}, {3.8463293973199778`*^9, 
   3.8463293984381676`*^9}, {3.8463294366454444`*^9, 3.846329444948153*^9}, {
   3.846329501624301*^9, 3.8463295154348464`*^9}, {3.846329660714734*^9, 
   3.846329681480458*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9, 3.8445155022047677`*^9, {3.84451610892062*^9, 
   3.84451616442041*^9}},
 CellLabel->
  "In[515]:=",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"d69ea01b-c1ef-4113-8cab-\
b11ccf013757"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"c8124fb5-6975-4957-950c-\
1a0ca8f99e5a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"8aa49981-e1b7-40e4-b201-\
cbbe28e3204e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"newv0", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9},
 CellLabel->
  "In[280]:=",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"b94d5e78-6273-405e-baaa-\
6e385d5d2376"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pickNewValueIter", "[", 
   RowBox[{"tableIterNewVals_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
  ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newIterValCon", ",", "newIterValAny"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newIterValCon", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
             RowBox[{"(", "\"\<converged\>\"", ")"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], ")"}],
           "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIterValAny", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], ")"}],
           "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"newIterValCon", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"newIterValAny", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"tableIterNewVals", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"newIterValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"newIterValAny", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", 
             "\"\<converged\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{"newIterValAny", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"newIterValAny", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverged\>\"", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Last", "[", 
                    RowBox[{"newIterValAny", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", "1"}]}], "}"}], 
                "]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"newIterValCon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844466207590722*^9, 3.8444663304974847`*^9}, {
   3.844466467059284*^9, 3.844466482937065*^9}, {3.8444669028168545`*^9, 
   3.8444669220431056`*^9}, {3.8444670322139096`*^9, 
   3.8444670870482016`*^9}, {3.8444671566049376`*^9, 3.844467158920144*^9}, {
   3.844467196948223*^9, 3.8444672718024893`*^9}, {3.844467321158042*^9, 
   3.8444673278403487`*^9}, 3.844468299730402*^9, {3.844468502462919*^9, 
   3.8444685083530297`*^9}, {3.844520161191785*^9, 3.8445202245778556`*^9}, {
   3.844520332705359*^9, 3.844520377455515*^9}, 3.84452048068826*^9, {
   3.8445205845433617`*^9, 3.84452068650521*^9}, {3.8445209863115625`*^9, 
   3.8445209977867584`*^9}, {3.844955378499539*^9, 3.844955378702995*^9}, {
   3.8450399851794863`*^9, 3.8450399905968895`*^9}, {3.8450402066544905`*^9, 
   3.845040239394699*^9}, {3.8450434161210747`*^9, 3.8450434242961826`*^9}, {
   3.845043604555329*^9, 3.8450436349903736`*^9}, {3.8450478558828373`*^9, 
   3.845047867869722*^9}, {3.8456575526918926`*^9, 3.8456575749662375`*^9}, {
   3.846000761958229*^9, 3.84600076666483*^9}, 3.8460020837549314`*^9, {
   3.8460186851196623`*^9, 3.8460186856315947`*^9}, 3.846018886808941*^9, {
   3.8460189616153903`*^9, 3.846019059973849*^9}, {3.846019103568391*^9, 
   3.8460191037534432`*^9}, {3.846019638725012*^9, 3.846019644968521*^9}, {
   3.846086647334755*^9, 3.846086666377084*^9}, {3.846086708054812*^9, 
   3.8460867093045206`*^9}, {3.8460870240121717`*^9, 
   3.8460870976665087`*^9}, {3.8460873018211837`*^9, 
   3.8460873044143124`*^9}, {3.846087339218552*^9, 3.846087399411335*^9}, {
   3.8460874432447863`*^9, 3.846087446900208*^9}, {3.8460876173270864`*^9, 
   3.8460876318802443`*^9}, {3.8460876965682096`*^9, 3.8460877516886625`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updateValues", "=", 
   RowBox[{"{", 
    RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.844519953596135*^9, 3.8445199606029215`*^9}, {
   3.8445200284976707`*^9, 3.844520080540944*^9}, {3.8445201144548054`*^9, 
   3.84452013632008*^9}, {3.8445204044409313`*^9, 3.8445204048126707`*^9}, {
   3.844521111054682*^9, 3.844521111228567*^9}, {3.845038037655663*^9, 
   3.8450380378721824`*^9}, {3.845038171548463*^9, 3.8450381719784317`*^9}, 
   3.8450400525206423`*^9, 3.845040270633919*^9, {3.8450435281953635`*^9, 
   3.8450435292420616`*^9}, {3.8450449581286364`*^9, 
   3.8450449584168606`*^9}, {3.8460012756798897`*^9, 3.846001276159388*^9}, {
   3.846001463969864*^9, 3.8460014671759553`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
    "\[GreaterEqual]", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
      RowBox[{"updateValues", "=", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", 
         RowBox[{"updateValues", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "}"}]}]}], "]"}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
       "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude",
        " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ",
        "v0"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"random", " ", "values", " ", "between", " ", "5", " ", "and"}],
       " ", "-", "5"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nV", "=", 
     RowBox[{"newValues", "[", 
      RowBox[{"10", ",", 
       RowBox[{"updateValues", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableNewValues", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "We", " ", "initialize", " ", "whith", " ", "values", " ", 
        "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", " ", 
        "calculated", " ", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tValues", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"updateValues", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iterTable", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tValues", "=", 
            RowBox[{"PyrUpgrade1D", "[", 
             RowBox[{"tValues", ",", "p0", ",", "  ", 
              RowBox[{"pyrf12", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"threshold", "*", 
               RowBox[{"2", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"goodValIter", "=", 
    RowBox[{
     RowBox[{"pickNewValueIter", "[", 
      RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Last", "[", "goodValIter", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8445199189976206`*^9, 3.8445199365460973`*^9}, {
   3.844519973444282*^9, 3.8445200208896346`*^9}, {3.8445201321606035`*^9, 
   3.8445201335175266`*^9}, 3.8445204255897226`*^9, {3.8445207635164404`*^9, 
   3.844520772183606*^9}, {3.844521615845844*^9, 3.8445216204018307`*^9}, {
   3.8449608965047283`*^9, 3.8449609389132614`*^9}, {3.845038043311702*^9, 
   3.845038045807271*^9}, {3.845043232309779*^9, 3.8450432374252357`*^9}, {
   3.845043271633041*^9, 3.845043280468442*^9}, {3.845043388631222*^9, 
   3.8450433948913903`*^9}, {3.845043436701793*^9, 3.845043458830859*^9}, {
   3.8450434913708134`*^9, 3.8450435144542074`*^9}, 3.8450435634013424`*^9, {
   3.845043652260578*^9, 3.845043652741896*^9}, 3.845044961232326*^9, 
   3.8450478485078444`*^9, {3.845918357722026*^9, 3.8459183622702703`*^9}, {
   3.8460012212613683`*^9, 3.8460012264810104`*^9}, 3.8460217144186335`*^9, {
   3.8460231595946617`*^9, 3.846023165534622*^9}, {3.846023197994383*^9, 
   3.8460231990390916`*^9}, 3.8460961034288235`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{
     RowBox[{"Last", "[", "goodValIter", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845040090183707*^9, 3.845040128420087*^9}, {
  3.8460007875636425`*^9, 3.846000801253723*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "newv0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", "updateValues", ",", "newVals", ",", "tableNewValues", ",", 
        "tValues", ",", "iterTable", ",", "goodValIter", ",", "nV"}], "}"}], 
      ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "n"}], "}"}]}]}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"iterTable", "=", 
                RowBox[{
                "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "=", 
            RowBox[{"pickNewValueIter", "[", 
             RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"Last", "[", "goodValIter", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.844362111190406*^9, 3.844362121675807*^9}, {
   3.844460247556864*^9, 3.8444602629714775`*^9}, 3.844465539884472*^9, {
   3.844465612855119*^9, 3.844465633559856*^9}, {3.8444656735616617`*^9, 
   3.8444657778591137`*^9}, {3.8444658333678555`*^9, 
   3.8444658639118805`*^9}, {3.8444659988895426`*^9, 3.8444660455485296`*^9}, 
   3.844466163146289*^9, {3.8444667480392838`*^9, 3.8444667624380555`*^9}, {
   3.844466856125552*^9, 3.8444668566340017`*^9}, {3.8444673031048746`*^9, 
   3.844467313894212*^9}, {3.8444673578772583`*^9, 3.844467358944499*^9}, {
   3.8444679481500235`*^9, 3.8444679562208757`*^9}, {3.8444680363683558`*^9, 
   3.844468068400166*^9}, {3.84446843803209*^9, 3.844468495636952*^9}, 
   3.844468729720846*^9, {3.8444692499050045`*^9, 3.844469250302681*^9}, {
   3.8445194746865516`*^9, 3.8445194778982077`*^9}, {3.8445196492146997`*^9, 
   3.844519681203652*^9}, {3.844519712403158*^9, 3.8445197430357046`*^9}, 
   3.844519790054809*^9, {3.844520712407405*^9, 3.84452075661621*^9}, {
   3.84452089517029*^9, 3.8445208997409673`*^9}, {3.844521591603115*^9, 
   3.8445215932704096`*^9}, 3.8445216953082337`*^9, 3.844521792030468*^9, {
   3.844523094337858*^9, 3.8445230949554443`*^9}, {3.844524092322474*^9, 
   3.844524096286628*^9}, {3.844528920321431*^9, 3.844528951245701*^9}, {
   3.8448659934702606`*^9, 3.8448659940698223`*^9}, 3.844868957719557*^9, {
   3.844869197092396*^9, 3.8448692031366224`*^9}, {3.8449553839120035`*^9, 
   3.8449553896059885`*^9}, {3.8450381992746*^9, 3.8450382174107485`*^9}, 
   3.8450438414452667`*^9, {3.8450439365198903`*^9, 3.845043941073431*^9}, {
   3.845044970362219*^9, 3.8450449749652495`*^9}, 3.84504790511629*^9, {
   3.845918420937899*^9, 3.845918426274135*^9}, {3.8460015072013903`*^9, 
   3.84600154481453*^9}, {3.8460015963097467`*^9, 3.8460015965694647`*^9}, {
   3.846023301078119*^9, 3.8460233050893593`*^9}, {3.846086750529233*^9, 
   3.846086761370406*^9}, 3.8460880921680574`*^9, 3.8460883495558047`*^9, 
   3.84609607933205*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-\
481b488627c2"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PyrFlow1D", "[", 
    RowBox[{"10", ",", " ", "p", ",", "newv0", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, 3.8444602703342605`*^9, 
   3.8444657790598745`*^9, 3.8444658517453156`*^9, 3.844467337496135*^9, {
   3.84446810899422*^9, 3.8444681207636952`*^9}, {3.8444690196543484`*^9, 
   3.8444690537755437`*^9}, {3.8444692346263294`*^9, 
   3.8444692429257164`*^9}, {3.8444693087297163`*^9, 
   3.8444693418978047`*^9}, {3.844521729294717*^9, 3.8445217319462013`*^9}, {
   3.8445219790342903`*^9, 3.8445219906796007`*^9}, {3.844869018428*^9, 
   3.844869027052926*^9}, {3.844869216681383*^9, 3.8448692177693863`*^9}, {
   3.8450380595407257`*^9, 3.845038066363885*^9}, 3.8450449792125807`*^9, {
   3.845045066071169*^9, 3.845045066668535*^9}, {3.8450470968326883`*^9, 
   3.8450470996875415`*^9}, {3.845047134527914*^9, 3.8450471376710906`*^9}, {
   3.84504718148096*^9, 3.845047182877651*^9}, {3.845657156700632*^9, 
   3.845657158718465*^9}, {3.846001168170922*^9, 3.8460011691828656`*^9}, 
   3.8460233467870703`*^9, 3.84608841182693*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{"10", ",", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445219867175174`*^9, 3.8445219991011286`*^9}, {
   3.8448692242987785`*^9, 3.844869225296276*^9}, {3.845038072374775*^9, 
   3.845038075093134*^9}, 3.845044985460975*^9, 3.8450471983336673`*^9, 
   3.8456571610417123`*^9, 3.845657206167536*^9, {3.8460007155152283`*^9, 
   3.8460007186018267`*^9}, 3.846001175303458*^9, {3.8460016281623354`*^9, 
   3.846001630633064*^9}, {3.846001678204561*^9, 3.8460017159634113`*^9}, 
   3.8460233480474925`*^9, 3.846088415138697*^9},
 CellLabel->
  "In[252]:=",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"10", ",", " ", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "==", 
    RowBox[{
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{"10", ",", "p", ",", "newv0", ",", " ", 
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
       "noteBookMode"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445221438362274`*^9, 3.844522149421374*^9}, {
  3.844869258717738*^9, 3.8448692675606394`*^9}, {3.845038079850918*^9, 
  3.8450380918328047`*^9}, {3.845044990996796*^9, 3.845044992268646*^9}, {
  3.845657164114723*^9, 3.845657166006479*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"27418d46-f597-4820-9d54-\
72d01137cc93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "List", " ", "of", " ", "initial", " ", "values", " ", "we", " ", "are", 
    " ", "going", " ", "to", " ", "try"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", "newv0", "]"}]}]], "Input",
 CellChangeTimes->{
  3.8450450496882987`*^9, {3.8450479351213055`*^9, 3.8450479543324203`*^9}, {
   3.8460881550816407`*^9, 3.84608816086804*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{"newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]], "Input",
 CellChangeTimes->{{3.844460992649581*^9, 3.84446100281861*^9}, {
   3.8444650287524195`*^9, 3.8444650299651155`*^9}, {3.844465076147544*^9, 
   3.84446508980591*^9}, {3.8444651218401146`*^9, 3.844465122987401*^9}, 
   3.8445228563042336`*^9, 3.8448659693383055`*^9, {3.8448692845010266`*^9, 
   3.844869286212863*^9}, 3.8450380999025164`*^9, 3.8450450085264883`*^9, {
   3.8450450881570735`*^9, 3.845045099085638*^9}, 3.8460880491262136`*^9, 
   3.846088254265647*^9, 3.846092237210523*^9},
 CellLabel->
  "In[255]:=",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "initial", " ", "Values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.845045263868204*^9, 3.8450452694034853`*^9}, 
   3.8450476199467487`*^9, {3.8450479635610037`*^9, 3.845047975491262*^9}, {
   3.8460006615647287`*^9, 3.8460006668143864`*^9}, 3.8460872315102835`*^9, {
   3.846087771965379*^9, 3.84608777251213*^9}, {3.8460922546844273`*^9, 
   3.8460922579585743`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dis", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pixelInitialValueGraphics", "[", 
  RowBox[{"10", ",", "p", ",", "listv0", ",", "dis", ",", " ", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.001", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.8444610720575733`*^9}, 3.844465103128627*^9, {
   3.844468954478764*^9, 3.844468955836996*^9}, {3.8445223288621674`*^9, 
   3.844522331588422*^9}, {3.8445224254548025`*^9, 3.844522442397056*^9}, {
   3.844523120633779*^9, 3.8445231264669933`*^9}, {3.844865883020569*^9, 
   3.8448658976377945`*^9}, 3.844865928166531*^9, 3.8448688843438253`*^9, {
   3.845045172614132*^9, 3.8450451828856764`*^9}, 3.8450452794504633`*^9, 
   3.8450455327267056`*^9, {3.845047989488798*^9, 3.8450480081172156`*^9}, 
   3.8460874847973375`*^9, {3.846088028094764*^9, 3.8460880409247837`*^9}, {
   3.8460881130570087`*^9, 3.846088139269883*^9}, 3.8460882479390144`*^9, {
   3.846092261895195*^9, 3.846092278344483*^9}, 3.8460961301642113`*^9},
 CellLabel->
  "In[259]:=",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"pixelInitialValueGraphics", "[", 
    RowBox[{"10", ",", "1000", ",", "p", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "dis", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
     RowBox[{"0.001", "*", 
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.84446109126562*^9}, 3.844465109413933*^9, 
   3.844522645686282*^9, {3.844523132263279*^9, 3.8445231640872555`*^9}, {
   3.8450306042313957`*^9, 3.8450306073687077`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f18ac198-8579-4ade-8334-41343ab1cfed"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 512, 8, 97, "Title",ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-04efcb90444f"],
Cell[CellGroupData[{
Cell[1117, 34, 359, 6, 67, "Section",ExpressionUUID->"564bd16b-5ad2-477e-879c-a49b47193581"],
Cell[1479, 42, 426, 8, 28, "Input",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],
Cell[1908, 52, 590, 16, 49, "Input",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],
Cell[2501, 70, 362, 6, 49, "Input",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],
Cell[2866, 78, 310, 7, 28, "Input",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3213, 90, 337, 5, 67, "Section",ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-e28adb0822c9"],
Cell[3553, 97, 2440, 58, 88, "Input",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],
Cell[CellGroupData[{
Cell[6018, 159, 2158, 62, 166, "Input",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],
Cell[8179, 223, 20339, 355, 237, "Output",ExpressionUUID->"67607868-6aad-4521-8d44-c4cd6a14c8f6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28567, 584, 277, 4, 67, "Section",ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-301a424457b1"],
Cell[CellGroupData[{
Cell[28869, 592, 162, 3, 54, "Subsection",ExpressionUUID->"86d2106e-d02d-4249-a85a-97f3df8af812"],
Cell[29034, 597, 17899, 368, 981, "Input",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[46970, 970, 191, 3, 53, "Subsection",ExpressionUUID->"09c54b45-a793-4cfd-ad20-2e7a5f10a972"],
Cell[47164, 975, 1404, 29, 88, "Input",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],
Cell[48571, 1006, 353, 8, 49, "Input",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],
Cell[CellGroupData[{
Cell[48949, 1018, 2250, 42, 88, "Input",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],
Cell[51202, 1062, 358, 9, 32, "Output",ExpressionUUID->"383aa955-eba6-467f-b657-10902228d591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51597, 1076, 971, 18, 49, "Input",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],
Cell[52571, 1096, 17717, 313, 238, "Output",ExpressionUUID->"29162b78-cb54-4ec0-901a-0d60c0c903f5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70337, 1415, 182, 3, 54, "Subsection",ExpressionUUID->"a4c25ec2-f772-4494-87f0-6c86ae6eb27a"],
Cell[70522, 1420, 4385, 89, 435, "Input",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f",
 InitializationCell->True],
Cell[74910, 1511, 1692, 51, 107, "Input",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],
Cell[CellGroupData[{
Cell[76627, 1566, 1414, 25, 49, "Input",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],
Cell[78044, 1593, 299, 7, 32, "Output",ExpressionUUID->"8ebfde0b-d47d-4e8b-bdbd-82d73fa235b2"],
Cell[78346, 1602, 250, 5, 32, "Output",ExpressionUUID->"6163bccb-da6e-4d64-8391-08aa861a12f4"]
}, Open  ]],
Cell[78611, 1610, 6067, 128, 474, "Input",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[84703, 1742, 4294, 97, 497, "Input",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],
Cell[89000, 1841, 406, 9, 32, "Output",ExpressionUUID->"c91e00d5-5754-4922-a0de-50a7541cb2e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89443, 1855, 508, 13, 49, "Input",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],
Cell[89954, 1870, 51229, 862, 234, "Output",ExpressionUUID->"f100f8cd-bab7-427a-af6a-a28b91ed228a"]
}, Open  ]],
Cell[141198, 2735, 19122, 327, 923, "Input",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[160345, 3066, 182, 3, 45, "Subsubsection",ExpressionUUID->"1677df7d-d338-4ae0-86ef-227ba8502fad"],
Cell[160530, 3071, 196, 5, 28, "Input",ExpressionUUID->"b14c0653-3e9f-41bc-ad3b-fb428643f9e5"],
Cell[CellGroupData[{
Cell[160751, 3080, 3979, 92, 185, "Input",ExpressionUUID->"a2f96ad6-157a-40a4-b5dc-b0107b8c5ea4"],
Cell[164733, 3174, 4187, 109, 159, "Output",ExpressionUUID->"6430c78d-c6af-411d-af40-1f4dd74ffcd6"],
Cell[168923, 3285, 103899, 1804, 336, "Output",ExpressionUUID->"ae113fd5-2559-4f55-b11e-f0e6b6af9eb0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272871, 5095, 182, 3, 45, "Subsubsection",ExpressionUUID->"4d225df1-a7b8-4e3e-b420-6ff5f34abf9d"],
Cell[273056, 5100, 3933, 94, 185, "Input",ExpressionUUID->"9fd57488-dee4-4f36-8bcc-ab84a909ef9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277026, 5199, 182, 3, 45, "Subsubsection",ExpressionUUID->"1addfeb2-5c39-4529-bb6d-d0c229ca6ab7"],
Cell[277211, 5204, 240, 6, 35, "Text",ExpressionUUID->"880a687b-6dd2-4828-9358-0c01b407a3f7"],
Cell[277454, 5212, 5247, 101, 224, "Input",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],
Cell[282704, 5315, 1602, 27, 49, "Input",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[284367, 5349, 275, 4, 67, "Section",ExpressionUUID->"d69ea01b-c1ef-4113-8cab-b11ccf013757"],
Cell[CellGroupData[{
Cell[284667, 5357, 292, 5, 54, "Subsection",ExpressionUUID->"c8124fb5-6975-4957-950c-1a0ca8f99e5a"],
Cell[CellGroupData[{
Cell[284984, 5366, 182, 3, 45, "Subsubsection",ExpressionUUID->"8aa49981-e1b7-40e4-b201-cbbe28e3204e"],
Cell[285169, 5371, 3816, 90, 185, "Input",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289046, 5468, 325, 5, 67, "Section",ExpressionUUID->"b94d5e78-6273-405e-baaa-6e385d5d2376"],
Cell[289374, 5475, 6398, 136, 455, "Input",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d",
 InitializationCell->True],
Cell[295775, 5613, 1163, 24, 107, "Input",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],
Cell[296941, 5639, 4881, 110, 458, "Input",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],
Cell[301825, 5751, 572, 14, 49, "Input",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],
Cell[302400, 5767, 15550, 275, 903, "Input",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[317975, 6046, 182, 3, 45, "Subsubsection",ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-481b488627c2"],
Cell[318160, 6051, 1883, 32, 66, "Input",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],
Cell[320046, 6085, 1123, 24, 66, "Input",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],
Cell[321172, 6111, 1166, 28, 85, "Input",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322375, 6144, 182, 3, 45, "Subsubsection",ExpressionUUID->"27418d46-f597-4820-9d54-72d01137cc93"],
Cell[322560, 6149, 500, 11, 47, "Input",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],
Cell[323063, 6162, 859, 17, 28, "Input",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],
Cell[323925, 6181, 2585, 81, 122, "Input",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],
Cell[326513, 6264, 1735, 37, 141, "Input",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],
Cell[328251, 6303, 1253, 32, 127, "Input",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

