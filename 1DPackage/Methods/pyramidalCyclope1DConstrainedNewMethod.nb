(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1064600,      19928]
NotebookOptionsPosition[   1053927,      19740]
NotebookOutlinePosition[   1054482,      19760]
CellTagsIndexPosition[   1054439,      19757]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Constrained method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, 
   3.843831097875743*^9},ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-\
04efcb90444f"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 3.843153621995445*^9}, {
  3.843752212635614*^9, 
  3.8437522150627623`*^9}},ExpressionUUID->"564bd16b-5ad2-477e-879c-\
a49b47193581"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431523924971895`*^9, 3.84315239273125*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{
  3.843747328636345*^9, {3.8437486091702127`*^9, 3.8437486224305134`*^9}, {
   3.8445130212660832`*^9, 3.844513027637513*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.8444602155397797`*^9, 
   3.844460218580969*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-\
e28adb0822c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dis", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.8527432872559943`*^9, 3.8527432891307516`*^9}, {
  3.852820564514149*^9, 3.852820594366195*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"bcce114e-be95-4be9-af3b-e98691bcc37f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "dis"}], ",", 
           RowBox[{"30", "-", "dis"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9, {
   3.8445119817060966`*^9, 3.844511983305078*^9}, {3.8522966047840776`*^9, 
   3.852296606303194*^9}, {3.85274328091955*^9, 3.852743295758687*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
       ",", 
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}, {3.8445127985159717`*^9, 
   3.8445128295209723`*^9}, {3.852820576515012*^9, 3.8528205805400867`*^9}, {
   3.855166295150268*^9, 3.855166302058202*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
mHiyS1t0SdD0UE1pwHYOPSCZeYVlQIJTa0dzsh3mUJfOqWt1hiRodDez5ToR
76V68Y0KMxJ0df1Bue5zaMTQr5u7LElA2bRL/qIHMY9kmFcXWpMAfd3a1+k5
h+b94qlPtyOBy37dlYEjc2hphf1dQUcS8OuuZVX5zqFVDjVNcU4kOCm7od7B
fw5tEFrfvOxC5I837h4OmENbsENYmDvB34a6L3uPEfNSYHPLDw8SuNowrU8G
zaEvd21+7OtFgt6fz8Pjgol5oN+vbdSHBP8SPBrdj8+howntT1x9SXC9YtZH
9ATxnjF2dL71J0HpT7fpCwT+MxHaZXOMBNW8t0o+EZi3qKe7O5gERYHtn/8Q
WMhcqXdfCAlIA0XC/1+XWBXz8lEYCej9CvEpBN5R+/YV5xQJwlesy1YTWPEw
eaAhkuD/vy1PUCK/1pbzbzWjSDBodtgMiPo4HSPvK2MI/SrUc1YT9eud4n6S
iydBQaHnSmLgHGqmlv25OJEEA20rI88IPuw+zXyRTCaBID519TnBl/sFg9GM
8yT4u0u25BzBp69OybhQGglCz58n8XnPoSHzCxMJF0iwN1uukXqYeP/LLad5
Mkmg+u7tBRlCL9W2ywcDsklgf3Jf9nNnwk/D3599yCWBp41vINlxDk3k2cs2
KSCB36/aTDPCDxSZjMp7RSSI+3Y+VNp6Dv3MHt6qVEKC1rseKcVmc2iqvdbZ
nFIS6E1WGPUYzqHjmX1ex8uJ/ZWqKSjhx6yaXW+GrxP1GBksnWTOoXt7gvQt
qwi/hcYNO5Pn0ML1YvLqd0gwUSY1s1NhDjVUOpRZWEuCVw1WS39liPlEv3b1
+gYSPDrjZh1B9ItFjPXw2D0S8B7E692IeeTfpTLLAw9IsH7dS8uzxLxQ+eBn
SytO7BfVO3Zukrh//1y8dLmVBGF3ZpbpbbPoHYkR4U1PSFDr+x55T9xXzhTK
6dMdJAik2jhWF8yijQH9Bx27ScAGs+fv/GfRwylyXR09JKisTPhP1Za4j24c
ZzNeEn4Ori+4jMyivqPi2zYPkMAh0H3DN8FZVNZp/5vuzyT4bDo3n5c7gz4P
v6rPHSH4+tSbWX1yBg3Pna+/MUrkOxaz2Gs/g/a/zMpMmiTB+5HmB4pbZtAk
o9eWe+dJYKudUvAifhqleis8rP5NggdrP4x/dZ5Gh+NDNHcsksDHr19nhjaN
ch5KbPy7TPRDgEL70y9T6BzdtqueXwveosd+pWpOoUX7y9ly67VAL0WwUn7V
FGoU/LsyY4MWHB3T1G/umUSv3Mo5GyCqBeVSJ5KWfSdRO/kBfSUpLShZK+zl
mz+BPhS1f1iooQXn6jfL5DwfR4U3mVl8JmkBr8muI52Z46jDBp1P8hQtEJqf
bPd2HEd/rFP7d4uhBadi1Zd/j46hcv94mA+1teBdbWPw4O9RNGGsovqrtRac
DNn1L5DvK2rUvHBJPUwLUEmbAtrYEJrdNK0eHK4FSc7yKapXhtDhhuEHdyO0
4PzH4MktbkPoqTtd7yBaCyR3rgpqqf+EVl0r2WKdrAWPMW0L16IP6MYL+9JC
C7VA+kTEHZWQQbT/cO7plhYt+Lw4rnwyuRftGlXaTHtM4Bu5Kkf5e9FWr/s3
brRpgWzi86zkxB60zufjQHanFgj6LyQuib5As/zkyH79WvDk5pPyftYzNHWm
vmP4tRZc8/Z8u2DciSYEGLjaDWqBxKGvNoquHWjIsSMpOh+1oFlw1nFVxhP0
wInqsa3jWlD8Vtp4jUwravZL+3TahBZE6t7YP234GNUPfSm+ZloL1AdmpC6c
fITSTv7SnvuuBYeCVkt5jLSgEpGcwvYlLXhgVjyx99V9VHj5uRZnWQtclOf/
Xva7h64949Jxh4cMlzuOagwKN6G/omJ+Fa4hg8NE/tvfRxvQN3FPLYI3ksG9
uFLcJPUO2rPGYWxchAz0ClejpaPV6NOEyUhncTIc1Gtw7Cm7hTYmCd8w3EqG
e0/dtZV8K9FqgRJtfDsZvK1v8e71rkArkkkDFBkyfGmo9BA4fg3NPW+zRnY3
GXp4Ppq/aSpF0zeMFmTJkyHsS8Wp0J8laFJqqNZ6RTK0q+dt+xlajIal57v8
UiUD6815s5vfc1C7zKGmLhqRb6+/t/+xJNRic5DFXiYZ6naLHXoiHYvuy149
dpdNBvb2Bk7c8imUkasgXgZk0Ax7cbP8pBuqubWxUlKHDAd0rlI5D0VxxXxD
7VQ9MgzJykjxfHTDtxb6+p80IsP29ls7HoucxEWll/lmTcjAs/H+ykfDKFyw
OK3Aw5zIP3U/XvZ9LL54qeapuQ0ZdFxP4KWhyfgPWV2XtgNkkF3zcTwiJgWf
uPxqnmVPhrv/PguMaabjb8sWdik4k8H4X61qXE8GHsSnMXjMleCjvab08vRF
XODw4bQH7mRwU66XUviTiZe0FegJHCaD2VWVTx4/s3CGQt+SjRcZHtUlqN95
n42/SOCvKfEh4vfTzJ3rc3DPMcR76igZXGKq4vHIXHzZ4IQMw58MH1h2Eoq0
PDyr4kZ/bCAZDMIr9SY/5uGqAsPJL4LI0PlAzO5gWD7e6iOpvf0EGXxi+DK6
eQtwx06z356hZDiuO03POl2A/1COv1lzkgxTUUjq6qkCPPnc/UPLp8jwqs57
0Ne4EN859X2r0WkypB587yRXVIg3mij2ZEWRYde8gGvk50Lc4qZzwucYor4l
N7lnkkX4+IYsjlo8GVZP2cy66hThZ/yf/QhLJPTUsV6T4VaES7xYdb31LBmO
nXleeSe4CL+lwXDZdJ4Mk9spcmLhRbheuv/mg6lk+J71u17gRBH+fu7Ks/J0
MpgfSboy7lGEH7d8F/0zgwwdm20pq42K8PU1Igw0iwy0zf3Xq+SK8FLRfTPJ
OWRw+hpgyJgvxFnBp6+8ziPDNG+B7Z/7hXjvyzqHXYVk+DTRJqlzshD3pkxu
8i8mw9etbr3eaoU4T9bOJ00lZLgh9KHtwUABnjNvG7mmjAxcqGRlnSrA2xta
vxWWE3oeXGyQvJ6PO29ZujR+nQynEGeDo5R8fD6UdIBSRYYim1c+KY15uByz
+NGzajLobcRDUqpy8ft5/WFbaslQclN0QkQ6F7daFNQ4VE+GX0HsVbWJOXj0
/dCCxSYi3uFu1VyTbFxS6palfjMZYs9v7Ywpz8KrI0bWZWBEPz5fknrzLxP/
yLU8rvSYOO8Fg3mB4os4p0XZ1K6LDIpthlO19en4S1m31Ve6ifjttMMbJ9Lw
I9E5TbM9ZIjj23QF80jF8/byKSS+IvT0HnfstjiH/2r9sFz/kQy3ZLuqvm2O
x+90pFeLfSf0OxqsmfbsGD6Vhb20/kmGjAkJ6eFxP1zBferXxXkyUJ46ydhb
e+OFiwZc8UUyOJutM3ZecMDftJ9wtflL3DcKW89PnLbARS+WxWYuE/3UzMM/
psTEk1RWOsRXU8D0fm5NUIQR+vi36rTNGgqUm0tZxKUfQJcfO2zKWkcBsVb1
hVc5LmjwwYYDm4UosJg1q3Lawxt1TvH7snkzBfaG/0ix/RmM5tkXrD2whQJO
wY9G/9w9gfbLdyhlb6XAdcE2n6yjoaghJhcoIUOBVaLWNy+WhKNxyVYXD8hS
QJnX1tRjVwSKHYhqyN5FgZrU068FMiNRyuy7vxJ7KHAMz7zzZncUGnBfQNZW
iQJl1aJlwm1RaGUiXSdHhQL3Z/PHi5yj0R2yF89u0aRA++u95uRTMajDVEuV
rRaRH5NxDVyOQTMbZ17kUChwJTjySnB4LCpoaSQhyaSARRu7nOUUh+pJhzHt
2BSIumy7n9oah0Z9u3owl0sBl05/CQ+5ePRe/cszAyiR38XFfTgyHp2PXlUm
uZcCAdHr7jzriUc1zTTa7XQpEGGuF86WTkCPbHP6lqtPgZhvv6imhxLQq6PJ
QoP7KJAVsOgoVZaADtU0amw1psCJVeoere8T0O1nRq3sTSnwBwtod92UiB4w
Fg/JM6fAzydFi0JIInphy968QUsK6HOyw0YOJ6JdXwKat9pQ4Amb3siblIiu
qy76ZH+AAuajzqTYK4no3ohnvPl2FGhwnHSMvp+IRuz7I//WgQKv79+7Lfk8
Eb0rvsdwmxMF0hVuXPEYTER/DNn4OrhQoP5+fk3UUCKqejMmLd+NAooFXpZJ
w4mo18nqmreHKNA0MruQ/SkRLdX7+GqbJwV0GkV2Pn2TiH4QEfrj4E2By9Qb
2vRniajkR6ZUwREK3IjI71tpSkStK73Qd74UYN58YMwl6ksNyXLfHkABpbEf
cuuTE9GOvY/jHY9RwMxI8nXc0USUb+P3ioJgCiT8Wv+mbV8iiryT6Xp3ggIP
1ldd+rYzET1ZbjK7PYzQ8/rr8vW/E9C64HDRg+EUUJ3z8TJ4moDOoBXUwggK
6K7oHGjMSkA9BlZHSEVTQPiX7uVy+QTUSLH7WkosBUqYx8/8G45HSWG5vcvx
hJ8FNLxdC+PR5S1qez4nU2AyjHxvcHU8+tXrt6VVCsGn+k9rWk0c2nX3YcTj
NAoEFirbqxL+ybM90Hc1k4j3bGrtseuxaFS57D+JHAr0lU5/WmMci3r+ntiT
lEeBr05W8S3fYlBKzpnII8UUKKgkZ5N3xKDdrysUNSoocKCvM2TMLwqtUwi2
LqmkwIWfeA3vnzNoQQj3tMhNCmQ0umfWip5BvSX6Xv68QwHe5W/+VzmRKO+B
pdON9ynwYvDb85Cgkyj9lekr7RcUGFhcVcAqO4bKyEvy1PZSIPLnhk8K1wNR
vhPDynL9FOJ9GksZdQlA+8RDo9YOEv3vbpSUHHMU9bUpUXk2TOibLxbz679D
qNWVIwc4X4l+KCn6rCLjjjL/o0TfHKOA2k1OepypK7o2s+N12hQFNm171Vwa
bY+WvPwRbfOLApxqb7fncvvQhN0PqtoWKOD8IU4p9Jk26hec+Ia2RIFeznz2
cQYdZYlJqW3locI8unP3jewP2M5Do7bJvFTwmjyfNhG5B+evrY5Z4qOCMMPO
Mb+chr+y0hv4IECF64ObOt/d0sObSzeuNheiwg77/vbWbCO89MegWoswFRZW
ifULWZrjgRn+saViVLiVorh4docNLtiXo+4lTYXfmf/ON/EfxNNXrTt5awcV
vM+deXC12gmXIIU8nt9JBZtJT9oDfRd8V7qNXZwCFUQEzlNIO9zwCvxx6TNF
KmiEOqlQe9xw9VmtaVEVKtjdZi0+DXPHmWYiMZc1qPAp47v1tjuHcCwyqmuc
RIXvT+8uiGt74Lo3ZyU0KVQo/uh+fWuHB9753tktlEaFv5LffugbHsYthLpv
YAwquD4A9/sPD+Ov2dxfa9hU2CXiGpel5YkfPFoFplwqpNlzR38WeOLencmv
3mlToeuDYNFdOy985s+fHbt1qcC9MrbeocoLP67kc+SIPhXqjzvOLC544Yt2
A3V39lHhTObB3kbEG49KMlhZMKLCj32ftWsivfG1jQ2GYEoFjzefutY0eOPn
x+QzE82psCfebKV3zBsX3ZL1sduSCpk5uz2pYj54jj6fkoQNFb5Z7081Y/jg
UiHBwU4HqJC9MsjHsfXBS68OP7hiR5z/U/kBqUAfXPGVJf+UAxX0WPWbhGN9
8Ft8D63ITlSYtF7ANdJ9cApFsyjchQrKQV7fL+X44PcOXRp76EaFQ28XSJF5
PjhcFNYS8CD47S0VHs3ywdsfRUZYeFLhX5Gj+J/zPrjJj6n2HG8qbIrb2tN/
2gfv23lQ5NMRKnh29HXnHPXB7SyfOSr4UcG+NrLI1doH/xjFuuYXQAVW4qYO
U5oP7lF9fa7uGBUOJkd/jBT3wSc+SbL/BlNhK++TIxtnvPHAjUnxOiFUeEx+
syj72BufR36/SA4jsEfF9t6L3ni4v+e2vnAqOL7VdEBcvXGe4lceWyOp8GTQ
UydR0RsX+lf7pzyaCrfP1Rkq3PTCM1R3687GUqH3aWNUk48XLnkwI5WWQAXN
qzrZpbu8cLn7gbvbkqkwZdGePnfWE6+c+OQnlEL4t7IyLYPhiWtuM2+0TiP8
0DRTwjdyGGefVDMdvkiFQYEA9Zekw7gVfSJkpZDw93pwPVZ1CB/wtH+of4kK
my+JOE3qHsKds5+uT71MhRmR+ZdK79zxI/PXSqSuUSG6svOQ/yp3PLr2UCfz
NhXyOCUhfgxXvMYzQKrmDhWWuyujugNd8JGtp/yV6wj/nHuv+8TPGd8XlSG6
vYkK708cb15xOYgLmz50+PuICjKFZ39sVLfDC0dlJrHXVAg9/izroo853p2n
zKUPUuFUTGneNmtTfMWElnb7HRWsVBa/eoIx7l5rSi4ZokJ785gIpmiAK0VF
nIqeoMIEf3vWuxgEdyAnPf8zRQV5oS5TkzoWfn704o6gWSrcFGqL5P1Nw+dM
bjx2/4/g85NIEPOIBt6w9e163WUq8GhQlBqqV+HjXV+dmnloIJt2bN36pGlk
W9T325TVNHAOV3+4/fJGNHKU30aenwYfLJ2M1Y/uRm/liV8rEqSB8kszmaJP
iuiQiezC5g00GLFeHrywUx3VraUXrhWlgcriGa4NPwUN8dSZOS1Og1LyaqHz
LjS0fKs5/JaggQWWl9BfzEAFozxHxrbTYK9MPf3raw7KIQfRXGVowJQWN7Lp
QVD/0cikAVka9LhKD6XbA9prkqXaIU+DjmsdT0S370V5eS6f1lakwYnb5u7R
k3tRSm1VT5MyDUbrLgrq39FBPT0bd2mp0YCmfT402VcXzd3aerxSgwadHzVc
w6T10M6uF+27tGiwXfLEKWarHrp05p1kAYUG+0Oton676qPOoz+azzFpQOm7
vUsk0gBNz1sW5uPQ4PawlHrLXwP0kYmgWwRCAx6dv8uiwfvQ/1Y21/4HNMiL
1DUhD+1D5Wt3rvHToQEuNdVlpGuIHvBUs/2qRwP+G9/osZcM0aStzOtO+2iw
upasu/aHIXqvS3fplRENVrCWin9sI3TqjIWpmSkNXOwTpS5GGqEPRFfhheY0
sKRf4/OoNUJTr97RnLSkwbm3wvKqw0aoC8O9lGlDA8HmgOMbBI1RzWei4kkH
aNBqE/pNScUYXeX8OP61HQ0apPvDy/SM0b654N9yjjR4lUbZUWhvjJbFyvkE
O9FASs7gOdXLGD0u8ertQxcaJFvfO5Xhb4zqXY832eROA6Eczs7+AGNUgkPD
nD1oUOYVUSd11Bgd6x7VuOlJA11EUTXV1RhtdMu5vORNg6mLM6eNLIzRs/8Z
iBkdpUHm58iyYJYx6pC4EJfrRwP1krh0lR3GqPK2679GA2jQte8OJ3PZCF2q
svemBtFAz6am+MWAEdqFCr6NPU6DS2zazZWbRmhh3z3jvhAaTIdOOuufNkL9
Dh99IHuSBgvRUZVthkYosrBdI+AU4Z++soRLm4zQjee6Sh5E0iDgy+qJ+T5D
dEg6UlQoigYvVM2fTaQbojE6H+cr4mhQbeo2TOcxRK1fp3r9TqCB3Jb4Nf13
9qFyPuig3lnCT/9Mo7Nd9qHtqSXNwyk00Fp91kmi2oCozj1WKocGJaSmskZF
fWL2E5s/kkeDo9u3JyK4Hlq18tizqYDoh29ZYYtWeqiZvLzRgRIasLakuxYG
6aIXAsc2pV+nQdCPGyiavReVXOdbvLqZBsJ8tgpBW7noHsqJpokhGjjsP2Q1
m66IFmpJ56p9oUHt5rMZ1jkK6CZSW0jgVxostkRNmpXJoQtqmym/vtFAnIf3
n2C3LNq5p/7Wqp9EvtRdHlp/RFFEwSlFd54Gj/nUtd79EkZr5db4Jv4m+nkE
rbi1kx8t3LlfacNfGuTGFW97OzKP+G2fL5NcQ4dJc6PLW/MWseGtRTGO6+ig
5n352sgoL35AUs+tWIAOvuoXAnZY8+PI5iwZOWE6DMvW2t+xFMFrxLj/PDfR
4UWM73OkVQzfI/r13XVROjyQVdvTIyuBb9pIzdPYQgeJWMs/m/K24XEbPoQG
baXDDO/fcsN6KfzP+vgD9dvp4EFlX89tlsGH+V+JsWXpkJvBy9+uvxM/sC7y
R+QuOiyZTb56r7IL71wj39siR4fsHYdX86/bjdfynkjVV6KDVpNVrVyJHK64
StrvrAod3n/61uPgLI8XrrQad6nR4ekruzh1MQU87q+4gJUWUe8k3xe62x58
YbF5LJNCh0yfw0o1i3twvz8e7W9odMgIGmFbn1PED/yqi3Vi0yFxKG4pI0MJ
7/zvoHsJlw6Msg6dEAFlHP3Jp/0FpcPRquBUgTBlvO571Q6FvUS+SnGlgI/K
uOKczbK3LlG/CeLWwVHBC2f+vr+hTwexvTFxrIsq+KbpK/dn9hH1MoKGRj6r
4HGTJvkkYzpQhy49mlBUxf98+y/suCkdNowVhvl7q+L+44W2d83psP3vonlG
iSo+PKpLW7Skg3y3cXZYryp+4OuUONeGDlJCO/N0llTxzi+ZP88coMOgh9C1
zTJqODLM6XtkR/CVeElQhKWG1w6NVK9xpMPaXb7iduZquOKn82n7nIj9I6tF
Njir4YUfKP7nXOhgE7FgauWphm96/96k240O8XnvJI281fD4t3EqIh50SJhA
cAkPNXxxQFXQxpMOqjJ1qW/t1XD/N/3j2d50OPClq/+uoRo+/CriyeAROnwY
3/aph6yGH+iXuyblR4esDxpLBpJqeGdfV5xLAB3sAotC0N+qONp7/FDpMTp8
M58vHuxRxV2tmwwljhP8qEXaG11WxaNe/dNIDqHDu4G7nvhRVbzEdq/Echgd
qkUnUzw0VfGWwYS/x07RIT//YPbhWRV8yPHZ8NdIol5NK4OZChWc5+PGDvso
OthningrO6ngMJybpR1Ph4NtfBK+Dcq4q8eHU/WJxLpoK6nDURmPGt3prpRM
hy+qHm+T/irhDycq1UXS6CDc6TT7UVMJ3/uz+clQLh1+lr75edtnD+5+YtUt
mwI61NgjeydnFPCY33qZT4vogHyotR0LVMAfLXW7VpcS/jca/q/nqDyuw/f5
z5kqQs9704/Je3fjupvXqO5oocOjuym7hTSkcY8cQ9GLj+iw6Xpu8LXF7Xjc
1tSFtW0EJp1ksdu24W3SW9pmOugwtPqbZ42dJK6voOSMvaSDeE1b75EYMdyz
wk9X6zUdGq3xAF9zUTxBuUb52gAdUpMnFuRkRPB2dfbvlA90sPVfJ6wVtwE3
oJumO40R/AuttdZ25MO9my6E9H6jQ3huduDb3bx4Evv1Qb0p4v7Ijcuvm1jB
nqIuSmrfCX2tUgOzjv7Gxh+Wbbz8kw6eZYWryCY/MX7d8XnxX3Tgi9L6qZY0
g+3bd+zR30U6dPnsl6r6+wHz7qyvCPxHh4iGhMRmxW4syWQxdWSFDjwkM2b9
51iswyLWsYuPAW33j11z/foWMbLP+q9AmAGSSuNzy1I/EcH7pxe/bmIApcNK
vYmYZjukvHk0xRjAaDZqdzJaQPYNsYRatzBgtcuQRo7kP4R/r5yo8DYGHJuJ
yG49uII8KdsgaSfFANq+vpa1bTyovtfQ7ilZBtR6dSRe6OFF13Z0KNF2M4BP
oWp3a9tqtE25ViNKngF+pi8lpKv5UN2ZeLa4MgPGGqdz3nqsRVdbBGg7qzLg
hK9r4DmNdeijO3YGFeoM2OsjQV2aXYdqn1Cx5pAZUC5jLFltJYDyvBG3T6Ay
oFffMFp7XgBtYSw799CJ8+SePaqcKoieyR/z2MZigE6n8d906fUo8rfniAeH
AaSsF3YFZevRZad7gbcQBojdsbkWICuEPsDLQhaAAXGvtglSMoXQiJ0pEXt1
GJBzz+268IoQyokNiTmvxwBfSZ/r8m4b0L8jLkmvDRiAXwvUuHRvA3pf3zBV
1ogBXtKNrpfXC6PhFVqZR0wYcJxyxt3KRhhlCUrl15kxYKpsjcNApjC6eHRN
ybIFAyp2n/O1fy6MNj2fubrPmgEnj5rjS/+E0TCNgRsZ+wm+yBmhXxU2oowL
D++8t2VABPniPc6+jejCj8q7Cg4MSNmdcXOP+0b0rk3mg8CDDIi+332i6/hG
NKQh8vE9ZwaY1CYxLKM2ojRJrw4+Nwb8fLSy7X3cRvTXSYsXZocYYFgavPdi
zEa0/h3zVe5hBpgJyPUXntyIHufufjfsxYCZ2xbzMkc2opRLQp9VjzBAxIz5
DLXZiP7H82s0xJcB1wqkT8kzNqK17p+mWvwZUGPBVf61eSMa1Pr0h+AxBmyW
H/j3ZloY1VKoWbAJZkBVj9r277gw+j2xYLn4BAMurD9d7nVeGK3+Fsf3LZQB
WSn8T92shdFAY39BcjjBv/CG0jWbhVGNm7abIiMYcF//mcPJ3g3ojLC2xJPT
DOiYjtnyJWkDeitQWUokmgFF94P/ebM3oKqUf3uuxhN831gZdMsQQqeyRtVm
ExmwxN22fSddCL3x+wWZmcyAl699t2W9WY8q3y9Fn6cS511qHCcLrUcnpM7r
bbnAgA0LJN4bJYLo9dMnjN0uMuDu28/+ASRBVHHvPtv5HAZUan19HbZPAFXo
mPaXvkzkMw76r8liHXrhVnBEbhkDhoQay5Jb1qJ/L/45K3aNAZfkvjf5qa1F
XzqvuSpwgwHrWbEGait8aNR/Uu/m6xhwQHmT9OdEXvTtDhOD7qcM2Mev9kj5
ziKit6bPxvAZUY95nEuB6x+kesLWvfU5A55Yflfdu2kBSaw/FHmvjwG8ZrnV
DcfmEYrxqdpr7xlwLnKqfdBgDkkNqdxxZo4BLf9WMWds3yJ/HDXVFn8wYNsj
S6r+4CvEQ7uBdWKeAWG368Kbg3sRttCj/UcXGSAo1x6v/N9D5Np3g0Ojfxlg
BZLvVl2pRUTfPA90WyHiRXg/OPIlFRm/PHjOlo8JAh7jzttU7mHWiS55fWuZ
ULOd8XiS2ophvl+vmQowodINbzgo8QzLon9/qCPMBJ8DohsdN/Rje5/zL2hI
MsHocG8n35VP2M2a1DU3tjHh7LmG4NkdnzHJXHExBWkmRKadMop2GcZm3WXV
pXYxYZPOLZ9DdSOYw75r7Bw5JlATudj2zq9Yu5qqoegeJryXTfy5r28UK1yg
e/CrMiE34rxk371xbN3HB8di1Zkg0u8jnl3wDQt6rHNmWZMJ1yt1BS4FTGAf
KjrOnyQz4W2n2j9Z+iS2L9U8/z8qE3avUH+Z/5jEaoNflQcwmCAo6r/ocnkK
k7F3rJ9gEefvHt0YrzuNze/26hlCmZBy9EPCR68ZjO/EiJHFXiaUi0qf5IzO
YKLtbm24LhP4i33tv9rPYju3fEI1DJjgZ/jOXfDxLKbpffBesSETeBU53jOb
5jCkaZAibMKE5JDrM/rsOcxU0PZ2pBkTdqlz3ctd57CDjv1K0xZMODx12lUx
eg47UmV55aA1E/6Z/UoYLpzDTv7rlunaz4TbP5WDZ2rnsCQzkzy2HbE/7Moj
j/Y5LPtSh9gNByasCp8Qde6fw67O6aducyLqy4lb9fPDHFan3cqf7MKET76L
Kpwvc9ijDO3YP25MYOW91LAamcN6v2D/vD2Y0NWUU2n6eQ4bonDCBjyZgPp2
Mw3ezmEz8U0/DHyYYG62Em77Yg7795rmd/coEy7/u7M+p2UOE1KsG1PwZ8LE
Fv+zMrfmsG0nSe7ZgUwYZd2/sDZ3DlPqvPV+TTATSHw7H3mdnsMY21VtT5xg
QrzInkYHtzlM3/d670goE0p59osswBy2/4GCiU04E7YHaB21k57DPISvtD+O
IPiZT2lXnJ7Fglx2apPPMMEkhqJ+Nm8WS18lRRONY4L6BM3i6dAMVmyVVx2d
wAQK506UQMQMdrNMQuV7EuGv71/FF0RmsE49EdmeFMKvQfdtStWnscHs1Hw0
nQnzdeEhLfVT2PjY+s23M5igv480bsGYwtYkrxVMzWFCltnD8hTNSQy6l34a
Xyb8aLtlw+CPcaz+wOiTJ3VEv1jOSj/79gUr8bofgL9jQuGOD/HBP3sxs9wP
Ams+MkG2Vq95trYH+/t0pcxoiPC3ucFR55luzE5Zd+DVCBOkttQbBAh3Ypum
u2BqmgmBqkMldlUtGCY9+5Y0R6xzl3l5XzdjvmYiJ0J/MGHGdtzDybsRe3p7
/3Xe30zYL25febj0NnYm6KPIVh4WoEe3nuEf0EVUy3iqnHlZ8N+lSJ0lwTTk
7ctd+lf4WODyJlagfqYIoVG9wjUEWNDc9M5rvqYKGTl8VvzEehbQNl/yvFp0
B8nIvnHr3gYWlGgt9ba21SEzv2eH9URZ4KTziZ/x+B5SqCgaeU6cBdUdEbO0
vAfEvELZ0ivBgrtqYe6g3IJcuxdmfHA7C/IP7W2Sxx4hNpP5Xy9Ls0A5/0PN
/f8eI7xSD86M7WDBGZ8/SKlMG+IcuaouSI4FWYefKgmZPkGEbu02a1RgwUfH
tRJfLZ8i9z7qjf9TZMHq029vNxl1IBKQLHVWjQW/BxzWrdr6DGkNrGro1mCB
xbsLVh0zz5Cgy90W4losKCg87slo6kK6ecXiL9FYsGvWanWDajcSQabu+Mpg
wRfDwa3bXncjyh62TcpsFtz8JSvec/wFMpB50jqQy4KdN0MPRvP1IAltBdP1
KAsap+K8/A17EMqvB4lL2iw4MZWfqnu2BxlWGNqprcuCVmcp6tbWHiTdlrc5
QZ8Fa38dxVYt9iDcJLkDXftYEO8xlSKm0otMNOrPiRiz4OFBnnUetr1I7jfv
ZFtTFuy5IJjCf6YX0d92Tq7InAXCdX6xEqW9yH9GN7FhSxb0hJ43LWvpRUpP
vbBTtGHB69QOs9a3vYhF1fcffgcIPm8kTqTO9SLL78VSau1YoBGlFCfJ24dU
baDt+ePAAiNc5EzIxj7EAbF7iDgR69vLEEyyD+EPCHeMc2GBgT4orJHpQxou
Fc53uLFg+odxnuuOPsSjB0vb6MGC8y8Vl75K9SGiqz4r7fck8uUzb1dK9CEt
pNWt+d4sUFkckmwV6kP83eWdh46wYP5KdIHBSi8iddFgQd6PBRzT0/lGM71I
iMHa/MIAFsRNnnzIO9CL9Cy1ssWCCD7XfjDofdCLKFfHfjh7nAVN77uO9V7q
RWI99p7hCWXB5pv+sTKne5H3kqt2hp4k/NQw1vLSrhehPccfTZ9iQQ7NyV9I
k+CXyl37LooFnrl9Sif6exDdiaVyy1gWyP2Wanl3uQcpLr5n+DSeBQJPF15r
+fYglusYKfXJLKCG/FRD514glfd/qaumsGB/fV/6m+AXCF9gfU9pGgv4u5c3
q/zoRhoHtMTTM1lgGONV8eHTc0Q05Xv92hwWZEoy26+bP0d8tattI/NYoHA6
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
       "]]},
     Annotation[#, "Charting`Private`Tag$60872#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
       "]]},
     Annotation[#, "Charting`Private`Tag$60872#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8564532388600125`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f9762356-b453-479a-bab6-98966dd805b1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D (PyrFlow1D)", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.843153511988031*^9, 
  3.843153515512398*^9}},ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-\
301a424457b1"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"86d2106e-d02d-4249-a85a-\
97f3df8af812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "update", " ", "values", " ", "of", " ", "v1", 
    " ", "and", " ", "v2", " ", "with", " ", "Over", " ", "Constrained", " ", 
    "standards"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Any", " ", "value", " ", "that", " ", "does", " ", "not", " ", "meets", 
    " ", "the", " ", "constraints", " ", "becomes", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}], ",", " ", 
        RowBox[{"and", " ", "counter", " ", "e"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status", " ", "and", " ", "e"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", "c", ",", 
         "d1", ",", "d2", ",", "dv1", ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"3", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"3", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<=", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<oksign\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e"}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitud", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<=", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<okmag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e"}], "}"}],
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}],
                "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", 
                "0"}]}], ")"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"e", "<", "2"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                  RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e"}], 
                 "}"}], "]"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"e", "<=", "n"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v1", "+", "dv1"}], ",", 
             RowBox[{"v2", "+", "dv2"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{"{", 
                  RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.01"}], 
               ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", 
             "e"}], "}"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", "status", ",", "e"}], "}"}], 
            "]"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "No", " ", "other", " ", "solution", " ", "will", " ", "be", " ", 
     "calculated", " ", "when", " ", "status", " ", "records", " ", "an", " ",
      "error", " ", "message", " ", "in", " ", "this", " ", "pyramidal", " ", 
     "level"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "n_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840549828869686*^9, 
   3.840549841777425*^9}, {3.8405509817557898`*^9, 3.840550982064629*^9}, {
   3.8405510933457384`*^9, 3.8405510984627314`*^9}, {3.8405511395527105`*^9, 
   3.840551141478009*^9}, {3.841319162361234*^9, 3.841319168699852*^9}, {
   3.842638275839821*^9, 3.842638283825076*^9}, 3.843047150844548*^9, {
   3.843047683246418*^9, 3.8430478826039906`*^9}, {3.8430662477842984`*^9, 
   3.84306626706721*^9}, {3.843066357433008*^9, 3.84306638005869*^9}, {
   3.843066471098827*^9, 3.843066471456827*^9}, {3.8430665682341595`*^9, 
   3.8430665823535037`*^9}, {3.843066614023039*^9, 3.8430666158403826`*^9}, {
   3.8430666478257236`*^9, 3.8430666560026145`*^9}, {3.843066691062875*^9, 
   3.843066695028036*^9}, {3.8430670820101533`*^9, 3.8430670822719493`*^9}, {
   3.8431531584724064`*^9, 3.8431532415742707`*^9}, {3.8431541924011116`*^9, 
   3.8431542010920024`*^9}, {3.8431543579685593`*^9, 3.84315458831942*^9}, {
   3.8436736200598516`*^9, 3.843673659839816*^9}, {3.843675802266506*^9, 
   3.84367580324864*^9}, {3.843676094738164*^9, 3.843676095993743*^9}, {
   3.843676148112191*^9, 3.843676217593154*^9}, {3.843747759180975*^9, 
   3.8437478035510416`*^9}, {3.843747837199093*^9, 3.843747911811542*^9}, 
   3.8437479433562737`*^9, {3.843748377618887*^9, 3.843748418267103*^9}, 
   3.8437487463423266`*^9, {3.8437522385411882`*^9, 3.8437522397665625`*^9}, {
   3.843752288076639*^9, 3.843752310561741*^9}, {3.843752372567502*^9, 
   3.8437523938328533`*^9}, {3.8437532528926954`*^9, 3.843753253873748*^9}, {
   3.8437532996776743`*^9, 3.8437533168563538`*^9}, {3.8437535125676455`*^9, 
   3.843753519661378*^9}, 3.8437535832591257`*^9, {3.8437536229410996`*^9, 
   3.8437536714702573`*^9}, {3.843753713138695*^9, 3.843753713497829*^9}, {
   3.8437538032027535`*^9, 3.8437538110533333`*^9}, {3.8437541111506634`*^9, 
   3.843754123500203*^9}, {3.843756514694689*^9, 3.8437565228370256`*^9}, {
   3.844259791226394*^9, 3.844259814136951*^9}, {3.8443564826670113`*^9, 
   3.8443564849271317`*^9}, {3.8443619303990293`*^9, 3.844361934480361*^9}, {
   3.844368304375413*^9, 3.8443683086155677`*^9}, {3.8444602254264507`*^9, 
   3.8444602371283655`*^9}, {3.84451200345923*^9, 3.844512005814104*^9}, {
   3.8445156047558804`*^9, 3.844515606918198*^9}, {3.8445158304009256`*^9, 
   3.8445158324047036`*^9}, {3.84451649753236*^9, 3.8445165016123977`*^9}, {
   3.8447823272091274`*^9, 3.844782349008145*^9}, {3.844782526684991*^9, 
   3.844782536256265*^9}, {3.8447826509613276`*^9, 3.8447826523153005`*^9}, {
   3.8447826850334997`*^9, 3.844782691498364*^9}, {3.845918060041156*^9, 
   3.8459181031181545`*^9}, 3.8459184702466784`*^9, {3.845999275777835*^9, 
   3.845999282502781*^9}, {3.8459997280634265`*^9, 3.84599975722418*^9}, {
   3.8459997899691124`*^9, 3.845999798075818*^9}, {3.8460001536819735`*^9, 
   3.8460001549021235`*^9}, 3.8460207290920916`*^9, {3.846086347396666*^9, 
   3.8460863496307783`*^9}, {3.8460864047584777`*^9, 
   3.8460864419004726`*^9}, {3.846086481744698*^9, 3.8460864838225775`*^9}, {
   3.8460865281713114`*^9, 3.8460865302178683`*^9}, 3.8460880621541615`*^9, 
   3.846088327560858*^9, {3.8460946963941307`*^9, 3.8460946974679675`*^9}, {
   3.8460947275175343`*^9, 3.8460947691694527`*^9}, {3.8460950090659475`*^9, 
   3.846095010209775*^9}, {3.846095545515373*^9, 3.8460955733652983`*^9}, {
   3.8460956070630035`*^9, 3.846095607370658*^9}, {3.8485005221415615`*^9, 
   3.8485005351640396`*^9}, 3.848500596684627*^9, 3.849033011396132*^9, {
   3.8490330991837425`*^9, 3.8490331139771614`*^9}, {3.849034018861663*^9, 
   3.849034024719659*^9}, 3.849034099764724*^9, 3.852306597585452*^9, {
   3.852383682075785*^9, 3.852383685820044*^9}, {3.852744070632491*^9, 
   3.8527440730820713`*^9}, {3.8527441202585278`*^9, 3.85274413073687*^9}, {
   3.852744165658305*^9, 3.852744167923217*^9}, {3.8551468207372737`*^9, 
   3.8551468407398677`*^9}, {3.856447044743679*^9, 3.856447047334985*^9}, {
   3.8564474774709873`*^9, 3.8564475090004773`*^9}, {3.8564478698418055`*^9, 
   3.8564478741110983`*^9}, {3.8564479270674095`*^9, 3.856447930316223*^9}, {
   3.8564479920635257`*^9, 3.856447993764702*^9}, {3.856448114413094*^9, 
   3.8564481155571074`*^9}, {3.8564481647094936`*^9, 3.856448167734836*^9}, {
   3.856448213271289*^9, 3.856448216576043*^9}, {3.8564483621388483`*^9, 
   3.85644839952388*^9}, 3.856448635564467*^9, {3.8564486687468185`*^9, 
   3.856448709681238*^9}, {3.8564497990169992`*^9, 3.8564498138303833`*^9}, {
   3.856452250271264*^9, 3.856452251864053*^9}, {3.856452299137845*^9, 
   3.8564523003864746`*^9}, {3.8564528520798693`*^9, 3.856452853398001*^9}, {
   3.856454183119191*^9, 3.856454205213834*^9}, {3.8564544301844893`*^9, 
   3.856454431451421*^9}, {3.8565205940683627`*^9, 3.856520595331495*^9}, {
   3.8565214317194443`*^9, 3.8565214326624546`*^9}, {3.8565215887906594`*^9, 
   3.8565215897779665`*^9}, {3.856523479068771*^9, 3.85652348049973*^9}, {
   3.856525454259033*^9, 3.8565254554092693`*^9}, {3.85653765065016*^9, 
   3.8565376518842487`*^9}},ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-\
05549f24bf19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"09c54b45-a793-4cfd-ad20-\
2e7a5f10a972"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "3", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "12"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.844782546275529*^9, 3.8447825467162204`*^9}, 
   3.844782672224075*^9, {3.846084808331871*^9, 3.846084901361394*^9}, {
   3.84632906290853*^9, 3.8463290682357426`*^9}, {3.846329127978734*^9, 
   3.8463291611583424`*^9}, {3.84632922227293*^9, 3.846329239028186*^9}, {
   3.8564533123361864`*^9, 3.8564533125451326`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}, {
   3.844515659297496*^9, 3.844515674142517*^9}, {3.852820617799965*^9, 
   3.852820640371076*^9}, 3.8528207094904556`*^9, 3.856453277015154*^9},
 CellLabel->
  "In[204]:=",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", "p", 
     ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "1", ",", 
     "noteBookMode"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9, {3.849033302647654*^9, 3.849033303632023*^9}, {
   3.855146848885496*^9, 3.855146849296422*^9}, {3.856453286120305*^9, 
   3.8564532873551855`*^9}, {3.856453387563385*^9, 3.8564534193133397`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.856453239146778*^9, 3.8564533440559654`*^9}, {
  3.8564533906737003`*^9, 3.8564534202831783`*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"3855349e-cd40-4678-97e8-fd59108db2a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9, 3.8445156454523244`*^9},
 CellLabel->
  "In[208]:=",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/w9lky9T
        "]]},
      Annotation[#, "Charting`Private`Tag$71937#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwU2Hk4lF0UAHBKSH2RRMQwZjAzxox9idyTJVvRpkRFyJaUFIWyZMlSKFGW
lCSVsoQ2vFKWRElRKfuWdcYaLfpuf/X8nvG+77n3nHvuvZGdj+44tISHhyeX
j4fn37/n1hX/x8MjDR2LR7fnhU5tlIoYFqIulQbPTy5Vk8LvDYs5coLm/NKQ
nFLmEKfYY9hdm7AkcaU0qMv+TrbcOWloePLID1lJaTBSlHujfY8Xzb+n9SB1
aRDbZid/aKso8o7LKglxlYZG43cj3z0oyHYx3uFvvTT4Ej/TTsxoovp82wW3
RmmgMyZO9thpoQ0OpNS376SB5Pt3j32FFpJ7UtCS2SYN2as2xDhHaaMR3xYL
g35psO404T+yThedHZDQPf1XGq7HO2Qc0dNHeY3ZYtNaMnAodNI5/T4gqaDD
xfZ6MhCd7BVu/BXQBbrmtmoDGXge4s33XGgTOh5VE5dkLANa60YcVntuQhvh
+xLV7TJw8s9gnDLFCLU8Upn09paBm3Pl51PjjNGvtCdNg9kycCMpotyevBmx
br7NE8uVgU7fQzulTDcj5zv954zuysAz64W/IR6bUcMjkQ3XC2Tg75T0Ct2H
m1Fao0eubbkMbE89/1dDywy9bTkbdo6Qgfb/tO3/2JqhJV+S9xVVy0C81778
g/5myHOgSvS/1zKw6c3cndlSM6S7uC7kVasMXPmaIkpVNUfefGz7qc8yQNIC
dH2rObohZKol900G3A7QTPO8zJGAhO9oUK8MCK+9utXtljlqY7/eo8GRgSOv
6O4uwhZISLtL/eCUDBRvXfTTolsgQ4PZ/xJmZWBb4if9eCMLdNuc/Grklwz4
aAcdqfazQCcOnlbNFiTB+8fPfRjNFijPPWFF8woSJFeMeP4asEDfjtwe/LOK
BKZu/bybf1kg48D3GXvXkmDXFanTRlRL5B86FBC9jgTiKfWJkzqW6F7Unx2l
60lwnUUtE7OyRKKX6ctXy5Pg2fq6tKKjlmjzNdRvqECCkpGQS7QwSxSYZUt4
00hguPm14KpLlqjnftjJehYJqlK5PaRiSyRWnLptTo0EUoJwxuyFJTJ/8kCZ
qkWCloUlgl/eWaLCV196QvRJILe7dp/aqCXqb+CUPzDE8ejrOs7+sETr3i+7
+nUTCVRTeKql+azQlk/r/ZabkiCHakfOFbZCIR1q1jrmJLhxK0AyUcoKFfeZ
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
QEVRgfwfN0hpDg==
        "]]},
      Annotation[#, "Charting`Private`Tag$71937#2"]& ]}, {}}, {
    PointBox[{{12, 0.9503097583956966}, {12, 1.}, {12, 0.9006195167913933}}], 
    PointBox[{{12., 0.9503097583956966}, {12., 0.9503097583956966}}], 
    LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
    LineBox[{{12., 0.9503097583956966}, {12., 0.9503097583956966}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{7, 17}, {-0.028785786648360335`, 1.028802394142958}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8564532392161036`*^9, 3.856453345726412*^9}, {
  3.8564533917727594`*^9, 3.8564534213935905`*^9}},
 CellLabel->
  "Out[208]=",ExpressionUUID->"d6b4019c-8421-44c2-a340-9c3a2fedcc83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"a4c25ec2-f772-4494-87f0-\
6c86ae6eb27a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"random", " ", "values", " ", "between", " ", "10", " ", "and"}],
      " ", "-", "10"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"allowed", " ", "failed", " ", "levels"}]}], ",", " ", 
    RowBox[{"u", "=", " ", 
     RowBox[{
     "shift", " ", "on", " ", "v", " ", "solution", " ", "through", " ", 
      "levels"}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"newValues", "[", 
    RowBox[{"i_", ",", "n_", ",", "u_", ",", 
     RowBox[{"{", 
      RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
     "newv0_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "r", ",", "rs", ",", "newVals"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"v1", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"e", ">", "n"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0."}], "}"}], "}"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "\[NotEqual]", "0."}], " ", "&&", " ", 
          RowBox[{"status", "\[Equal]", "\"\<ok\>\""}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"newVals", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"r", "=", 
               RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"r", ",", 
                 RowBox[{"1", "-", "r"}]}], "}"}], "*", "v"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"u", "\[NotEqual]", "0."}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{"newVals", ",", 
              RowBox[{"newVals", "-", "u"}], ",", " ", 
              RowBox[{"newVals", "+", "u"}]}], "]"}], ",", "newVals"}], 
           "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", "newv0"}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8444612782790546`*^9, 3.844461325604576*^9}, {
   3.8444614444947405`*^9, 3.844461444680009*^9}, {3.8444616627212477`*^9, 
   3.8444617077996845`*^9}, {3.844461750131506*^9, 3.844461922366767*^9}, 
   3.844461992692705*^9, {3.844512017440218*^9, 3.8445120256983542`*^9}, {
   3.8445122065868797`*^9, 3.8445122095714564`*^9}, {3.844513491064845*^9, 
   3.844513494072491*^9}, {3.8445142258228316`*^9, 3.844514312429041*^9}, {
   3.844514415782257*^9, 3.844514441020333*^9}, 3.8445145878545675`*^9, {
   3.844516209750566*^9, 3.8445162128424377`*^9}, {3.844516353977727*^9, 
   3.8445164220099287`*^9}, {3.8445200934575386`*^9, 
   3.8445200959212675`*^9}, {3.844955341554967*^9, 3.8449553524295*^9}, {
   3.8450304282022247`*^9, 3.8450304305575495`*^9}, 3.845037288844064*^9, {
   3.845037352023071*^9, 3.8450373985419507`*^9}, {3.8450374655873547`*^9, 
   3.8450374689407897`*^9}, {3.845037715084822*^9, 3.845037758048954*^9}, {
   3.8450448673646674`*^9, 3.845044868815566*^9}, {3.845046972287678*^9, 
   3.845046973292132*^9}, {3.8459181523994007`*^9, 3.845918212292648*^9}, {
   3.8459184851144123`*^9, 3.845918488148816*^9}, {3.845918637593907*^9, 
   3.845918651943948*^9}, 3.8459188651809173`*^9, {3.8460197890200834`*^9, 
   3.8460198128202815`*^9}, {3.8460198949855614`*^9, 3.8460199127711*^9}, {
   3.846020910983465*^9, 3.846020914248888*^9}, {3.846020948908036*^9, 
   3.8460209591148877`*^9}, {3.846021089282728*^9, 3.846021127719087*^9}, {
   3.8460851128439245`*^9, 3.8460851170900936`*^9}, {3.8460856051591797`*^9, 
   3.846085605331028*^9}, {3.846095612450843*^9, 3.8460956798514886`*^9}, 
   3.8460957584121923`*^9, 3.846095806312417*^9, {3.8460959465482035`*^9, 
   3.84609598682932*^9}, {3.848500539732272*^9, 3.8485005439937525`*^9}, 
   3.848500601273676*^9, 3.8490333981906986`*^9, {3.8490338103468447`*^9, 
   3.8490338106280293`*^9}, 3.85230660551797*^9, {3.8551434446329966`*^9, 
   3.855143505442374*^9}, {3.855143600689752*^9, 3.8551436090310946`*^9}, {
   3.85514364962446*^9, 3.8551437522459106`*^9}, {3.8551437833140087`*^9, 
   3.8551438273049507`*^9}, {3.855143865001834*^9, 3.8551438665448036`*^9}, {
   3.855146203414523*^9, 3.855146261354411*^9}, {3.8551665354856873`*^9, 
   3.8551665500895023`*^9}, {3.855236633498632*^9, 3.855236695755658*^9}, 
   3.856454649790596*^9, {3.8565136059768715`*^9, 
   3.8565136289339166`*^9}},ExpressionUUID->"d2398203-6386-43c0-9979-\
4c3a161cff6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "We", " ", "create", " ", "the", " ", "list", " ", "of", " ", "values", 
     " ", "in", " ", "case", " ", "v"}], "=", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8450447961470428`*^9, 3.84504486192747*^9}, {
   3.8450477213099747`*^9, 3.845047735608878*^9}, {3.845998533077533*^9, 
   3.845998537668522*^9}, 3.846021855425663*^9, 3.8460219091850967`*^9, 
   3.852308794093945*^9},
 CellLabel->
  "In[210]:=",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09515797140105149`", ",", "0.10484202859894852`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19031594280210298`", ",", "0.20968405719789704`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2854739142031545`", ",", "0.3145260857968456`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38063188560420597`", ",", "0.4193681143957941`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47578985700525744`", ",", "0.5242101429947426`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.570947828406309`", ",", "0.6290521715936912`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6661057998073605`", ",", "0.7338942001926396`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7612637712084119`", ",", "0.8387362287915882`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8564217426094635`", ",", "0.9435782573905366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9515797140105149`", ",", "1.0484202859894851`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0467376854115664`", ",", "1.1532623145884338`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.141895656812618`", ",", "1.2581043431873824`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2370536282136695`", ",", "1.3629463717863306`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.332211599614721`", ",", "1.4677884003852792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4273695710157723`", ",", "1.5726304289842277`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5225275424168239`", ",", "1.6774724575831763`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6176855138178754`", ",", "1.782314486182125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.712843485218927`", ",", "1.8871565147810732`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8080014566199785`", ",", "1.9919985433800218`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9031594280210298`", ",", "2.0968405719789702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9983173994220813`", ",", "2.201682600577919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.093475370823133`", ",", "2.3065246291768675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1886333422241844`", ",", "2.411366657775816`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.283791313625236`", ",", "2.516208686374765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3789492850262874`", ",", "2.6210507149737126`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10484202859894852`", ",", "0.09515797140105149`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20968405719789704`", ",", "0.19031594280210298`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3145260857968456`", ",", "0.2854739142031545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4193681143957941`", ",", "0.38063188560420597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5242101429947426`", ",", "0.47578985700525744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6290521715936912`", ",", "0.570947828406309`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7338942001926396`", ",", "0.6661057998073605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8387362287915882`", ",", "0.7612637712084119`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9435782573905366`", ",", "0.8564217426094635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0484202859894851`", ",", "0.9515797140105149`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1532623145884338`", ",", "1.0467376854115664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2581043431873824`", ",", "1.141895656812618`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3629463717863306`", ",", "1.2370536282136695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4677884003852792`", ",", "1.332211599614721`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5726304289842277`", ",", "1.4273695710157723`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6774724575831763`", ",", "1.5225275424168239`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.782314486182125`", ",", "1.6176855138178754`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8871565147810732`", ",", "1.712843485218927`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9919985433800218`", ",", "1.8080014566199785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0968405719789702`", ",", "1.9031594280210298`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.201682600577919`", ",", "1.9983173994220813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3065246291768675`", ",", "2.093475370823133`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.411366657775816`", ",", "2.1886333422241844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.516208686374765`", ",", "2.283791313625236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6210507149737126`", ",", "2.3789492850262874`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4000000000000004`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8000000000000003`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8000000000000003`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6000000000000005`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.800000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.6000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.2000000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.4000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.4000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.8000000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.4000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.8000000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.6000000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.800000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "5.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8564532392761497`*^9, 3.856453551163884*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"21a2a012-8b9e-45bd-bed0-a7bd467c62ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nV", "=", 
  RowBox[{"newValues", "[", 
   RowBox[{"10", ",", "1", ",", "0.25", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1."}], ",", "\"\<ok\>\"", ",", "1."}], "}"}], ",", 
    "newv0", ",", "\"\<ConstrainedNewMethod\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Total", "/@", "nV"}]}], "Input",
 CellChangeTimes->{{3.8444617140346737`*^9, 3.8444617347846212`*^9}, {
   3.844461808872343*^9, 3.8444618170070076`*^9}, {3.8444619033008537`*^9, 
   3.8444619337709484`*^9}, {3.8445122194771366`*^9, 
   3.8445122413158827`*^9}, {3.844512362020856*^9, 3.844512362180772*^9}, {
   3.8445143201938887`*^9, 3.8445143394214225`*^9}, {3.844514444454789*^9, 
   3.844514453803335*^9}, 3.844516223273226*^9, {3.8450374078987455`*^9, 
   3.845037428030212*^9}, {3.84504487350133*^9, 3.8450448751270533`*^9}, {
   3.845047741752062*^9, 3.8450477436917725`*^9}, {3.8459182397694316`*^9, 
   3.8459182457373877`*^9}, {3.845998523959859*^9, 3.845998524451099*^9}, {
   3.846021755261832*^9, 3.8460217586190915`*^9}, {3.846085848611929*^9, 
   3.8460858946636086`*^9}, {3.8460860381303816`*^9, 
   3.8460860426293545`*^9}, {3.8460865712288933`*^9, 
   3.8460865730409603`*^9}, {3.846095815516721*^9, 3.846095829278038*^9}, {
   3.8460958773960066`*^9, 3.846095881233713*^9}, {3.8460959604244823`*^9, 
   3.8460959614994926`*^9}, {3.852308827707631*^9, 3.85230883938664*^9}, {
   3.8528214016878104`*^9, 3.8528214163500533`*^9}, {3.855146269297724*^9, 
   3.855146286718229*^9}, {3.8552367150751543`*^9, 3.8552367686268826`*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.49803790077051513`"}], ",", 
     RowBox[{"-", "1.5019620992294849`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23834576061354262`"}], ",", 
     RowBox[{"-", "1.7616542393864574`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.500800311671826`"}], ",", 
     RowBox[{"-", "0.49919968832817396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7540013442350029`"}], ",", 
     RowBox[{"-", "0.24599865576499713`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.17297328192496275`"}], ",", 
     RowBox[{"-", "1.8270267180750372`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8179469123962622`"}], ",", 
     RowBox[{"-", "1.1820530876037378`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.009880184590446373`"}], ",", 
     RowBox[{"-", "1.9901198154095536`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2560281615503017`"}], ",", 
     RowBox[{"-", "0.7439718384496983`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3698401559276161`"}], ",", 
     RowBox[{"-", "1.630159844072384`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4158608653157905`"}], ",", 
     RowBox[{"-", "1.5841391346842095`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7480379007705151`"}], ",", 
     RowBox[{"-", "1.7519620992294849`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4883457606135426`"}], ",", 
     RowBox[{"-", "2.0116542393864574`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.750800311671826`"}], ",", 
     RowBox[{"-", "0.749199688328174`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.004001344235003`"}], ",", 
     RowBox[{"-", "0.49599865576499713`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.42297328192496275`"}], ",", 
     RowBox[{"-", "2.0770267180750372`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0679469123962622`"}], ",", 
     RowBox[{"-", "1.4320530876037378`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2598801845904464`"}], ",", 
     RowBox[{"-", "2.2401198154095536`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5060281615503017`"}], ",", 
     RowBox[{"-", "0.9939718384496983`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6198401559276161`"}], ",", 
     RowBox[{"-", "1.880159844072384`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6658608653157905`"}], ",", 
     RowBox[{"-", "1.8341391346842095`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.24803790077051513`"}], ",", 
     RowBox[{"-", "1.2519620992294849`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.011654239386457377`", ",", 
     RowBox[{"-", "1.5116542393864574`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.250800311671826`"}], ",", 
     RowBox[{"-", "0.24919968832817396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5040013442350029`"}], ",", "0.004001344235002868`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07702671807503725`", ",", 
     RowBox[{"-", "1.5770267180750372`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5679469123962622`"}], ",", 
     RowBox[{"-", "0.9320530876037378`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24011981540955363`", ",", 
     RowBox[{"-", "1.7401198154095536`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0060281615503017`"}], ",", 
     RowBox[{"-", "0.4939718384496983`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1198401559276161`"}], ",", 
     RowBox[{"-", "1.380159844072384`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16586086531579047`"}], ",", 
     RowBox[{"-", "1.3341391346842095`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8564532393273473`*^9, 3.856453552901537*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"fc8a504a-2ca1-4eb3-b4cb-71f7c7817426"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "2.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}], ",", 
   RowBox[{"-", "1.5`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8564532393273473`*^9, 3.8564535529074855`*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"8d84f5cb-77c1-4d03-8694-6bc0caf0bd3e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "will", " ", "give", " ", "back", " ", "a", " ", "value", 
     " ", "that", " ", "converged", " ", "or", " ", "is", " ", "on", " ", 
     "\"\<ok\>\"", " ", 
     RowBox[{"status", ".", " ", "If"}], " ", "not"}], ",", " ", 
    RowBox[{"error", " ", "is", " ", "returned", " ", "and", " ", 
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2"}], "}"}], " ", "goes", " ", "back", " ", "to", 
     " ", "0."}]}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pickNewValue", "[", 
    RowBox[{
    "tableNewVals_", ",", "condition_", ",", "\"\<ConstrainedNewMethod\>\""}],
     "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "newValOk", ",", "newValCon", ",", "newValAny", ",", "noFakeConverge"}],
       "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Criterias", " ", "to", " ", "select", " ", "a", " ", "solution"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newValCon", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
              "\"\<converged\>\""}], ")"}], "&&", 
            RowBox[{"condition", "[", "#", "]"}]}], "&"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newValAny", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<ok\>\""}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<oksign\>\""}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<okmag\>\""}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<converged\>\""}]}], ")"}], "&&", 
            RowBox[{"condition", "[", "#", "]"}]}], "&"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newValOk", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<ok\>\""}], "||", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<oksign\>\""}], "||", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<okmag\>\""}]}], ")"}], "&&", " ", 
            RowBox[{"condition", "[", "#", "]"}]}], "&"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"noFakeConverge", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<ok\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<oksign\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<okmag\>\""}], "&&", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
              "\"\<converged\>\""}]}], ")"}], "&"}], ",", "1"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"No", " ", "solution", " ", "meets", " ", "criteria"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"newValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"newValAny", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"newValOk", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"noFakeConverge", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverged\>\"", ",", 
              RowBox[{
               RowBox[{"tableNewVals", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "4"}], "]"}], "]"}], "+", "1"}]}], "}"}], 
            "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"0.", ",", "0.", ",", 
              RowBox[{"noFakeConverge", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
              RowBox[{"noFakeConverge", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "solution", " ", "meets", " ", "criteria", " ", "but", " ", "it", 
           " ", "did", " ", "not", " ", "converge"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"newValCon", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "solution", " ", "meets", " ", "criteria", " ", "but", " ", 
             RowBox[{"isn", "'"}], "t", " ", "ok", " ", "or", " ", 
             "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"newValOk", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"newValAny", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"newValOk", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
                "\"\<ok\>\"", ",", 
                RowBox[{"newValOk", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"newValCon", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844462754631737*^9, 3.8444628201358075`*^9}, {
   3.8444628882695293`*^9, 3.8444629100440626`*^9}, 3.844463007546508*^9, {
   3.8444630757865353`*^9, 3.8444631139402637`*^9}, {3.844463401643854*^9, 
   3.8444634786750946`*^9}, {3.844463586249464*^9, 3.8444636494751883`*^9}, {
   3.844463682583321*^9, 3.8444637031772294`*^9}, {3.844463924790797*^9, 
   3.8444639289631586`*^9}, {3.8444639810663843`*^9, 3.8444641244819984`*^9}, 
   3.8444687035611553`*^9, {3.844512874276967*^9, 3.8445129886481595`*^9}, {
   3.8445141007182693`*^9, 3.844514126835699*^9}, {3.844514163494574*^9, 
   3.8445141666815147`*^9}, {3.844514595376998*^9, 3.8445146477215595`*^9}, {
   3.8449553556067853`*^9, 3.8449553559599857`*^9}, 3.8450378756013985`*^9, {
   3.845037940092245*^9, 3.845037999784536*^9}, {3.8450384331500416`*^9, 
   3.845038435309373*^9}, {3.845038775409644*^9, 3.8450388297344503`*^9}, {
   3.8450389859878855`*^9, 3.8450390344000597`*^9}, {3.8456575620143347`*^9, 
   3.8456575685119963`*^9}, {3.845998611362694*^9, 3.845998617607574*^9}, 
   3.8460020989436474`*^9, {3.846018677328916*^9, 3.846018677775216*^9}, 
   3.846018880796386*^9, {3.846019116136244*^9, 3.846019173366503*^9}, {
   3.8460192515065284`*^9, 3.8460192528890114`*^9}, {3.846019610710576*^9, 
   3.846019619271961*^9}, 3.846020801971831*^9, {3.846021529128915*^9, 
   3.846021536340768*^9}, {3.8460852132039795`*^9, 3.8460852169216146`*^9}, {
   3.846085530410911*^9, 3.8460855309110503`*^9}, {3.8460869673692822`*^9, 
   3.846087000251961*^9}, {3.8460871143659906`*^9, 3.8460871172715235`*^9}, {
   3.8460877961782217`*^9, 3.846087844208644*^9}, 3.850837236413035*^9, 
   3.8508372722343097`*^9, {3.852296462099272*^9, 3.852296464911374*^9}, {
   3.8523854352975464`*^9, 3.8523854547360992`*^9}, {3.852385496361577*^9, 
   3.85238562039371*^9}, {3.8527432088486824`*^9, 3.8527432218235254`*^9}, {
   3.8527435019009695`*^9, 3.8527435541477547`*^9}, {3.8527437064598026`*^9, 
   3.8527437211275034`*^9}, {3.8527441958724775`*^9, 
   3.8527442339899826`*^9}, {3.852744271335647*^9, 3.8527442887340937`*^9}, {
   3.8527443426410046`*^9, 3.8527443753010826`*^9}, {3.8527444786250196`*^9, 
   3.8527445026695147`*^9}, {3.852744559128996*^9, 3.852744561137597*^9}, {
   3.852744721260515*^9, 3.852744731960111*^9}, {3.8527449994285345`*^9, 
   3.8527450516374097`*^9}, {3.852749940217804*^9, 3.85274995512965*^9}, {
   3.852750067314996*^9, 3.8527500688591976`*^9}, {3.8527502641293297`*^9, 
   3.852750370426917*^9}, {3.852750421148426*^9, 3.852750595515209*^9}, {
   3.8527515442537084`*^9, 3.8527515928277674`*^9}, {3.85297081698942*^9, 
   3.852970860546382*^9}, {3.8529709291186075`*^9, 3.8529709649686575`*^9}, {
   3.8529711236231775`*^9, 3.8529711263697677`*^9}, {3.8551521455991807`*^9, 
   3.8551521623206778`*^9}, {3.8551522617913895`*^9, 3.855152429126685*^9}, {
   3.8551528484009542`*^9, 3.8551528559939003`*^9}, {3.8551529070755835`*^9, 
   3.8551529134625826`*^9}, {3.8551530963727336`*^9, 3.855153120830872*^9}, {
   3.8551532812074757`*^9, 3.8551532861816883`*^9}, {3.855153387492076*^9, 
   3.85515338809706*^9}, {3.8551534416957507`*^9, 3.8551535203025956`*^9}, {
   3.855153610884737*^9, 3.855153611229391*^9}, 3.8551536487098727`*^9, {
   3.8556559910564337`*^9, 3.8556560093210025`*^9}, {3.855656394588664*^9, 
   3.855656401750655*^9}, {3.8556590431601486`*^9, 3.855659048136428*^9}, {
   3.855660475487583*^9, 3.8556604817032766`*^9}, {3.8557606677063026`*^9, 
   3.8557607197596273`*^9}, {3.8557607945493555`*^9, 
   3.8557608409524345`*^9}, {3.8557630289229317`*^9, 3.855763030902635*^9}, {
   3.855763185096842*^9, 3.8557631950930204`*^9}, {3.8557632889367094`*^9, 
   3.855763294949029*^9}, {3.8557633544692287`*^9, 3.8557633668868732`*^9}, {
   3.855764099897932*^9, 3.855764152546324*^9}, {3.8557642308248053`*^9, 
   3.8557642558182864`*^9}, {3.855764331814102*^9, 3.855764339373496*^9}, {
   3.8557643754814777`*^9, 3.855764380517579*^9}, {3.8557647663608*^9, 
   3.855764767997353*^9}, {3.855764930992894*^9, 3.8557649337759805`*^9}, {
   3.855765228993084*^9, 3.8557652408744197`*^9}, {3.855765275229665*^9, 
   3.8557652886897087`*^9}, {3.8558429360649214`*^9, 3.855842963751007*^9}, {
   3.8558430017861567`*^9, 3.8558430187176776`*^9}, {3.8558430906754856`*^9, 
   3.855843097706618*^9}, {3.8558431318403845`*^9, 3.8558431619377146`*^9}, {
   3.85645037671861*^9, 3.856450391760558*^9}, {3.856452157845505*^9, 
   3.8564521699662495`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "condition", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"condition", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
      RowBox[{"0", "<", 
       RowBox[{"(*", 
        RowBox[{"Abs", "["}], "*)"}], 
       RowBox[{"Total", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], 
       RowBox[{"(*", "]", "*)"}], "<", "1"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{3.8557652938245554`*^9},
 CellLabel->
  "In[325]:=",ExpressionUUID->"08e05903-787d-43a8-99d8-db087c7053c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"updateValues", "=", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
    "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ", "fed", 
     " ", "to", " ", "the", " ", "function", " ", "to", " ", "try", " ", 
     "all", " ", 
     RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nV", "=", 
    RowBox[{"newValues", "[", 
     RowBox[{"10", ",", "1", ",", "0", ",", 
      RowBox[{"updateValues", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tableNV", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tValues", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tValues", "=", 
          RowBox[{"PyrUpgrade1D", "[", 
           RowBox[{"tValues", ",", "p0", ",", "  ", 
            RowBox[{"pyrf12", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"threshold", "*", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", "0", ",", 
            "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"pickNewValue", "[", 
   RowBox[{"tableNV", ",", "condition", ",", "\"\<ConstrainedNewMethod\>\""}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.844512465652463*^9, 3.8445126589651527`*^9}, 
   3.844512696700407*^9, {3.8445127397523556`*^9, 3.8445127770015326`*^9}, 
   3.844512836960084*^9, {3.844514523287268*^9, 3.844514592311226*^9}, 
   3.8445146572758875`*^9, {3.8445157328956614`*^9, 3.8445157967537203`*^9}, {
   3.844515854741083*^9, 3.8445158692234373`*^9}, {3.844515900171852*^9, 
   3.8445159113818007`*^9}, {3.844960825416167*^9, 3.8449608326621675`*^9}, 
   3.8450378099077854`*^9, 3.845038006025897*^9, {3.845039038790265*^9, 
   3.8450390397869205`*^9}, {3.845044890366269*^9, 3.8450448920499763`*^9}, {
   3.845047769282398*^9, 3.845047795159435*^9}, {3.84591828507213*^9, 
   3.8459182912915144`*^9}, 3.846019257618719*^9, {3.8460208160192947`*^9, 
   3.8460208645720215`*^9}, {3.8460209788702793`*^9, 3.8460209926060295`*^9}, 
   3.846021742436345*^9, {3.8460218159794292`*^9, 3.8460218163150682`*^9}, {
   3.8460219593228226`*^9, 3.846022029946898*^9}, {3.8460220758808374`*^9, 
   3.8460220762055054`*^9}, {3.8460230529286184`*^9, 3.8460231106115284`*^9}, 
   3.8460960212472897`*^9, {3.8490342669233866`*^9, 3.8490342670952153`*^9}, {
   3.849034307882209*^9, 3.8490343280495815`*^9}, {3.8523088791885805`*^9, 
   3.852308897030178*^9}, {3.852744926915022*^9, 3.8527449271632814`*^9}, {
   3.855150297949961*^9, 3.8551503005235343`*^9}, {3.85515037942356*^9, 
   3.8551503956349363`*^9}, {3.855765301593768*^9, 3.8557653039136367`*^9}, {
   3.8564535889420166`*^9, 3.856453643785864*^9}, {3.856453695291876*^9, 
   3.8564537117696733`*^9}, {3.856453743276025*^9, 3.8564537449932175`*^9}, {
   3.856453840879693*^9, 3.8564538948953533`*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8564532394286165`*^9, 3.856453558171998*^9, {3.8564536046009665`*^9, 
   3.856453644752901*^9}, {3.856453695797966*^9, 3.856453714014132*^9}, 
   3.856453747270911*^9, {3.8564538323801775`*^9, 3.8564538973494854`*^9}},
 CellLabel->
  "Out[376]=",ExpressionUUID->"728c4a38-f512-410e-aca7-54bec7196834"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8460218930933437`*^9, {3.846023115078058*^9, 3.8460231176116033`*^9}, {
   3.8523089129205112`*^9, 3.8523089196145062`*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
5IUaJSzwzOMqNkFRSHsyJ1fwTQmT1NzlHkASBfDisJYGZWyz++d3rWRRWIs3
ycmwVcZY12N2ycuLQguvxhs3b2Wsab6F8ElJFFK1eFvnUpWxx1S/c9pqohDR
zCX55KYylmXD9/2ahij4573e96JMGfOvsH1pulMUjNeSzcu7lLGDY7+VC/VE
QSrkdsaNL8oYCOVksYEoTAmn1jX/VMYUDfQ5nAzw/N/ZrGuvKGPCp0dO1BiL
gk7eSvaPLSrYWkHcEMFMFMqDk999EVLBpnroewMsRIHLZvMngowK9kIjgCRv
Kwrac5/Oqm5Xwe65CiZHHxIFzrsGiUJ6KtiVa5WLQ4dF4ZZWqc82QxUsrPGQ
i/ZRUYi6LX/svLkK5j73t/2aiyhIfCq5x2WtgllS8nVm3UWBNWwW1XRIBdOx
/u+uqbcoROZvYpQ6qWCU2HH+Qj9R0BMZ+/LGWQXjKU8MZzshCoU7pyf43VWw
pRHFb46BoqDLTgqN9VTBvgp2WtcE4fr4JPaTvFWwtv9O1RNC8f65KRmM4Vx5
SlgxIEIUSqb5lztwzr9dk94aJQqP53S1hr1UsKTuwxvkz+P9Ci7X48fjBW5Y
849OEIVhvwgzVzcV7Ij67f6hC3j/2vLze4+pYJxPr8b8SxGFm5+Tlmoc8fgQ
qyhzRRS2vhnu6T2ogh17E/geruN6HNVuUTiggnHtd4twzRCF0lA1ryozFazq
o4183A1RiGcdMw42UMGcjxl2FuaKQmy267LvLrzeb5ohLTdFYcmyW+CahgpW
EyAvO10gCtsnjKjfGSqY65JIK9c9UUjRPPzqFEkF4zu3OVD5gSg4CRfF0fH+
Pd30m2hZIgqLjq1/t+L9dU/99upEqSjcHz30VOyvMsYv0u9/tVwUOqN+2ljN
KGPPct+IVFSJQjWX3NHSYWVMsOSB19JzUZDfO8Q/VqeMvdieLSCOiYLD/cuf
K0qUMe/nyU93NopCjvU+v/vZylh9mx935BtRePXNiPfXaWXMx9qpMv+tKFhF
V5saHsP9NrjvSEMn3s+XGdcqTZUxv2mVUvY+/P0bvFmTksqY6CmSvXy/KDz/
8jG8kF0Za1zm27B3SBQuK4U+C/+uhIlzsqyTR0ShUb0ow7tKCXtNK18SmBUF
6/iLTElQwk4+Lrip8UsUQhNGOo/LKmFSWtdNbBdwf+0dLny7rogFGp3Jzvwr
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
or1EEBGTl2QHM+TkcF9P7yMRYl7x+yUqmKFjL9yKXQaJ4HjfgkOdYIY8Yz/F
l3wlQtQD79LZr6bIdyJrvnuMCD+vZvGztZii4yZ2Lr8niSBh/NJOvcQUneHr
1NvzE9ezsGDb7GlTFJuNzX/8QwT2A8o+D5dNUMK/cJd/q3j/Ch/8l/HRBF1w
1nlHYZOEZz99d2ZUmaArtCfFxzdLAifrKLUrwATllxe4sAtJwpeW6wqbP+xF
BSLH3jFEJaGpvcbwzKO9qPCs5G5LCUkonPWtnTm/F5Xop4nfkJGEEGk5498q
e9Gztvh3qsqS0LnDx8Ai2BjVq+zZbasmCY7bUv2mjIzRyytrxaEaknDh5EX5
88LG6M3BkIQmHUnotXvx48ljI/Rh1Hv3YSNJiG0M3vrugyGa+2v+MP6oJNSn
J3QOLOxB3bduPJ11kYRmiWNxpo/3oDLjby2HPCQhTuji2UDPPej4tdhxBX9J
aL9FQNM9/6EphafSnaGSUPLYdpduLqCWd5uVtSMlodF/96CBOaB7Qba6t6Il
IZf6ZuXXL4TcXzIPBiZKwvg1+Fl3Sx99saddEU3HeemqyfvhXah+7XR+VJYk
RKwoYvq0XSj37suSqRxJaCgTbp/w00WHWU6tzwokISXPkNk/q4M+JF7feKxM
EljZ63vne3ag9mq2oPtvJaGr386WSVZFD50szwu8k4SiyCspGw4po+SNuVdD
eyQhmrdBTjpBEe211H5sPoCv7+7ZYNdDQ40Tx78xJ3HW0rjKZ0hCtcJDDjob
paDbx7Mo++xkfWFglX6rjhTkT5c/iAzejt2tFzxI0ZMCU4thUnO5JlbAFXA8
HElBc8xrAcNfO7D8AlquirEUHNkjs1B6RgfL6Mn8c9VGClqP0MMWru/GEjTC
Kg8HSMGH2Rjjt8KGmOecvuLMHSm4Fv05RVvVCqMHvhHh55eGwws+3JF8jtik
SKCvKkEasq+Hts67OmL3nkpiFiLS8DzKhH93jSMmt+GEd4qkNGQV6h3dfcwJ
k70i8nwrQxpE/jH0y0qOYMTHrs4c/0lDFaq0y5V2xgYO8FRRDaVhS4JcUr+R
M5a1WLXVYK80vPiv8OD3486Y2O6tFTEW0iBpMT58oc4ZE24v3bTuIA1PpR+r
ZRx2wfi+rxb/CZSGimXJiq5kV6wj9d66eLA0NBRu0Htf6oqlqO+31QmVBvVM
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

        "]]},
      Annotation[#, "Charting`Private`Tag$73272#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
9Aq2226Z0/0gHbiNuuajlVMwFW2pB+HWdGi9OpNN3ZuMLU1Z8FY40qE67EtH
28EL2Eyf82GDw3S4ESvaYmeaiA28OFbZ4Yzfn6V1zEc/AXtRlOgy5kbH/+/J
yvwQj8MyHLFaGR86bNbzucNJPo9ptqv7JATTwa3HdORSvDd21SH+8pZTOM83
bq9+6ob9nOivGjlNhydXhZSuvbPBatdf5NgTRgcOLebs1Q4FpGf07dpaFB0U
ZE9wbyMeRYZPsjtDU+gQ2CS8Or8pDt22mPuhnEoHhqjPx9jleMQ7YCj9IY0O
fbMdwa5vE1HbynevLZl4vg7Yc6GMJHRgx76173l0iDJVWZOuSEP2tRxax+7S
wb5Wb8hTNhc1GNnZk8pwfX57jH/UzUOkd/fPtd2jw2OG+OVq+3z0ZcGxQ7kc
z39aVLmsqBB5aNZ4jtTifnPCrPjKbyL/e37Zzs/ocIAtV6zSUox/v/UsWwzQ
4dTyZcthagVq+fJ61/Ag3q/5+Kqj0RWIW/pVQsgwHSjt42OdAxUo8cpLkWuj
dMg96yiheL0SpUQ8pg1P08EnVXxOiVGNCmyL94Us0SFNsuiMjWcdahQIy88R
VQL/M5/N+S+y0LLRmSEVMSX4cO8jRxcXhgyiQ5SaxJXAiCc/6lgkhlp+B5QP
SSpBfO2LK5l6T1DbyJFnKmQl2CIbama2rRn1sfbPPFZRglAPYeL4nqfoVxBF
f2iPEgTPVqHRWy/RLQufg5lGSiDJGtWQ/PkSWave9zbdqwS//3V63t/TiipH
ddMqzJSAFnfhB9dIKwq0txyLPqgE3er7F3WZ7Whm5/lURVclUKP1HVn3vBON
8H0ZORKmBCbKd1bfyr1BvYU5l8fKlaDjteED9tJ79LGl8UIVURl4PL5ZJFgM
odBC9ebdUsrApIfdivceQlJhRX/eSCuDZLvVzpjIIWSveekoW1YZBld6E4PK
htD76w771KjKoDd3LENl/TDqjVgSvqOhDHuWHdXfNA2j7q1bs3NNlGE3aTG0
SWkEvSituB0dpgyzz4d5d3wZQ73KAQ+0IpThS+Wfg3MLY2jolkrdt0hleINl
0tMExtFy4X+tRtHKECxRFXVr2zjSTM+c5r+gDBkP+1n/UsdRfvhZzauZyhB/
856cHkygoH27morKleFs0uVwzyuTKKpt5fmhSmUQaf2ac+2/SXTZuLGLu1oZ
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
P8h/04Q=
        "]]},
      Annotation[#, "Charting`Private`Tag$73272#2"]& ]}, {}}, {
    PointBox[{{9, 1.734723475976807*^-18}, {9, 3.469446951953614*^-18}, {
      9, 0.}}], 
    PointBox[{{9., 1.734723475976807*^-18}, {9., 1.734723475976807*^-18}}], 
    LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
    LineBox[{{9., 1.734723475976807*^-18}, {9., 1.734723475976807*^-18}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4, 14}, {-0.02878568662902275, 1.0288027430365219`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8564532395010986`*^9, 3.856453561105255*^9, {3.8564536070326614`*^9, 
   3.856453646361935*^9}, 3.856453717137038*^9, {3.856453862151415*^9, 
   3.8564538988230715`*^9}},
 CellLabel->
  "Out[377]=",ExpressionUUID->"59d174ee-c47c-4367-b7e6-8b1a3d68b54a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"allowed", " ", "failed", " ", "levels"}], ",", " ", 
      RowBox[{
      "shift", " ", "on", " ", "v", " ", "solution", " ", "through", " ", 
       "levels"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", "n_", ",", "u_", ",", " ", "p0_", ",", "listv0_", ",", 
      "condition_", ",", " ", "pyrfunctions_", ",", "threshold_", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", " ", "updateValues", ",", "nV", ",", "tableNewValues", ",", 
        "tValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<=", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", "n", ",", "u", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "listv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
             " ", 
             RowBox[{
             "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ",
             "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", "n", ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tValues", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", "\"\<ok\>\""}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "We", " ", "only", " ", "update", " ", "updateValues", " ", 
             "with", " ", "the", " ", "tValue", " ", "that", " ", 
             "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"pickNewValue", "[", 
             RowBox[{
             "tableNewValues", ",", "condition", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.843752560973708*^9, 3.8437525791150923`*^9}, 3.843752658661976*^9, {
   3.8437532609577184`*^9, 3.8437532630116253`*^9}, {3.843753321731477*^9, 
   3.8437533404766655`*^9}, 3.8437535235027065`*^9, {3.8437542615756073`*^9, 
   3.8437545058254924`*^9}, {3.843754584362295*^9, 3.843754613448418*^9}, {
   3.843754788152096*^9, 3.8437547901701674`*^9}, {3.84446023967266*^9, 
   3.844460243138896*^9}, {3.8444607278874874`*^9, 3.8444607297363987`*^9}, {
   3.844460774388563*^9, 3.844460843946801*^9}, {3.844462037391844*^9, 
   3.844462105400992*^9}, {3.844462169596165*^9, 3.84446222491173*^9}, {
   3.8444623679769106`*^9, 3.844462391371277*^9}, {3.844462439619422*^9, 
   3.844462440758129*^9}, {3.8444624986906347`*^9, 3.8444625790197444`*^9}, {
   3.844462952206507*^9, 3.8444629975774703`*^9}, {3.8444630353273516`*^9, 
   3.8444630422572412`*^9}, {3.8444630963197064`*^9, 3.844463097574968*^9}, {
   3.8444631367198167`*^9, 3.8444631620261145`*^9}, {3.8444631957424603`*^9, 
   3.844463217092122*^9}, {3.844463279949193*^9, 3.844463282173604*^9}, {
   3.8444635938104506`*^9, 3.844463601998819*^9}, {3.8444638964881496`*^9, 
   3.844463899627947*^9}, 3.844464021984146*^9, {3.844464194811337*^9, 
   3.844464197865275*^9}, {3.8444642413958893`*^9, 3.844464282685113*^9}, {
   3.844464603077302*^9, 3.8444646428051577`*^9}, {3.8444647003023415`*^9, 
   3.8444647101585493`*^9}, {3.8444650402932653`*^9, 3.844465047181552*^9}, 
   3.8444687193751507`*^9, {3.844469164171029*^9, 3.84446916505202*^9}, {
   3.844469262191881*^9, 3.844469273354315*^9}, {3.8445147154312534`*^9, 
   3.844514920195876*^9}, {3.8445150225856075`*^9, 3.8445150482989445`*^9}, {
   3.844515133898366*^9, 3.8445151681683445`*^9}, {3.8445152348500757`*^9, 
   3.844515453692839*^9}, {3.8445154857004576`*^9, 3.8445154866340466`*^9}, {
   3.8445159926576605`*^9, 3.844515993121111*^9}, {3.844516074572565*^9, 
   3.8445160903677597`*^9}, {3.8445161517680817`*^9, 
   3.8445161878225985`*^9}, {3.844516251196046*^9, 3.844516273742357*^9}, {
   3.84451646477081*^9, 3.8445164780299234`*^9}, 3.8445165295396204`*^9, {
   3.8445165629572544`*^9, 3.844516592682452*^9}, {3.8445169157063313`*^9, 
   3.8445169192029696`*^9}, 3.844516963591753*^9, {3.8448672233060846`*^9, 
   3.844867245115175*^9}, {3.844867353997981*^9, 3.844867357674706*^9}, {
   3.8448674432605042`*^9, 3.8448674485507154`*^9}, {3.844869076768549*^9, 
   3.844869085865178*^9}, {3.8448731333838654`*^9, 3.8448731338260813`*^9}, 
   3.8448737701146564`*^9, {3.844955365518254*^9, 3.8449553724457283`*^9}, 
   3.845030439682123*^9, {3.8450375386523123`*^9, 3.845037545723833*^9}, 
   3.8450382282659655`*^9, {3.845038281748803*^9, 3.8450383149303274`*^9}, {
   3.8450384076219177`*^9, 3.8450384106480255`*^9}, {3.8450384691870403`*^9, 
   3.8450384694118032`*^9}, {3.845038525051551*^9, 3.8450385294382544`*^9}, {
   3.8450390760778513`*^9, 3.8450390898653*^9}, {3.8450391231991873`*^9, 
   3.845039124190837*^9}, {3.845044900308997*^9, 3.8450449085151877`*^9}, {
   3.8450478878754888`*^9, 3.8450478911507916`*^9}, {3.845918130250128*^9, 
   3.845918143807156*^9}, {3.8459988288087425`*^9, 3.8459988385172453`*^9}, {
   3.8459988752133303`*^9, 3.8459988833283424`*^9}, {3.84599903561343*^9, 
   3.8459990448355284`*^9}, {3.8459990809048405`*^9, 3.845999094061246*^9}, {
   3.845999185714033*^9, 3.84599920077864*^9}, 3.845999453539628*^9, {
   3.845999812775424*^9, 3.8459998209297647`*^9}, {3.846000004463835*^9, 
   3.846000008580392*^9}, {3.8460009720676517`*^9, 3.8460009811076927`*^9}, {
   3.8460197840505905`*^9, 3.8460197844570885`*^9}, {3.846019863658993*^9, 
   3.846019868489476*^9}, 3.846019942481623*^9, {3.8460210288916287`*^9, 
   3.8460210293879004`*^9}, 3.846085913627901*^9, 3.846085981096647*^9, 
   3.8460880792910357`*^9, 3.8460883386833396`*^9, {3.846092834426603*^9, 
   3.8460928488245487`*^9}, {3.846094490813854*^9, 3.846094491057413*^9}, {
   3.846094812361848*^9, 3.8460948175266514`*^9}, 3.846094876780088*^9, {
   3.846094965181115*^9, 3.8460949743163085`*^9}, {3.846095037921819*^9, 
   3.8460950403162622`*^9}, {3.846095070558279*^9, 3.8460950769618917`*^9}, {
   3.8460951140344286`*^9, 3.8460951234958487`*^9}, {3.8460952865340257`*^9, 
   3.8460952952741537`*^9}, 3.8460954210148797`*^9, {3.8460955191167483`*^9, 
   3.8460955195314646`*^9}, {3.846095621104643*^9, 3.846095627437854*^9}, 
   3.8460957744472537`*^9, 3.8463283255360327`*^9, {3.8463283779065075`*^9, 
   3.84632843784424*^9}, {3.8463284954456854`*^9, 3.8463284974766197`*^9}, {
   3.846328747191173*^9, 3.8463287484723854`*^9}, {3.8463288529685507`*^9, 
   3.8463288665369644`*^9}, {3.846328962699226*^9, 3.846328975097176*^9}, {
   3.846329196527423*^9, 3.846329203266567*^9}, {3.8463292857804523`*^9, 
   3.8463292869853487`*^9}, {3.846329559633199*^9, 3.846329596163855*^9}, {
   3.8463296327608476`*^9, 3.846329639537835*^9}, {3.8463297026085835`*^9, 
   3.8463297028175774`*^9}, {3.8463299835875034`*^9, 3.846329985632037*^9}, {
   3.846330040372553*^9, 3.846330041582344*^9}, {3.848498810425356*^9, 
   3.8484988107865243`*^9}, {3.8485005525416346`*^9, 3.848500552982191*^9}, 
   3.848500606539936*^9, {3.8490331293172626`*^9, 3.8490331374091053`*^9}, {
   3.8490335009474487`*^9, 3.8490335110198793`*^9}, {3.849033862943802*^9, 
   3.8490338691610503`*^9}, {3.84903415954405*^9, 3.849034159824979*^9}, 
   3.85230351622507*^9, 3.8523066366174097`*^9, 3.855146154973547*^9, {
   3.855146302143237*^9, 3.855146318472378*^9}, {3.855146348989067*^9, 
   3.855146356044076*^9}, {3.8551464034754276`*^9, 3.8551464208663516`*^9}, {
   3.8551468742536554`*^9, 3.855146874542386*^9}, {3.855164498762229*^9, 
   3.8551645013324347`*^9}, {3.8551665801616864`*^9, 
   3.8551665830343313`*^9}, {3.8557653330357637`*^9, 3.855765348171381*^9}, {
   3.856028993246252*^9, 3.85602900255161*^9}, {3.8564503567521996`*^9, 
   3.856450358706246*^9}, {3.8564540472172804`*^9, 3.8564540716419888`*^9}, {
   3.8564542430834246`*^9, 3.8564542434382925`*^9}, 3.856513551299432*^9, {
   3.8565136756593227`*^9, 3.8565136828902445`*^9}, 3.8565234709525375`*^9, {
   3.8565242165473156`*^9, 
   3.8565242206795516`*^9}},ExpressionUUID->"d9b9e833-8770-43d6-9196-\
3f072660ee39"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1677df7d-d338-4ae0-86ef-\
227ba8502fad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "condition", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"condition", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"x", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
    RowBox[{"0", "<", 
     RowBox[{"(*", 
      RowBox[{"Abs", "["}], "*)"}], 
     RowBox[{"Total", "[", 
      RowBox[{"x", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], 
     RowBox[{"(*", "]", "*)"}], "<", "1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8557653726933913`*^9, 3.8557653749240737`*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"b3e9302c-f436-4a5a-8d84-0d7bab68e55c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}]], "Input",
 CellChangeTimes->{{3.846328896022578*^9, 3.8463289074786158`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"b14c0653-3e9f-41bc-ad3b-fb428643f9e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"0", ",", "0.02", ",", "newv0", ",", "condition", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "30"}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"0", ",", "0.02", ",", "newv0", ",", "condition", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.8463289105203114`*^9, 
   3.846328933151903*^9}, {3.846328999885933*^9, 3.8463290037897797`*^9}, {
   3.849033430776492*^9, 3.8490334403055115`*^9}, {3.849034375957921*^9, 
   3.8490343857681007`*^9}, {3.8551467760707083`*^9, 3.855146780342425*^9}, {
   3.855147874949031*^9, 3.855147884864988*^9}, {3.8551479152537065`*^9, 
   3.8551479280205803`*^9}, 3.8551480181420155`*^9, {3.855148168929095*^9, 
   3.8551482071331615`*^9}, {3.8551482494181504`*^9, 3.8551482583580112`*^9}, 
   3.8557649591724815`*^9, {3.8557658707823973`*^9, 3.8557658807619715`*^9}, {
   3.8564539525745745`*^9, 3.856453991322014*^9}, 3.856454136478945*^9, {
   3.856454256164117*^9, 3.856454267088217*^9}},
 CellLabel->
  "In[455]:=",ExpressionUUID->"a2f96ad6-157a-40a4-b5dc-b0107b8c5ea4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.022431983201560902`", ",", "0.1387034759008053`", ",", "\<\"ok\"\>", 
     ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.039830553607887835`", ",", "0.09465441388005973`", ",", "\<\"ok\"\>", 
     ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.06766730835203061`", ",", "0.07597544431482428`", ",", "\<\"ok\"\>", 
     ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0024823996786031777`", ",", "0.01797278993901206`", ",", "\<\"ok\"\>", 
     ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.25061091625218657`", ",", "0.038667520476585046`", ",", "\<\"ok\"\>", 
     ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.19729188575402618`", ",", "0.36807803629761154`", ",", "\<\"ok\"\>", 
     ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"fakeconverged\"\>", ",", "11"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9766854997247942`", ",", "0.0049688603688237045`", 
     ",", "\<\"converged\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3852824456171511`", ",", "0.20747266451461677`", ",", "\<\"ok\"\>", 
     ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"fakeconverged\"\>", ",", "19"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "30"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.85645324005457*^9, {3.856453944813328*^9, 3.85645399266794*^9}, {
   3.8564540508903866`*^9, 3.8564540751177745`*^9}, 3.8564541380630198`*^9, {
   3.856454217021903*^9, 3.856454268638846*^9}},
 CellLabel->
  "Out[458]=",ExpressionUUID->"2891d675-3f09-43ae-b591-56cb65e3ff59"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$74783#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$74783#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[0, 1, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{1.8735121774239938`, 6.88214269644119*^-22}, {
        2.026301815286214, 6.88214269644119*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3., 4.235164736271502*^-22}, {3., 
        4.235164736271502*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[0, 1, 0], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3.9954825054212337`, 8.470329472543003*^-22}, {
        4.131424337385041, 8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.3552527156068805`*^-20}, {
        5., -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[0, 1, 0], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5.971598312402576, -5.421010862427522*^-20}, {
        6.100729152347038, -5.421010862427522*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[0, 1, 0], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6.885966351465325, -8.131516293641283*^-20}, {
        7.043662195671902, -8.131516293641283*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[0, 1, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.906900841509682, -7.589415207398531*^-19}, {
        8.198098505385186, -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{9., 1.734723475976807*^-18}, {9., 
        1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[0, 1, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.767649215401716, 0.04969024160430335}, {
        10.309913512342058`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{11., 0.5000000000000001}, {11., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{12., 0.9503097583956966}, {12., 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13., 1.}, {13., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14., 1.}, {14., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15.028201331521252`, 1.}, {16.008409844292743`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{17., 1.}, {17., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      RGBColor[0, 1, 0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.90830177437492, 0.9503097583956969}, {
        18.811569958500698`, 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{19., 0.5000000000000001}, {19., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      RGBColor[1, 0, 0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{20., 0.04969024160430336}, {20., 0.04969024160430336}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{21., -1.6263032587282567`*^-18}, {
        21., -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22., 1.3552527156068805`*^-20}, {22., 
        1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23., -2.0328790734103208`*^-20}, {
        23., -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[1, 0, 0], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24., 7.623296525288703*^-21}, {24., 
        7.623296525288703*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{25., -6.352747104407253*^-22}, {
        25., -6.352747104407253*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26., 1.164670302474663*^-21}, {26., 
        1.164670302474663*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27., 3.441071348220595*^-22}, {27., 
        3.441071348220595*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28., 1.9852334701272664`*^-22}, {28., 
        1.9852334701272664`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29., 2.6469779601696886`*^-22}, {29., 
        2.6469779601696886`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.85645324005457*^9, {3.856453944813328*^9, 3.85645399266794*^9}, {
   3.8564540508903866`*^9, 3.8564540751177745`*^9}, 3.8564541380630198`*^9, {
   3.856454217021903*^9, 3.8564542692058177`*^9}},
 CellLabel->
  "Out[459]=",ExpressionUUID->"1af68017-1631-44f0-80c7-7eb4a86e4435"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"4d225df1-a7b8-4e3e-b420-\
6ff5f34abf9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"0", ",", "0.1", ",", "newv0", ",", "condition", ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"p", "-", "5"}], ",", 
       RowBox[{"p", "+", "5"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"0", ",", "0.1", ",", "newv0", ",", "condition", ",", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"p", "-", "6"}], ",", 
     RowBox[{"p", "+", "6"}]}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.846328944814293*^9, 
   3.8463289588384256`*^9}, {3.8527448744504375`*^9, 3.852744875646369*^9}, {
   3.8551468977516117`*^9, 3.8551469117386503`*^9}, {3.855765896768709*^9, 
   3.855765947888356*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9fd57488-dee4-4f36-8bcc-ab84a909ef9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.9828574653996677`", ",", "0.01714243672945283`", 
     ",", "\<\"converged\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.13384711317498382`", ",", "0.8116554063397886`", ",", "\<\"ok\"\>", 
     ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"fakeconverged\"\>", ",", "11"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9767540270677764`", ",", "0.006489775692524426`", 
     ",", "\<\"converged\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9678253848896928`", ",", "0.03217461511011107`", 
     ",", "\<\"converged\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.11423642954558567`", ",", "0.8377413707698119`", 
     ",", "\<\"converged\"\>", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"fakeconverged\"\>", ",", "19"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.856453241221014*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"d56140a7-9ccb-4b95-88f3-a1a4cdb41c3b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwc2nk8lF8XAHBJEpEiSZQZjDGGmaHFlnsQiRapkApJkrIkIdl3ISL7EhFS
KGskY0tIspclCfm1YCYkRfVe7199vh/mee5y7rnnNAjWTsbnOTk4OEa5ODhW
/j2Sv4eHg0MSDP/Svvw6pqzpFjB7eWyVJFBu7kyLf7sRZZwu7GpaLQkid8tP
DM8R0IygVGr4WkkQ7lN8lSWvhCKvCygKbZAE3et7O7QStVGLwadjpO2SIFf6
7ZmzxTGkNR1796CGJLSNbbtu+sgGKSvN7E72wJ+nxInT9NxQwQVlWo6nJDzY
sO5zU5EbIqZ7yBZ7SYKgW8O53Vvc0Sae1aIv/CThTkTTaOJ/7mj2/ZZf7DBJ
2H3gAvFF8HVUEq71TD9ZEoyilI4YlHohCjOk9FiqJMy3sl4rbfFG9+ZfPbRI
l4SQe6s7czy9UaylSZprliQcnZnrFgQf5LLrknfmAzx/K7M115t8kdLHO2ix
ShI2i2T0BJv6owKRwT2rayTBXE11TWyQPyIe3EEXqJUEDbV1Y6pP/NGmygeS
0g34/fQCU+N1AWg2snaVUZskhBVmGlqUBSD7htW/zdslocI2jvXvfQAa+6k/
e75DEswafEvJawNRt3XP2I1uSTjflHdijVkgeqLyuTFvUBJcHn7alj0XiMiO
CjUlw5IgSjd5t2trEMrMdil7PiIJ4tuD5dQ1g1CMwJ+cnjH8+WS/fXEhQch5
YmPIv6+S8KMp4xpDMBh93mrqwzstCe8NS9mCjGBkdSTNbTNLEj5yGl47fDQY
GVWTLsjPScJDG9sTA9HBiB6jrm+6hPe/+E/4JFcIOvL7RhL6Iwk9L2WWMreH
IEebms+y//B87Kqv1uwJQY9U9oYvchKgKsZlu4BdCHp1z3tglIsAKbVqRPAN
QV/X18q1chNAs+FpZ1t8CCJ/1GxL5iWAbtKOro91IWi/oa9YwHoCOG4snL/Y
F4Jsy5n29gIEGC5UtdX+EoJywoFPfRMBuDOS+4cEQlHjnN8pKWECBCZtzEuS
DEVjZ+of8okQ4NXqbrt0RigiKGkfHN5KgN2e1865HQ1FkBaQ1rSNACLUPw56
VqHIirtx6pEEAQ6lifCbOIYiX+fVe+N3EEB6+x257BuhKGNQJ8qbQAD+NfqP
5MNC0fN9Qe/PSxHAIofLZzouFA0XNSkcliGA35G00MmMULQkusZntywBuk5+
fCL8IBSJBep2bJcjQIlI7qdrJaFIdTp4+1p5AgQN1PDxPAtFZqbNjiwqAR78
+Lm+tSEUuddzM98q4ufVynVXtIaiBPn9G+roeD1Cpfe9eROKyuNDLfOVCNCe
XW0o2BeKev+9LI7ZSQCuC7Vd7gOhaO4iD8f13QRwluZkrn4fijb16hudVSHA
VZrZ8pMPoYihGZ55QI0AV4ZiXfw+hiKj/FY2Q4MAzTeCeB3GQpHTJl4tMU0C
9J779+ga9i0vg9ucQIC/k33aSfj3CydvfvyqRYD7ZoNl3fh57UavGD06BCCt
//CNiN/3rZov4JkuASaPV3SG4PHwyhzszt5PAP0QpYPLvaFILjqSGHmAADlz
Mvv98Xz0f7W7uBoS4DzbukAIz/fCOf7G04cI8OnNM4sn9aEo5PUhId0jBAj5
xHnIrCoU3d9z65zCUQIUBPFacD8ORU1ZHaWbjxGgjOO+Z9X9UDTBt4Hr73EC
/H6UE+GUEopWux05PmlCgK/DQ9dJt0IRcTQ6p8OMAKPj4orDfqFI26BzvsKc
AKqb1W7fcglFZ8sEde+eJoB105pI9XOhyG/70fhQCwI83me89qNxKLobdvuT
kxUBwr58/+alFYpqZ7t2mVkT4CB3JZGfFoqWm437ybYEEP3xW45zbSjaxogj
bbQjwITD9nbr7yFILbXH7ddFAmx99Phc8WAI8nA6vqXNgQAnm+1FuApC0PwW
E7NL1wiQG7N71Vn1EDQrelnYwJ0ADcsaWQESIej71oBO8nUCoONjkzf/BqOZ
bUX6k14EiC5657//eTCaFm/ieuGDz4vM7cmfKcFoSmKwLtuPAIlXKjeEugej
Lzu4Vc8G4fhyEu9QVcD5QFL8BwohACGhweUkdzCaJCg92R5GAAPP+7+PjASh
CSkLueEIvB/n2N1VN4PQiGzFVtM4AoiJ63gf6AtEw+T2vl3xBCiPchf6khOI
huTGbgsn4vN/K6TtyNVA9E5egLc7hQAO5NXV9usDUQ/N9vfBewTg2brD7S4t
AHXTvSrkcwhQf77zK/zwR52MWBfeXAKQhX8/T67yRx3KtV9fPiCAlU9wxkVN
f9SyR2RI+wkBvn2WljRU8UPNKtREQikB8rUD60YnfdELVe1jHOUEsBH74uFp
7osa1B1fPX9KgJqut28iVH3Qc9T8TKWOAE3isS8q+2+gGhh239JAgPXBvhX8
e26gaq1Z5YVGAkwt9prH3fFET3W2Pyp9SYB3PSeWJPbj+2W/W5riG/z7ohyG
DeFu6LF+pBl/F97vZJ8Q2Z5rqPjAPeGpbpw/WjPZaVuvoUeGHZEP+nH8rHO8
lZ9+FeUeIXlLj+DxtXrd7fV3Rqmm/WfEpglgZz8mtc3xHPpa6lZIYOH5BP2+
Wep+FqkIbvlD/k4AwYS6hZQ5C9TfYpq25wdej4Hi6886TNAmtYHB438IwCF2
cfuT3XvQTfFh02h+IjTVL29dv86S6fnx41EuRSJsefTrzrCxF7N1b0AWH50I
wQ3JbrqPvJmiKcTvm5SIUCnzXpTF7cusMD4XQ9hNhB/Jx963fPBjzjZOdGhq
EuEm/5mtHumBTPvc/wyvHyZCoOrORXfJcKb5pWndGUec2qPu3FVj32YaLYdN
dzsTIXGdIHvn3limXpR0fKULEW7cVLMsDI9lKhWfmvBzI4LxVBisIsQx+eZa
A4R8iKB72f/ubf07zBrPXKZKFBFo6nHGqm4JzBI+7QsS0UQoT3gscfJpAjM/
7b0A520ivNyrmJ38K4F5p1bY4tUd/Ly63UHnrycyHTgDl8+kEaG/e1Yx2CGJ
aRO3PUc7gwidzWFn1uYnMc2lqw1lM4mQ8sD0zo2PSUw9ve8p7GwiFEdF1hOP
JjO337RUDXxIhF6+1oIWYgpTeNvS6IVCImwqTXu453gKk/dRQtjBYiLcm/Ln
tA9KYS68fv12cykRPOwcTq76mMKcsrjo+7uMCLd6vjwy509ljrG4ZD9UEOER
0eaPpUoq881GDbf8aiLU1WpqmN5MZTbfeysRVYPXd+dmn71PUpk1yldfXKkl
wuKHvnNP+1OZ+ScKhNUbiHBfjrPhuEQaM2NSt2ZHE/48ezzKXjONecf94zmu
ZiIASsv5cyaN6ZcsWvq6lQgKTV4ng5LSmG6UMvOSV0RwltpmeLk0jXn52RHO
xNdE6DjlpVjdnsa0PvjtwY03RCjwP6VgN5HGNHsfctSqC+/ng6tXnH+nMQ87
En/t6yFC0X++0q8F0pn7/j3PlOsjwkMjdWcPQjpTLeakvsBbIgwvWvlcVkpn
0gk/WLPviFAy/9AjWyudSSqJSXw7SITbZm/DthxJZ4rrUFHNMBFmVTLeNZin
Mzf1vpzMHCGCSsGz23dt0pk858/dCh4lQlfd1/d5l9OZf3/83WU/RgTq7cnJ
Ppd05nxIyvvDE3i/aPb9Uu7pzK9bdgcrT+L9fUzvj7iezvyY30UV/UyEefKP
DTye6Uxy/M8LMl+JcHgqIf+0RzrT0V8iW2mKCKr+FRfOuqYzyxx0RtAMETK2
Xv0g4JjO/H3y4tZDbCLY/fct68z5dCboRR83n8XxLg5aeni8oUrl0RfmidDz
9daR+oPpzI7tQ22uC0TQCfpp8VIjnSnMt4o7YJEIzWLJq45S0pnmP0la0b9x
fI/GtppsTmdmjR/0SlvG7+PmOtD1J435+Y1L5YO/RKhh8m2qGk9jKtYkzVZw
SEHq3tYK7pdpTNf8WoUmTimQLDnVWpKXxnx2Z8Kui0sKCEfGhsqD05j6DvQP
33ikwK1N/0C2ahrz1kkTsV+8UpC1/kKLz4Y0Zp+u1wlufimY1VyIjhtLZVpv
b3kluVEKxtUnwNAPxxfvDLeikBRY2Psf/mCQymQtCGmrb5aCFKP107c2pTK9
3lg+PbFVCuzW28lIJacwG54Fz1lvk4IOXffxRdMU5rr8h4rOElKQ8Zft2S6U
wkzw+5lzkyAFsRWZPkcCkpmPGdG3mXL4/WXmvfOqScwFifL2dnk8HyvZk18+
JDL38g6tHVSQAi4xM/3MgERm2xjJZ54hBesDrIv21CYwJ+Jq7eXUpMArKeiO
Bn88k+I3cX+3hhRw0IcuuCbdYV65zPtRRxPP/3z0bmXJO8y/+0xMLbSloMYl
SoAsE8cUXZjWiTOQAuuIAznbuW4zLcaEfDMPSkF7+MKhWpcY5v0O1erCw/j3
7X+sPfYsmqmUF0xvMZaC0SreZ+FGUcyDZhISf8ylYLFRLMhnRxgzdp+OGe8Z
KcgPrI7rZ4YwB+gX47ZYSsHOmqX3h82CmbbrytcpncPzo5wutbkSwPSrPrhg
e0kK2A1vHvMGezBz9+qn2ztIgREt+UbPsWvM9jqdfY5O+H0R3N3hm1yYoi/V
Yq9dxb75+WB6rS3zcQ9ZMeiGFPgFRN/qsdVD/SbSfaHeeP615vfHuM3R8sAO
rwhfKbBS704UjrZB+qMibbGBUlDXF33Ig9sFjU5x2WZFSIEoQ+7oAYo/4nbm
4L8fJQV04kDLBoNARJ1bKs2PlgJytd2VOpdg5PFrdtXjOCnw0OuJFf0QjgS5
P6bXpkqB2TG98YTY20hrx/O+oYdS0JSaXZlWlYrs7j31+lCI5/chdouEcDq6
JVMmNV4sBTbNBnyBVzPQoPzDK19LpWDS9NpkVGYmclFJ5v/1DMcD7VwLMTIb
3Tt6TVekXQo69SYuG408QC29zlNbO/B+rCtad66sAM2YXo6T6JSC3mCeIsmo
h0jN4txH6V48vsZB8Yd6hajb/qi38rAUbFpzxZfm8BhxBimUG01JQdrT+a0P
dcrQG3XpMsaMFLS8jJ6XrilDaXNipZvYUjAY7HxsdFc52n2O50nvnBToP39i
TFCoQJe0xx+ZLUlB8Idf++cpT1EvR3KOFa80RLONPB7b1KBcb647zmRp0F0b
VyA51oCu7lqKPUqRBoLtb3sOpUYE099vK1GloVV07O+lgEY0ePpD9DxNGhiF
GhUfpZvQBo3qCI890vBp6fyCtPML5PHbKdBPTxq4vZpMfm5vQYbuQy4xNtJA
vxBxkd73GtndPL0mxVYaiFmplnSNDhSS/j4x204aJn0unMnN7kANjR9qKi5L
g9/vZcrM1Te4Xpjgfu8qDfHn+u6MRnYi6QdTKXLB0mDMeNpyU6MbLQ/+aWi4
Lw3g1e7GfN6HCjUlhX5MSkOl3BqPF9veo36aUkmxlQykPTLjtbjxCXkKBPFE
WcvAxRtZISfjP6Ht030W9jYysLE1jKhb/AldKLjOJ2MnA53khOBvY5/QonS9
TYqTDISyraMvH5hEW8WMtgT7yMCCideF5U3/odNcjl7maTKQS7v8ViXhM+IY
Z3bvyZCBkOzU/dmFn1FO/Ua5zZky0N0bqDbf9BlN+5T3vcnGz6v86Ko/9xn5
/FpW1H0oA1+v3ux+cvgLujsT8ZFWLQN1Pvv/28fxFY29e6C35p0MHI9UkDY+
+A31bwqh8w3i8TnZvc86+w29OmgttnFYBuQEN2u0uH1DZXViM+Kj2FsGrBIz
v6GQ/Ij4nZ9lIEAhO3zn7Dck7+EwcW5RBhrmFmyEo6aQZMmBjou/ZUDbr/di
5t0pJDwl89RpWQaWeDzZy0+m0F/LkYgbHCQwDoj8LdM/hTr3H1GO4yGB7oWU
2Z3i08h1CyOgQZQEaYE/Rq/enUZ2R/kvt4iRYMYkVIGveBqdifhyokOcBJK2
b0dca6eR3r8suUFJEgS23DlWNzyNtv63qes7mQR6MRV1e7fMoNqK+R0EVexG
mUCuoBlUwu5cJ6tOgjVa5M7hmBmURymco+4lgZnG1Y0R6TMoJuP8SxUtEnBr
vDhuXzGDrEP6HY0OkCDHOGKr2uQMWmvy9LnvSRL4uNKuGWmy0L2m6H/Wp0hw
sSFQcm4/C2kqX9DSO0OCUud6PdejLOQmKPJi/VkSdF8Ve77JhoUm2q62J9uR
QPOZwtkXoSzkp2oo4G1PgvaSyjmrGBYSzycaWV0mQf9mx6vDSSx0LLirh+SM
P5/tP3f1AQs1INpQqTsJbococlNaWciiiFsi8ToJXvlxb2rrZKHf4iMWnjdI
kPj9kLfhOxZi/I4cA18ShNUclJ+bZKHMsq9fXoeQwPKIp6fDKjbylstd/C+e
BH/OEyxTxNhINMlb7VUiCQy++ar6SbBRGfcJr6JkvF57BnaZSbLR1Phqjmvp
JIicWP99RIaNzDPOruW8TwL9bw6/DtDZaGG96oFPuSTw+Jl4qVGJjWJvCEa0
5JPg3pGRp7RdbNRqxhSIfkSCqlwjrY+qbKQiJCEiXkYCG5362wXabNTrP2/6
r5wEC5yNNs/3sZEz+1XyWCUJttzhbG/UY6O8154SD56RoG36VelDAzYSCXsn
vbuRBA7dXs5fj7JRyUKx7dYXJPh8xdoh7RgbHTofmr/cTAJ/u7xK7RNsFKS9
m9rYRoI+idGYy2ZsNLccp2zUTYLQ5VUjeyzYaLT5B8/pXrwfTnxbH1qyUXuM
6ciFfhJ07dl3ZeNZNsqR3hbuO0gCxzYyq/IcG8XMeFlEDJOAtuXlkUUbNvJ6
OqKcOEICrufXdai2bHT84L2RojESqIiuMneyYyMQ4SqrniBB/ZGWSp+LbEQd
PR/ePEmCJxNh2wPs2YjLVW7nyFcSCMkPeZ2/zEbsvRHrvk6RoNjCsljXgY2G
106P/JjB+zFfbyXmiPcn9XE4/xwJFPTXVmQ5sVHm+U2WW3+QgBw+fOe4MxtF
0lx3yvzE46Nfs1vG9vjVt47xiwQmPgaHk6+wkU3jng8aS/j9ZX3n5F3YyCgq
uUz/D/65cExzCbaG6VL48X8kMB+ZjaNdZSMy4Yyl1SpZ6Dzm/iULe/O32p2X
V8tCR3nCxDpXNuIsl+T1WCMLF3Xb7l3AnvEJ+BC4VhbKdCK0nmEP6k+URa+T
habvxiNc19ioeZPezVQ+WSiOSUnYh10ynGeZxy8LEWeHQj2xM3LX7SrdIAt2
92+9ycW+6XyJl7lRFizTFSJasd3UXn9oE5KFoJuMd2PY1ly08v7NsvC1UKh3
FvtwR8zNsS2ykKt/KO0XtlrSrOXMVjzeVNPDP7FJ1sd3/d4mC26fH66dwt5E
reDl3i4LpU6Nn95i//2xZXSjpCykuGzhfob9lXm9XIIoC5pKhJB47P7woZty
0rJQzjoZeAG74dheq10kWRCeUtvGwC6SuLtLiywLTnZ7L83i+af8x8F3iCIL
w/cHYx5ihzyxHjWjyoLDp4gHp7FdbjSV2yjKgqpdW/cabAtdUoQzXRaOO22g
5OH13jPwZVfYTlloE4h91433RzrbkO/Oblk4ItdgfwZb0KFw9K4Knk/7+8xR
vL+fOa5EVGrIwtLjGscuvP+9bd1WjZqyEOjqooUPF6q7s3P3G5AFjheLCrk4
fpLIi6OT+2SBuvF0myWOr6DZkxWzerKwOlq+vATHn3PNs4i/+rJAzHhM+4fj
U9/Id7fIIVkId607EHyJjRbduSN1T8iClqSa4QEc703v9r7ebyoL7/Zzcjtf
YKNo1WsCBifx/MPnHW/j80FaGo85fEYW0Jux6iZ8fk741MebnpcFXp+K/Wwr
HA9BXncvXpOFBKtnqVfxefX5VDp6yR3HR5SXobEpGx3Q+0ZwvC4LuunxFxRM
8Plda57j4i0LO96aHx/A539DxJ4HN4Lx+HtW8fMdYaPLt2dLouLxeo9qn53B
+UVlVm4+OlEWDicNfM7UYaPVx87uik3GXvqRchTnoxThzsqEdFl4ttNwphDh
/JVYWHP3vizMx+2xOKGGx59h1/ykXBZKFpNa3Wls9KFgZKCvD3+eM4SzYysb
GcPGq+Vv8fyVX2XEiuL16NNZHz8gC9y56g/MtrBRAccDzePvZYH2SfTcF2E2
cjW5mt09IQuSf7ZP7BBkI15OHoc3c7Jgzy0/Oc+N83WiGnfxD1k4rxDwb3AN
zg9Uh7u3fuL4XpxhN3KxUZ9pd9ehJVn4JBxUkcGJ80Fh2u52TjJc7HZ2nF9m
od0nGRytG8ngal35NW2ahR7MnEvOFyLDmmKRhY5v+P4JSlAK20yGlEhes7Vf
WWhV8ZLN/q1kyBKU44jA90c7V3PrC0kyaPTFcL3/wEIoZdH6PpEMH7Un/oMR
FiqhyS8HSZNhr0PtWMEwCyWaxyjuI5OBU8DvX8wAC1k/No9roJGhRDRsMaeH
hfp0o6j3GGQgrTn7TKWbhfSHmC/8lcnAP1hi0o3vMwVumUXYQwa+Y2o/RTpY
aPEU6zRTkwxtYuTVn1pY6NbaIFLNITK4tS5ZRTFZ6OgiHGs6QgZHXcNVNrUs
JPzlj2/7UTJQdT9MwXMWSmlzHxg+QYYQxVRv/mcslBd1KfLPGTL82/vmEruC
hex9yFVrrMiQ71B8cLGchRSdPn3itybD5hErMjd2mZEl2m5Lhqcf/uQpl7JQ
ndCxWU1HMkQtRRb1FrNQIJfgjv3OZKhvPneQD1vvR7vhERcylEUn3dlfhNev
X+++pRsZTlwfW+p8xELRL1d3X/Agg1brIPd2bOOndX+dPMlw6drPOOeHLDSQ
rGbm50OGGbBZTypgobSbP4PC/MgQHp04HobrAasbZU9iAsgwklQu/D2fhSZP
K/JlhZBBWc3jdFceC83uINbW3yLD8sEgu877LFQu+OFrawwZerg9f5zG9liV
tqU7lgw2Kv9FzOSw0N+xzVfGEshAPDvzSBK7vqc7/WsSGW6FXpKqz2ahoKbo
ttkUMtCCSDdssfly10mvvkuGQAvxXOY9FupIaDbiyyKDxyW181exY0MDvYWy
ybC98PR7eewTHlCw7T4ZhJ+5cn3JYiHRi3/6pfLI8Jvq2lmAPXSyejX1ARmc
Uw7uuYKdYeBO3/mQDIKpLEUN7LPqO89oFJLBv/lwIR+2NPV7+L5iMliVncr/
kMlC/4kXVRx8Qgb95bUiT7EL+C+NHy/F67NLd+oOtsNfWcEz5WSoW+QiuGHT
WRMa5yvJEDGsUnAKe+5D1kWHKjJMeHR762JXdFokXHtGBuvzjbeVsa/Xb2v0
fk6GR6p/hmSwNUresYKZZLCIumIsjv3vXrz4rXoybFnc+E0EuyHO+EBCIxmu
b+xM3YwdHLTBLeMFGSSvpJuLYutfa7+X+5IMhUWXJHZg89mGvylqJUPDWeqg
HHaHid5yxSu8PoSuEBXs2P2r5ZivybAQYrjVEPuESt2Jl2/IYEaOCj2LXXfG
Y/BRFxnUxtK/XMemBNItY3tw/JoeSIzHvpP/edy9jwzGstZhZdh/X2fanXmL
12+uuqwf227ObFp7AJ/PUyThZexu0Y0u5CEyPOFwz5DG6517zv/G3AgZvAM2
CfliC4arcgyM4vObyTn9GNuz6HtQ7RjOD17Erk/YR36dvRU+ieP5u3qiGd7/
6u1iQk6fyWD5atAuAVt6X3fi8a9k8P00J/UWe/GWdtaOGTLMnvqw6yyOL+uy
3zJr2GSQ+mXiVYDdPlBS8PU7np9ZXMQCdpa0VFn5DzL0vc8ZT8DxalC9+qXh
HzIMxe6M/4nju+zDM0PGPzKcfjWkYZLLQtvXuHaKrJID1dbhS5XYc0cmBj5y
yUFrwm7kj89L2qemKff1cmC55lg/A58vbj7vK2cE5IA939WTje1M37WgLSgH
ZoVoiyg+j7o37v/jF5YDu9+MI2vxeZ0RDNmUs00OMm/fyPiHzzNo7FfppMhB
w2ZWrNETHI9n/9WUU+WgqXmz2Di2cGilVqqiHETvP2HjXsJCX7pkDW2V5GCn
2kXCfZxfYi/wWCyrysGU04yZMM5PE7GtgeQDcqDlUx2vhvNXhtD6tN2GcsAR
Pv5mDvvkncNl+w7JgfYVPf+iGhw/8T0TVkflICpDXJKM82FV0nvd5JNyINT2
nCJfj/Nnxve1vPZy8OiY48kLL1lIpWBr5LebclCQa3nAqRfnD8rpnF+RckB2
SdXW6WOhwocZNWuj5UBnr6ztln4WIhZKTUvF4ecn3Oase8tC/I8VDp9OlYOD
pTYOG4dYaKxcS/D1QzlQCrrLfviRhSLrL94papcDtV+ag24zLEQa8Bct7cDz
RXJnVVg4ftnJaZWdcvC8XrpzEXt+R1tOXa8cnLg7ren2nYXO+FDKu4flQObJ
1oPW8zg/q3/rW5iSg5PdLqELv1ioxXi1+dKMHHgsLn7P+o3jx37byD+2HLRP
8uQZLuH7KNlwkueHHCxq2rQm4/uQY/HhgtgfOXjWdWpoxz8W6iq7vAXxU+DX
6kKHSdwfXW4PStXZQIHj+uYNVHyfck+k7dDfSIE0AxFxF2w1odeyRzdTIKQp
d/wX9r0rCirnJCigS7v76c9qXD+H69Zc2EEBSy6VYA18P/dnnoHLBArkCjxV
9sTm64zSvyZDAdu/JxtmsV0VZ8xCFSggNJXS8g7f7wJ63O8jaBTYvH58lSC+
//PPbD8bw6BA5Luvx/SwhyMPX0zeRQGPEpn9j7F1vxVdf7iXAk18tZHX1+L+
KN8p5c0hCtRYkvLHeNjIdD7A7ckRCqj1BmmtW4frPUgwjjtKgVtuT4g07G0D
NbymJyhg5OFa54Etyct7Y+Q0BZ4NpAav5mWjsyYSpnUWFNhPsr0ujX3vHl35
nhUFvq79U7MPW0bd9Nt5Gwpsq43eE4hNuZxzavoSHq+ljsgi9qWnlXveOFBA
u/ZyjhAfGz3ieiX0xAmv79azNxWxaenfX7lepQB18cFZa+ydHZoay54UEG2o
ONmAfU3MWHTEC6+Hg1LDO+wK2/PzTB8KlNxwvzmDrfov4lFgAAUu/TytKbqe
jTTpA+J8Nymg0x19xAbb12tqcSoCr//qo93XsOta/vV2ROHx/xuoCcHWOUuK
ir1NAWak9utc7KBC1YuucRTYXkn4UY7d/Ougrkk8BThHX4Y1YevHXv2zNZkC
i1Z2Pz9gh4+EDCylUGDY2Lp3CruNklL+Po0Ck25Ewi/sQ411DlmZFBAIn+cX
5GejWxt6DwTeo8CyIPdjMezOU//JnM+hQOnf4RfS2Mbz/CPkfAqIo0GjPdhx
QKjmLaBAujxHC8LujdyZMPWQAuFPvlbsxxYZ2O/SUUiBl+nJ249gm8qcOvy4
mALwfD2HCXbSFUdK7BM8vmGd06exB5/7c7uWUiCgVXOnNfY23vixE+V4vkZ/
wi5gnzbJr91TSYGEvb6nLmNn3HuWsrWKAj0WTY+csT/MdLgtVeP48mv3dsWW
VB8zfl9DAQ3nxDfu2NahPxSZtdi/pbM9sbN7ePiy6iiQ9c31lxf2xA7x/wIa
8P5vDO3xwSZdpjXaNFFAS+WUkh/2hafad/WaKXBQ4buIP/ai5ajA0RYKHFvo
Cl7xzbU+PqfaKDA07XJhxeLF22bOt1Pg9xax5yufLzKpOuPcgffTgz/MFxv+
mrz27MTxJxzX6o3ddX9eI7ibAndm2AE3VsZ7KPZRdC9ePz6Hcg/s+XmaeEo/
Bb47HbK+hh2S9joi5x0FpHa8u3kFW3TfpaWiQQq4SByjO2AXfOO5VDVMAbYj
13E7bPW43MHGEQo82aL0c2V929X2GXSM4udvI247g20x9rHq3RgF9H3F6lf2
J4AhkTw9SYFOV40kfWzhgWqexc8U4Ngw+wqw7/uZeXB+w/Ek2hKigt3yJs50
C4sChMjpBBK2uTvjJeE7jo8/LTPi2FPb3+ymzlFAgjXcvQl7gyOviNZPCq7/
m/f9wfGYuTk/2PAXBa5MyfZ9x1Z6rvvjxBJeL+7BhU/YJuv9e+3/USBlef9c
O3Zawc/YO2vlwcZybi4eW9E4nvPuOnngHPFXCsVm/lJyecAnD2H8t9d7YI/p
Ox6t3SAP2dEHksyw5f6b2PB5izzIxb5ibMaukOqOVCfLwyGC6U1vfH71Xzkt
61LkISWxYetF7EEX/stGVHng4dhw8jj2n3p9w/N0eYistJ6Sw95nxVwXrSIP
psoZ4V04v3SlPQoZ05eHrpn8Z0LYvNd1D7cZyMObXX3hyzifaZ8Y2VxyUB4U
qwakPmGX8Qve9zeSB0p/DLN8JR/6XG2UNJOHDsHnJcexLazUOCwvyENgs5rz
TZw/v0q1XB8Klocowq7wYZxvOR+OX+5tkAeONdc0T+B8L7bdOLOkSR7W9OlU
qWIr3a7riWmWh8GGIq3t2Ofc09UOtckDH6+W73/4vmjSMeVp7pIH0oviFk/s
0OG27MpRebg6ft3pPr5/1guUDKb8lYeEi6NjGzlwv+8vKXCdgwpNQru/zeH7
SmP+lpYpJxWCbBovNmE7DF7KF+KmwvyZWy622B25Mm6R/FRwePyppOgvC91G
yRt9xKkw25M8c+QPC4lc8dM/q0YF6mZR4z58X/qi6xvsNKjA75gfXIj9md+l
31ETPz9cgxiCXVVwzsZLmwpKPM4JKtinJ/T8Eg2okC7Ndekevn+zTPmfvjan
wqOB0abwRRbiJXH79p7G4zlVGGaH7TL/V3fIggpdmd7l+7H33Wb3fLamwlEX
OYO12JNtPazVl6hgvrPIMuInC1E1U2TVblDhwc7L6nkLLBS/Pm4GvKlwctQ1
OhL772BE+X5fKtw97H/QBfuNu7fOiUAqTLvcX4WwXZ5YWTpHUCFpUMzs/Q/c
X/ieJLlHUWEpRWv+Bfa+w8bT3tF4fBKXfxVhb/6mcyMiDo//UrtmAPZTadnE
3FQqkEnV5QrYhLkdFoXpVNBa+pu8FftmvahM2V0qsGL3/7cG+5QFb2l9NhUE
eCdqPuD65G/idMfwQypYbjE4noRtazsZP15IBflVhX6h2G92fjj9tZgK0YVC
Iu7YmV2dX3+WUkHk8NQNU2wdvjJuoRoqqBa1KUtgGwvky/x8ToXTwgWRgtjW
G9P2DTGpIGTyB7iwA7YEBWQ3UgEu/3s2NYfrRzGPrNAXVKiAooCP2PckLtdd
ekmF5+zOnH7sBqnjf5VfUSFq/MpSPXY3SV9C9DUVjEls2lPsMTkNjeUOvB77
xphF2Kvo0p5N3VTYIUycTcMWVBZNzu+lgvILpzt3sCV3r38a2U+F90cZsZFz
K/Xv/I/jg1T4/mdDpje2EfosrDqM91dC4bEbtpX2sLLECBVOiNZuc8Z21u00
XjVKhc8zDWMXsX31m658+kiF9Vnqa2ywbxk+jWkdp8ILRXKgBXbG4UfFhZ/w
/JPCTp/Erj1+Z/raFypc/JNDMMLuMA1bb/6NCm6/rPgPYo+Ye8lrTuP17Yo5
ro89c8bZgMiign7Qzp/7sP9a2Vzk/o73T+jgDy1sARuzsK+zVLD3fnsYYW+/
cDCvYx6vf2P/6r3YivbQXLJAhZGJA8Lq2Hsddn5KWKTCz490P1Xsg85krhu/
qZBTHbFfBfv0VXEpy2Uq/Odobr8H+7KboLbOX7wff9M+78b2us51VpZDAWTt
jzWsONJr0ZePUwHXu94/V5zmO5XBWq0AlT3bwlY+/yhg9HnPGgUY6VJwXXl+
TXDvcOVaBUh5WPps5f3tYS1LqesU4ItVocXK+IYjasT8+BTg9XexMyvjn7r1
WNWGXwH0LJYrVua3dDvHTH+DAhjnHr2sjc0bn+RO3agAP1rFvHWxxZIiEwSF
FIDSavplZf0oqX7l88IKMJvN82RlfdUyXHvfiSiAkblC78r6G2TZzdWIKoD2
1AvjE9jmOac3ZYkpQNvJbqo5tn2eESNYXAE+3TO2tsS+XrDP6OJ2BYh/qTe3
st9hhSpOhyQVYOhl0Qd77KTH1FsMogKUZN+UvYL9tEK4/ZeMAkjOpLf6YLdU
8Xx7L6sAFaf7pEKw39Usr2uQU4APuX4DUdiLDRP7byoowMxrJdMM7D1vyhrF
dikA94U1aY0rz1dQdpPdg983IPKkY+X3I56Qd6oqgI1kPGNw5X36RVGH9ipA
LPmd6yy2SkOeqZ+uAlyU8eAi4/OXJEnijdqvAB93sV13Yy/65NQkH1CAjWJ9
RrrYVepZhNJDCnDzzCcDG2y18pRvn04owELnDv087BShrRmzpgog7PtXqAr7
95VEo38nFeAzh4HhK+xninfKRS0U4JGv7DIbWyM/ytfQVgGKLi7bauH8o5nq
J/TETQFus/jPLmBn/Pr74rmHAiy/qxoXWMmXpt4ebZ4KIJbQ3SWLzRT2fD/u
owDXIgzY5thw62qeSKgC3LM+vrsZW8vfVt0rUQHGG95MPsb5+N6HiemwZAVI
/E9fshObU/NcZnyqAqwaVXzBwm74bbmm+K4CzBtqHaXjfK7tevLNxzwFOCbo
51Kxku8vHDy3/ymOF4PzA/34vgg6nelvUK0AB9Zd2LKM3XR0/u6hGhz/j2Zr
CPh+0dFIGz5WpwDOd/M0HbG1N06dsGrB8aoRJr4e93PwLEL/+jsF4DgirX0K
93MaG14pPFxUgPx3L3fux/efF9eOg0W/cbzIcttcx6755WL/ZFkBdE51/H6I
rT4hllfJoQhPh27Q1uH7Va3KXrKJRxF6RTezr2CrnOMVei+qCKuXO94Z4vtY
ufLAooCqIly36a4RXbnvPyY5stQUwdKhy3gnNgff54k3GoogSGcuHMHusAjp
igFFKIl2tgnFtuduLNikrwgTVxyfLWBnntA4I2KqCK9uz1/vx/2fwLxig8Q1
RXjwXNQgDtcXPyR8VP66KUJbVUZJ0Uq/t/910YiHIoT1W61rwy5IvZR610sR
qrZne3Pgfk9XJ9+VEKQIX7PPnb+M7RVLkJWJUwR0dPYYWqlf6MKR1Cd4vuU7
a9twfUOomI7fVaoILYvPf45jm6m/vKtZrghm/pw/V+qll7qepUZVipDSUKyl
iOupHPPRQdd6Rfh3T30iCnvoQ9WEd6MiXClG5PvYm87HzYS8UISMunHZGmx/
Jz3O5FZFGDL6e/wLtkXQI7nnXYqwo1lCB3D9Fr8uRLm5RxHG4xvgBHb7Lcu9
b/oUIVduirVS/6knbzr6cUARGpaZZ2KxRYs8PNaMKULpDO/xD9hHlI0DBCYU
oe6GW/V37JCn8pFbJhVhbaRhy2pcX/5oGLkr9xWvR7x0Hwm7++2+l4dmFcFk
SinGDnvdme1dJvOKkEaPEFipV2Hs56DlgiKcqWRQVurZ4qmCmSu/FWH626md
OdiTV4IWPZcVIbLVTLIEe/vPM5xBfxVh34GEHCZ25KqNIgmcNLh364XzAHZj
yNcdd7loIBJEr1ipp3/zNcnlc9NA50bHrZV6+6KI+95qXhpc6IifX4vr88xU
o/2N62mgaK7iu1Kvv5OkHG0XoMGh/RxJK/W8nvx7m5FNNGDcn3WkYXs/rnD8
T5gGzboJlJV+oGxXjAdbhAbH8o46rfQLU9UXA36J0oB59qP6Sj8hBTqRnNto
MLueM3qlPzR/IZ7AJ0GDHnC+sNJ/xBos3BXeQQOD+M+NK/1h65s3DyQINNC6
J5u90r9wnHhQSpKiQca/L6tX+ps9gwHPaTI00NedmljpDx0tT79UkaUBme/b
vpX+6P7Eri4tORrIfLlHXOmfhi9uGDKQxz937/Ra6a+EWJ8njing9TlEN17p
vwxcG2ZO02gwxOmbtdKfBfxKXTzPoMEZ+vWLK/1blc81TidlGgQ6DOWv9HdJ
KgY2J3bh+bqkm6z0f26z25vV99DgSO6eiBUffzQnS1Slwdmf93RXrGTbEs6j
ToOrx94FrXxeUDL924wGDRzyO/evPJ81cOVQnyYNVCaColbe3xGnV/wM8PrN
Tx9fGd+jQ9s23tOmwZeXXOke/+8/2S5h+/B+GzbYrMzPrr6p11GPBt0OOx6u
zF/vRvLuE/o0sBbf7LTSH8rsckxSN6CBhm5a8cr6cbG0fxMO4vXuL7x0Dnss
f8tpnsM0cH2ufW+lP8wQr9/Rd5QGjbqDnkbYXv3x/s+O0aC6oUPsAPapGPvx
rBM0cDlEYWit9KNcwnmOJ2nQofO7ZiU+Fp5/5jlxigb7IqzoK/1hr/tze/Uz
NCAkbRRZiafb32wVec7SoKJqz05ubOf76jEz1ni/CzLsf+P4PGwpONtrQ4O3
W3ZumMHm7akqz7KjwRtCR0bPyv+PVK/fq+5MA8eFxepEbGvXjxkEFxp87OXX
Wzk/WooVHDyuNHh4V3SPG/bfLMumXncafH4yp2eM7R5eYujoS4O4jl8cK+fV
RCe08Lg/Ph+bFzOmV/7/58+pDeqBNIivLE15i812XtOzNhSvR7Ne3gNsezMz
86xbNHgtLLKou9I/blKoCY2hgaCm6gV5bNn2VdsdY2kASh/lBbEn0MOPagk0
4FHOfvIW56Mzsn/tetNp8DJVLtYCW+Njd1v1XXw+CIUxmthiqXnUrCwcX2Ne
wxLY/QJH2Q73aWDVOmE6iPOj0UK2+9pCHM+7BesNsAX2H9adKKJB08LG1zLY
7YmLm+of02BHspsMB7a+6qEizzIa8NHCK0twPkZeCxPTz2jgduyp7gbs5fbM
krbneP/6ypMncP6uljD0y2PieLptqlSFvZt5d9vZRhoMWOcrWGErch4w7m2j
Qaa4DeM+vg+mjOd2PGmngaSkXbTryv2QnT4d1UEDtfKjFB1sku5s2P5uGqjC
wqaRNTh/haUyqwdosCHq4h1ebH6BGWrWZzyfzO2+e/H91GaR9Nv7Kw20J47s
4cAOK9ZuMZ+iQdfFL+INuF/lOpp4TpiNz/+na5d1sJfjICX0Jw1OHh1YpYHv
y4XI1tV7VtNh0EkrjQf3n582iV+R2ESHwijSh1W4fpmyqyBICtEhSCuyfT+u
p+ZrjbqJwnRIEv5tHzmL64tLwcpkETp0ZgSMbfyO6+/GmR9KYnQQZZt0Ccyw
kNnVek99Ih0qv4abDPzHQm09tkFXlejw7DyXzsIgC3XJrdrlpkyHVyKW3jLY
73xTP3nspAO/mO394wO435Tv1PPZTQfvdP7JkrcstDpIdV24Gh3y93VrOvfi
emLn+lsZ2nT4z6N4YeE1CxXfeZLYakyHKxk5jdfrcX0cfGC++hgdwus7HzfX
sZDNtY9Gj47TQctqa5YwtpjJRt5oEzrsa5Z5WFqL650tV7yOm9PhFlVZ798z
XA+n0M9+OEsHdYJVZk8FC5XfbHneaU0HywPMwJ3YgjesxBrO0WGqsetrQjkL
vTgV05Nzng48trttrMpYiC7B1rW/SIfNJtyfuEtYiDuzmPLDmQ6PczhkHxSy
0NmY/aGTV+jwQJODl4Rd4/dh/K0LHYZXGXzPecRCV85uSK92pUNu1cep/Ie4
PyA6bfDzoEPOpNz1tgcstFto7eUr1+lwoiHA0gz79uq7LdaedMhTunLzcz4L
6U10+Ot60WE0ZGfHBuwn9xXnef3ocPPH6RnPXBZan9BstIxNcrQf3IZtG2JR
OO1Ph7ZJM0PmfRYSv3DLtjOQDm+j/g7xY7uZkhrrg+iwPbGFryoH79/+2h2l
wXTYZpI8aosdQp55Fx9Kh98Frslt2Sz0UTRkV2gYHUq3xUb5YWus2x7rEU6H
oZ9DeqrY378cMjwVQQfpfDG50nu4Hxv8lHcwkg6SpkRrV+zcNm8uzSg6aMh6
+algn35Y+FwyGo9/1DCqNYuFLFt5bUgxeL0mrc/HYlv/d4GXehv//m/1VxbY
59e8eMyIpYMeXbhVEdtOimi6J44OsRnki5zYl7R8/2jcoUOjeUX5QCYL34/D
2drxdHDw/P105fs3Z29VA/0EOigJKXnHYV9NTWAfSqRDgVrK+pXvJ92q5hKO
JdHBhdv5ymlsj7dGe08m00E2kl2uh33jR+G4RQodbD6aTezE9hHiu2mTSofm
bZPcstj+DDu6fRodvhj1yUpgBx150e+UTgfbhHNHt2CHOhC9r2Xg87mqI2rl
+8mbEb5SN+7SYTz/6H8rP496MNzql0mHrVnydtuxY16qOodk4f3hSBZb+X4y
7lOCSOQ9vF5D/Twr308mrJ6vuZ2N90efuHfl+8lkwtFziTk4Xi2e1ltjp6Gi
den36XCU3p/pg333DN/je7l4fn1PJzKw792wM8nPowPXufTERuz7yS+WC/Nx
PM7UNU5h51cSs0sf0GE2yuqqGF7fh32+B6oK6BBsUvX4IHbR3DCr9iEdls/w
hARiP9moltD0iA7fq27+qcUuoyVqtBXSYZWfN+EfdtWlo+F9xXR4n5mfGIX3
vya8iDb0mA5jpFN/h7Br8/j6R5/g8Tm4qNFwPDWNvyBOldLhbmzjqQnsl6uk
Wr+X0cE9zf2EHo7Pth1+Tj/L8Xl/HnSoELvzlFoN51M6aKZknL2J47vneqI1
TxUd7vnLxHLg89CfOM8jUE0Hp/5fX25gD/cUndhaQ4ey7b4qAXks9NlQikWr
w/MJKXDqwOfv20W/+F31dHi62/CXYwELzYS+V1dvoEMNB3FZGJ/f+cbEML0m
OqxXs024gs/3P/X1xDMt+Hxm/FR3LMb51Pxii3UrHaa9fxaqP2YhLo9mR7s2
OkhJi3wTeILzWZnfs6vtdHAVz2E143wiQv1x/GYnHeq2PgEfnI8uTxzJ8+mi
wxGagpp9JQs1phX8cummw0zqw9BTT3E881tlnOrF8VuyFg5X4/WYafuP+o4O
Ela5G67h/CeZJ6NGGMDn52lGbCSThdwt/SI3D9Jh7bsDjx7gfCnduYvxd4gO
vbmCL+YbWMj7Sabnmw908ORru/bmJQv1XlxqbxylwwilIVG4lYUoRJMdTz/S
wS9AIs6yDa9nLF9T5jiO/00me9bifE13deN3+Y8OzloqOzK6WWhi98FMYRaO
J1n+p99HcP/Nyp3lYdPh0blos6RRnN/yVun+wSZW9ZnqjuF+WrTyy6dZOsR9
5r5T8gn3978IypULOL+O20wNTuF8UvPzxcm/dNidesrOHvef91yNRQ//w/mI
2+29J77vflEL7bU5GOB7T3vbAdxP5qZbb5DnZMC+O4k59vi+5PB9bba8hgFG
PuzPPfh+LtXK/pbBz4BSMecDFEE28nzx+eotAQYI8neEn9yI+5MDisveGxhg
rMSovbkJ1xdGVevPbGSAVO1A/qwwrm8s3yhs28wALnc3gf6tbCTis+SUKM4A
68NzVm+l8POqj81HyzMgOynrGEkFP08z2cuXygCZmGJbO1U24m4Y4XJSYIDK
P9O0B2psFNd6cfNhGgPypgw2y+3F9e87393rlfH4Mm80b9Vmo5GFhx5hagyg
Hpa4XGSI+0PP7xwe6gzY5Rew5d1BXJ/93R1+QYMBku3tXv8OsdHPNQ3JepoM
0DIfF9tvhOvvze+qubTx878NKlQex/WiMtcfvwMMqGrk+cF9ho0eTwi8CTJg
wLEf7bUiFrheSdiaFWbIAFMdHgbREvdTi4q6MYcYMCjUkSp/Fvc/tSej7h5l
wK2sJZs159mI6GxjmW3MAMWu9wdZ2LcJToy8YwwoH+L92WOL+5WgoL6iEwyo
tKLtiLJjI7JBsUTtSQao6q5NfnaJjRKWqlj15gxosr3v4HGZjdYUNtW/OIXn
T7DeTnPA9fqGwfOvzzDglzYhK9wR14P1E3u6LBgwk5SkquDERrUurHV9lgwI
uSCq3oad2sdVNHwWj/fQNm62M66nQzf4jVrj9TohlOBxhY08VMSMJ84xwKns
z7bf2JNfpKU/2zDg5LjwDVcX3M+k0ha+nWdA48m4hP+wGw6qtbBsGeAZXXr0
2FU2YvzdlzJ3AcfTcnF0JXZm8ZHLP+0YsFm0UVnYFdenZ801ly4yIMFclnAR
22vTecF/9gzIUd+iXoH9rdFpjPMyAzYov7ZZwja/5lnG7YD352mgv8o1Nmoh
BYfwOuL12XfN1QF797toMwEnBiQeGpZMwb4fnkLZ5MyA2INzF2uxhdXvL2++
woAfT+eVBrEDpoo7trow4DbvNstpbHZ6dabEVQbsqcrsWvl7TMsjL1wIrgx4
qlHnsPL3mh0cnftkrjFgdH2ZyMrfc2qUDIrIuTHAL6ui+CN2wblPn6nuDLjo
winegi26mV1N92CA3c8uzfvYIc2/I3dex+uRb7nkgf3DfY2liicDppc/7dTB
tpETZGjcwOfL4W7HauzuQbHV4MWAcOfmh9V4/hAp06fjzQCyb3zxyt+zFu2l
5+33wfEpuP85L7Y4S+26oS8DNqZvfpqN1zsiU9fwiB8DllPVA5Ww7VafYpkE
MOB1p/sWBt6v/rLz9eaB+PwucOZl4v3VtXWOswhiQL7Dm7g12GVbbpy3DmZA
ZtGWekscH8TW4D22IQzgZYhsKsbxE+MZs84+lAFll9fYz+F4+yefOuQQxgDn
gR2PqNjDtx77XruJz4tM3Q1vHK8Zg0//XIhggHBwR3EOjmcrUv0N80gG3P12
aqDeHueL513u6BYD7qy2KX6P4z933eAPRjQDNDpFFIYv4PGfGLsqHYPnP/hU
uxOfl6mpWad1sQwwGFZ7l2SD10NlaXoJm8kylnM4h/vHoNWXZ+IY8N2trWy3
NRvNbxO264lnAN8WfYkH+LwuG+yySk9mgP226Ps85vh8JOwdiU5hgKxBmVqQ
GRv5jemeDkjF4zm59ci8Ce4vPE3MLqQz4J+RUNKTY2y0/oG7ESMLn4cd77Zl
4PzSMe/bIXWPAbOd/OLPDPD6QNhBkWwG0DvPjb7Sx/H3Lkl/KQfvz8yoacs+
vF9rq+FFPgNqpBlXKRo4fxk31FY+YMDLOs814zj/ZWa0aRQU4PjZ8iLz1h42
kt49pBL9iAHfKO13apXYiHp+mX7yMT6vduXjPmQ2mnnMVWz4hAF6JiK01zI4
Xy2vV9AsYcDYJbMWfpxvd96RkJMqw/lnHzvkvASO30ZNwnQlAy6T/O5fxvn8
r8D+ux+eMmBrx1KngQAb1ZkfkeiuYoA2r2q02Mr3m7OWWyufMSDAzc72Fhcb
HST4b/RnMmCdysmP4dMsdMq3cdXml3i/+R79foLv8+bFmNZtLQzoXN1RMIjr
B7qLxW1iKwP4R2lrRjLwfX/+lyT9FX6/aGzb1UgWemRAA8M3+Dyc/Czcd56F
/m5O9fF/ywCBBykxahtxPRttpxf2jgHKr94uf1/DQt08uwWiBxjAKd1p7vd7
BuUudaanDTHA4nDXH8nxGXTkI/fzyg84XkwVzlwqmUGZj1yWpv9jQEQDrz1b
fwbxkqBx/jMDPPaK8i6pzSDXu/wRS18YwK19evwddQYdiM0XWzfFgIc1tsf4
BWfQrPuIqjSbAd4H0nONe6eRjo6Bh/kiA9wMjnBuOz6Nimq2wNlfDDh8aOzQ
Xp1pJLr701q73wx4QZUVoylNoymyX+K1ZXy/mdzX89swje4IVFTEcChByCuB
K90vp9DkAOFHM48SyIQIvtWhTaG67YOzLeuUoCViR1jVtimUci6W3carBH/T
zCs5eabQ4WnOqY71SjCuPiK8cfQbquCYGOsXVIKAD8OXyLe+oWDZ3M5JUSVY
Z9EYmjD2FUlfozzillOCD7tjL4g6fUHWgsrn9A4owQ6jHQaz8pMohvV5/R4D
JUha95yLsGkSPe/IqJA1VIKPnhGSmoufkGgUL++6Q0ow9kGicl/TJ9Sxbuzx
KyMlmFTu/Bdx6hNSW337r5GZEsiulv2zP3QCbVqYST51QQm893jHp/eNoYah
gk7nYCWY8Ek0/fN8BCV9lmm6FqIEs7UF98r9R5Djj8xKz1AlCATjzy66I2jr
hsSMoHAlsKz3Cf3X/h45awdeTopSgpvNSpvch4eRxINTPHXxSiB/hAbRfwaR
h9t62JCrBKyu53vGD71FhwNDlYXzlODBK6UTdUJvkXQMp+zWfCV49Frr1rOB
fvTmwSK/VIESJGYfdt9g249I7yeGdhcpwbtsHqKOXx/q0XnublGhBKq2pPrw
Zz1IcaNjcWGzEqy/dNBS6FgnMn06eTjrpRKExZynVhM6kZ+l5cydFiW471wm
Q/z4BvUUGil4tSmBivpJ12yJN8jDQPmhQQd+n3FeoVXqa9QQuJj7Xx+2+M7+
8YI2ZLIQkEH4pAQdz7kU/xFfIN/0pb2bJ5XgPHWW83VHE8rf5/qe5z+8vjH/
WFI3mtBS7Hlx9mclGD0uS3Ppa0SZNP2U2iklOJVny1sW04C+2vEnnJpXAqnV
gZ7fiHXIZygxKn61MqjmS3/d5FOJthxesg7iUoaDdw/8M/hXgR7XWahcXaMM
AtF51c3+FWjsvsy40VplONrqHRV4sxzpOZeqrOdThmO1d4O/FZQigTVvxgM2
KYPvCbFOddJjlOeuVHVFSBmeidf8r4FyD4c68cK4zS2VmtBq202hkshlTrvK
/JhDm8it2Nyymhqi2i0JqUg1hpAMY2LGfMtQu1qldL9xthA/txRrS6k2sZba
ZUVNif3++T7nPM95zvt+nne1fvx5PvbLjgmMACe07dM+qcr5MfdDVzh/DsjM
v1v0UuMcv0Pef0z9BeDjIvmkXZ1n+CdsdByjTQGHzZ+rrD+U8B1UW2dsNAP8
MjH0wFfuJfxWw+ZX3uaAgw9cnR0LivmT1NJsq4WAdkGWvLfOKv6WatOe3sWA
J4cHOi28GL5NkJPkezvA8fvMmfkVUn5dQ1GElz1gkcEIz0SSyxc4afF4XHYe
OsvaZHcOP9essWf2MsDm/K7jczOO8UdfB/HaHQB9W7fNXWqXyqdDsb1r+Oz/
3GL37vLtfA0zRtsHAce8jbWb1UK+693aBetc2PsfLdV+LUH8mknGwsCVgNdC
i4x8KrlUL7rxXLia9WuadR657CC9BS/Ht7gDpnAMvSk2htbUTDHZ5gH4xrjh
gcf1OGrWCg2N9gR85KbNeTg9kR6Kxx8l+gI+1RcHRI6LyHCRxfvktazOKKjN
jRLTd/d8jUXrAPutFvdoN6bS7zqq9en+gKt3ZHqPJaTT07SVD2WBgFmD07fd
2HeM5i7+YaggCNAz54LmxdJsCqvP4yiDARsqrzpfjJTQH5N7fYo3AHoIUowK
RDnUm36ksXwjoLH2DU21REoWSyr6KwQsT0nep05NzaOohsd6VzYB/mVNXr2H
82hgipX7LSFg4Zipi3ukjKzL/COrwtm8NXTb4ttltMMzMfVOBGCUTsX7QOfj
NJjZXFMXCXj3KS/TZ3I+2VuPdjdEAZ7I5TjHROVTTJOJZstWdm6Qy4mozaeR
adEu7dtZP3miova4AvqQZVD1YicglcfySyrkxLPhdXVHA367XKdaVy2nxBbh
WO8uwEYTowOxTgqamH7F8c1uwLimo4tElQrC813Bg7GAOgkDwaBW0GFfnb3D
cYDcNeVrJ3MLSUsSeE29BzB1ibuRU2EhrbI72DGWwPI019CirLGQUltLRyb2
Au7TWJIeoi6kuugHRpr7AX+oTf3eb4GSJs/8ADqJgNVh5nVyLyV5VJj56yUB
/lml7nOIUVLGOs+YaQcAzR9p9oJMSfq5ygsGBwGjJxSfNrUpqbjp7n6tQyx/
kekzXr1W0je6f7mNsnq6Ok8KWgw1usww6DvM5rFicUDAFwwJEr/ueiwCNDl7
ztzPmqGRqxtKG1MALTqy662dGMoYOrS7UgxYxVsx87UnQ/OsS53PpwL+b5NR
gyyIoctbWvRUaYB6jZlkK2TIQ/W2PfcIm+cnvSraztCzJ3OKUtJZfpLUOZ4x
DMV87rI9PgMwtqVG93E8Q7rrIr+JygRUxHUM/LiXIWVm1mchRwFnviuYwtnH
kN29S02eWYArf4+3q01gqFajM9/pGGCOotNSGsdQCE9DaJsNGFFrU50czdA/
cYtsTCWAZk+76iVbGUq54KU2yAFcJvTTbRIwNHsgpkYrF3DK89E1DgEMnVso
zx5l9Wjb14JHHgy5CiikTwoYdm+v4RUeQx2KnoWdeYD/d1xq32bF0Pbfpg41
ygB3X7kpXj6HIQ0O93blccC2m0e7+nUYkq0JSjufz/bhfX3twSElLREf8FMV
AK7dU1rv/URJ/h8a+lIUgGJp+/olZ5TUt2zoUnwhyxeHd/1ylpISdxonRynZ
/uNG9JVHK+mnV8JZXicA5XvKu/W4SuLNy3jhdBIwoKR4dTxHSa3BF8psi1he
xVplW98UkrplzMWwGFB68JZqrLiQvG7IdnSeBnxbp/wl7pOC/hi+taLpJ8DD
C05H3G5VULzNS62qn9k+Ddkpul6soJMlNoWqM4B+kcOz+1wV9G9WXV3UOUDr
BIFuXayc0urf5IaUA86YZ7Jsg7OcvtI0CvM6D/hZ9dCiNh05rUoQvLWtYP01
EkvEeQVUsFk9/91llvfvJt0/XpJPzg5W+8S3WX4tMzuSZDLifMkNl1YC/jxt
ZGfPahl1jy/3UVUBNtl5+2xU59GRe25mlb8COqdsnPtLcB49XL+54W0N4Bxf
22dJHClFxMrnhDezvDpKL1mHSehohe4t12eA7rPXv+aFiylMNv302ues/4Nu
v3WdTSH7vbOyw14Avm9IP1Q6IqIONBfuewnYM8e+7H3aYZrX6jz1Yi+7b1nQ
n705mS7+HbfB9B/Akte1b5I9YinlYeIq20FA/dZLjz7+HUOBV0W2TkOAto7X
Rc3Hd9FYUo5m8DBgR3b12t4nP5Kb/rkyyTtAe5800xP7hTR76JLsxHvA7ODu
OxrDAhpov5l8Vg3Y+ucdh0UvQ0mirPev/wiYyR/l5mr50+aD9506xgDz3NqW
Xgv0omXhHRavPgG6Blj6zqx1JR33rpn/jgOGPlvXvPUUlx5bvfo4MQGooRG+
IHWyX9V/kGSJXQ==
           "]]}, Annotation[#, "Charting`Private`Tag$61104#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
MSrEW4+/OI4cY1QV1/aJCkNJ5+4dQc4yefCw5DPavy3esgeR64/emrn4HxXm
qpoHdJC7LK4LWH1D7x8miKshj1r5K+nMUOHrzSU2bTU+7J09eL5T4XAW5fx2
5N1ndn5OXkT7vX/27Q8Uj8beZO4rv9H49a7/mUK2Pi9JtFuhgn9ZVcsHZP9L
3A4KHMrwiTK9pxW5Nqxv5Ok6ZQhy+fPrFnLH9dbl2+uVoeF8qUEE8khUrUQQ
vzLIDWzaewl5OT7f0mCDMswf+qNujayZdaFvQEwZWBUt+lLIhrnu87XiyhCj
dJJDCNkq31o4V0IZbpgNn/6D9vel+3qmHlLKoHRip93wav54ItKxRFIG2w2E
lkRkte7K5xK7lMH3xXjgL5RvUpV3+CioKcOHtTbCY8iLUeXknRrKED9MsG5H
rjIovXlwtzI0WVZKZCCrNxVaBOkrw/QWSXdtZM3H6d8+m6P+Jc05n0X5T+d2
0OZyH2VYWUiffYzyq56bsdP+KmWYc+gL+o7yfah1TrBhjTLs/Y8zsxe5+fBC
9sFaZYha96DpMfJe7YyRIw3K8HejKf0ysu6maXP7VmW4FCtYxoUMz6IMLg0o
w9LvbnsJTjYWVPbB1X9IGV6NyRX+QedLQ8GOsMARZUgN9OcbQ8bihhvDPiqD
9KSochGyjouSVsKkMvzIl+ZWR9be8Eq5eBH1/yYHvx06r/y5pY1LfytDSN+f
Cj3k2qVzJ8tXlEFkLuwmBVlrQqLwKQcNJp5RS2fQeahZfVKmmZcGH00MionI
6k58m9+L0+DTQasNd/6wsB1PDywKadCAq+y/qyx0nkqMpXqyNJElvtu1I3Pw
T050a9MgrZ//dgFyl234mzigQdT+K9I2yCd5nt8XNqBBGK+uw+sldJ6ba9uI
WdDgFY9X60t0XkcERvX+tKTB7vRiwyJkz3tDB95Z0UAvaFk+Eln7j59qqi0N
tuq9nTFCfpf/eIOEKw3673tXvkXnv9ACrWn7RRrcX9hH+o3qgx/br6r/9aFB
dHmVwUfkkf2dpaN+NFjbuLulBfn+7VO3s/1pUPcuuPsWsv7eoguEUBroTnyX
2IVMPfNrak04DUZ2/RWSQhZO2ecwHkGDjUPbbdYhf5yaOHgnigaaEinrhlF9
4p9AUCAl0iDn0tmkcGSnWu/MtUk0WLATtzqHbPgF3/wlmQZjqT1+tsjimrYc
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
fA==
           "]]}, Annotation[#, "Charting`Private`Tag$61104#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8., -7.589415207398531*^-19}, {
        8., -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      GrayLevel[0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.017142534600332, 1.734723475976807*^-18}, {
        9.017142436729452, 1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.887684593761735, 0.04969024160430335}, {
        10.834418105921644`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{11., 0.5000000000000001}, {11., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{12., 0.9503097583956966}, {12., 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13., 1.}, {13., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14., 1.}, {14., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15.023213671200068`, 1.}, {16.00581220004505, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.032174615110307`, 1.}, {17.03217461511011, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.89521268704331, 0.9503097583956969}, {
        18.839029065426555`, 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{19., 0.5000000000000001}, {19., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      RGBColor[1, 0, 0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{20., 0.04969024160430336}, {20., 
        0.04969024160430336}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {8., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {8., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{8, 20}, {-0.0287859446018422, 1.028802544331626}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.856453241759573*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"7b0ef6b1-bda8-4b11-b087-ed003e046e3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1addfeb2-5c39-4529-bb6d-\
d0c229ca6ab7"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"880a687b-6dd2-4828-9358-\
0c01b407a3f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "3", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"m", "\[Rule]", " ", 
     RowBox[{"max", " ", "lvl"}]}], ",", " ", 
    RowBox[{"n", "\[Rule]", " ", 
     RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
  RowBox[{"PyrFlow1D", "[", 
   RowBox[{"i", ",", "1", ",", "0.02", " ", ",", "p", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
    RowBox[{"0.0001", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437553466508884`*^9, 3.8444611315278234`*^9, {
   3.8444611768614936`*^9, 3.8444611887169385`*^9}, 3.844462125512904*^9, 
   3.844462356446972*^9, {3.8444633170999546`*^9, 3.844463321081232*^9}, 
   3.844463957058437*^9, 3.8444640642630997`*^9, {3.844464176408199*^9, 
   3.8444642066331835`*^9}, {3.844464361712132*^9, 3.8444644432157106`*^9}, {
   3.8445155082491083`*^9, 3.8445155337439795`*^9}, {3.84451594973834*^9, 
   3.8445159707794123`*^9}, {3.8445160028143573`*^9, 3.844516016773574*^9}, {
   3.844867278823122*^9, 3.8448672867837*^9}, {3.8448674780006113`*^9, 
   3.844867482844355*^9}, {3.8448675512620215`*^9, 3.844867552535472*^9}, 
   3.8448690922499695`*^9, {3.8450375572578297`*^9, 3.8450375788333464`*^9}, {
   3.845038492456919*^9, 3.845038495570486*^9}, {3.8450391079598455`*^9, 
   3.845039108408127*^9}, {3.8450401552418346`*^9, 3.845040155409791*^9}, {
   3.8450449183244*^9, 3.8450449251510773`*^9}, {3.845998917876772*^9, 
   3.8459989184715147`*^9}, 3.8459989522552752`*^9, {3.8460211607198453`*^9, 
   3.8460212127086706`*^9}, 3.8460927662680087`*^9, {3.8463293246755347`*^9, 
   3.8463293261140614`*^9}, {3.8463293581547394`*^9, 
   3.8463293659078813`*^9}, {3.8463293973199778`*^9, 
   3.8463293984381676`*^9}, {3.8463294366454444`*^9, 3.846329444948153*^9}, {
   3.846329501624301*^9, 3.8463295154348464`*^9}, {3.846329660714734*^9, 
   3.846329681480458*^9}, {3.8551469174833937`*^9, 3.855146919967126*^9}, {
   3.8551504468889384`*^9, 3.855150494510594*^9}, {3.855765997912092*^9, 
   3.855765999229164*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"v1\\\", \\\",\\\", \\\"v2\
\\\", \\\",\\\", \\\"status\\\"}], \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"PyrFlow1D\\\", \\\"[\\\", RowBox[{\\\"40\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0.02`\\\", \\\",\\\", \\\"15\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.5`\\\"}], \\\",\\\", \\\"31.5`\\\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"39\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"17\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"4\\\", \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"Automatic\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.5`\\\"}], \\\",\\\", \
\\\"1.5`\\\", \\\",\\\", \\\"3.5`\\\", \\\",\\\", \\\"5.5`\\\", \\\",\\\", \\\
\"7.5`\\\", \\\",\\\", \\\"9.5`\\\", \\\",\\\", \\\"11.5`\\\", \\\",\\\", \
\\\"13.5`\\\", \\\",\\\", \\\"15.5`\\\", \\\",\\\", \\\"17.5`\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"BSplineFunction\\\", \\\"[\\\", RowBox[{\\\"1\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MachinePrecision\\\", \
\\\",\\\", \\\"\\\\\\\"Unevaluated\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.5`\\\"}], \\\",\\\", \
\\\"31.5`\\\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"39\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"17\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"4\\\", \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"Automatic\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.5`\\\"}], \\\",\\\", \\\"1.5`\\\", \
\\\",\\\", \\\"3.5`\\\", \\\",\\\", \\\"5.5`\\\", \\\",\\\", \\\"7.5`\\\", \\\
\",\\\", \\\"9.5`\\\", \\\",\\\", \\\"11.5`\\\", \\\",\\\", \\\"13.5`\\\", \\\
\",\\\", \\\"15.5`\\\", \\\",\\\", \\\"17.5`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"BSplineFunction\\\", \\\"[\\\", RowBox[{\\\"1\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MachinePrecision\\\", \
\\\",\\\", \\\"\\\\\\\"Unevaluated\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.5`\\\"}], \\\",\\\", \\\"31.5`\\\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"39\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"17\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"4\\\", \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"Automatic\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.5`\\\"}], \\\",\\\", \
\\\"1.5`\\\", \\\",\\\", \\\"3.5`\\\", \\\",\\\", \\\"5.5`\\\", \\\",\\\", \\\
\"7.5`\\\", \\\",\\\", \\\"9.5`\\\", \\\",\\\", \\\"11.5`\\\", \\\",\\\", \
\\\"13.5`\\\", \\\",\\\", \\\"15.5`\\\", \\\",\\\", \\\"17.5`\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"BSplineFunction\\\", \\\"[\\\", RowBox[{\\\"1\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MachinePrecision\\\", \
\\\",\\\", \\\"\\\\\\\"Unevaluated\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.5`\\\"}], \\\",\\\", \
\\\"31.5`\\\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"39\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"17\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"4\\\", \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"Automatic\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"BSplineFunction\\\", \\\"[\\\", RowBox[{\\\"1\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MachinePrecision\\\", \
\\\",\\\", \\\"\\\\\\\"Unevaluated\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}], \\\",\\\", \\\"0.00005`\\\", \\\",\\\", \
\\\"\\\\\\\"ConstrainedNewMethod\\\\\\\"\\\"}], \\\"]\\\"}]\\) are not the \
same shape.\"", 2, 72, 73, 29641181531971735609, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8564532419731092`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"4cebbea9-2233-4e6d-909e-ea3032ac3425"],

Cell[BoxData[
 RowBox[{"PyrFlow1D", "[", 
  RowBox[{"40", ",", "1", ",", "0.02`", ",", "15", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         RowBox[{
          TagBox["InterpolatingFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         InterpolatingFunction[{{-0.5, 31.5}}, {
          5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{-0.5, 
          1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5, 17.5, 19.5, 21.5, 23.5, 
          25.5, 27.5, 29.5, 31.5}}, {
           BSplineFunction[
           1, {{-0.5, 31.5}}, {3}, {
            False}, {{0., -0.010002423724263234`, 
             0.02000484744852647, -0.03000727117278971, 
             0.1125272668979614, -0.4946371588255109, 1.4886981804363568`, 
             0.9171676250478055, 0.9171666817788758, 
             1.4887010102431448`, -0.49464753478373114`, 
             0.11256594092405485`, -0.030151591318943266`, 
             0.008040424351718185, -0.005360282901145451, 
             0.002680141450572723, 0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 3.5, 
            5.5, 7.5, 9.5, 11.5, 13.499999999999998`, 15.5, 17.5, 19.5, 21.5, 
            23.5, 25.5, 27.499999999999996`, 31.5, 31.5, 31.5, 31.5}}, {0}, 
            MachinePrecision, "Unevaluated"], {}}, {Automatic}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ",", 
        InterpretationBox[
         RowBox[{
          TagBox["InterpolatingFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         InterpolatingFunction[{{-0.5, 31.5}}, {
          5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{-0.5, 
          1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5, 17.5, 19.5, 21.5, 23.5, 
          25.5, 27.5, 29.5, 31.5}}, {
           BSplineFunction[
           1, {{-0.5, 31.5}}, {3}, {
            False}, {{0., -0.010002423724263234`, 
             0.02000484744852647, -0.03000727117278971, 
             0.1125272668979614, -0.4946371588255109, 1.4886981804363568`, 
             0.9171676250478055, 0.9171666817788758, 
             1.4887010102431448`, -0.49464753478373114`, 
             0.11256594092405485`, -0.030151591318943266`, 
             0.008040424351718185, -0.005360282901145451, 
             0.002680141450572723, 0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 3.5, 
            5.5, 7.5, 9.5, 11.5, 13.499999999999998`, 15.5, 17.5, 19.5, 21.5, 
            23.5, 25.5, 27.499999999999996`, 31.5, 31.5, 31.5, 31.5}}, {1}, 
            MachinePrecision, "Unevaluated"], {}}, {Automatic}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         RowBox[{
          TagBox["InterpolatingFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         InterpolatingFunction[{{-0.5, 31.5}}, {
          5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{-0.5, 
          1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5, 17.5, 19.5, 21.5, 23.5, 
          25.5, 27.5, 29.5, 31.5}}, {
           BSplineFunction[
           1, {{-0.5, 31.5}}, {3}, {
            False}, {{0., -0.007460307100950703, 
             0.014920614201901407`, -0.022380921302852116`, 
             0.08392845488569542, -0.31333289823992955`, 0.4939385004804773, 
             1.337578896318019, 0.8312105518409902, 1.3375788963180193`, 
             0.49393850048047766`, -0.31333289823992955`, 
             0.08392845488569542, -0.022380921302852057`, 
             0.014920614201901354`, -0.007460307100950671, 
             0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 3.5, 5.5, 7.5, 9.5, 11.5, 
            13.499999999999998`, 15.5, 17.5, 19.5, 21.5, 23.5, 25.5, 
            27.499999999999996`, 31.5, 31.5, 31.5, 31.5}}, {0}, 
            MachinePrecision, "Unevaluated"], {}}, {Automatic}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ",", 
        InterpretationBox[
         RowBox[{
          TagBox["InterpolatingFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         InterpolatingFunction[{{-0.5, 31.5}}, {
          5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{-0.5, 
          1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5, 17.5, 19.5, 21.5, 23.5, 
          25.5, 27.5, 29.5, 31.5}}, {
           BSplineFunction[
           1, {{-0.5, 31.5}}, {3}, {
            False}, {{0., -0.007460307100950703, 
             0.014920614201901407`, -0.022380921302852116`, 
             0.08392845488569542, -0.31333289823992955`, 0.4939385004804773, 
             1.337578896318019, 0.8312105518409902, 1.3375788963180193`, 
             0.49393850048047766`, -0.31333289823992955`, 
             0.08392845488569542, -0.022380921302852057`, 
             0.014920614201901354`, -0.007460307100950671, 
             0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 3.5, 5.5, 7.5, 9.5, 11.5, 
            13.499999999999998`, 15.5, 17.5, 19.5, 21.5, 23.5, 25.5, 
            27.499999999999996`, 31.5, 31.5, 31.5, 31.5}}, {1}, 
            MachinePrecision, "Unevaluated"], {}}, {Automatic}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False]}], "}"}]}], "}"}], "}"}], ",", "0.00005`", 
   ",", "\<\"ConstrainedNewMethod\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.856453242065962*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"cb3d32ef-6d47-4c60-a439-89d0b29f2379"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.5`", ",", "\<\"ok\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.856453242245841*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"fbc9549c-a74e-41e9-a4fe-26709afa2f54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9, 3.8445155022047677`*^9, {3.84451610892062*^9, 
   3.84451616442041*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$61253#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
uvLfnOhoCtI9XliLD7Mk5tmTB+onKchN1gmdjC5qn7SpIJaCZm9vFRl014T1
PWtO4/p0/eVNRytonT76OY6CX38U709Dm6x4r+ZzhgLJJPUyafT+7Ur3JRIp
SC1yWz4RnRbmsCEliYJVjstMRvD5r9Iv/qCTKbjgN76SRQ+XtR9+eo6CJSPj
3n1Bc5o5qnYpFNztiN9eg94y5nXvZyoF13hTgsrQR2bnWUakUXD9xSPV6+g7
RgNdChcp2JAjaRmHbrVfHJF9iQLD+oXT/63vtKCQWcYZFAwtTXOxRy8996jg
fSYF2u+T1hmhPe+LW+y6QoF94oEqZXTyx7WdY1cpEAbEfB3A/Xw+eDIs/joF
cGB+0ht0/8x3yrrZFMwOL+u8grbcbL/eKgfHk/1+jwU62Deto/025sN9qatq
6BvxX0MD8yhIKTh4vAfjT6LGM+9yAQV5tutNw9Fl5ocUBopw/G7Ciacwnu2n
SYZll1Bg2X5DzhQ9UJ3wfXsZBdbfWv1HMT94Vjkl1Y8oeL13m5kz+vzGLzuu
VVBgs/+hpzjml4Hc3ldOVRSYdgl8r2E+1tQOL5z5ioJJnxS61vz+dz7IS0W8
oWCnlkAr4hdLDtqY3t5aR8FBoxhh3b/8V3qvJFuP8bmtptcVfat+W0TFJwoe
DZot6MN60W4XZL3wMwV/9z3YJIbe6HBrZFo75pt/oukkrDeC7XJrHvdRMFhf
n5KG9atK42JewG+sf6EeYpPQbl95s+gBjO+IzNl7OlmS6rKaSRmiQPSiaMA8
rH/S7oEJfqJc+Ci3WfVyG0u+eba0cqZy4WXjxGJFrL8Rel5mLdO4sKvRsdzh
M0tUe4byE6dzoV2n8Vp6E0s275E9LibPhU+pc2j1RpY83reK36TChYT2Lhfx
epakH8gOPMXhQu+XMYn9WP/NIh92Ei4X/vsvM+scng+DKbXWPXpcsEm66lGO
58f6JyPCtTQXzIxEdkpWs2RoxvofYgZcmHkn6kxEFc7/do/9wZVcMH4nraH5
hCUTf/CXOjpxIfj9SIFGPktujy2/MXkbF35qvLSUv4P7O2OLUtF29Mo3HuJ5
LMk1DO1XcOOCxIy8OW05LHE8Xn3z7W4u+KsHDMbcwPqovU/VJJALljEit1Mv
scTDOVdEL4ELXheMRx7iedyvtju6JJELXzWeVKSexHrWPFfJ4iwXdp6LSgiI
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
        "]]},
      Annotation[#, "Charting`Private`Tag$61253#2"]& ]}, {}}, {
    PointBox[{{15, 0.9921681941979188}, {15, 0.9588413497547438}, {
      15, 1.025495038641094}}], 
    PointBox[{{14.5, 0.9921681941979188}, {18, 0.9921681941979188}}], 
    LineBox[{{15, 0.9588413497547438}, {15, 1.025495038641094}}], 
    LineBox[{{14.5, 0.9921681941979188}, {18, 0.9921681941979188}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 20}, {-0.16264820432978527`, 1.1758123147692734`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.856453242319631*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"4674208d-80ee-436f-bbe6-53daf976c57d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"d69ea01b-c1ef-4113-8cab-\
b11ccf013757"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"c8124fb5-6975-4957-950c-\
1a0ca8f99e5a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"8aa49981-e1b7-40e4-b201-\
cbbe28e3204e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"1", ",", "0.02", ",", "newv0", ",", "condition", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"1", ",", "0.02", ",", "newv0", ",", "condition", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}, {
   3.846088175327531*^9, 3.8460881759055147`*^9}, {3.8460882689329014`*^9, 
   3.846088273291252*^9}, 3.846092139476152*^9, 3.8460927783810167`*^9, {
   3.8460944463150587`*^9, 3.846094446828704*^9}, 3.846094521910573*^9, 
   3.846094557562827*^9, {3.8460946063029823`*^9, 3.846094607469708*^9}, 
   3.846094716725874*^9, 3.846094791662265*^9, {3.8551469467352247`*^9, 
   3.855146956689831*^9}, {3.8557662129647484`*^9, 3.8557662327008734`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1425423236955773`", ",", "0.009642679251577526`", ",", "\<\"ok\"\>", 
     ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08320462452534881`", ",", "0.05049626383605884`", ",", "\<\"ok\"\>", 
     ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.007948329329843047`", ",", "0.004928767223626862`", ",", "\<\"ok\"\>", 
     ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.06163061521638268`", ",", "0.22669918525133603`", ",", "\<\"ok\"\>", 
     ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.21981099099989757`", ",", "0.34387725493600385`", ",", "\<\"ok\"\>", 
     ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4999799653845541`", ",", "0.5000043498602162`", 
     ",", "\<\"converged\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.937275584600631`", ",", "0.06272441539802084`", 
     ",", "\<\"converged\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006090277542809421`", ",", "0.9609147130248105`", 
     ",", "\<\"converged\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3687932168217344`", ",", "0.20723280255859233`", ",", "\<\"ok\"\>", 
     ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.49998847901388144`", ",", "0.4999956501398209`", 
     ",", "\<\"converged\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9372750969155028`", ",", "0.06272490308436264`", 
     ",", "\<\"converged\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006412848009743779`", ",", "0.9589507874495832`", 
     ",", "\<\"converged\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9507128595401925`", ",", "0.04928713890081277`", 
     ",", "\<\"converged\"\>", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "30"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856453243215868*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"92999f65-b37f-403e-830e-c21aff4ccc49"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$61302#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$61302#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[0, 1, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{1.9877415956874602`, 6.88214269644119*^-22}, {
        2.142643325260664, 6.88214269644119*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3., 4.235164736271502*^-22}, {3., 
        4.235164736271502*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4., 8.470329472543003*^-22}, {4., 
        8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.3552527156068805`*^-20}, {
        5., -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[0, 1, 0], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5.89120657763058, -5.421010862427522*^-20}, {
        6.031479945090417, -5.421010862427522*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[0, 1, 0], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6.994728287201308, -8.131516293641283*^-20}, {
        7.008913724826522, -8.131516293641283*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[0, 1, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.816481832040456, -7.589415207398531*^-19}, {
        8.106171923846786, -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      GrayLevel[0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.042605134564344, 1.734723475976807*^-18}, {
        9.009707683891952, 1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[0, 1, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.858886316945023, 0.04969024160430335}, {
        10.425074181768094`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.500020034615446`, 0.5000000000000001}, {
        11.500004349860216`, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.06272441539937, 0.9503097583956966}, {
        12.062724415398021`, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      GrayLevel[0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.993909722457191`, 1.}, {13.96091471302481, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14., 1.}, {14., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16., 1.}, {16., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{17., 1.}, {17., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      RGBColor[0, 1, 0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.47281491664039, 0.9503097583956969}, {
        18.045825552063143`, 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{18.500011520986117`, 0.5000000000000001}, {
        19.49999565013982, 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{19.062724903084497`, 0.04969024160430336}, {
        20.062724903084362`, 0.04969024160430336}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      GrayLevel[0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{20.993587151990255`, -1.6263032587282567`*^-18}, {
        21.958950787449584`, -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22., 1.3552527156068805`*^-20}, {22., 
        1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      GrayLevel[0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22.049287140459807`, -2.0328790734103208`*^-20}, {
        23.049287138900812`, -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[1, 0, 0], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24., 7.623296525288703*^-21}, {24., 
        7.623296525288703*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{25., -6.352747104407253*^-22}, {
        25., -6.352747104407253*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26., 1.164670302474663*^-21}, {26., 
        1.164670302474663*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27., 3.441071348220595*^-22}, {27., 
        3.441071348220595*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28., 1.9852334701272664`*^-22}, {28., 
        1.9852334701272664`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29., 2.6469779601696886`*^-22}, {29., 
        2.6469779601696886`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.856453244193836*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"ddd072a9-0f0d-4e54-8895-bfe2e364df61"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"b94d5e78-6273-405e-baaa-\
6e385d5d2376"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pickNewValueIter", "[", 
   RowBox[{"tableIterNewVals_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
  ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newIterValCon", ",", "newIterValAny", ",", "newIterValOk", ",", 
      "noIterFakeConverge"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newIterValCon", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
             "\"\<converged\>\""}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "<", "1"}]}], ")"}], "&"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIterValAny", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<ok\>\""}], " ", "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<oksign\>\""}], "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<okmag\>\""}], "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<converged\>\""}]}], ")"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "<", "1"}]}], ")"}], "&"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIterValOk", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<ok\>\""}], 
              " ", "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<oksign\>\""}], "||", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
               "\"\<okmag\>\""}]}], ")"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "<", "1"}]}], ")"}], "&"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"noIterFakeConverge", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<ok\>\""}], " ", "||", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<oksign\>\""}], "||", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<okmag\>\""}], "||", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", " ", 
             "\"\<converged\>\""}]}], ")"}], "&"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"No", " ", "solution", " ", "meets", " ", "criteria"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"newIterValCon", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"newIterValAny", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"newIterValOk", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"noIterFakeConverge", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "If", " ", "any", " ", "kind", " ", "of", " ", "ok", " ", "does", 
             " ", "not", " ", "meet", " ", "the", " ", "criteria"}], ",", " ", 
            RowBox[{
            "there", " ", "is", " ", "no", " ", "solution", " ", "in", " ", 
             "this", " ", "lvl"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"tableIterNewVals", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverge\>\"", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Last", "[", 
                   RowBox[{"tableIterNewVals", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "+", "1"}]}], "}"}], "]"}], 
             "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"noIterFakeConverge", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"noIterFakeConverge", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"noIterFakeConverge", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], "}"}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "solution", " ", "meets", " ", "criteria", " ", "but", " ", "it", 
          " ", "did", " ", "not", " ", "converge"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"newIterValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"solution", " ", "meets", " ", "criteria", " ", "but", " ", 
            RowBox[{"isn", "'"}], "t", " ", "ok", " ", "or", " ", 
            "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"newIterValOk", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"newIterValAny", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"newIterValOk", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Last", "[", 
                    RowBox[{"newIterValOk", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "\"\<ok\>\"",
                   ",", 
                  RowBox[{
                   RowBox[{"Last", "[", 
                    RowBox[{"newIterValOk", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], "}"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"newIterValCon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844466207590722*^9, 3.8444663304974847`*^9}, {
   3.844466467059284*^9, 3.844466482937065*^9}, {3.8444669028168545`*^9, 
   3.8444669220431056`*^9}, {3.8444670322139096`*^9, 
   3.8444670870482016`*^9}, {3.8444671566049376`*^9, 3.844467158920144*^9}, {
   3.844467196948223*^9, 3.8444672718024893`*^9}, {3.844467321158042*^9, 
   3.8444673278403487`*^9}, 3.844468299730402*^9, {3.844468502462919*^9, 
   3.8444685083530297`*^9}, {3.844520161191785*^9, 3.8445202245778556`*^9}, {
   3.844520332705359*^9, 3.844520377455515*^9}, 3.84452048068826*^9, {
   3.8445205845433617`*^9, 3.84452068650521*^9}, {3.8445209863115625`*^9, 
   3.8445209977867584`*^9}, {3.844955378499539*^9, 3.844955378702995*^9}, {
   3.8450399851794863`*^9, 3.8450399905968895`*^9}, {3.8450402066544905`*^9, 
   3.845040239394699*^9}, {3.8450434161210747`*^9, 3.8450434242961826`*^9}, {
   3.845043604555329*^9, 3.8450436349903736`*^9}, {3.8450478558828373`*^9, 
   3.845047867869722*^9}, {3.8456575526918926`*^9, 3.8456575749662375`*^9}, {
   3.846000761958229*^9, 3.84600076666483*^9}, 3.8460020837549314`*^9, {
   3.8460186851196623`*^9, 3.8460186856315947`*^9}, 3.846018886808941*^9, {
   3.8460189616153903`*^9, 3.846019059973849*^9}, {3.846019103568391*^9, 
   3.8460191037534432`*^9}, {3.846019638725012*^9, 3.846019644968521*^9}, {
   3.846086647334755*^9, 3.846086666377084*^9}, {3.846086708054812*^9, 
   3.8460867093045206`*^9}, {3.8460870240121717`*^9, 
   3.8460870976665087`*^9}, {3.8460873018211837`*^9, 
   3.8460873044143124`*^9}, {3.846087339218552*^9, 3.846087399411335*^9}, {
   3.8460874432447863`*^9, 3.846087446900208*^9}, {3.8460876173270864`*^9, 
   3.8460876318802443`*^9}, {3.8460876965682096`*^9, 
   3.8460877516886625`*^9}, {3.8508372581114907`*^9, 3.850837263091693*^9}, {
   3.8522965309940023`*^9, 3.8522965322534323`*^9}, {3.852968052962956*^9, 
   3.852968185273698*^9}, {3.8529682158799944`*^9, 3.85296822633492*^9}, {
   3.85296991268752*^9, 3.852969940706086*^9}, {3.852969995282267*^9, 
   3.8529700071252728`*^9}, {3.852970650559586*^9, 3.8529706778025503`*^9}, {
   3.852971101081891*^9, 3.852971103299384*^9}, {3.8551639164802256`*^9, 
   3.8551639166976075`*^9}, {3.8551641531771183`*^9, 3.855164324709685*^9}, {
   3.855164357277613*^9, 3.8551643695269933`*^9}, {3.855164714969814*^9, 
   3.8551647396075153`*^9}, 3.8551650214032183`*^9, {3.8551650784914217`*^9, 
   3.8551650793452015`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PyrFlow1DIter", "[", 
   RowBox[{"10", ",", "1", ",", "0.02", ",", "p", ",", "newv0", ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
    "noteBookMode"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.8551652279135513`*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"6afb2ab1-6406-455a-ab94-2769a5499948"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8564532443655577`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"89d4bd28-a9c2-447b-95bc-f4e2fd84b055"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updateValues", "=", 
   RowBox[{"{", 
    RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.844519953596135*^9, 3.8445199606029215`*^9}, {
   3.8445200284976707`*^9, 3.844520080540944*^9}, {3.8445201144548054`*^9, 
   3.84452013632008*^9}, {3.8445204044409313`*^9, 3.8445204048126707`*^9}, {
   3.844521111054682*^9, 3.844521111228567*^9}, {3.845038037655663*^9, 
   3.8450380378721824`*^9}, {3.845038171548463*^9, 3.8450381719784317`*^9}, 
   3.8450400525206423`*^9, 3.845040270633919*^9, {3.8450435281953635`*^9, 
   3.8450435292420616`*^9}, {3.8450449581286364`*^9, 
   3.8450449584168606`*^9}, {3.8460012756798897`*^9, 3.846001276159388*^9}, {
   3.846001463969864*^9, 3.8460014671759553`*^9}, 3.8551651986511493`*^9, 
   3.855165296083802*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
    "\[GreaterEqual]", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
      RowBox[{"updateValues", "=", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", 
         RowBox[{"updateValues", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "}"}]}]}], "]"}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
       "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude",
        " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ",
        "v0"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"random", " ", "values", " ", "between", " ", "5", " ", "and"}],
       " ", "-", "5"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nV", "=", 
     RowBox[{"newValues", "[", 
      RowBox[{"10", ",", "1", ",", "0.02", ",", 
       RowBox[{"updateValues", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableNewValues", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "We", " ", "initialize", " ", "whith", " ", "values", " ", 
        "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", " ", 
        "calculated", " ", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tValues", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"updateValues", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iterTable", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tValues", "=", 
            RowBox[{"PyrUpgrade1D", "[", 
             RowBox[{"tValues", ",", "p0", ",", "  ", 
              RowBox[{"pyrf12", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"threshold", "*", 
               RowBox[{"2", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", "1", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"goodValIter", "=", 
    RowBox[{
     RowBox[{"pickNewValueIter", "[", 
      RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Last", "[", "goodValIter", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8445199189976206`*^9, 3.8445199365460973`*^9}, {
   3.844519973444282*^9, 3.8445200208896346`*^9}, {3.8445201321606035`*^9, 
   3.8445201335175266`*^9}, 3.8445204255897226`*^9, {3.8445207635164404`*^9, 
   3.844520772183606*^9}, {3.844521615845844*^9, 3.8445216204018307`*^9}, {
   3.8449608965047283`*^9, 3.8449609389132614`*^9}, {3.845038043311702*^9, 
   3.845038045807271*^9}, {3.845043232309779*^9, 3.8450432374252357`*^9}, {
   3.845043271633041*^9, 3.845043280468442*^9}, {3.845043388631222*^9, 
   3.8450433948913903`*^9}, {3.845043436701793*^9, 3.845043458830859*^9}, {
   3.8450434913708134`*^9, 3.8450435144542074`*^9}, 3.8450435634013424`*^9, {
   3.845043652260578*^9, 3.845043652741896*^9}, 3.845044961232326*^9, 
   3.8450478485078444`*^9, {3.845918357722026*^9, 3.8459183622702703`*^9}, {
   3.8460012212613683`*^9, 3.8460012264810104`*^9}, 3.8460217144186335`*^9, {
   3.8460231595946617`*^9, 3.846023165534622*^9}, {3.846023197994383*^9, 
   3.8460231990390916`*^9}, 3.8460961034288235`*^9, {3.8551505369518566`*^9, 
   3.8551505522269382`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2816011660947526`"}], ",", 
     RowBox[{"-", "4.718398833905248`"}], ",", "\<\"oksign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8564532444313817`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"8fe43e2c-697d-4252-8c5a-c3c2d96ec3da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.856453244434374*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"a63e5730-3820-4d7e-be7c-3fe7e96fa856"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["goodValIter"], "Input",
 CellChangeTimes->{3.85297061961178*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"b5aab08a-f9a0-4958-8e09-335872c0ec55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2816011660947526`"}], ",", 
     RowBox[{"-", "4.718398833905248`"}], ",", "\<\"oksign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856453244482952*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"cac472d6-3a64-4edd-970b-14f48568827c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{
     RowBox[{"Last", "[", "goodValIter", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845040090183707*^9, 3.845040128420087*^9}, {
  3.8460007875636425`*^9, 3.846000801253723*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
+OBf3eiDKaOVf//o6wyBlxoCV778D61MDgg=
        "]]},
      Annotation[#, "Charting`Private`Tag$61386#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVV3k4lF8btox9GAYz0YYkP1mKKKlzTkRUUpISsiSVFCEkFZFIaZOtLJUt
+zoj6QxZsmQZIVLJvjN2Ir75/pm57us8y33f5znv+x5ZexfTC1wcHBwt7J//
//9teNW3tkYqbbff/15DwojxdUF5hL5EKv3+fTBcWdCIESuDJ11mSKUZgXkK
ihxGDOT252/XAKm06ry+zrYxQ0aQ5Fax0npS6Yhh+ib9CkOGmFXWfr9XpNKi
PdV+ax6GDMXh0giO3aRS+X+1B53bDzFOcw8Ycl4TKe17TLElpxgwhGrDHNSL
iaVKPCcN/mkcZCjkhHYc3CJUepRn/I6zhC4jKUjzi2m4QKnQiJuJ61bEuDW5
3/lpL1/pfml9nmKnfYwirxinbBPe0kN2ntYPKdqMY89PyaxGE0pznDiqRas1
GYdiPx0zHOMq9eOLRm++qTOSv9xsc7fkLF3eNhybemIHo4T/v+1xJ9YY+5XX
V52kb2csl/JaURVWGFUq5S37Xm5jrFmAOw8ElxhUUes1qaktjHyqBul0+hyj
lPPLVZWrMgwtiSbT4fvTDOnvYldsRdczmp3MBGnaE4ycyf/+Lr+QZJRdKznx
4MEgw8FMuv0ES5RhwvJY/WXYzTjSIEoq9BRk+HyMNatS6WYkjdtuFLYQZCQH
VaVlkbsZWZVRBB8dQcbqhnWn7/78w2BuHD3wnEOQkWn0MVvG9Q+D9udw4cdQ
AYakAffnKtUuxoaDPpfGkvgZj9I3PGDWdTJMpQqPhg/zMnw8TcQGeVoZq5/u
XvXO4Gbgp3VDJ7+1MO4qnelzf8nN4E4/VFqa0MLwfSHD6XeHm/GoC7rE6LQw
jkr8kaw9zs2INdxRb3z9G4OvN0d46zwXo1RaLKTgJ5ORrmuqN6XHxSDeSeIk
XKxnjHufUf44ysHYSsr4o/25lKF2UflQTusKPjh063a8WSnjtAlDxSNjBVfe
i9wl2MBgLK+s67AMWMFosC0lgYoZGyJDD0bsXMFaOafC6tOKGeVHznYWPlnG
cronLbcx8xmuvzldX5j+xWOR2q1XvKIY9MEY1/PTC7jHtuhjlOBLRusyUyiw
fgG3/7f7bWXsM0az4bb4qtQFHOJ1+TcIvs/ouhXpkWuzgNdx+9Mu3rwIVet8
Dm1onMd57R2fK0/FQRet3FntgjlsZvqx7ZNhIeS+s5qyI3IG92+r/DO7mQbr
hpWziF4z2PNfw8j2BRpkug3R+E7P4OjUntXopCJ48lJw9FnqDP69KrDNk6sE
gvz5rW7R07jgVIYO9VwZvG3R62L1bgoDruXQRmo1bO+0b/V9NYl5x9dErwRU
Q1+boOJS+0nc+J0QwTtZDVHHz31QaRLbZook7K+qgWlVWzNGP0zggDNyBeke
dVBWZf/etc5xXJ1l9PMBswEeOKy2f0lpDL9XOUpJqGyGjcyQLT4zQ1hmc2Im
c6EZVnp3nVOrHMJRoisHuZW+wY+CW1IlIodw0Ey6u2PYN6jyZV7IRWcIO3wQ
YiqfboF3gxwybYMG8Sb9utAPQ62w5cDi8patAzjc6jDnN6EOaFG+NPbkfi8m
HnsbRQAd8KrSVYEN1r04AP5V03LtgOf29Lu07urFbnJp56JbOuBpGcfPjX09
2GRIoMQm9gfk4oHkPwY9WNCjxnNM9Sfcf3CM00q8G/uFGo7xmHbBYgfLR0dj
fuGMtIJH14O7oNPNGI17x37hjhoZlV+4C9rbdTSu5/6FpQJXtH5I/oHvyNU8
Pld/YrfPLV659/5A2HBv30+DTrwF3l+yseqGdkb77vASO3DQnoGVElIv3Htk
V/TF3y14g+GG+mmlXgi7LeOz4lpw3mnTWEWDXjhwXyTM1KYFd3ni/eG+vfCp
fZBeTvc3vKcw4s6V4V54aP+P3pKRZjy88xCHdHkfTKZ2vx0WZuKj21O5vTwH
IF9RaRlRtQ6PLRri308G4PvvKy7jdbX4UdWwt8H7Acg7Ld523qkW19ltn5D8
OQD9g96fFX1fgw9HZbUXHBiEajomOudUqvEhnsLMaeIQdNS+KnD7RCXW7So7
fe3dMFwt0jp+kKcU92TYk9tKhqHkVVs9MycGvufDXb+/bRhqmrue31WHcZmk
vq6wwAjMZL7Yp/b0E0ZHq5Uzro3AqqB3YFnhIwYfGjhHtEdhXiGt68gDGtZ+
0Zl+oWkMbide4H+5PgM3P5vKMh4egz6UK0985dKx81O+PE2ucfjrlIjPke1p
OOGxRhHPrnGo/96SHKObinmDQyuSIsdhFtXKu+VBIm721fnVf24COns8qd70
PQY73zrxp95rAj5/bzr3UiYa8/hc7C18OgF1Z2rScq5G4j1eL4bvf56Aoaoa
fyrJ4Tj++ujcVoVJ2G4t+OSQaCh2dnwl4jg+CWUvjXzlbD2BA/La+bdxs+Du
f1Q+GbE9oCn3vOArEgua34pREU62BpdzbgoHKLJg1IG8pHFRd/A6M0n85FkW
dCj+JBr8KxBwpf7bPPOJBXMkGrz9ZF8Ck5Rg2Yu1LLiS9/VLy6UI8DpZfEtn
GwueGNoi9DMjEmgm/adQPsmCtzNvA5HtMeDS21PKL2Sn4MUiIx5jjnjQ+Dpz
j8b9KXgNHWMY8ieChym3SwqfT8F0v1j/+thEcDDPGO1JmIJhhG3hPjuTQNGX
8UP7P07BC5uKnpqdTAYJ0yqnD01NQaPQ27v3+KcCV8OsG5bW0zCCOVaEHmQA
pZN3ln45TcPkOKVQKY5M0Gd97Lat9zS0qesy1PLKBGfcJwIvvJiGdQ/vXtW1
zQIoTjXcpWYaHqqJbx0RyQGis1l5AZozMCuZqKOZmAtqV+9o8erNwGv5QkGK
33JBoIBJcfDxGbj2zyH8CGceWNw0Wfb4ygyUYj2+Jm+ZB/4YqTEj38zAiNIw
pM2TD2LM1syks2eg7S7Nhs8q+cDMprH9dckM/KvMwxtwKh9Ue7j8efN9Bm44
HjKY9jYf5MRnT6YLz8LotoXoHI0C4JR21111/Sy0HmYk8JkXAPlCk4UcxVk4
/cVvz2uvAhBVO7laqDcLuR+ZhfkXFQC/OTWR0puz8Eiq1LLZzkKwl4Pjue6D
Wbj27HZujnEhmBVskqwMn4V3w953Hb9cCC7JuG6szZ6FF86XUezjCsGJIznK
Lf2zUH+ukvpnrRCIFhYmuUzPQmO4uPRXggYaNn3cJLQ2Cw9uLPP3/o8Gjk5X
iuqum4NLStzH447TgJBVXcgv+Tn4Icnt36HzNFBb2cR1c+ccPH/4wqbTN2jA
MLpzNvvwHLydUhqcGkkDfNzdV4+cnoPjaZu1x1JooMp5YGDg/BzUvzahFEWn
AT001b7x9hzMq/2SsL2VBrjS5k98CJmDNVnVoRK9NFAqvlJrFjEHq4a2Bl1i
0QAY5P0Umj0Hb812e5oJ0MG/40StbSVzUF1sd8u4BB2UFItlf66eg41SrSJz
m+nAR56qeK51DjZr7P7hpEQH2mEb3ix1z8HiwPZhk110sLggK/1yYg4KqO+a
StxPBzS7bS92LM/B/XaV75wM6GCXpvr9ixLz8GSnR/thczqYidu9yiU7D3de
DylztKaDPP79XnEq83BuU+mW+fN04Oqmy9LeOw/XC4bnLV2mA7Wfhy63GsxD
xTN+sm4udDChb9zjenIehqlyyNt60EFGtqkl0XYeduaFXa3wpoMrUmdaUpzn
4QPBlNx4XzpQCrA21rs5DyUsK95N36WD4TH7qt/35yFnrd3Cp3t0kGp+Cfo8
n4dNvn9tuO7TgWPp1SLJ+Hm4GCXwrDSIDrYque/MTWfHHxQESw/ooO+Fd9rR
onno/M5LOjOYDt7+u71lqGIe5v382vGTje0uBrwOYLL1St5XC2FjGWaw5Obf
87DFbX1jHju/a29YWPHIPMyRFnI+y64fl/iCz3xhHl5Sb/zgF0gH1iLRflPc
C/BOV88VBTa/Dd5xS49EF6DzoTLNo2z+nd3v3BQ3LsCCJ/2107foIObI+9Hy
/xZgy6/a39Js/WcKsxxstBag6ekx+Up3OqBuLvj1V3cBpspWHp++RgdtwR/M
I0wW4Cn7Jsl3bH/Dp3HjTqsF+AOEbGtn+3/SqsKw/tIC/PDTSfs5e3/IVTVl
l26w+9uxVpns/WOqNe4l3FuAN6bDt0eZ0MHT6Jb8+LAFeKbwm1v/IToQudqV
1JayAF87Ejev200H9W19m9wKFuC/+JWRVRU6eIRGIoXLFqDGG/d4F3k6EJCY
Czn4YwFKPet5MkWiA8JHwWt5xEVYg/btCO2mgR07Tl22kl6Ebu0enIxvNGCV
FO/Aq7gIE41vlF+rpIGCJ7ssz+otwr3GX9P12efDweGcIZfPIjwmUC004kAD
TztS9TIeLEL7uV12lJM0UHJsBpi/XIQ7ihzrKhENSGgHa6blLMJAQHXNlaaB
SuE8OdPBRXiY9maxpboQTN9b2bgyuwhRqdK0en4h2LRoIJXMtQQ3xNyQXx9b
CDx7Okl/Ny5Bhb0mlY9dCoECneffG7MlGPyCb16CVAiCbC2+T5Utwaax3dzu
2gUgr/Vd86vGJTgflpPYtaEA/D48Ua//awnaz/RV9a3lAy3NgIroxSUYf/fu
5pKKfDAgkJl7QO0v7BG+vrnIKB8Y5HM8evb6L3ykO2WUeSAP8PGmop1ey/DO
dr/HkV3ZIEdcxfZV4DI0uzXz5tazbHBGNu8uz/NlmCFZpdOomw3S9pXgjgx2
/KR2Wd27LHDMvWnfvZ5lyIzfaWNkkwki/izu+Wa8Aks1iAbMT2lA4aPRzhvy
/2CQcnXBgHwS0Hcdlf3AXIWinKfv3Z15Bn4Y6ynCJQ6UZp4os+tkLB4SKJ/h
4+BEibVyo1ul4vBcpS6jiZcTTd9yr3zxOw6LAl1zewlOlKP1uW1EIwEbqB4I
vK/GidZrRmtUf3iD80Tgn7oLnOhwd4TaZVoifti4N+pMMyeyb3qUxncxDUeF
Fp+X7eBEf35rBJzDaTjp0F61kS5OVOuY4q4jmY5LGdpVt8Y50dFjrFi/snQ8
n71nNo6fC+25wtrKJ5GJ7Z9qHe8HXEjmTLfb7fhsrH1Cnd8tnQtxjMnsH5bN
w9UlR499yeVCvBe9rVcP5OEzihfDNxRxoQBdVZEquzzsvfZK5ksFF0LymYZO
CXm4KJNHe8NvLqTUwtCelsrHuwU7LleJcqPxKZ9a23/5uOrGTPZ6KjcSfVwT
b7SuAJt3C8+7buRGG7PMkzrUC7Bnke699Urc6ECo/OUxxwJMc8yIcdXjRtoz
5qPVtQVYs/xunbQnN1q+fyYK+xXiCtUYMVdfbqQelSBT+bIQm8UUnK68x40q
TvHdvJhWiD2uD/e6POFGej8VP/s2F+KCzSdXKlK50dYzgfWtG2n4YOhVXels
bhTC+3AiWY2GW+YfBLsUsuu7xamJHKDh2foSCenP3OjMk1Ht1/Y0rOGroOLS
yY0SqF1BbxNo+PMgcq/o5kZ9C3Klotk0bHrS8oPUEDeaT71wmfSJht2UnupX
zHKj4qAujY/faZgrIi1UapkbUYrIw459NPycs5J5jZOAEsr3aSWwaOz705K1
lAgBObhdLS3io2PdgxKJ1yQIyEza9VkEmY6bs1VHyqUJqCTJTm5tAx1PB533
vLaNgKxcBTKu7qDje9O3S8pVCEi34OMeN206Jp+L4pLaRUAc/WaZqwfoeKdm
fVg5IqAzlF2eGSfomGOcMLhoQECBNOW378/QcUPiPqhqTEBuTV0ZO2zo+LWV
R+T5kwQUcaFtBF2gYyeJjMkoCwLy9IrO6XCi4z1few812BDQHb48078udMwX
uD6B25GA9lLfb33rQcdtOicX9zgT0LpUvjtN3nScOPPw+DU3Agr/aJ4T6EvH
bumfU995E5DSyc1i+C4do/N/OTru/F/PyOyte3Qssl7dQuQ+AcVIHMj5FEjH
v5ov5+qFEpDtgYzIe0F0nPHwjcDNZwSkuliwVvOAjn10O+yyIgnIb2/fvhfB
dGz4V7S4N5aAqgTK3/1iY0qeIVkqkc334o/gVDbuu+zndCyNgNRP5aMZdn6+
bNHngBwCOtrStvkTu/69jknpDzQCMhyo9+G5T8fHn21znyghoNRHssl1bH6b
jGzqtpQT0O/qs/MifnQ8xhG5xaKGgK695iptYOsrLmq4FdZIQLX8b08L3qTj
EFfelvJWAnIlfRYrY/tzRhEoL3Wy83NHdafZ/in8uRGo2kNAwVMpMJbt72xk
5s/zQwQ01njXqsyBjj+b9O+KniCgR8dWxq3P0fFTvo2PG2YJqP1asqHbaTq2
YZj1cy+z+avzlf0zoeMV1YqX1/h4UEKqqLUXpOPageXxd8I8yO1c3X8OWnQc
Hadh0CHOg858snWsVKZjLZF383oybOwL/XuodEyo+nHspgIPOtcVwx9LZM/f
bXJKljIPsp+aPVHDQccu4/6npbR50HHFGl+PQRoGSR+yj0EetOf4Kb7pDhom
Wk/xBerzIIIKIfl3HQ2nfrUtmjjBg44KTVznyqLhnnQoVeHEg/4ETNyzu0LD
Oee9ri+58iBf30fjBy1o+M767BpVLx7UpvlS9LkBDa8P3eQTHcCDaCzBZsfN
NGzm9O/Htdc8yC8nwH+wphDLyWlqJL7lQXfa3Sd48gvxVIdzaEcqDxKtpxQF
vyrEYUY/dQ4W8qA+2ej8IqdC/EXx42upBnb+u9CH2ZyF+KijpFZbCw+qKPNK
8u4twE3vXBqfd/Ig55PtmwIrCvCPTfJcxGEepDqZWXousABPSDy+uMrNiyp+
ZdQKLudjd9NBjo+CvGj6CuhtaMvHi08OxHiJ8SKrtDz/htx8zCU0/5W1iRcB
87+9vhfyMYXTRr1Xmxd5QH7DO+V5+BX4UBePeJGnfG40b3QelvEVv2B1iBc9
nE+LKr+ah5UWvkS2mvEiez9D9XaJPAzGd/z74sKLZteUf5+0yMWOHVzVGUm8
SDnTjJl2IxuPUqztLmfwokWd7E8BvNnY1Yz+d2s+L3KIcnib9jIL+zReUYkv
5UUSC8a+nVmZOKyy5fmzTl6UMLcpKPprOqblJlt7ivEhDsPvz/gKUrDOJMeC
+jo+xGqueTutmIJLlS2fTm7iQ+s2NxmJvk7GtSmk8kvKfMh7d5D/T98k/DvW
W9HyEB9aJL9OD1Z8h3keHp6Bt9n1QqmSdsavMdEL8oUE8KEdty9qp5JfYQmH
XeubQ/hQzn8Sj1+3RGM5sEnPIYIPNYXFvvM/FonR9NTz4Gw+9OfJ1sJJqefY
52y0OrObD/kl1sblafhiltLQdXsDfnRgbZfL14RnYJH66376UX40SicbfzV4
AdYIzdGzpvyoN1fyZsZkOBDp+lgWZMOPSouIsm1GUWD7iydi6d78yFjT0Mto
UzxwXNbKnUnjR3954veUxyaDzrr7rECSADJ8bNl470MeiAKx+qcoAojg73Iq
ZH8+MM8tiNm6UQDpD4gr9Jflg+aI3oNVSgKIo8Nv6mFdAai1OxDNZyCALLeT
9or30EDxwsqBh74CSLl7fafWuo8gZovHiyfDAuganDUdqCgDZyJCh2xYAqgj
qcVglu8zoAi8279jQQC1hlcLDBz+DJ5PMAebCILI3VNezrnpM3j4QW0fWUYQ
/acK3lR0lAMfk9G+cHNBdDou+B+ttxJY3LLXiikXRH6L06ZylTUgJlaCd6FG
EBl6F7d7rtSAH4yq1pNNgmjnRYbCDY1acJaw/YbwL0HkUTfWfzGhFlg9nsn3
mxdEEToVN2du1IFz8YE7L/4nhN4p/QAkkXoQV6bFWaEmhKQPCXAqwnrQ1TvU
JKMlhAxocoX1LvXAVtHY9YeuEDKtvPupqLEe2OVKZhtbCaGXu5jff4Q0AIfy
ZOVdT4TQqWp9n4/9jSCx/8zK05dCyM+qNeQCXxPo5xP6Ov5KCA25nHRIWt8E
HI+6XElJFUL6hKEUI70mcLF1d5r0ZyFkpzSiIvSkCaQuDN/0qhZC2z+7qux9
0wSGpF4btTQIoR8qqjzS+U3g0jmO4cedQujaxoC3Q61NwGmwehvnnBCySiRa
pFKZIE3g1oL1shDylyv7fXAbE4xuV/lSzElErplUvlAtJnB2feboIUJEUkF/
EkXNmODqkkXS4DYieh5ypmPwIRNkrSfeOKhKRLyF4XuKIplgYj8++GYXEW1S
+E3YnsgE1+7J9Z09QEQFNxqMZj8ygavQqFzDWSJyEXtttDLABJM3iwlCduz4
BwfSIljs+KGQgUMXiejuDbMdTUtMcKVSMa3MnYjCLVQPbRRqBiMai6GrN4lo
ZeP2rWrizeDS2y9XdfyIyHGRo/yndDNwvOu4s/AREaU8etfO918z6B/XFJ9+
TkQKksmxAWrNwMGKZ041mogIJ8ZLIjWbQW9tS9uVeHb9bRLWejrNwF47sSg1
iYhU/QoT76Nm0J3iHtOfzs7XdS621m8GthQ9X7k8Imo1+1ZRa9QMfgeSz9kU
EdHT+PsjdcbNwHqmG7JPPcoQ2GRqe6IZ/LTLle2oIKLbPrvlHpg1g7NNftyU
OiKy6XD2h6ebQQc43m/KJKIkYYuIYItmcCZz85cn39n8VyMe2Fk2g+/rJ1O/
/iIi2ouyWzVWzcD8IX4o0EdESgXu0QzrZtC6+NjZYISIrA4Z8umdawZmF62P
BbCI6O2uH6OmbPytVXlH6TwRHTtfcXWCHW96cEXs3woRlRS/yZdg46a8uhlt
bmG0V064r4Ldz0T2VaungDBS8H+zdZXNp+GJEz2fJIy+4aU4Bpvv0VXtaJak
MHr+OceT/1QzqHMWuKWyQRhVuNt9+87We7iz3cpJThgVfkjuVD7WDGqMUkGK
ojAqvbWexnu4GRgWecn0qQojnTdnQxzYflYpHOKS1RRG3mJrt/TZfuu/pPRZ
6wijtvx3Bal7m0EF90BlzAFhlODSa/F4VzPQdStM+X5IGGkqWzyfVmkGyMTs
ygkzYSSob3paZ3MzYHzaYhx2VhjNuwjt3EhtBkB5RrXOVhjxazvu8RVpBjoC
z6cPXhVGP3SdnbKWmaDYy67F310YHTU17rk7xQR7BnbQ8E1hpBWrI1fHnk+t
8sabe4KE0Zd76eF1jUxQuDPe8sYjYbRxzF7ibjkT7Eq4tj/vuTAyUH0xn0pj
gp23hTmV44WR1Y8aX6tXTJAz+rPnUpIw+/3Ae63vEROons2oSEpn+1GmYNV1
mwmUdx8J3lwkjDZs9q9ROscE6UnSTlZYGJ17zXp505gJlCRGjkRXCCMZlZyl
3fuYQHEqmCTOFEYBCqGyHOuYYEt6VQTvCHu96s325OomcCa+6EMtSxiNNN9T
u5/bBMJepP0MWxBG0re37c6LbgKLt8LkqDwiaLZ+ZnnqYhNoOGqetU1GBCky
dHlbFhoB4YAhc1RBBJHTj0dr4kagrbl3NltFBA3YV/2UDWA/rzZu2rtHRwSN
3bGoecbfCHwm+isNzUWQusOO4OecDSCn5/sQ0VoE2aeHjRNL6kF/W40Q87wI
yjDRzOC4UQ+OMzJPWFxn11uoCznS8xUoPL3x6/Ijdr/yHZLqaXWAuZNn7uFn
EfR8y6V+q/FqwKuwQDWpEUFmJR4Vl8KqwT7p4b3iTSLs79eHx+pUqkEyV73f
q18iqKlWryj04hfg+y2cmLHIXq//u+NTVSVQvCEvX69KQiw+4R3/dn4G5y5T
Dj3TJKEVyR+JLvQy8MKa3+nUPhJ6W3mdQtEpA6v6Y9m/jEiIYHr94Py+UtBC
KdCZcCAhZ60gzbBTJeBukd5J0isSqo69Z/rQgn1/t2pi2bwhoQTupxHm+/PA
xJpVWE4KCbX39RtVbswF5w551pwoIKHSfqm6hdRMANpSYXg9CeVYON1v25kI
Vpd4I4gcoqjl9Eiyq5Ak/kR1vvdMXRTFqej3whoajrqszvygKYo28sdNzh0r
wh4fFzf37GHjv0a3zn7/gJVt7n9Sh6LI4cnQnaXJEvw6OW7x2xFRpKKdvfFR
fBn21WReo1wQRV8tRU49la/Ge09qWb6KFEUvBKOiU0ab8dTg48N8r0SRmCd/
geeFbzjVt1/bPY5drzN217Oub5iaHL7uSJIoeimrbx3Z0oJnF6db/+aJose3
+9Zcy9pwVlz28bMNokj+vvXW+Lc/sOyIooEUjxjakOHdF6Lejdvv+Gne5xdD
13oNVfhcu/FT8Xb5KSExVNFo9+9CZjde3feAu4YshpTDZjMZ23rwjyf9pd4y
YshF3DgtRboXh2u+1WnXEUNHq/V/OS/0YX7/9Tsj3cRQ6Eb1qJ7bQ/j3R///
Zm6IoS+1L7Z65Q3hwvlBWZObYkh0n3xqxsAQtncuIPP5iSE3oqfvtPEwLjlt
POv5WAzdb7aezKGOYBfVu3TzVDEUZ3fASTNiFBtc7s/OSxdDDkY/bAbLR/GG
xCOpItliaMh3l4D01CiulloXXVUohs5dZjouGY1hOZ5cH61yMVRfqdJ5cW4M
t3X27Kf8FkMcf90l0M4JnEEx0nLrFkMJ0c6WQuYTOOBEtmpDnxiaJ36Q2O0z
gXd8ubU5aFQM3ROdrk8pncAP8yQ45xfF0Lolh6FC/UlsO+6zdGJFDH1452ty
9MIk3q3YPZW5xs6/sJNfI3AS98Vm9lzgJSPZb5Rzw4xJDEIMKlrFyWj1d2q4
LZWFJSoySnZSyeiO0eXW4/IsPLpKLnwsTUal3a9Vu3ewcJRHV5K+LBn5janJ
/TZk4WvZ+nFv5MnI54F3kaEZC+uPpEf820ZGam94bUxsWHjaxvtBoSoZVb+p
bFH2YOHqmN93xdTJaFtuVzznHRaObz3ofVWTjPY/FXO/9oCFjx4Ru7x1Hxnd
F3nyHzGaheWCvOz8IRlptJXz67xh4cXSXxa/dMnoOe4Z/JfKwklaaYdfGpGR
vW5urA6dhffVWPvRj5LRWF9FiuEnFm6xFKN1mJDRWe0pvdnPLOw8UTG6bEpG
j2IYCfurWZjg7y27yZyM7M5/GNtSz8KvxZVPIwu23omL5slMFtZI7npkb0VG
wZFmxIpWFq7d8+JzoA0ZxRfx7/ftYGH7OoPFZHsyGs4Qpjb8ZOG/1n9Vai6Q
0cHGseqiLhZ+zso8P3qJjCJ91Px1elhYKcAuWtiZXV/A5tqpPhYuk5RsVHMh
o+TvBAbPAAufSa0mmLqRkTJMe3NkkIVZe333etwgI/VX7QcVhlg4uF7NNcKb
jF4bSH0PZ2MZ296koltkdOz1XFAEGxdNR3T+uENGigvz95TY2OT+YbF//mQk
nJe8ZMKuN0BdNdh8n4z6t4VJ8bL73UnL9T0QTEYP87XEjrL5UPZfyDsfSkYD
2f+RZNl8sxrXDd0PI6PvXqwDgWw9BvZfN6Y+IyMDR4l2D7beX7N3T9aGk5Fo
2yaO6XYW9nigETIWSUbSctFDf1tYmCg9iEVekZF+ErE0rImFEzNiZnfEkZFn
MVdhRh17v+AxpZNvyCishDB/soq9X0xO2xuJZOTC+zo3oJSFrzgUvoxMISOO
mRMUnWIWjgnZwPkzk4wKNsOX+zNYWH1Dk9ZqDhnFSIYQHySycE1WgLNMARlh
Keqg2Wv2vHwb+e5QTEa7iuT9fB6y8FPHOOEHn8joMD/9VZMfCysundB7X0pG
8s15LSmeLHx604es8SoyogGiRZstC0/kOPeRatnzHOnLqXyKhYP0ZKTV68lo
tuWW/xp7/mmXHtz3/EZm32+Pft6gxj4/+aes1rrIaPeUV4n6yCTO0Bd4LtvL
5tduWvC4dhLrtZd80Rsgo7Y93Xrf309it39bNILH2Hr2no9TY59X5qFpAbEl
Mvqwld/lS8MEvvQjCWqskBGx8KHp5eQJzHHV4sapNTI6csWcNubLfh48L/0T
zSOOcrdIuD9TmMBhP8PocmRxxJu8a1LeeRxz5n17HCwpjpRuJ0he0Rpn7886
h4l14gir2Xw/vjaGz6q/FS3eLI60DsS0TD8awwrBhZdPqIijijqno+aRozja
+i+k7xBHibuYvefMRzFRA1I27hJH/JkSjvPio3j6V/Xnob3iyG1gobnm4Qj+
pPFzvZ+hONqk/qLvi+Mw3iEgO91/RBz51utfFpYexm9/X6g+YiKOnmfYKDLr
hnBwyKQH1VwcuZqE/atVGsJmXVwNWefZ/Lv2xhi3DeCxh//5/bojjqzaJ0w+
dvdiG9tr5nr3xNFisar8yK1e3KyZr/z+vjg6ZzTCvCHRi4v+7OvweCSOIgKi
7V6hHhyodVydGCOO1OX3DfUF/sEbejz79haKI8Izm9B9Xh34Cf1jcUKROEoY
CSpEN9ox12OOZ7wl4mifc0PTR5fveGj3w/3Nn8XRpfWGSrxnW3HB49iIy03i
KCoi86UnNxMf0a4wjBoVR34vp5h3ojD2czS3qpgQRxwJagtcyx9wwYshF9aU
OPrDmpo4crwQb5ggRhousten1PnGklLw2NtT/YsECeT8YHdrglw8CCMO+lts
kkDi47W/OWnVoKlL4KP0CQlEDJp4F53QDQjCrxsMzCTQgZvht77Z9YA9e1V7
3E5LIGp242VJ+V6QEG4qUGctgZ4811OKSu8D141enb7lJIFSeZmvBysHATlf
ebYzQALViHGay8pNALMgE5VYmgRyjzLTPZo8B1ItWEYfPkigOEj4qESaB8vK
zxxbSyTQ3K72OAXvefD2W3O8cLkE4hPtzHc6vAAmZczJdxol0JbMBsemyUXw
8KPVwrkhCfQu/84jD50VUMq6XCYjLYnE6JWWMbacUKJC8Pe+jZLIncGnuvyC
E16MTP97RkYSvSKE9+/9wglFwLjGMwVJpGZ4T/CEChe0DHVN5tSQROu+eJ7K
WuCC81u9QnuOSCLBfdX7fwcQoLJl4KnE25KovvREdawLH7S8TiMT/CXRlVch
dbR4PvjwwVDj+UBJpFKZc8m1kQ8O5h89vCVUEsk61TZ8UuGHb4mS8G2UJHKj
rfsZ2s8PqThJMSFfElnqPHlohAShQcv3/jWaJBouu7rjwWVB6DEi8M6mWBJV
bds5ZPBcEDZTrm3cXCaJiufOjx7sEYSPXLTIcQ2SyMP8YjOPrxDkkv2y/GqY
rU/kZN5kOBHu3L1UtDwmiQIO7vS5XEiEtsbbPS1Zkujf8HCdQSsRfrr5hCW9
IImyBged5MWFoXfz6f5oAgWFOxH+03ogDJOHQt4u8VGQU8c7ZsRbYdi6+tHG
QoiC5u+uKz3ySRiqb5f5sY5MQZva73xNYwnD8YChhsjNFLTruoomv4kI3BAj
/WhBjoK6LBziWh1E4OGco0anFSjomO4VgaGbIjD1Z045RYWCkj0HdFveiMC2
6R4/zx0U9NDDAqUViEAeAUnQpkFBhm3RsZ+qRKC95s2il3vZ+f/5tYYPicBn
R9JvzO2noPdf5bvMFkVgqd0v9VMHKKh3d3jyYT4SnPAisQoOUhChwljPQ5IE
N4YdyJQwpCBKbdPXRjkSPJro7uRxhIIk3r0+a6lGgj7FSdtajlHQasoOgqQO
CbYPCLx9cYqCaqOz+IWOk2C1WcjrD2co6Gf8y1sZZ0iw6DN/ZJclBSVZu797
akuCqTuCn/HYUBDVzWam8CIJRsXxPdpuT0FKvtd/S18jwWDig6ATFyioQbrs
+yd3EvT24fX3ukRBnOMXTGO9SfDS0P1bsVcoKO+ZVxndlwRPm/N4ll+joJ4U
4SghPxI0qAh0Hb5OQTcboFHkPRLUUidcId2gII/ErYYWgSSokBBwQdObXb+6
je/4fRKkiHDbWt6iIM8fTss32ZjX995Z/zsUdMF76WUrO35+mPNUij8FPTkQ
c9gugAQHTvub1AdS0FiLw6P1/iTYVslxeOYBBbkzXRu47pBglYbfQalQtr62
1gBJHxKkvVkDMIyCvvmnbza9QYLJpLvaF55RUKS7gCTdhQQjbq9qhIZT0LnD
fN91L5Ng0Oht1dxIClqfVNI+Y0eCnhb/FL/HUFCF3IHH1RYk6PjFd8u/WAo6
aZ9xkcH2+5TmysYtbyiolIvS2WZAggff3VpnlEhBy29fnhXeR4K7xJbJLikU
9Ldb18JuBwnK3/URfpnG9u+c5mHmFhKUGF/i+5hJQTJFgQmWFBIkWN7k6s6h
IPXHho2r7PmYrV5c4S2gsL+fo4w+sOenJXFhyrSYgta26Yxf/S4CK8heY96f
KOiE7KcVh0oRWOA3PxBXyuaf+5/81TwRGG411zlSxfaLJPsgLUQEBtZ6tInW
sudjQ2fqT3cR6LFntkmrnn0+9v3OkrIWgSclZirvfaMgF5VNu7KURaDuPbfS
1DYKct7/MJpLXASqs6aKGzooKKgzNttyURiSv7Kypf9QEBFIF0uWCsPmgIno
vDEKMlpb+X1bTxh+nroa3j5JQfa9e22/ygrDPJvxsNVpCrI2/qUkvkaEz3XG
Ag4vUVCqatalABoRnpgZvtrDQ0VVIZIby9cRIbK7fIlfgIrerBH9UieE4I7G
IXtVIhXNT2+tvFkuBEXTB0/7kKloU4P0547LQrDJvv8AeTMVyX9I2ujwXhD2
ElIWX8pRUbICc/aOqyCcT76ULaVARbw/dgqqawnC9aOjG2RVqOhRkJTJmU8C
0NF9ekFNh4q0tqj9vlTMD70lC7LyARUFjuXqCXjyw1D6jQu7damovdczeccO
fpizvNgMjKhoqMm4XCiBDy4HrGUan6YiGebPedpVXiiiUObAPEtFFbs39Zpu
5IUy1ffWnzpHRbUFWaEOdTzQgMgbYnWBze+C3vU/cjzwaTjR4Yo7Fe1rGlJa
xdxQIUlKOuQJFf1Webx/4j0H1D7U2UR8QUXnwv1leiEHPDr8+sHTCHa/8k+3
zFPXwHUVmbnIWCpKNSwUsZj8B0oKFZqS06mIY5Kv76rZX2BapRFU8YWKFG+I
UEW9psGFS3P7DOuoyNAk8rHllSngLUifqWugopzIrTf4rVgg9theu2+tVORK
xxkjDmNgqA3t6+mlokWxg5r6jr3grzfXzIVBdr1zdkmcEt1AeH3F++ERKio1
9hn08vgF1G0OUaemqMiPO9yU9Ocb0OcUaPCYY/MZ3ww2r9aDM+9qAxcXqQgJ
3jR8vLECOOk/0vFdYa87xAQ+2lcAbg8aT6+tsTGHLbWz5dv+/wFyzbez
        "]]},
      Annotation[#, "Charting`Private`Tag$61386#2"]& ]}, {}}, {
    PointBox[{{1, 0.}, {1, 0.}, {1, 0.}}], PointBox[{{1., 0.}, {1., 0.}}], 
    LineBox[{{1, 0.}, {1, 0.}}], LineBox[{{1., 0.}, {1., 0.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 6}, {-0.000765347695487052, 0.0005652956208763081}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8564532445549746`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"a6d4cd27-d589-40a9-818a-6c5d43753cd2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"allowed", " ", "failed", " ", "levels"}], ",", " ", 
      RowBox[{
      "shift", " ", "on", " ", "v", " ", "solution", " ", "through", " ", 
       "levels"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", "n_", ",", "u_", ",", " ", "p0_", ",", "newv0_", ",", " ", 
      "pyrfunctions_", ",", "threshold_", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", "updateValues", ",", "newVals", ",", "tableNewValues", ",", 
        "tValues", ",", "iterTable", ",", "goodValIter", ",", "nV"}], "}"}], 
      ",", 
      RowBox[{
      "(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<=", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", "n", ",", "u", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "newv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"iterTable", "=", 
                RowBox[{
                "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", "n", ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "=", 
            RowBox[{"pickNewValueIter", "[", 
             RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"Last", "[", "goodValIter", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.844362111190406*^9, 3.844362121675807*^9}, {
   3.844460247556864*^9, 3.8444602629714775`*^9}, 3.844465539884472*^9, {
   3.844465612855119*^9, 3.844465633559856*^9}, {3.8444656735616617`*^9, 
   3.8444657778591137`*^9}, {3.8444658333678555`*^9, 
   3.8444658639118805`*^9}, {3.8444659988895426`*^9, 3.8444660455485296`*^9}, 
   3.844466163146289*^9, {3.8444667480392838`*^9, 3.8444667624380555`*^9}, {
   3.844466856125552*^9, 3.8444668566340017`*^9}, {3.8444673031048746`*^9, 
   3.844467313894212*^9}, {3.8444673578772583`*^9, 3.844467358944499*^9}, {
   3.8444679481500235`*^9, 3.8444679562208757`*^9}, {3.8444680363683558`*^9, 
   3.844468068400166*^9}, {3.84446843803209*^9, 3.844468495636952*^9}, 
   3.844468729720846*^9, {3.8444692499050045`*^9, 3.844469250302681*^9}, {
   3.8445194746865516`*^9, 3.8445194778982077`*^9}, {3.8445196492146997`*^9, 
   3.844519681203652*^9}, {3.844519712403158*^9, 3.8445197430357046`*^9}, 
   3.844519790054809*^9, {3.844520712407405*^9, 3.84452075661621*^9}, {
   3.84452089517029*^9, 3.8445208997409673`*^9}, {3.844521591603115*^9, 
   3.8445215932704096`*^9}, 3.8445216953082337`*^9, 3.844521792030468*^9, {
   3.844523094337858*^9, 3.8445230949554443`*^9}, {3.844524092322474*^9, 
   3.844524096286628*^9}, {3.844528920321431*^9, 3.844528951245701*^9}, {
   3.8448659934702606`*^9, 3.8448659940698223`*^9}, 3.844868957719557*^9, {
   3.844869197092396*^9, 3.8448692031366224`*^9}, {3.8449553839120035`*^9, 
   3.8449553896059885`*^9}, {3.8450381992746*^9, 3.8450382174107485`*^9}, 
   3.8450438414452667`*^9, {3.8450439365198903`*^9, 3.845043941073431*^9}, {
   3.845044970362219*^9, 3.8450449749652495`*^9}, 3.84504790511629*^9, {
   3.845918420937899*^9, 3.845918426274135*^9}, {3.8460015072013903`*^9, 
   3.84600154481453*^9}, {3.8460015963097467`*^9, 3.8460015965694647`*^9}, {
   3.846023301078119*^9, 3.8460233050893593`*^9}, {3.846086750529233*^9, 
   3.846086761370406*^9}, 3.8460880921680574`*^9, 3.8460883495558047`*^9, 
   3.84609607933205*^9, {3.8551469962763605`*^9, 3.855147055060351*^9}, {
   3.855147178347909*^9, 3.8551471825240517`*^9}, {3.855164575841445*^9, 
   3.8551645787363553`*^9}, {3.8551653492241726`*^9, 3.855165368583276*^9}, 
   3.855165933372058*^9, {3.8551664788846865`*^9, 3.855166509561144*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8529680163947754`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"5fe77e72-3787-42b0-922b-c84a01b1a3a6"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-\
481b488627c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PyrFlow1D", "[", 
    RowBox[{"10", ",", "1", ",", "0.04", ",", "p", ",", "newv0", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, 3.8444602703342605`*^9, 
   3.8444657790598745`*^9, 3.8444658517453156`*^9, 3.844467337496135*^9, {
   3.84446810899422*^9, 3.8444681207636952`*^9}, {3.8444690196543484`*^9, 
   3.8444690537755437`*^9}, {3.8444692346263294`*^9, 
   3.8444692429257164`*^9}, {3.8444693087297163`*^9, 
   3.8444693418978047`*^9}, {3.844521729294717*^9, 3.8445217319462013`*^9}, {
   3.8445219790342903`*^9, 3.8445219906796007`*^9}, {3.844869018428*^9, 
   3.844869027052926*^9}, {3.844869216681383*^9, 3.8448692177693863`*^9}, {
   3.8450380595407257`*^9, 3.845038066363885*^9}, 3.8450449792125807`*^9, {
   3.845045066071169*^9, 3.845045066668535*^9}, {3.8450470968326883`*^9, 
   3.8450470996875415`*^9}, {3.845047134527914*^9, 3.8450471376710906`*^9}, {
   3.84504718148096*^9, 3.845047182877651*^9}, {3.845657156700632*^9, 
   3.845657158718465*^9}, {3.846001168170922*^9, 3.8460011691828656`*^9}, 
   3.8460233467870703`*^9, 3.84608841182693*^9, {3.855147076691366*^9, 
   3.855147115404775*^9}, {3.8551657085131006`*^9, 3.855165724973741*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PyrFlow1D", "[", 
            RowBox[{"10", ",", "1", ",", "0.04`", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.2816011660947526`"}], ",", 
                 RowBox[{"-", "4.718398833905248`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.25344104948527735`"}], ",", 
                 RowBox[{"-", "4.246558950514722`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.2252809328758021`"}], ",", 
                 RowBox[{"-", "3.774719067124198`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.19712081626632683`"}], ",", 
                 RowBox[{"-", "3.302879183733673`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.16896069965685157`"}], ",", 
                 RowBox[{"-", "2.831039300343148`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.1408005830473763`"}], ",", 
                 RowBox[{"-", "2.359199416952624`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.11264046643790104`"}], ",", 
                 RowBox[{"-", "1.887359533562099`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.08448034982842578`"}], ",", 
                 RowBox[{"-", "1.415519650171574`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.05632023321895052`"}], ",", 
                 RowBox[{"-", "0.9436797667810495`"}]}], "}"}], ",", 
               TemplateBox[{"67"},
                "OutputSizeLimit`Skeleton"], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "1.5`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "2.5`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "3.`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "3.5`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "4.5`"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.`", ",", "5.`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., -0.000018135344647783838`, 
                    0.00003627068929556768, -0.00005440603394335153, 
                    0.00020402262728756815`, -0.0007616844752069206, 
                    0.0028427152735401133`, -0.010609176618953532`, 
                    0.039593991202274005`, -0.14776678819014247`, 
                    1.1477560608099362`, 0.960459645698759, 
                    1.0104053563950277`, 0.99791892872113, 0.997918928720452, 
                    1.0104053563970625`, 0.9604596456912967, 
                    1.1477560608377504`, -0.14776678829393702`, 
                    0.03959399158963809, -0.010609178064615322`, 
                    0.002842720668823196, -0.0007617046106774622, 
                    0.00020409777388665336`, -0.00005468648486915114, 
                    0.00001464816558995113, -3.906177490653622*^-6, 
                    2.604118327102413*^-6, -1.302059163551204*^-6, 
                    0.}, {}}, {{1., 1., 1., 1., 3., 3.9999999999999996`, 5., 
                    6., 7., 8., 9., 10., 11., 12., 12.999999999999998`, 14., 
                    15., 15.999999999999998`, 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 26.999999999999996`, 28., 30., 30., 
                    30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
                    Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., -0.000018135344647783838`, 
                    0.00003627068929556768, -0.00005440603394335153, 
                    0.00020402262728756815`, -0.0007616844752069206, 
                    0.0028427152735401133`, -0.010609176618953532`, 
                    0.039593991202274005`, -0.14776678819014247`, 
                    1.1477560608099362`, 0.960459645698759, 
                    1.0104053563950277`, 0.99791892872113, 0.997918928720452, 
                    1.0104053563970625`, 0.9604596456912967, 
                    1.1477560608377504`, -0.14776678829393702`, 
                    0.03959399158963809, -0.010609178064615322`, 
                    0.002842720668823196, -0.0007617046106774622, 
                    0.00020409777388665336`, -0.00005468648486915114, 
                    0.00001464816558995113, -3.906177490653622*^-6, 
                    2.604118327102413*^-6, -1.302059163551204*^-6, 
                    0.}, {}}, {{1., 1., 1., 1., 3., 3.9999999999999996`, 5., 
                    6., 7., 8., 9., 10., 11., 12., 12.999999999999998`, 14., 
                    15., 15.999999999999998`, 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 26.999999999999996`, 28., 30., 30., 
                    30., 30.}}, {1}, MachinePrecision, "Unevaluated"], {}}, {
                    Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., 
                    4.859350952833761*^-6, -9.718701905667522*^-6, 
                    0.000014578052858501286`, -0.00005466769821937979, 
                    0.00020409274001901775`, -0.0007617032618566911, 
                    0.002842720307407746, -0.01060917796777429, 
                    0.03959399156368942, -0.14776678828698334`, 
                    1.1477560608358834`, 0.9604596456918059, 
                    1.0104053563968929`, 0.9979189287206217, 
                    0.9979189287206212, 1.0104053563968936`, 
                    0.9604596456918056, 
                    1.1477560608358846`, -0.1477667882869834, 
                    0.03959399156368942, -0.01060917796777429, 
                    0.002842720307407745, -0.0007617032618566907, 
                    0.00020409274001901762`, -0.00005466769821937946, 
                    0.00001457805285850114, -9.718701905667422*^-6, 
                    4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
                    3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
                    12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
                    18., 19., 20., 21., 22., 23., 24., 25., 26., 
                    26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., 
                    4.859350952833761*^-6, -9.718701905667522*^-6, 
                    0.000014578052858501286`, -0.00005466769821937979, 
                    0.00020409274001901775`, -0.0007617032618566911, 
                    0.002842720307407746, -0.01060917796777429, 
                    0.03959399156368942, -0.14776678828698334`, 
                    1.1477560608358834`, 0.9604596456918059, 
                    1.0104053563968929`, 0.9979189287206217, 
                    0.9979189287206212, 1.0104053563968936`, 
                    0.9604596456918056, 
                    1.1477560608358846`, -0.1477667882869834, 
                    0.03959399156368942, -0.01060917796777429, 
                    0.002842720307407745, -0.0007617032618566907, 
                    0.00020409274001901762`, -0.00005466769821937946, 
                    0.00001457805285850114, -9.718701905667422*^-6, 
                    4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
                    3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
                    12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
                    18., 19., 20., 21., 22., 23., 24., 25., 26., 
                    26.999999999999996`, 28., 30., 30., 30., 30.}}, {1}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-0.5, 31.5}}, {
                    5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-0.5, 1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5,
                     17.5, 19.5, 21.5, 23.5, 25.5, 27.5, 29.5, 31.5}}, {
                    BSplineFunction[
                    1, {{-0.5, 31.5}}, {3}, {
                    False}, {{0., -0.010002423724263234`, 
                    0.02000484744852647, -0.03000727117278971, 
                    0.1125272668979614, -0.4946371588255109, 
                    1.4886981804363568`, 0.9171676250478055, 
                    0.9171666817788758, 
                    1.4887010102431448`, -0.49464753478373114`, 
                    0.11256594092405485`, -0.030151591318943266`, 
                    0.008040424351718185, -0.005360282901145451, 
                    0.002680141450572723, 0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 
                    3.5, 5.5, 7.5, 9.5, 11.5, 13.499999999999998`, 15.5, 17.5,
                     19.5, 21.5, 23.5, 25.5, 27.499999999999996`, 31.5, 31.5, 
                    31.5, 31.5}}, {0}, MachinePrecision, 
                    "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-0.5, 31.5}}, {
                    5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-0.5, 1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5,
                     17.5, 19.5, 21.5, 23.5, 25.5, 27.5, 29.5, 31.5}}, {
                    BSplineFunction[
                    1, {{-0.5, 31.5}}, {3}, {
                    False}, {{0., -0.010002423724263234`, 
                    0.02000484744852647, -0.03000727117278971, 
                    0.1125272668979614, -0.4946371588255109, 
                    1.4886981804363568`, 0.9171676250478055, 
                    0.9171666817788758, 
                    1.4887010102431448`, -0.49464753478373114`, 
                    0.11256594092405485`, -0.030151591318943266`, 
                    0.008040424351718185, -0.005360282901145451, 
                    0.002680141450572723, 0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 
                    3.5, 5.5, 7.5, 9.5, 11.5, 13.499999999999998`, 15.5, 17.5,
                     19.5, 21.5, 23.5, 25.5, 27.499999999999996`, 31.5, 31.5, 
                    31.5, 31.5}}, {1}, MachinePrecision, 
                    "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-0.5, 31.5}}, {
                    5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-0.5, 1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5,
                     17.5, 19.5, 21.5, 23.5, 25.5, 27.5, 29.5, 31.5}}, {
                    BSplineFunction[
                    1, {{-0.5, 31.5}}, {3}, {
                    False}, {{0., -0.007460307100950703, 
                    0.014920614201901407`, -0.022380921302852116`, 
                    0.08392845488569542, -0.31333289823992955`, 
                    0.4939385004804773, 1.337578896318019, 0.8312105518409902,
                     1.3375788963180193`, 
                    0.49393850048047766`, -0.31333289823992955`, 
                    0.08392845488569542, -0.022380921302852057`, 
                    0.014920614201901354`, -0.007460307100950671, 
                    0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 3.5, 5.5, 7.5, 9.5, 
                    11.5, 13.499999999999998`, 15.5, 17.5, 19.5, 21.5, 23.5, 
                    25.5, 27.499999999999996`, 31.5, 31.5, 31.5, 31.5}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5`"}], ",", "31.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-0.5, 31.5}}, {
                    5, 39, 0, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-0.5, 1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5,
                     17.5, 19.5, 21.5, 23.5, 25.5, 27.5, 29.5, 31.5}}, {
                    BSplineFunction[
                    1, {{-0.5, 31.5}}, {3}, {
                    False}, {{0., -0.007460307100950703, 
                    0.014920614201901407`, -0.022380921302852116`, 
                    0.08392845488569542, -0.31333289823992955`, 
                    0.4939385004804773, 1.337578896318019, 0.8312105518409902,
                     1.3375788963180193`, 
                    0.49393850048047766`, -0.31333289823992955`, 
                    0.08392845488569542, -0.022380921302852057`, 
                    0.014920614201901354`, -0.007460307100950671, 
                    0.}, {}}, {{-0.5, -0.5, -0.5, -0.5, 3.5, 5.5, 7.5, 9.5, 
                    11.5, 13.499999999999998`, 15.5, 17.5, 19.5, 21.5, 23.5, 
                    25.5, 27.499999999999996`, 31.5, 31.5, 31.5, 31.5}}, {1}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-3.5, 32.5}}, {
                    5, 39, 0, {10}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-3.5, 0.5, 4.5, 8.5, 12.5, 16.5, 20.5, 24.5, 
                    28.5, 32.5}}, {
                    BSplineFunction[
                    1, {{-3.5, 32.5}}, {3}, {
                    False}, {{0., -0.24035058860513825`, 
                    0.47677072733561277`, -0.6909183167763259, 
                    1.5370962865130058`, 
                    1.5370962865130058`, -0.690918316776326, 
                    0.4767707273356129, -0.24035058860513836`, 
                    0.}, {}}, {{-3.5, -3.5, -3.5, -3.5, 4.5, 8.5, 12.5, 16.5, 
                    20.5, 24.5, 32.5, 32.5, 32.5, 32.5}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-3.5, 32.5}}, {
                    5, 39, 0, {10}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-3.5, 0.5, 4.5, 8.5, 12.5, 16.5, 20.5, 24.5, 
                    28.5, 32.5}}, {
                    BSplineFunction[
                    1, {{-3.5, 32.5}}, {3}, {
                    False}, {{0., -0.24035058860513825`, 
                    0.47677072733561277`, -0.6909183167763259, 
                    1.5370962865130058`, 
                    1.5370962865130058`, -0.690918316776326, 
                    0.4767707273356129, -0.24035058860513836`, 
                    0.}, {}}, {{-3.5, -3.5, -3.5, -3.5, 4.5, 8.5, 12.5, 16.5, 
                    20.5, 24.5, 32.5, 32.5, 32.5, 32.5}}, {1}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-3.5, 32.5}}, {
                    5, 39, 0, {10}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-3.5, 0.5, 4.5, 8.5, 12.5, 16.5, 20.5, 24.5, 
                    28.5, 32.5}}, {
                    BSplineFunction[
                    1, {{-3.5, 32.5}}, {3}, {
                    False}, {{0., -0.22308774579983137`, 
                    0.43913940162473, -0.6153198809250098, 1.029156464517585, 
                    1.7114263416514433`, -0.24326335292819795`, 
                    0.03370334639657639, -0.001226673198288193, 
                    0.}, {}}, {{-3.5, -3.5, -3.5, -3.5, 4.5, 8.5, 12.5, 16.5, 
                    20.5, 24.5, 32.5, 32.5, 32.5, 32.5}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.5`"}], ",", "32.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-3.5, 32.5}}, {
                    5, 39, 0, {10}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-3.5, 0.5, 4.5, 8.5, 12.5, 16.5, 20.5, 24.5, 
                    28.5, 32.5}}, {
                    BSplineFunction[
                    1, {{-3.5, 32.5}}, {3}, {
                    False}, {{0., -0.22308774579983137`, 
                    0.43913940162473, -0.6153198809250098, 1.029156464517585, 
                    1.7114263416514433`, -0.24326335292819795`, 
                    0.03370334639657639, -0.001226673198288193, 
                    0.}, {}}, {{-3.5, -3.5, -3.5, -3.5, 4.5, 8.5, 12.5, 16.5, 
                    20.5, 24.5, 32.5, 32.5, 32.5, 32.5}}, {1}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-9.5, 38.5}}, {
                    5, 39, 0, {7}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-9.5, -1.5, 6.5, 14.5, 22.5, 30.5, 38.5}}, {
                    BSplineFunction[
                    1, {{-9.5, 38.5}}, {3}, {
                    False}, {{0., 1.272958402720802, -2.3344459011810876`, 
                    2.718462532640782, -2.3344459011810876`, 
                    1.2729584027208019`, 0.}, {}}, {{-9.5, -9.5, -9.5, -9.5, 
                    6.5, 14.5, 22.5, 38.5, 38.5, 38.5, 38.5}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-9.5, 38.5}}, {
                    5, 39, 0, {7}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-9.5, -1.5, 6.5, 14.5, 22.5, 30.5, 38.5}}, {
                    BSplineFunction[
                    1, {{-9.5, 38.5}}, {3}, {
                    False}, {{0., 1.272958402720802, -2.3344459011810876`, 
                    2.718462532640782, -2.3344459011810876`, 
                    1.2729584027208019`, 0.}, {}}, {{-9.5, -9.5, -9.5, -9.5, 
                    6.5, 14.5, 22.5, 38.5, 38.5, 38.5, 38.5}}, {1}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-9.5, 38.5}}, {
                    5, 39, 0, {7}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-9.5, -1.5, 6.5, 14.5, 22.5, 30.5, 38.5}}, {
                    BSplineFunction[
                    1, {{-9.5, 38.5}}, {3}, {
                    False}, {{0., 1.2379205942170863`, -2.230578549931712, 
                    2.461714126563305, -1.7876693919047053`, 
                    0.8831622089692501, 0.}, {}}, {{-9.5, -9.5, -9.5, -9.5, 
                    6.5, 14.5, 22.5, 38.5, 38.5, 38.5, 38.5}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], ",", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "9.5`"}], ",", "38.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{-9.5, 38.5}}, {
                    5, 39, 0, {7}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{-9.5, -1.5, 6.5, 14.5, 22.5, 30.5, 38.5}}, {
                    BSplineFunction[
                    1, {{-9.5, 38.5}}, {3}, {
                    False}, {{0., 1.2379205942170863`, -2.230578549931712, 
                    2.461714126563305, -1.7876693919047053`, 
                    0.8831622089692501, 0.}, {}}, {{-9.5, -9.5, -9.5, -9.5, 
                    6.5, 14.5, 22.5, 38.5, 38.5, 38.5, 38.5}}, {1}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], "}"}]}], "}"}]}], "}"}], ",", 
             "0.001`", ",", "\<\"ConstrainedNewMethod\"\>"}], "]"}], ",", 
           TemplateBox[{"29"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{40.2, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 29641181531971735609, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.800000000000004`, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 29641181531971735609, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.2, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 29641181531971735609, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.400000000000006`, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29641181531971735609 === $SessionID, 
   Out[96], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8564532475966916`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"bed41ed5-59f3-4a10-b189-a957de0ba505"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{"10", ",", "1", ",", "0.04", ",", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445219867175174`*^9, 3.8445219991011286`*^9}, {
   3.8448692242987785`*^9, 3.844869225296276*^9}, {3.845038072374775*^9, 
   3.845038075093134*^9}, 3.845044985460975*^9, 3.8450471983336673`*^9, 
   3.8456571610417123`*^9, 3.845657206167536*^9, {3.8460007155152283`*^9, 
   3.8460007186018267`*^9}, 3.846001175303458*^9, {3.8460016281623354`*^9, 
   3.846001630633064*^9}, {3.846001678204561*^9, 3.8460017159634113`*^9}, 
   3.8460233480474925`*^9, 3.846088415138697*^9, {3.8551471267241583`*^9, 
   3.8551471294209414`*^9}, 3.85516573919258*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.014752671789558152`", ",", "0.9852473278722887`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0904302266968016`", ",", "0.8106402764656886`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4999956501685383`", ",", "0.5000043462330201`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9075208609721366`", ",", "0.09247913902045875`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006090277542809421`", ",", "0.9609147130248105`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0025461896104704462`", ",", "0.981147607685414`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9838337214228655`", ",", "0.0011736180874535706`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9609147130244269`", ",", "0.006090277542875355`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10084735803675855`", ",", "0.8060551862620224`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5000043498622665`", ",", "0.4999956482822541`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9075159965966688`", ",", "0.0924840034015555`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006412848009743779`", ",", "0.9589507874495832`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.006412847855347234`", ",", "0.95895079986752`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9852473282104423`", ",", "0.014752667079686352`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9852473329203136`", ",", "0.014752601479702372`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.856453249825952*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"44492fe2-73aa-48c5-ac06-c05533bf4a00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "10", ",", "1", ",", "0.02", ",", " ", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "==", 
    RowBox[{
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{"10", ",", "1", ",", "0.02", ",", "p", ",", "newv0", ",", " ", 
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
       "noteBookMode"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445221438362274`*^9, 3.844522149421374*^9}, {
  3.844869258717738*^9, 3.8448692675606394`*^9}, {3.845038079850918*^9, 
  3.8450380918328047`*^9}, {3.845044990996796*^9, 3.845044992268646*^9}, {
  3.845657164114723*^9, 3.845657166006479*^9}, {3.8551506255590167`*^9, 
  3.8551506328501463`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{40.2, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 29641181531971735609, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.800000000000004`, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 29641181531971735609, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.2, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 29641181531971735609, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.400000000000006`, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29641181531971735609 === $SessionID, 
   Out[98], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8564532545097876`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"8ca4ffc7-2d5f-40bb-9266-258a057d7133"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"27418d46-f597-4820-9d54-\
72d01137cc93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "List", " ", "of", " ", "initial", " ", "values", " ", "we", " ", "are", 
    " ", "going", " ", "to", " ", "try"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", "newv0", "]"}]}]], "Input",
 CellChangeTimes->{
  3.8450450496882987`*^9, {3.8450479351213055`*^9, 3.8450479543324203`*^9}, {
   3.8460881550816407`*^9, 3.84608816086804*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJzt0L9LAzEYxvFYai1SynEtbg5u4qgOBYeks4uIf4AIbmJnR8HZze3Agj8G
6eogVBIKHQSR6uCoLgqiHBVBOxxF5Z7nIG//BQulfPsmIfnMbDRWN3NKqbXf
79/v3vTFsxu/s7Pbxx9Hj6GbW3Q367WevUwqnztJ4JoH+42x+2t7OjXxejhf
du+dqF5furK3Cy9vy1uTrtY/q+w2uzZZ6cbfJwWXntfBeTnsb2P/0Kbrz7H+
y6bzFuYxOkI/WCU+mGvMNfajY43zNc7HvI35UON+GvczuD/WFwzep/E+g/dj
f9nAR8PHwA/nhYaOdKUjXelIVzrSlY50pSNd6UhXOtLVd2xljnSVnr5jlDnS
lY50pSNd6UhXOtKVjnSlI13pSFc60jW9ZdX5tw5FB6JLooui86KV6IFw6ot+
GnEUcy32ix6IVsbPvOii6JLoQHQouio6+9+JfaL/Xf0edf0BxTd4JQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.856453254618027*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"cfee87a4-8fe0-4967-a70b-f8e0629bb96f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{"1", ",", "0.04", ",", "newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]], "Input",
 CellChangeTimes->{{3.844460992649581*^9, 3.84446100281861*^9}, {
   3.8444650287524195`*^9, 3.8444650299651155`*^9}, {3.844465076147544*^9, 
   3.84446508980591*^9}, {3.8444651218401146`*^9, 3.844465122987401*^9}, 
   3.8445228563042336`*^9, 3.8448659693383055`*^9, {3.8448692845010266`*^9, 
   3.844869286212863*^9}, 3.8450380999025164`*^9, 3.8450450085264883`*^9, {
   3.8450450881570735`*^9, 3.845045099085638*^9}, 3.8460880491262136`*^9, 
   3.846088254265647*^9, 3.846092237210523*^9, {3.8551660290499353`*^9, 
   3.855166031756174*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$70123#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwU13c8lV8YAHCb7D0zrnlxjSRJes8TERpURmQUspJkNESyZYVkqyirJHuk
7luiIYSUKJEoJK5NGb/395fP9/MeZzzPOc85l+R87uhpBjo6ulZWOrr//87V
frtNR0dDobZcn1hXU/dka/wb9ZGnIekdkbIkynlsb6mI6qAJDeV8fVDEP3sN
S861qG9MIdond+/bE5yM6QqfXVeqo6FOg7/Xlo+mYcM3rhumD9DQEXo6uYNc
mZhGRPN7P7lZpB7lavhB7Q72ae2b0Pf9s6hXMjXe2Cwfu3rh3wlz71l00vfF
+vJMAdbpqT2uWjuL7LzPdQ3xF2HeFkV0Y8Zz6LvN48gLTx5igm3NxsfOzCGd
qEoWVaZHWJPhUMKLG3OIh7O1yWBvOca+U1Ts9uc59DYe4vgOVGBVFdpOnOtz
yIv9bKVIXwVmp3KkMIg0j5zLe7YKOFRipZJx22y85tHUt1UvNZsqzCKj6GJr
0jx6Wywg5/OuClvhfflse/U8SuMWafu1qxq7GzfEWNA3j85tqzB7WFCNmTCt
mfKuzaMI9fgbb5lrMFqIaPJVmQU0LWcZccylBstY1v40tW8B9WnU89o11WA/
J886v01cQI2MawUyJ2qxJNe4kp1VC2idVSeE4V4ttuNb0XThpwV0OOdJzv2x
WuyrzUttwX8LqP/LjgkRuTossnsoKFx6ET3/dczi7Ik6jHJg7TnNcBEpDz5v
qk2qw3pbRFmdPBbR9gGyMMOzOiwY23GoI2ERsa3vNHP5WYfJNRy5ubtyEXW6
ZBtMstdjbdt8+ks/LqL7lLWJYpV6zO9hnLTo30VUGbhF9ZFRPSauUHw6WmoJ
STj40Njt67Hm2y8fLhgsIVb6Pvmes/WYl+jwrLP7EsoKnakSuFKP8aWu7eyO
X0LzSy5RwxH1WAOH2FVUsYQgajjaNLYeOxm1o+VR7xLKN+ErcCLMtnmEfevq
EtrtVPBie2Q99viSj0Wc5DLS+oW6PhH9Wc/Fpa/sXUZlG7cabM/VYxtnir+6
uS2jNy8tTnc41mNFYy9lP8YtowbLrS8MzOqxw07DHoaPl1Ha+/t1bdvqsaXP
a+WVH5ZR9NF0zQtC9VjeUbFF6ZVlVPkvV8x6sQ7b175jd9LWFbRnwtX+Sncd
NmV0NGwNVpDZruwfS6V1WBru89rr9Ara2DKR1X+1DtPfFc/Vf30FRV1e99S2
qMNGq4qP7S9fQSuFEZioVB0WT2nJqu1ZQTGPlBjSx2uxAel1hVSJVeT/6jL9
Pf9aDOv9PsZruIouKbIzflWvxe7Fviq84bWKXi9H3nX/WYN5z95QSGxcRb6h
Gr/azWqwrsKAMY7vq8h7w7ase7ka22FnWxjH9hf9DnU1Cs2vxjaaZRVibf6i
agkeVdXfVZjzRdYxltC/KHuj9KZlfBX2WnXqflTRX4QFirOFkKuw5LRa+YjF
v4ju8fmDJLtKTNbNRP7qzX8Iyz55S0HvMRYtrja69uQfOprosF3GvBz73cl3
/8rIP9Q79eXNeadHWM3OL3KXt62hTAETs1d+DzHjLT5yAe/XUPLsgbrfHsWY
Z9lNWS+ODcQzP2L/4nwe1nny0si41gZyvqLYsqmeg2kJORS4222gU7TWLPPx
TOxviKLs6dINpDQ2fS7YIg1LMG8kndy/icYbrnfM0kVjxy+f4324lw5i80NV
TKxDqXEfTvl6WdHBXUZG5kKHSOpTNcsuZU868NhhL6bPdZ1KGtFNLkmmg9ss
/JdCNFOok2YMvEVDdOD6g5ww45JNDd56iyc/hB44O237RTYLqSX+5d58yfSQ
9ib8oeLfImpv2+u3YQX00DnPw6U/V0xVu/w3wvk1PdwVbpSc/lxK/fbRaUWO
jwEOyi91ZQY/orKrXbZKk2OAoN20y8z25dSdkalVTDoMULTMP+u08zE1WavV
e8yOAS4ezF4o8a2g7r2h8r3oPgPs4DhYrrxZSfX5aYiJ1DOAxAXDiYf2VdTs
PQ45MW8Z4MbZygeZ9VXUud83rDymGcBKuiD5zOlqqpRhadVnOkbQ9ljPVW+o
ph7IbuYxFWCEZ3bXNoXYaqj3TRbfKusyQp9teTrHnRpq1x1upWwzRvizsK16
aayGurakFMnuwAhU66RFXLmWalVoh/0OY4Tb8eFNRcW11PA1/5wTaYyg+WdO
Mf97LbX8WOLKuyJGiNH6E7NdtI7KwvC8quwdIxRFaf7tD6qjatn280h+YwQa
6eh8W1Ed1alizjuRxgj8eHkl1/s6agIrZ9s6AxOY3NcqTZ6vozY4Kij5CDHB
T9G2QwaC9dTRWizymxITkF1PCfBtq6fych3/fliPCQ52jJ79bVpP1Xc9j+EH
mSA9B7pxx3qqZ1NcjoYTExwVPlUZfK6ems5/f+XOeSagRmqF8wbXU5s9n1nx
RjKBonp+vWdkPXX6+aeqa+nEd9us1gux9VRxURrPbAkTfDrMKqNI2PjclrOn
mpigwrJPzy2inur/Sratu4MJMqsWrysE1VPvSuorGQwzwfPHh8OOetdT2wOs
IqvmmODSzc60L7b11JV3Pt9lmZmBvfCU7mODeqq8XCx2U4QZ7qouDDUp1lMt
gvJzGFWYIdXHb3OGuZ4a0v1kxV+fGci1b9j1huuoD8i9VqOHmSHZ+EdgbG0d
9VPonyrLU8yg6FVe8zaqjsrQx8Lb6k+0dxfePWVRR1VXlzm7I5oZ3kSyhnwT
rqPaRe1qK8xkhpPsPtNJfbXUmK9HlYQfEu2RDuNUai21Zrt3ZPQzZnDzOqgx
alJLHY6L+r70nmj/Iffn6dUaKufIbcx9hBnsXgjkOd2voeruasjpW2CGzCt5
r3DTGmrKr0mrBjEW+Ho+2+BsRDX1cw4u3q7KAj27P7q/FKumylikDQ3tYQEL
O54bAQ+qqBUNezxZnVmgiGUDL3xSSV3x5leXCGCBox20eia9SiqQfs2pR7OA
sZ1TUnB1BbXrenKw9QMWED1/3G2C/Jgqip3e6/WUBa5FpQwVLz+inpzbxXK1
kwWeb2nqFHhSRqXZ/bhROMcCukafX58Te0DloejcW9BjhUx8i3Y2dp9qPczu
wXaIFWLj0s4oFhdQb6cNUbY6sQJdAn28DUM+VX09ts4wghU0KUsBJjI51MOd
X96mvmOFu38nHiiIxFLTwyuSigZZ4dpj5bDljVDqN52oY09mCJdiS5yNPlSf
O+qD3wXYYPCznHPgPn8s0TeMpmnPBv6pJdaCpzOwXnnr2n0+bMAcwcdKb5yL
be1XCTp+jQ2qBqjPybfvYmV7exmv3WcDwZOcMauVhVg7v5LI+yk2ePozy/il
VAXGUdu+52zIFvjuu+TepdyEHfXMZwi7sQUGzNn+9Cc/xbIlL7xOy98Cm8PH
bvOtPMNUoqWPPG3dAutkRq9h5+eYmY2fKwc3O3Svnf18XeUldn1VJL70Njt0
nNhOyQ55g2m+60owqmKHfUfObW+lvMU+5V5P+t7KDg9nXzOtf36LycK/FLE/
7FDMu7yMK73D3vDV3Kyl44A3Id9Tv799h5374X3riCAHyPjzTup7tGNPo79l
Xt/NAcEfXPCOzA7M+XhGtoI5B4ip5dZlqXRibCoWuS+cOYB7Cuzb6zsxq44X
d1avc4DexeX7qS/fY2u3g/Jv5XEAS1bSyW8yXViB7/Z72yo5oCLjN7bHoQub
Figs8vzMAd6/MsZ8OrqwtDGHEuYpDmjTOD/JSd+N6dULP8jf5ACm2BLd+G3d
2HDs+4d7BDgB/x3u896xG4uxi33Ur8gJ962NVPDYbkydsvdxoB4nWLdos8Pj
bqx3fbWC7zAnhGiml+3s6caC3ldVPTrFCdT08sfxs92YTP6ZGtNATng211xJ
4urBXvnJ143FcoIciB4Zku/BvPcN1oflckJa0LzqA90ejF84vVGyghOe5GUN
u5v0YI2/Djc1vuSE7YXmXBvHerCTjazPrPo44WGCncXREz0YS/xz6uwkJ7wx
39xv5tiDldlffp64wQkqk+Gp7+x7sKPqWs3K/FwQaqPS2WTdg61sTr5sVeAC
t5t6WXQHe7Db3fdaT+3igtislZRQ/R5s3z371+sHuSDhdKm1FLkH+x0g9Dbr
JBcIz6dENXP3YKnGnW07Arigbc/y0yO0bkxXNKa9O4YLLPdK5VS2d2PfJlDn
2RzCqweor+91Y5FNK++3POaCgFOtLZcDuzGVxMruwmYuOB74/uCjvd1Yt6PX
h72fuKBQ8/HCfrZu7JKm3MfBCS7YSCq103jbhUkxfP10eZ0LeBMYJU0ju7CW
D2mfhfi4IUyOYSBoVxfmVXhooFKeG4bze50su99j9Sb44MQBbuhsEEaanp2Y
o/iloSgnbrjkkvvbsKADY5rS/E7y54bjIpJPQzvbMYsbBaO22dwwfnFnU+5m
G7Z08sTPxUfcQBYYcxZkasPytATHU15ww9O0Wpnvf99gkx+jfr8d5wZj8q+u
IuorLLkY+3N6jRt6yPb6OvGtmM7l5Wl6Xh6YnpKo2G/agkVs9ZzbtZMHVnLv
FUhmvcC2uhxcLY3igfYjHwvvMtZjT7dRVpYyeIBO4kB97o9qzIGOc9nwAQ9U
4KL/rhVXYLfz3i0MdvIAb7fEqlX1PYzXW2GFjZMXnJ8ucDFGpVFPHrt1UUOI
F5L5j3bYHSmgVugxL1tJ8ULNTE3GofQHVIstY4sFmrzE4WFhJX+tpaYU3Z/X
t+IFrx1vax2ZW6gjiYL+Lo68wE63dj/A5RVVKzBy7ro7L3QfnpReffuG2mPo
OvvpMi/c/WTV+eJRB5X/u9yM721eyEq8eAQNfaCmSdybvP+LFxa9Hp9h3v2N
Osog4PWOxgt97kn0R2OGqNqT4ROzq7xwg0bP5OQ5TP3Y4DyOcfJB6+4K3b6q
71Rha9mfnzX5IPnpkWsRu0apbntST2/u4oPo92tVVX2j1Dp5hjEFQz7AzPNL
VAPGqDbz33/4WfGBYZnaiE3xT2pmcv53ziA+2BtaWy0/N04dv8h3ansEH8jm
JMqpXZ2g6jqFDdsm8IH1Ua5Tu1gnqf1qp4aKbvPBXKmd2ROe31QVoW7HjmI+
oP/04dJg0m9q0Bp8m6/gg1s1B4JOsU9Rxd/JDMJLPqDeTfo3vjhF9apKtndv
54OlXcwb2af/UJ9k0X1N/MgHW/K6P7N3/6HaeQwPDPzig42+5q1h2dPUB+YW
dvSzfBC1+yabzso09a/O836lv3yw7RpvD/ORGWoO893PAZz8sKPFg/HY/Aw1
+1/YBSdhfvjuGPhSg0SjZs+6CJrJ8MPzzc1zAUY0atYvoyptFX5QarPNcnCj
UTMHlSyktfkhxzD2SHcE4Q9bprdg/JA9m/ygNo9GzXj7O35hPz9k2l6uo1XT
qOl4h/LQEX4QpN8f4/GKcO3j129P8BPvxU11xo+EH6acrjnNDyHyJXjREI16
K9+f8c45fjj50PjArp80alqGVf71y/xQGTP84+444cSdKCCCH6axKzkv//8e
ITbomMgPqdZbI2OGadSbl/8FmWbwg6jl28c9RP+p5wZFtfP5YeNpjGY8MX7q
abxO6iE/PBV2EM2oInwi33JLLT/0/Dx8+WsWjZpyJGJunsoP1Crn03uDadTk
/aeTv73hh9XNvOmHtoT37Fd/28MPf4+xKDFo0ag3tiu3V3/lBxPtfBkVZho1
SZnD6/ZPfqg5OD4gUDRDTZL+w3qdxg9GTlsQz84ZaqLQ+0L/v/zg8LAihf/Z
NDWBo9LQkUkARnZPLE3sJEx/87sJtwC8lKCmnir+Q41fDgjdLioA3NZ61404
/lDj/lhLSskKQMWix8Yplylq3A/dJjaKAKQxWwlHPP5Nvd4vbju/QwDakrcs
BsxMUmNbv6W9MRWAr/tW0v+ZTlBjm55rVR8TgPsRJgVk13FqTGVBV56DAJR4
JjLZnP9Fjc5z4/Q/LwBz1iTHcZcxatRNkwcOVwRAJyA674fJKDXyuoqJSZQA
JLlytvDK/KBGBE5HSGYJANNkkfW2+8PU8DNdJLZ7AhCsck8oKP8bNfxUFT5X
Rvhqqrf14BfqtUMX/r1+LgCalzJY8H8fqVcVNvz8xon1qJrlzNx4Qb0qMczr
MCcAdxk+aAc9rqGG8DWX718TgGups89fL6RTg9ejJrfyCkLtc6NXLOWN2OWP
XM6vdwpC0SrTaHtEHxYQJXlka4wgHNyS8YRnaRqjVxks+JwsCPPi9Q8MntCw
pM7chbRsQRheTHkltTaLlYpszeQqF4QXj1yVDkYvYN9KxYc2egXBOYWMBTxY
xfZ3ipz9LisEaq+oBUM0etTr10fNowjBtpf8W9mTGZCzSAavnY4QNLTpNxSr
MaLgk8I1PaZCsJz6dznShQlVzAn+e+krBOzI78/LGha0J6P34LUgIXjd+u5j
hAEratuddls/UgiY49ukTDpY0VikgEFthhAIn7lzXrGfDYmL8F8vogpBfP0/
P51WdlTc1D3g/EYI4jx6G4R0OJD2yRSKdI8QiCSQ8uIKOJB5KW9XxpgQLLTQ
DYec5URfD3WRLGeEAIpZku6+40Reczf8eVeFQCvd43K+PBeK3M0jcp1TGHq3
k4ujX3EhvuFODyNhYch4vKrLw8ONbkcmPaGXEYbVbu5i6hFupKp8mJOqLAzX
wkhi7kncqKGDyzFouzA8uv+7bqCFGxn5dTzW2SMMLLJKJb8XuFGPcCL9vLEw
MA4nCnpL8aCTTQePPbYQBp3Wfjn1vTzojxNn4Rk7YeBvaFlndOBBQUztS0qu
wiBzh60NP8+D2ErjTUbPCsPwSaeK7aE86NahA9l3LwpD/4/wz9uieJDsHPuU
fZgwRHGreSVE8KDH6W17xOKFweu1SKJQEA/S3x1342OaMHAtrnnc8eBBb4dM
v6fcFoapkHSFtcM8yDpyy/bDJcKQYHJ7cp3Cg36Q30ayVwmD9+7OoQsMPMi3
I/bTqyZifnuGKbvec6ON8ybkiFZhWNmetCp8kxvFC7MFoffC8JAl9ezIIW4k
2vT63b/PwvAgp7Di7CYXKnKKkWwYEQb3/vDJuGIutJ1p/7mAKWEILfphwGnM
hZ6XsLzQXBIGj4mw7y8HOFHbO9sUo01hME7OVK0j8tc7XXbKjk0EzEX8SX3L
HOgbH53WOT4R0AsrSaS/zIEmtI8xRIqLwJOu93q8s+xowaaoJ1NOBArYrs0P
OrGjjaDVgkcUEShXtQg3at2C+F/cMezDRIAfKzt4yJ8NbR2dE5jaLwI/tdwk
7zWxIkVW41G6IyLQJpk7vb7KgnYfmopUcRGB7OG+p2rHmZGxL7JC3iKw8YzD
vOEiE7K4mapgGSgC4bkinNUJjMi1X/dVSIwIRLoLbHNNp0c+a/HpqckicMF2
m3pXHB26JD3kVpwlAl3lLPQa4xtY4uko1u6HIrDCiG4bm/7FMmM/943ViADZ
Q+OFXt8yVvBQteTvMxEI+It+NB1axOpmu03ku0RgPHh+7sLPGey5oILYrn6i
/dK6hpnhJNa289LEoRERoC01CI76jGJDIVJxFxdE4Jr/qXXNk10YG/uZd22i
otD+7tKmT9kIlV+NmjNEEoXleRELnS8T1K0WfN4LKqLAvkje2ZFNo25Lr+eU
2iMKAwOiUUZaK1Q7WabD50+JQt+eS0OpEkx4mV5el8gDUWBdHBp3K+XH6xxo
dynVomB9htY21SqAP79meH7vU1GoXaQ3uPFDEP/4aoLvTKcoHKv9pyZIEsE3
juoco86JwpkxvtqoPAnc/Mz7j667xaArl+lOgYYszpaX1rLHSAzcj4ra9LyQ
xZs7bauFzcWAag3PRI/K4dpao8lvnMXgavPhMF1veVx8deUAJU4M0j1m3KbC
FPFeFaoec5oYRH/U4P67qYgn2kcof8sTg8OhMdjTICWc7jkXa3KlGLyk21B6
dJqMP5ntWfRoEoO1m4M2ER/JuL9c5ujeVjFQ/2K1Yb9XGf8ZLds8/1kM3qyl
5HpyquB3G35VtI+IwbNUYY59Z1Rw28myO4VTYtByrHbQt1UF59/ql3R1SQxq
8jrfvxRXxdsP7QyxoRMHp87mXN4zqnhU6NoZTXZx8Dec21SpU8Wxyhd2WwTF
4Y3ds5qf/1TxlZFo0xFJcZD1i7wgok/BKwUP6jYpicO+X8V0KRcouJcxn1La
NnFYEInlVnpIweUvfRI6u1scmJyjTjzqp+CDpTlMxkbioC5Hd2+ZXg1P/3Jy
XspcHPQbj9/tl1PDLbgUR5aPi8NG2Ay3ElLDt6DfXV3O4qD5Rf5B9TE1vNm3
Ai/1FodsWVu1Y6fU8OCCwPLwC+LAWTd1rN9dDdfp1cs7cU0cTOZRvxjhGWa6
BO04ceDVrb407qiGl+xsDeJKEwetkaI/ouZquLNnnOfPPHHwMb8yf3WnGr41
x/w4XiwOyYPJRtMiavjHdsH9mZXi4DC5/44ejYInbfTvON8kDvc+0D3d+ZyC
m2jekTdrFYetyxI2jTEUnMHZVUDuvTjcrFpVvWlMwZtuKjOsfRaHAZe/i5lr
qnhA6zStd0QcKjyu+t4uVcXVl6uHHk2JQ4/UT+uLh1TxX+TLndFLRHxHU1yX
fxH5tMOeOdFJwEHhEcu5Syq4APVNNp+gBJzWnW0rDlHG22cSr09KSsDvH76v
t8yS8WjSsUsvlSTAwV84bYcdGUfHRN1zt0nA430GUxsNSvhK5KBV4G4JiKu1
jN/FpYRX1RXsO2wkAUVy5ZRGa0X8zLj7diVzCZibKo8/cksB/3ZgjrffWQIm
Wcm+ErNyeGZI/WaltwSIC53yXuCSw488Dp6OuyABmQvNAjukZfEWftZ2/TgJ
MMsPP6IvJYNf3df+RChNApgsDZ5ZikjhOy+klE7nScDJlQ9st/sl8Af9EjF3
KyWA9nOZW1hABB++HrDQ/YRYrw1N4HqtIC6i13GKsUUCKuj9Nk7t5ccjs6/q
u32SgPHqzRdmZHbc8cT3WdV/EgBZn7yFv/dT0zj0nByYtkI4xTwxoLkPe9eU
2p7EtRVmv42K730yh+lu3Vc8K70VXnIUs1c+ZkH8g0X29fu2guT45dyB22LI
JHHz7fihraB3rnHS3UEShe45vlPcZisIW3+O+XFLBk3lbeEP8dwK3Jd1m39c
lkevHL1fGyRthZ7K2Q811ykoaHibVmcf0Z/Tak9IqQ6qSI67szm8FWplPFx+
NexEv+AH57bJrfDqigYv/xtdZJmf9uvm2lb4WuI3njeqh9Sdl3NtSZJglhBY
v4MHIVd+C/Z4FUn4OqKsVMwOKKe55OLT7ZJwePmcSkwCIDY5u6PSxpJQbm/9
Z3fCXjTy4ynrmJck0PueuvDuoiESTRMKFA6QhLy7Dqlv/hgi830+I/tDJGHR
/8uNhFP70NP70s8e3JAE0ePbWkb2GqE5y0sqXzMloVggoHVbuRFSZu7O4CqQ
BJ/XXHteiBij9NPhfr41kjDjLSEvMWKM2oW+DOU/kwTvLX8dCgz2I8ZX2w99
eCUJBfNM937c2Y98FceUdPolIYwl8AeXhQkq+rTnlvuIJIz37yutLjBBg9Hp
DFm/JeG6hTBP4qwJMvu1f/DfuiS8CL5pbhlhiriNr25ssEgB+4uNV40tpqjn
fo00A68U/OIgaa/Qm6F0xt/ALCYFb5JX/8zomaETziRnNlkpUImIORB2zgzJ
vLCJ4FCVgivCbfcS7pihUemk+9zaUqB69fmhuTYzVHK1pZVvjxRU/PG8mzpr
hrwH//4UNJaC6MzWuUMCB5Cm/jY2UXMp2FrVk8OkeQAtZLsrSxyXgtGzyXPp
+w+ghtU8M6lTUmC7uX5ozPYACjnee4bkJQWTWeLMXW4HkEE9e6K8vxRwnh/z
2elzALEI7y1XCpYC3QaHkX/nDqC2gIvvVaKkYLggvG79zAGU9OERTS1JCs67
HjOQdD6AjmqN8m3LkAIvzfdf9Y4eQMIp4tu170rBTr3Frzr6B9DAjIXlzlIp
sKltyZqVPoDuHI4J1KuSAs2P+l4H1s2Q66Nn6XuapEC/w75QvtcMkTkX6qFF
Cv52yRU43DdDU14q/YYdUtAtkFL/6awZqnh78q/xJynA3t7T99U0QwHkDAmz
ISmokT8Ryz5linRjOvQPjUvBHdu62ai7pmhtjNHRYlYKwnJq3jcfMkUv9umF
HvsrBfWSVpfz501Q9D3fu9aM0vBaIMOIIZXIL0PxC1tOaVCvvBzfSjZBPbgA
00kpaah8LDm8gO1H6VJmCi5K0tBwcTCXRDVGdiHXjN00pWGoRk9Da4cx+qH3
J9bbQBr22bdpXmM3QiVZcg/OHZAGb7V/h6567EPeK7bv/CylIXXvq9zvzwzR
Qu0rrstu0hBLR1a1PWyAGgTX1YPPSYMu/zNR9et7UbD/dovQS9JQrj1xc+IJ
IOZtd1Oj4qSBMs8ipcqMIeGyyyKp5dJAZ3pMNx3TQQPsFbq36qVhqvHFQpOE
Nrrt+dM287k0lEQc0a8Z3YaUlI7l3u4hfDnPFPNTQboFFNLDJWmQMc4UjVdi
RWt0Lgblm0R/3mFO16iN2PDj9srjTDLwWrS4Ing3C36fm/HDCS4Z+JqZ3Oma
QsLV2s8JOUvLgNRAQ+dq2Q78J8O+WiN5GXjBWfiM124XfneXqJWysgyIHd7E
ronuwQWLn6fRtGRA6XV323FnA/xvGJ9gqLEMmLNk/SmzN8Pf7Kzmzz0rA3Qf
fzWPh1vh4T4xVaF+MvBnSttpW7I1rl944qjLRRlYkXj5VDTPBn/Mz5SqEiYD
svLtI7dqbPH0P5Z8jWkyIHi3aoqtxwF3vbfE86lJBvaXndt3utkZlxpoe9z4
XAZ6BjjGzbVd8M+8d8zzWmXgmWOOXvk9F/zA1f03XN/LAL+YMp1GkCvOVCuh
YdIrA7Uls2vM311x6u+ZTtV+GTAAg6eN+07jWraZ3PMjMnB4F2+6DIMbPnXD
u/zTLxlgX7DRiz3hhhe9gsNPpmSAxfNpzY5KN1xMeyIxbEkG9mn7oncW7niP
1zO10/9kgPrjer97tjuekJ/SYUJHAiY6K4fqIXecjkePi5edBNrb0nY8t/fA
nxhxP5rnJoHjnR4BnTQPPCB45GCfAAlqKDYzL1954OrVdVNPREkwwMzKtW/B
A/81EZdwW5IErjavK5O3euJ3ZZwo4bIkWD4UIhuJPHE7m+3tp5VIoCXMfX/F
3hMXTGL1NqWQoPar45U3AZ54Z8sXDrVtJBDstPzTEe2Jx/57/JBXhwS/hT9i
P1I9cQOtyAMLeiT49qOlZiTTE1/zOP67D5Eg9tSWtCLCtXco8U37SBDxNIa0
hWjv84lO9Y4pCQJICgWjkZ44metjW/hhEkw/fWUncN4THzEs9XI7RoLkpiPJ
56w98dygEHaz4yTYNH0Y80HbE0/zzZnotyfBk8d0PZw8nniCW+Mbz1MkONFw
Q3lxxAOPtO8rXj1NAvp6j19nKzzwkKOL0de9SNCykeN6/KIHfsFEwE3sHAma
R3b9vbXTA/fBthmV+pNgZ91RerZZd9xN21x+1yUSbGtf6rlxzx13VDnL+DaY
BL0Xdd5wm7vj1jLxI8fDSIBxyuq5zbvhh4VLX4xHkSDh69uwi8luuDHn67uX
4kjwfTe2IqfohiOGsVC2GyQwCLmxdLDmNK67wuCUeZMEE/MdHz/oncY1p2Uw
ciYJuOa3zGQ1uuIyA/Zr+/NJwNvXtN3zjgsu2hX0pa+QBKrOR/l2sLjgvK8y
n7g/IPLVrJTY6uqM01f1XoqpJoHZoa6XjWyn8L/FczYiDSS4K9WiOXzoJD6X
x7uz+CkJ2OR8IV/QCR+5fnDxVSsJ6CxeflTuPoEPhHr1WrcR8flxjmYtaIf3
BMZW/+wkwfFjdz7LGh3HX55qOc/ymQSXHLcM5PtY4vd36U8bTZJApkx3F2/t
fjxXw67j4zQJPk//2DPNaoinKVwqOz1P5C8b2/R01cej+Gq8otZIADvV1Uwp
MrjbhOqvFm5ZcGyw/x2vZYAch0xfWQrIwpC4XvUoyQRZf3QvHBUh/EZNjEf7
MNr/4p4LE0kW/j44rtNvb4XIWRLDhttl4XXqz6YtxqeQzI1d+IedsvDwrZsY
3T9nJBplc9tFXxbE9cRqRWpd0ZbzN+0jjGTBVOIM/3cdDzRpwtHfbCMLJ+Wl
LW1dz6FHK3+79wbLAsd+q3oX+otobfHI8+1hspDA8F4rc/0iOjhfUq4QLQuN
Xw8bZKxcQlN/rOO3JMuCogiloXsiCFF+VO3rvicLB95P6kHlVRQ8vGX7yxJZ
yCqVS+3OCUXtgydJtY9kYfRKsK3/3mvozGfujcx6WSBxyV54KhuGHnR41Z98
Jwt1RwKfyraFo79tLwqPdslCyz2zsqtqEcjsjWjavo+yEGjXKLGaGIEmm1/5
kodkQSD+zat6o0ik91zSSXxUFkrfSyhX50aiuGcBhzgnZAG4fY7vpkUi5QZZ
FdqcLNzjDjxzMiEKXaq9LDqyLAtyOV8Da3qj0JuqLpbeNVlgrC/JZhSLRqIV
Sout9HKQ8FrrrLJtNPJ4dPVHPYscCGv1XqO/FY0aHnzsLuWQg38nfnq4t0cj
thLK8xxeOYh/0NygsxmNjhdGlCcKyYF0RDPjAbUYVFIwkBsqLgdcB9BgqHUM
WrmzLf68tByUuad+rgiKQSZ5sZdd5OXAEhO63pgVgzKzh9ytlOXguDYpPLA6
Bo1n6FjvV5cD7sc8Ns9fxyDdW4n7dm2Xg/cCejmBn2JQbOqolqquHCy+Xv3u
OxSDPt/YTZLcIwftmiXUxJEYpJSYysNjIAcV1bdbionvF+Im1un2y8FGrU5M
NvH/r2Jgau6AHDDlvc3aS/QvHJUxMGohB+KdFTcuVcYgt/DpN5+s5CC93GhN
/FYMqgs1qn9jJwdd9777MfnFIJaQ3MInTkR7gW/RvCYxyDpo/maZqxx0n0p7
Jy4Sg4oumoXf9pSD/YsOvRvfotFSQL5vso8c9GmlaWfeiUbGfiuO4f5y0BGa
HNp8PBqlnzM/FHCJiOfeMhNb9mj007tot1uIHJwcBDndmiik47WufDxcDu43
FBfoWUehaHdLUbMYOajU1bPTJ/Kt4MywqJZC5O/pfvwhRyQKcLL9IZ1OxC8+
8GZXQgRqsa/o5suRg9Sb2n+cmSOQq41j+eJ9ObAbf3cV+xqGaixrc3+VyoHR
pvUgpheGmI5yxveXy0Hp2GduiRvX0P2DT9yfNciBt/ch3we7rqLdJDrNzGdE
vgxuiB+sCkY9i0Yrfs1y0OvEdmmn6BW0ebs7ltwuBwvX92f1PbiI0v1FjjB2
y4G+7KkIhr5ARDFxEPv2UQ6SxW3Pusz4I7vZ8dKbQ3LgES4s4f76HJptVffz
GZUD2vK23m1Xz6DY7AA90wk5uGt/XHEvhzuqNaR7tzFH2JTsyHnwBOJNF5ny
ZJGHgl/3ksWoB/FiL4eafRzyYLy4rYnjji2OoXvB0rzy0PP8OD3lljPxe1Kd
66OYPPgznPkhFeWDv9IzVgc1eWgSLC193nUFDx4K8BW2lIfQI0FNPSzxuEDN
E93Z4/Lg9MOxh1yagD+IpaNvd5CHC+1BGjkmSXjftoSUMHd5KKLerRx+loxr
Rd6rmgqShxbFGplXnTfxt8cngl6HykN8q1bi7etp+Ek1DcOCSHlwmKh9OYtu
4YmfnnywSZIn7nNs5GpeOi7/kC5X66Y8PA1fn583zMCfhBq7cmXKw5m2HXJ2
oxn4OLlnoTlfHrhyo9R8+bLw0HWRZ3lF8oDZ22idyMvChXscoi49lIffQcIl
j0jZeFnRvUPHKuRBW+CuHPPtbNzwyoSQeq08eEL3rk2+HHzAXOMb2xN5KJWM
Cd0VkoP7ygcW/aDKA++r29ePDOXgrKtPfKgv5WHOcnFqdGcufruDbmfWG3lw
HXPHUqJz8R0Fxpv+HfJwJ/UD/0JbLt5+IeH14R55aL0otPmAKQ93PtBzQ7lP
Hhgq2DOPbc/DV6VFjzN9lYdM62S/eOs8PHnBQWZoWB4eREfI0c7m4Ypv7403
jsnD6RMvkPTlPPxZ3kRF2qQ80NMU7esu5uGWfhqXz80Q4zmlcB3zzMOVWfBr
S/PycPFMM3nIPA/fyDocG7IiD8c9I0nBKnl4r9q3G0zr8iD+jSY7sJKLl744
mxFPrwCFh0nHS5/k4let1m/zsyjAINKYyjqXi1tOJBRlsStAio42u71ILq4c
srVchkcBntWbDt6pzME3eMtqiwUUQMfkerIQloN/uL/7mbqoAox6c5qffZqN
l+i+a6ndqgBpD6YMbSjZ+NV2u3Z9kgLwRxtmRyRm4cdOTn54qaAAkZEqIQVD
mTh54fIXMxUFKFBpEnGVzcQ3Yrb86FZXAPl17luXrDLwksfkuaGdCkBUhVG7
+Ft4iGHDqpu+AphV5nJeT0zDj/btp58GBfjrtvay7epNfH3DjXfNVAF6CvMS
TNVS8J7UJZGIwwpA5yc/3vHhBl6iGC3NfoyYL0ZRryQn4kcPF6qL2ivAwSWX
S3POMTh5RFvnzkkF2Dq/SubbH4mvB7bsUTytAA3UoFJbpjC8JO/HQW0fBUju
4PvZwxOAr0+RzlhcUwBoOVTy9rI76rlW6dcXqQCaI3JZy5EBqERwb5DjdQWo
eCh+ovJ+CDqqf/K6dyrRX756KselWETumkmeT1cAj4s+EzI3EtG6S2hmUA7h
SI3t+7xSUEn87eLY+wrAJGWo77aUjkKk1R/zlCpAputDzYDhLHS0+lld+iMF
YFuKip8cyUXrA19b79cpgP280KhSVj46qiIx+vwNEb9duh++hJUgJeqD3/s7
FEBxXxfHiP0DtHZEb76zWwHiTu5+d8KoDBVftmUYHFCAyRHVlvvSFWjtTYbM
6hThdVJX7dka1G2vRL42qwB1JawDO27WoiJanQbrkgI87ZE7wvO8Dh0R/YQJ
bSpAq/TPE1KajajIXdBhG58iLDPZJf32pKIPDIP+4sKKQC22L00dxxHd7cI4
RglFeDz0wryq/jmy69Vp+CivCB5fbFq8zZoR115bgSBdRdD+aCItmdeKAsRv
v212UoS/LnH2O0fbUX6t2/BDV0UgJbVyZw50oE4LjeU0T0XQeeXP/PhDJyLH
PJd391eEgDba3w9uXejL/EgoR4wiHOSJfqRxrgcZdCjpWJYrgo9ewL++x5/Q
OQ/awT3VivDJZjHv1u4+lMvY6KLYoAhzp2U6N173oaVdZikrLxSh2sdirnjk
Myot8p7K/agIRr+3sshKfUG81yoLxtYUod42cbfE/SH0TWs3z8UDSnBNKeRc
ifkoMks8dJrTQgkuRnQKrySPotpfTk35lkqwnXX3h9XuUZSQG+ne7qAEjIkP
q+iPjaFdLJ04yVcJrF/0ShVZ/ERp/Sd929OUoNk0y9BOZxzRafu/OpWlBEvT
3Z+qfcfRmaSorct5SqDYt2frpQfjyMDwwRtSsRKcv7g4qr51AtHK5mUuNioB
Sanz2uflCXTgWnQ36ZsS3MMvXNZO+I3qBjKV6keI+ZwSbSM1/UayOx6GHPxF
zOcUs5fWxG+0MvFe+SJNCbaEs+IPDaZQ0TGx8HYGMhjKCwqFT04h/nLVz6dY
yXCTrJ/Bx/8HhbBh6sscZCibGeIr0/2DLJ85D5CEyODEctqMM+IPYlAq07qo
RIZDQn/0mzmnkU8YNZaTQoZ/M0HLs5Rp1P+l61u+JhncucQc9x6cRhXJi3Ht
u8hwxcLiumnsNJL4zfr9FEYGifTOINbCaRRtJL5z2YAMFxyV/GaeTyOHv9gP
0kEymNdrte9fmkZvLI/sqrcgQ7N724lnPDNI+7HLjYNWZPgzwHLAnTyD2F1j
d190JMNuU90CZ5sZ1NDRfbPdlwyPmZlLUNkMuqIhufoykAziNhrzOi9mEJbi
4dgURAbnyj0NNh9nUIvlJvlBJBnixPd8kf03g2LqzJLyr5NBu8n1lycLDZmJ
ps9nJpEhRa+hepCbhrq+UKgxmYSDCvrzpGjo5p5LcqF5ZKj9znL1jwINWd95
GXuhgAz7ft1kH6LQ0Fdnu2Ony8hQKP7yfPkuGrrTUthgX0km8q+VcQPRkLPi
rKRlHRlqyt30xIxoaHwiZtzgORl89tTeoJjT0MMDHw7ptZLhd1VeQuMxGvJ5
JFW9rY0MXSfHchdtaGgbj5eo8nsiP+Lzp0dO0NCCb22ITC8ZPlWpJYY50VB9
D90PkX4yXFz/V9/rTENB2gdNeL6R4WpHS/zgaRrak57xiOUHGdSXph/ledAQ
3coI/8YvMrwy+/5S+AwNvbRVv7Q4RYbo2wz+ZmdpKLrp8uDULLE/WhpP6p2j
IVPJVoPRJTJcSj6rNe5LQ5yhvCVf/pFB9WNkopUfDb0fPsH1gU4ZGN3cRCL9
aSjVoNivjVkZDIUvBwYG0JDV/bm+F+zKoNgod0g1kIZEWbA9jTzKME3qMCwm
/MX9ekGFoDJ8kfu6MUn49tte1hIxZVBLrZdbIXxKVebsHSllkIVXNl2E5RPP
9KTLKcM/unMQSPjXdN3OJLIyLBeLRowT4z2wYMiLUlMGazaVVlXCZ6sOMYRo
KYPt4pYyIOanKZjlHrBTGfQNpAfJxPznA0fbz+grg0Fz1/oYsb66Pg0tl73K
UGoSVX2ZWP/lXVcy7IyVoark3r0xIj76Oa/WjhxQhpzaVH9VbxraXONzNrVQ
hiKDxjcHvWio2dHhNVgpA5/cVZMDRLxNZBdSNJyUgVn1qsNPFxoinsTLiq7K
wL0avSf6FA11jsXZS3kqwwX3t4NbiHxalpKUuPyVwcUvfaHZloZOapo/nYxW
hrsnklNVDtOQXGo2aSReGTL2F8YLH6Chn/Nj0f3JyvD7rIrv/H4a8q4PPvIm
WxmK62RSovcS88ce/CwsV4ZTx9ZMQZuGwi+OKkRXK8PXj4y+s5o0lFAhddqt
QRmyty7W3VWjobuyN38oNhPryXkzsqlIQ29YgoeLPyqD0/dciykxGupBddKx
A0R8We23PhEm9v8lmqPHkDKI7/YOTRWgIdqk6yB5QhnafauNPbmIfL8/NFC6
pgza6caXBuhpSJYtViyOXgV6qMw7jmzMIMre5uNeLCpQpaK3W3x1BkG1Tp8K
rwqcXGRb1pyZQWZTvsIcQirAmFmfHjI5gywVHlr9FlMB0Z+HNhbGZpB7hnTv
QzkVOMJpt3pqcAb5dtkKJJBV4DB59IJ1/wwK2pJ21FtNBS5evJrsT9SDpCts
3ZSdKrCmw+mt0DmDMmsMeLn0VUD3t4BoY9sMKvgTbP4HVMDKzlLb//UMqnOa
7XhkpgJTtOKU40R9eZ6pypVkrgKG9u+fhlNnUFv36YM+liqwg/04pbtpBn0z
HGhTd1SBO7W1ZZ/rZtB4sCA7j4sKzC/dLk6umUFztYdNZ9xVIJeBv8mragYx
k1++fnxeBfLoqJvh5TOI+9Q6S/IFIj46HBLPifommr3T2PeKCvDh7HKSD2eQ
7IfzURbXVMCk6VVCVikRP86yFs0oFfA8ZNqhXTKDdIx+MvLFqYB9Rq7tdBER
z6syhrNJKiDU1FbUWkjEs94uvPumClwZGFR+cp+IJy3tRWWmCkSJDNu8uzeD
HJXf06XmEfFN+1K4UjCDPJy3gF+BClD8BmL3EvbLMQw9WqwChR9+Bhbmz6Dg
3hCqVhkR3wH2ETnC0VwN6/yVKpBYYmHw9O4MSjae05+vVYEBp2YOH8LZoZTg
D09UwFjWq1qX8L0Gt6ZqXAVa+Y6WSxAum73792aLCoBF5HlhwnUqX3YFvFWB
4k12PzLh5y5Cly07VeDXXpr8EcJtueYN2h9UYFYX27xBuPfj9WXBzyrwmGUz
cJTwN+4WncWvxPo79DcOEfMb378R+PG7CrCV03O1E567pltb+1MFQt/ZiDgS
69O7/HS7wW8VIH+Y+bZMOOI8VHXOEO27R2UKiPi0e7ZonlhQAWqPi7c9ET9B
Z5PHv1aI/TGWZaFIxNferl0tYF0F9ERr7DcJFx61KKNjUIVDF4ekfxH50DE8
XirGoQpGc5Js34l8Xd39VamIRxUCleMPzBH5fL39ZJGWoCrMv3wWzkvk+7i8
x70DkqpwyVZpi9+jGXSZ+VJeiIYqBEWuSj0j9k/z+j8Jdm1VkLYMLVUm9hf7
Umh2uq4qaC1o5d+pJeL9Mybj8V5V2P21T7CoYQY9fZ2R8v2YKjx4y1zHi88g
urj6KKNLquCwxVHpb/sMMgnfzdQTrArN+4by3xDnIyUID3cMU4UeFafgrC5i
/515HXoxThWi1HiSoHcGGR7su1yaqwqy8ZIdGV+I/HMvn+V6oQoh6U70bMR5
7WS5MpXVqgqu3ycyX/+eQSKbG16KbaqgXWkYEf5nBpXMsHigD6qwVVg8cZxG
5LNL2Pn8mCqs+iEpz+UZxP82e3h9QhU4XbYvLq3MoBMvpJziplWBbOSUGfx3
Bk1VKtrfW1YFOmGBa2fXZxDXTR3rj1soYPq+cMdZot6Up87/eMlNgRfQESjB
QEOHUyvOVwlQYKHj1eeXhJNSVBJvSFJA/p2QOSMTDamn/BK/KkuBMQbH6GzC
ncn3S7yVKDA/5kCmMNMQd7JUi+k2Clzb47WAEe+H8htfjujqUKD1sqfBc8KH
b2QOKe4m/p/GbKjPSvSfxP+P0YgCe6XX7smzEf0nvY+dM6WA0W0TcgrhzsQE
4e+HKVDxS6R4hTB3IosW9TgFDnnKf23YQvSf8BIvcyDae1rW8bET/SdcO5Tj
TIEdL6d6ThOejt/z5bo7BdYHfhrWEk6K/+txyZsCkYL6EnQcxHjx9Utu5ynw
8MOYlzHhzriASKsLFLAJHtwXS5g7bvqO1jUKtInlDm0QLr/+UI0URQHbT1Yt
2zmJ8a57NPHEUeAvh+EVV8LTsQqmG0kUSJFyEE4hnBQ78mnqJgUY/fKKGwmr
x95x/ZJJAS2vdfhGuDPGfu5tHgXoz1xY2CDsEyN2raGAAtaf6XsliPuBO+YT
V3ExBfiFs2a1CZdH38y5VUYBsdgdTmaED0dbKEdWUuBIape6PeHpKK56vzoK
ZGW6+HkRTopq23eqiQL9G792BxJWj4rpMX9OgTmyTV4w4c7IfSexVgq8DXpQ
co2wTyT9NKWNAnD8y7mw/8ePpF6ReE8BfYUfTKH/jx9xZQt7LwXuGDVdvvz/
+BG6GSufKXBY0mHY9//xwxflfw1SgMLbbHb6//HDq6o+jlBAKvxHm/X/44ef
g5ZfFGDqe+Jn9P/4YZTOqikKtPjttdz2//hhEyfyZylg0OgbJv7/+GFFEzeW
KHCS24CT/v/xr7lcvPqPiOencpax/+N/TYb5LJ0acAdUhL/6P/6hg6knmNXA
5SCkFv4f/9BsGTN2NRhvttkf/n/8Q23KdXnU4NpuWrX9//G/KqivJKgGXOKM
k9qEua8m2TBJqUFmZsjfb//nO+TA2JysGjjSfV6pIHw4hM3/u5IaFDuksoUR
TgoOT6JuUwOrWM77EoR5rlxovWSkBptxDs36/++/XSGpAmZqoLJwHpgJt69E
OJUfVoOZjuL4dmL/xl1IWf1howZmcmsvbQgz+ZWpmXupgUjUmJUzsd9XPEZu
KdxQg0P3y95ZEufnk9KE8/ObatBwwXaZl3DtzxmNE5lqULGqO9BOnD8/1/W3
yflqAKcE6fYRnnIS3fhXrQbvfg6c3kac12Hrw249n9XgqVmmmxBxvqlCVtvP
DqpBSNTs8AeiHuT1nqBjGyG+VyStpRK2O+qZvee3GpSTxY4KEO49FNlZsq4G
hzs5eaXoaKiKMz7HkEEd4gSrT7zaJOrhuxSPbyzq8O3bt5qjhA+b3mEQ5FWH
SOP+F+eJ98zbfU90QmXVoe2UrfHbNaK+Mb5gFFdSBz9Ren9XwtHNr7tqVNXB
V2joGT3hffDRa1JbHTxG9pQbEL9PqLtpt632q8PxN9Grg8R7KPfv0hnaAXUo
rRwWiSN8pXFdN95CHcy/+1rqEtbdyfHhua065Ahok3OI+lilpchK8VYHrRYj
vSCifn5+I1H+2Fcd/t7KuaVLeN2Rz2p7oDoUZ/D9XVki6n38WoHeVXUoU3H8
FkrYhzRnSg1XB4an2o7GhG/W/6LtjVGHXSGqv7gJf/vRg5kmq4PljcuCRYsz
iCnozVh7mjroDHc1BBBW5qUmWGSpw7+TJm5GhAP0SwdsCtRBfS7j69TCDMrq
uR32pUgdshl8C18SpnqkkZ0eqsOUgcfFXMJbboVecKsh+jvWqGNJWF01UHKy
QR005fjltxO2fOHVcvaZOnDJxYsLEr5sc/LM7At16DgqL748P4Nu/7HiD3yl
DuerBmW/Em6JONC40qYOi3vrtV8SnhDbezL4vTo40lealxHmrtBhpesl4ktr
888grG1MKY/4rA79PMz5kYTtvpKsWAfVYcLRqc+fcKifyFrcd3UYHOwXPk34
PhvXPe6f6lCfEOB0nHDbbQaz1Ekiv2c0Kg8Rpmmv0IRmiPkGsXMaERZ69ycj
a14d4huYfTHCeqd+YJIr6jCnSBrcRfjk8uexu2vqoNtqf2wn4ejEzgR5eg1w
vtnQo0P4oVzL9hJmDfBJ0T6hS7irsXFAlV0DHPCuqd2El8wfhz3m1oBtkokx
ewlv/XmfvF1AA8YeeKqaEt4bnP2+TkQDrnq4fT5K2I0/+YLeVg1YtYpIciSc
UBIlSZXRgOP+zw95E67CrrTsVdCA7OeSwsGE+3p9z7Qqa8DTPTm/Egmvebnx
m6prQMukbnM+YVl6+8Z2LQ2oeL1UWE94f8aRkxY7NSCktzf1PWFvtf2svbs1
QI3vQ+wE4XpbLasv+zRgp7hmshyRz68zSmuOphqQ9DMp35AwQ7TkvZFDGtA+
wvX0NOGDVWyzE9YaMO3lzVlB2M9kI+PsCQ3oXjpg8Jlwxrd5bNaJmG/VgTAG
Yv+NsA8lrHhoQG/jQ3EHwmz5vduDz2qAETNnYCJhtZ1tA5vnNSDrWsJnnPAl
l1oy6xUNmGSZfqJC7Hfup/EtQokaoHF0+x9R4vzE2z4J+peiAW1lhfJOhNmW
xzW/p2tAf7HHi2LCDFrGeWV3NeBo6LAKEOdxqZjugmGNBjRWZzxLJM6rv5EG
RblRA5b4bkj/IkwbcRjhpmpAMW/fTwPiPTMp2XR44LUGuM0cL6Qn6sHQzUCl
8180wE5LfiSHqBf22+4PWg9rwK60uz5sxHtnoLPnpv4YEa/0sycvEu7doknH
NqMBKcGr/vZEPRpFgd7m9JogZL9aRiLq2edaDaOfgpqQmS2+oEfUx3Sm/TK2
Ipogodx+K4yw1THHf+/ENCG60br5DeEeWkJlpZQmBJunBB5nJOq76qRkCFkT
5k58tLlC1Nvn+feXBPQ1QdDmVCFO1OurtKbuaEwTxvif1rAQ75896EPZKmiC
VZLtjkOEn3yldxky0oSr25cNPxOuEXF6/8BcExYMlkpHifvAz+3CA8mjmtDE
etdagbgvttUmRiVbasJfrxe/XP9/Dx19uvuCrSYcD2Y+P0y4JFGsZK8LMd9P
77ReE/cPy9OPBXGnNYH6rv/6KmHXyZS8D+6asJ3T3VeFuL+k97PfPO2tCfcr
31bFEA4OfJVY7qMJDLpMc9WEB+6Fxy77aoLnwdiY/+/HdLp/IdcDNUHUeWew
OnF/LqjXX+q5qAmvIl9TjxE+6uDvLxGkCcaXzkhdJFwRr+HjGqwJph0fEzIJ
cz357fHoKjE/wcZ/9YS9xotdlq5pwsNvr+0/En4j7OqIIjTB+2lNPo2wopGM
bWyUJoRgWk+3EO+BSP+vx7pjNOHG4lyeDOGR/MzD4nFEPP1KdXcQhi5LU5cE
TQgzYru6n/DtDd7/KrrueCq/MK7SUlFISFKhrLjX3eN9H7OyGvYeCZVNaCgj
qzIysoUiJMlsvi8NRQgh0rBJVkNG4ff+/vx+7j3nPOf7fM/zfM+5f1zN4hgi
vuVaW1MC/1VsQmbiVKCTFPXOkcBmllFMJEEFTrhuxj0IXBWlRYlIUgFp4JMK
ILDwwxXKLckq8IYrNxhIYO/hZ3JiaSqwPLNz8X//1CJ8TtohQwWC5rOt/vdP
+zVoO+9mqcDfLpvfFwl8zeun2O9sYj6ZjVX/+6exmyXC3FsqUOxumeBF4IPN
pwTC81TggPZyoBOB8//J8r27owL5nCJnMwLzKgzwihYR+ujnV/9/P/bmN5ft
ion13nxdIhMYi7BcKCxRAetL72L/948SVdtmfpYS8SbHDfMQ+Nzg+yl2uQoE
5Hb87if47BKMG7tcqQLiKkeLawlMU9MbaqpWAcfWyqUMAid6rOsVeawCa7ZV
ffYl8JHGoI4CTAV2txmuEydwyQKn5UeNCvCcNKGPEHrYKDffwHqhAitGsEf/
+6VTppWvQl+pQNcnNNiPwK/DvGoaX6sAo+fqJQaBpSuUnmxtUIF2b+P8P4Qe
Q/q/Vdo0qoAl5fBIKYER1OHudAvBr3/mRTECZ7hJ5jPfq8Cl7aYPXxP6Xkj/
mB3SoQLVChveexG4cu7YDeGPKiDWoej9iDgvgnsFrlt/UoGC2OVuEwJ7Gr+9
mv9FBR7P3/g2RZwvxTKNYMaACijs/FInTOArvcvng4dUYPrvT/9s4ryO8j/1
axgh9P/2RvJeAt86TXG1GleBjhDjb3sJfyUuI2MaNEPMp0jXniLqgfSHQPOF
WSLepbH7BwisFNVp6bugAkXpkpQ0wj/BRISdy7IKuGQqaygR9capcuzkkfUk
iOGN1REj6puns4ZrwwYSGIo91nYn6uNZsQx3TX4SOMV5Vj8i6u21QH0fhhAJ
pi0Vuf/3u3Kt0gtSO0gweSLlTQdxf3w6u+5S2k4SXLrywXTy2xRaV2gfLLyb
BMcu/h1dMUrUw01C4ev2kkDtSpapxCBxv+08EzutQoJcFT7j/Z+I/uHEzq3R
JMHxXFRbm7jvmogm3mYdIMG9Hes5hg1TqG3DeH7FIRIoqJ8ycHxD9Jf9WXcL
DEhA5WYLJL0k/Msfnso4MyKeuYSf8GwKzS0wr+azJIHck/dPLj6ZQostyh5d
tibBtQRe5VePptAa7DgW4ECCA9xhc/eqKXQ4vO61nSsJFrwcStVKifrP2Nnw
0Z0En/oHqttLptD5Mf9GIy8SfOm8/8eXuO9vPCzXetCPBNjSe7uvRVOoyIqQ
988DSNAZHXK/qHAK3Vn+sYNzngTRJvsuhBVMoeRt1z6qBJFAW3dN5+n8KZRT
P/ipKIQEkW2J4QF5U6jWee5X6TAS9B56/ffGbcK/Kt3oy4ogwcSXg69f35pC
zb5ODoheIYE+/vLcBgI7XD8wHH+NBLdFh+845BL9WyN7dGMsCa6KmvU25Uyh
fjNzY+HXCX7HX1X+/75y6c7RCZ5EYv/PPz7qz55CFV/lWHncIMEpj/buGAJ/
7P/x9nMKCfKOhpw7QuAIHnW2XjrBn8Fjmf/fdyiS8UWPM0nQeujYif/ff/rY
/WJy2cT+5KRe/P8+FGNOjkrOJQG0zb/5//2I7R8ytzqP+P6+Sp7/35dGE9uc
fe+QQEZw3+8nBE4q2/2hv5AE0j77lP5/n1Jv8dY+WkyCcpVr1NsEnpp4XomX
kKBaWS4ZJfaXsUFIZv8DEmw37uiZIfAhueOJGeUE/2FO0f/z80e7fNWGKkLP
+WXUSoK/W46rfM4+JIFrRqwNTvB7JMSwf+QxoT+999eHCf4Xb946avKMBL/T
DM0ViPwUPftV8xIn9O42jMQQ+TPt0VBRfU6CywX2jQJ3CT89n3Az5yUJSKT0
q6XFU+gDkUH+za9JYDTussaL0IcNhXLxYj0J3mPZdUcJ/Tz0aLeybCbBBW4+
4lcxhZ6Ilm6sbyGBb/lOvieE3gTv+rIZ70lg126hvpvQo+uwsPjWLhJUFLlJ
WWBTqBjviajQjyQYk/vRrVBLnKddlXM/PpGgcCR6725C71LWxh+a+0jgWXYq
/yJxPprO5WlzB0mgHmXyfahpCj2XMlN5d5gEXHL5d59Wwn+8T0qM/E7kJ0ZE
e033FBr8Y2jV7AQJtm2oL9/wmfDzAjSfE9MkKJ3Q4GX1TaGROp1H1WdI8Mh/
zFdobAqlusjWls6SYH60tgCfJPxbmJ/KzgUSxBs+Gr5B1ANOrYjAvyUSeBTY
Frwh/M403bSxch0Z5q2+aIgQ9TPT+A5begMZdqwT/rKZ6Ac6PrNF8ZvI0L+H
2S6+eRq9XZIc5SFIhvyOtfkmIkQ/lOnSlpMgQyunLF19zzRaK2hem6FMhspJ
ofvXucR9ebPBkT4SGY6nzF6+DsR9cZPGVxkKGTxCg/SiNKbRn2uVFksYZJgu
Tii2PETUx0UeZq0a8X0GK8nFiKjHCzOvV2uSYfLD80+8ptNE/Roz0dEmg+0H
If5Yc8Jv/Wz3fa9DBlaYlLyLzTQhwfpVovpk0Pw7GF9hR9yvx7F4q8NkCLAL
7fvmMI2GjxSUDhmS4WaErSKfM+HPBjNReRMyULfk5/90mUYl++Ob3c3IQBPr
WomfIvrT1wjrcgsynFm1sOzmOo1Wf7owPmtFhueqm62X3Ih++9HrPMeWDBOb
dna7exD974MTX7A9GV7PyKtinkQ/ardMfXWcDLsPM+S/exH9ovXIPj4nMjQF
6gb+9p5GKe+0qg1cyJA65PK9y2caDWpkaSecIoPZWKJqsi/hF+uVOz64kqF7
6r3w/jPTqNhraUcJD2I9c3mDDAI7vRT7ZedFhhPXMrJ6CVxWyx+S50MGoe/7
X80TeAlbtWXsDBnquoeChgms83Tu5v4AMhx++iouj8A3Hk3s9zlHhkt/2sqp
BO6v6n9WfYEMsuNbCpOI9fdXfND7d5EMW1dEKL8k4jv/oLEHggl9pNLW1BDx
vympPRUWSgYBUZnxCGJ/wsVV8/VhZHjSZ5ItTuzfrvBuJH8kGX6bt/T5uU+j
xfnZ2wyvkCF8MMkjneBz7lZSfvI1MmgP3V0XQfCtlXOF+imGDCtrRFwZRD7i
sy69lLpOhitdH81KTkyjX9J9DU8kkKEi/l/0CJFP+dST/YVJZNA7FtTQbzuN
+t2w8ZpMJoPM+VNNWVbTqMD1g7H+GWToSA7dbWQ8jVrFcCWfZpHhiOGTnzpH
Cf97lXyPJ4cMBmtPhy3qEf03XOJtVB4ZREY1JuMIfV4L3WLRfIcMQZ/OqHsg
02h30JpvgkVkKDEjGfMyCX93fnpNRgmhJ3+TMn0lwl8FDCX1lpKBt//Nuf9/
/+Hz+ygtU04Gz+Odiw5ShD/wfKleUk2GXFa7MktwGm0/kXKxpoYMcTrFhzcS
/bZxWG4r7QUZ1Jo2TT5tIe7fzk/u3n1FhnSmS3rm0ym04uSXrhsNZGi+ImLW
f53ol2MeHhubyODc9GMFnCfu06dXrAl5RwZyZftUzXGifrtJq7q1E+dTuaZx
J5mo/5OV9f2dZHCROmIyu424H3scsDPrJvTs9cds6N8k6ud1KlrjC5H/n4lL
sy8mUZMzpSNio2SwuhKEZGlPogZ/1C7GjpHBN0eet0V6EtX2fy+8eoIMR+PW
3VtaMYnSzv5Rm/5BhvFS989ajyZQkUBORt1fMhhL6iru3j6B8i81kTlLZLAT
/nuxb3ocXXPJtv4Bjyo8ZljuvfxqHP0TFPInY7UqUFc8w/1Pj6MfLr854iOg
Cr+VtORLir6jLastRka3qMLRruvbZ/2/o2/CvwfaCKtCeEQn7ZDmd/RhJP/d
Q2KqcPVB/7zkxzE05ZrRaqk9qnDAXk1U4e831Cyx91EjTRW+pf4YSdk2StxX
5nbL2hDz147aO/YOoN68yt1edqrwQvfbMCtrAF1/4kTsMwdV4NouvHpvOYAy
ZNv+GjmrwhD5TKhNZz+aVHC3PdRTFUqWviQY1/ehR+7ZhPeFqIKX3Y4bbsZf
0bqql98y7qiCRfCZ/aYznajNtr83RwtVoSbL0+Kfdyc6408yoRSrwo/WRT2t
Hx2oNDPr+dtSVdibKuEyPNWOBj/xT194pAo7YmLy7f60oZwaeX2zRmK8ZtWV
HXbN6Hsp+1W3m4n4XyL4oYAm9FRw8qOpFlV46W2V8Cm+EU1V55WN6FCFoORf
XwLfNaB/Xn5eqvyiCnFvO4/nubxGH9THlQr9UIXWpSxZtnwtOp6EvTf8pQrP
zZu9On1rUFmH8T8JM6pg81uy504YjmYsHOAKL6jC4roDst5tT9FIheV64VUU
EDzm2PfreTX6YlZxwmg1BXK1u8Kyr1ehSy8sNietpUBLj4tnjnMl6mNVZbJ1
IwW26FDzj8qVozbRbgNbt1LABcv5cW1lCZpqnr7GZBsFFtcuO/ZuLkbbZerl
bohRwFTse2auYhF6CJP2FJGkgLGpeGDn1Xz08pVjCSZSFGgfLHsw33wbxUyC
qm7spoDI0uU3k5K3UMpUzz+RvRQYlV3hc7z+JurxZL2UqRwFvg8saThUZKBF
EXSNZAUKXOe+EnxbnYrulEqI2qZCgRCDFQPZaxJRvqM6IqJMCrRJbMev+4ei
WjsCmGZsCowFpNdsDA9Eg77lWaVwKbDH9t3Ld76+6Ezwilui6hRY97se/3pH
B1UxUK4z0yT2u3gjlTl9DD8lbv0tRZsCWdMoW++3C95b9lBZTJcCtUJHHjiu
PI9vvzR8zFyfAhXe0dGXRoJwE11hv9TDFGh0o/6rk72MNw54PBUzosDzTbuF
H5Kv4GtLM7+am1CAR3HL5XSeaFz9wtuVaWYUcH237cl4YSxeLbz3kLg1BTp0
e1fnH4zHf/YauVrYUuB8+po/h1wScMV7IbFp9hR4IHs87otfIu58trTs43EK
1F3L1i7zTcJztb50iDtRIO30yStCDjfwz1s2zlu4UCDc3qXpCJqMi35hSqSf
IvjceDD44cYU3LDIGe1xpcD2jeXbUhtS8Bi/JIftHhQIXjRcqXY2Fa9XfxFm
6UUBz0sdZUuiaTivwI+CdB8KqKv0p0kVpeFIj2RjzxkKyJdIK84opuNn7+hN
bQ+gQH/yga6GnHS8wuecoNU5CqRendk8vS4Dn0QLqBkXiHj2dh8od8jA5TZ2
mn26SAEDvsxJh/sZuGPXqgsSwRSQa/vupz+Vgevsa86PDqWAXWab73XZTJwU
kNK6FEbgq+Pt1w5n4qJvHP55RBL86/i33DqViS9tU9rbd4UCw1Gl2ayATHzI
efbosWgKFM52XKwkcGN17YUXsRSIUZe5HeCaiZetvXaHEk8BVOzToVHDTDzV
1KQtL5ECWvKMQhflTDzojtSiSDIFEGn/v9bLGbjT7NjeyFQKjFR2nlV8mYHr
H6g8Np9OgYLoRGvGxQycknwp8FQWBUgWk1+HlDJw8ZFDBT3ZFNBr2MVKfZ+O
r6ALv9e7RQGNa655VR7p+Gj4l8VneRT4aLDRMndlOt7cWbBPuYACX2qQxJpr
aXiFrI9hdhEF8Di1K2f40/B0P+7FLfco0Od6zE8mMhV3EWl7/+sBBfavTtq6
9kQKbuCUseRYQYFkSXX2ivpknFrlJNdZRYHbS7/YEbLJ+EqTvxcfPiH032xV
/vpdEj6a96pQDiPOu3hsho5EEv5uJrY9rYYCoaNPtcaOJ+IZSdLyga8oUP58
xbPNw/E4vUO/Q+0dBX4Kfl3VFxyLS8qI8pS3UkDi11nLm/3ROO+ZfnnpdgpY
1wzXfUSv4W3C/kFruon8J+y5NfYzEnc1ylZ420+Bv8YFfyyOhuDHbp8y4QxR
gNJ4xHvybhDO/E0JvjdCgV5lPYUwwYv4msT6zthx4jwbRLEys/zx7Pc/g43+
UIDfFP0Qed4JD9/zrPjVHMHnM9/WzCQ73M0n4gPtL6FXtXifiDvGOEtIQkmM
hwqbau9v0kj/i+w6Pmx6ZSUV8iVLXAW+a6HryktD/vJSIU9m2FV8jzHacUyr
6/N6KtSMmoWuZjuiT3MFVh3eSAXT4He0pmYXNPdnt1INPxWchfb7rmS4oZ7x
7qG5QlTQ75eL9KnzRvnakvc776AC8oivYn7vOTRuxdqzJTupEFUdJRtUfh4V
Ifm9mNlFhZfdmQXH9weiu+OMzC7LUqFj3cKAzK9LaAH+IvftPiqkyGNHnmQF
ofunyBOCClRQ2n2ZzcsJRpkGW0JylKnQ/tLs0UnbEBQLDGocJVHhTuxlA3wo
BNW8NyWiQqFC6ukpnzuOoWjDJxt7fxoVtEbvFCGfQtEjG5vvYgwqxCU99cnR
u4x2srl/VrOpYLSKc2S88jJqdboY9LlU8Kyl1LJFw1CXhisdPWpUkHZvdLR4
E4ZOzs/v3KNJhTMXIlMdRMJRX7mTp05pUyFJfM6pzzocXTDrqnhwkAq2XXIG
v7LC0aDIA8tzOlQo11JsqegOR9c8rDoE+lRw+7nJXZ0/Ar02IpMYcZgKp9w/
FzzkRKCC25K+NB+lQsShwhWUExFosjavnIgRFZKFguZbIiJQCT8fH2sTKoRb
eW4pvh2B5ub1P7ttRgV2RWRD35MIdF/H0XXjFgTfRR/yYpoi0BLe2mOq1lQ4
8u609LvuCJRCUck8Z0uF42WGr/HeCPTx8ZsjtfYEfwOZAoH9ESgk8JPXO1Jh
9qfZxT1fI9C654EXjjhRge6ZkPiuMwLV+zlel+xCBdZ3y/eZ9RFo2y6rLV9P
UWH4V82TouoI1OzoW0tZNyqIirc2C+ZEoF+CWPluHlTInUiL/hkWgTqWFk5X
eFHBa0nxrJNTBDr2VZT9z4cKlp+SBK+qR6CeApFhGn5U4G4b/HhBPAKdQWbf
XQmgwmZU1tBsMhw95+4k3naOCvEDp/4xsXCUJ6vDUSyQ0EtijSlyJRzduFg+
fyeYCo2W3ft2bQtH4xX3aE6FUuHh9UfZjK4wVNQqPoYWToV7QkPNg0lhqPQT
zz2vrlBhD9vsmNvaMLRo7Kvbxmgq2PA8Kwx5chlVET/80DCWCpJH7zzJcr2M
ss8q6fcnUKG4XVvIui4UPUYf81vOoMLdnYfub7YMQbuczGu1b1JBfNFr7uxC
MGpz482GmBwq/BxM5G1ODkZPzeRnS+RTwUxo1amCxiA0uPx4A/M+FZoMSPxR
mhfRMicPibIHVFg2WH/1lnEgOih23l2+ggp8E/1H/xy/gB4Mihfc/oiY7/si
4nz2HMqvX2vx7zkVrh+OkHKJ9UMzhiW/Y51U2D4hnDlo4IY2p8pz6d1U+CO1
V55pdRpd1qPF3u+hwpv3hiaCbidRh3J91exeYv3Q5zHJ6SdQuaAL54PHqKAY
9kQ2x98KtVCNbJofJ/LJMDe3GDNDrw0n7PSeIs7fXo0OFTdjdFrv7guH31So
e8VvfemwPlol9nGD5hIVsJCtbmbBUuho45D1Ux4aHHr9siYzegMuHvTjPmUV
DTa9+n2uIkQJDxxeZySzjgY9Y1MvFCXV8ZJU4fxMPhpoHDgcupl6AO/Vk5rb
uokGE0Xb63sk9HDNcnrGGkEahBzsaXlbegz3c9KYvChMg2P6D958/WqE3xE7
DLMiNDhlmd6bNWeC8wU5DY5sJ8bviGoyHrXAOareNDtJGojc+HvkG26Fuw8H
RnZJ0aDopu1R2xAbvFUvSbFehgY//4wLJg3a4St5ci6q7aOB/Hllo0137HFK
eXHLI3kaiF4zD4m3dcCdnB7uJivRwPHjmihd/uN4ithL3yJlGkyLvDe0LT+O
NzS+q9tNpsH9n+bNvw0c8b+XekTTKTQwlaQPkvsccZvhn0+vMmmwKHc8TnPs
BB6XusTPy6FB8+lviyfsnfDnenz2FxAaeNVSKt++c8J/L28t/w00aO/pzcmg
OuMy5btWu2nQAD8ddX853hk3cVIyHdKigf7uhvrto854pBiz0PogDS6WIp+2
UV3wx42afzt0aCD3OqRN/JwLPn7piL6BPg1o28gputUu+DPBFXjGYRqkcTNu
Bn9zwWPyHqh8P0qD0yTPoL1bT+K2DIdcphENBkInxqxYJ3GVt4LCkSY0oNcZ
xqqZn8RX2LwI6zSjQXZU/44Zr5N427TPrLQlDQxtu7WTL5/Eb4VKn/SxpkFU
l//jA9dP4r4iHR9rbWlwPnxxn2zKSVyrMExvswMNLBYK1Y+lnsRFODTMxpEG
J149rf6eeBIfaR5WvudEg3cBZxiCV0/iD+2Tc/660KApT+jM0PmTeNTvA0I6
p2mQ8blzR5jzSdwiYu5yihsN3B4s9W82OInLixf+GfagwbWyBt8C5ZP432Jz
F6o3DQS9z4We3ngSb0T5Pob6EvoL1sfPDrrgGW2Pddv8CD15hXb9JPhxO3H6
mdRZGqS8t7z0J9wFR+a2K3ucp8E2pojj7aMuuMDVxuxngTTYofqTJiFK+OUd
gYIbg2gwfEy5IPCjMx6i8WWm4DKx/sG3shcMnXHDzhjn2XAafIHCRDM+Z1z6
JNqtFUWDulvD9pnPnPC6mOyn/dGEvicDe76IOeF8Hx1CJZJpwA4QjH9Y7Ij3
uArNnEqlgf+dr2qHdRzx4uUXTo/SacD3dt173aHjuIGMjI5JNg2EKG4WM0LH
8eueI5vjCmnQ6+GtGWxqj4uudc1a9ZQGtezt59xkLfG9lDOPxnppYGKxOHPn
uzaeQd6RojRAA+mdrBdjQlr4ZtIrP88hQi9HXrx1VNPA55S2Uv58o4EPFln8
0BLFG/ZWlqz4RQOKSvjV9+UkHJG1jtacIfQalRjZM6CIl0uvdo2YJfLzIHVP
T6gsnrHLWG7TP0Kvx4NHT7gJ427bZ26JrqZDavXfrQstomi/WGaI5Vo6xCal
luK5u1ATUS37rPV0SPi2QujfA1kU2ZokKc1Ph6RjuVse7FNBy4S4i06b6dCd
1Dah5UVG9woO9RQK0gE5MFVmmkdBNwtQU5W30SFTwHflzxYGennTZ39vMTqI
0HbGL7xhofMbwkwqt9Mh5htna9A9Dtq/rkOILUWHkPUKPMGSgJqsDfwZuJsO
anoNNPQ3oA2rZVprpIn4Bk+MP6lRQ8tXnonRlqPDbZmObk9EA923YodblAId
JE10hL9NaaAZyy91G5XocOz7UtvNFE308j/h9cfIdDhgdLL/YIsWOrfwdCSR
Qoe6+zXU87baqNu8Y90HGh1WBqUJug5royZ/KkKt2XTYGy3qvv7TAbTht5VD
NpcOPUdtpmZ0DqLoL161AZQOFWknl6XKDqIVP4p3yqrTwVbh6s2iLYfQfdNG
Sy6aBH+vhVrLTh5CMyb/fbqrTQd7VaMk88eH0M0Tt59MHqRDDjlzAlulg17+
rpdG0qWDUhTas1JbB53/9jvAV58Oa/9etdUK1kHdRzNMqw/T4bvu+/P5lTpo
/7AmbeEoHXJRJ5L2gA5qMjQuzDWig1RaUrAmny7aMJD465IJHY7uLHOrlddF
kX5O23MzOvAkbJz9pKmLlvcOlq62pMOuRzOS1Wa66L6v12IPWtMhyBgb9nDS
RTM+U9yv2tJhQaH68F53XXTzp096zfZ0COAhWS566KJhHy8rbHGkw7sbF/gE
XXXRhS5FPiMnOnwqG7MJc9BF3T+0j95woUO0aKO5v6Eu2t9x4XX3KTo8vOr1
by2qi5q0S+dLuNGB2aJw0FSGiLet8bKtBx1mCnWRsDW6KNrqezzXiw5ln3b1
PujXQe0MHx0S8aVDUb0h6ViVDhrUsah8xY8Op5A4D+vLOmi2qbrIUgAdRg/a
+PzT00FrusP/eZ2nA2tWc6vZZh201/Jt/1AgHbxN3yqlNh9Ceb4I1JsH0eGG
f0DSaMQhFPpTktTC6DCnfLzCePwgauf4+XxlBB2MBkskXiUfRIOGdznIXaFD
XxyXNowcRGvHivZviaVDIR987Q06gKr/evq6N4X4/oab1cpdWqjDmRUlRul0
+Mn3xuz2CS00ZFYr8U0mHVAfV48t05ro87/NdqW5dJCv0rAN+KeBavD2zV8q
psOLmB+z07NqqObW1Yo7a+hQUj6xJonFRh2TDwkmPKfDs9lDsx/EWehlsZi5
Na/oIPPu4oDsAgN9tWPbq8l6OggXFPkoV9NQbVk5G+w9HfhFb7R8VCWjTgVu
muROOjjxqS+6biWh4fJl8vlddFDud7ci/VBG6/azZ6M/02GFqPvzNVcU0AN0
/TjrETqMb5Vrk1/ajbo8uu7X+o0OHKf9CnXjUmgku9NKa5wOgi+PsG1f70Df
oLZySj/ooHGms+R391Z0tPaWQM4vOjQKdL/SXCGIrtMcnRH+QwffUH21lAsb
0YMHvZ7/WyDyUSnc4L7wF3FpqCzwXKSDtBot7uqecSRSbyFmcJkOIJEl/uJa
LlJ/JNSykZcBd1cpb5ARncd0zJN+p/MzYFfcU2VWxxac78nFhaHNDBDgxx7U
6gjj9RIuPCpCDFC5dSqhpVAEP9jL2vhyGwN8zybuz5HZjq9TlxbkF2dA1Omz
mj/Ud+Cvb20SNZNgwOoPXd5DOjtxbefePeNSDPiNfnf5Hr0LX1NfL0fbwwAx
urvyA+/d+Cv5cuUgGQZslLhhY6q/B9ecDGMLyzPgqz3H8P2gNL7qiIeajSID
BtImtadzZPDnD8wOFOxngLjPveXzxrK42hkFQ44qA9zLHkq4Z+/FeT4Im4dT
GfDsB+P+dsY+vIaxZNNCZ0BQsNLxurp9+KW0EUdxFgMC9UvfXdeTw5F/Lacc
OQxQVu+5mlMvhy9ZP/YsQRiwVu/NfjFEHn+G3/KbAwYMmVw/LFEkj1/YFX1B
XYMB3MNHwpo3KeCcUL+Qa1oM8Nq109nwpAL+b9A2svMAAzIebbvW/FQBf6J9
KEZKhwFfVhldPb5OET9XQE48pceAtPGJv1Q9RZzFJ5FWYcAAebtl35ORivjC
6dXZS0cYUKGTG73rmSL+qGky76AhA+xSpj8FjyniAcpdd+ONGRBJ5V24t1kJ
Z1yvffDJlNgf/+z5emUlfO5nUbWsBQO8BQbmZw8o4dVGic88rRiQLN3PZ22u
hPtVBb54bMMADotfW8JRCaeJOtfz2jPgDidY3dxFCf9z9sg7g+MM4BM1TqY7
KeGVPcyOlBNEPA9v9Xy0VsJ9uXt6+p2J/fBF5DsdVsIpNzf2KZ5iQN2CaOwS
Swn/zfNn2M+VAcW+Pop1Ukp4ucPX8Rp3In+OpVv7eJRw75dvfvJ5MSC7+luf
d48iTpYtmzPyIfRmztx3s1QR/xGRvpR1hgHp1EeXooIU8dJvl3m/+TPAlRl6
yVhXEffUdedTPceAB0ceYLJbFHHle6abAy8woMPZul2qTQGf5FcTeX2RATyn
c0ydYxTwEk95iS3BDLDUTv66Q1sBV6Qs7s0LI/JN57E4WSCPjycNK01FMGBQ
+s45LUN5/O7sO1XmFQbwZzj/27kgh8s/yUWbYhgg9SHjkg1HDh+TuKa17ToD
wn207q/v2ocXXjyja5/AADcdjww1z334PvWDpjPJDFgwLdkwfGMvLls/4b4j
hwF99fdfDtXI4NdLfC6k3GLA274WPluWDP4vYT5KKJ8BOZdjJyUeSOPvbVbn
rb9LnIdbZo+2J+/Bg35L9MxUMMCqCcLEdHbhH3fqHWh+wwAtTdYl9xFRXGt1
m9GhtwyIWNxfdureNrx0zNThZRMDkJg5n1QfETyi8njg4zYGdOZNz82tEMYp
uufL8z8xgBEeWnnEnh+P8SvaeWmaOP/71NQUE+eweUsVpYWfDHBMMYhJcfiN
OapVsc7MEPXCVeSE78FpjL3xufHpBQb8WfllzcGaXiz/x4Hjw/8IvV0nvycZ
tmGCH5o87ZcZUOPW5PGwtRgbzem+asrLhHU1+XvMT3UhhhG2qW1rmCCZn3DR
uKcfwVyH8vXXM6H50Lat3VrfkCT6j1oNfib0u4p5XKj8iag3rZtTFmWCyL5d
GafDFpF7ZTGr74ozwdT+2FDk72VENEVYSHYHE6492bbFXXoFOuUgtV9iNxMm
9sodNzq6CrU4mM9OlmZCtUGevLcRL1qnpHhIcC8TkqcKhSZ0VqMZc3THdYpM
2CW37PVUcC269sszr9D9xPpr5f56Da5FvV9oXFpSYULd9+gm7aJ16OeC+mtn
VZlQ7i/uc9pxPXow5nDabyoTzhg8ObNZiA8t9+m448FgwoKgta1TFR8qaW5Z
OcZiAr/L+KNMgw3ozB7nll6UCXmHw79522xEec8M6hxRZ8LxJ/fbzNs3ooJ1
9q9wTSacrm0/oAGb0F3bvqLKB5jg9f0V3Tp3E6riYvU46xATsp4bXu9Y2IQi
j7op/HpM0Ggx0Ph4iB/V5zO9H2jAhOnMCE5qLD9qZdkuN3GECSMVzaehkR89
VXz0tpUhEzyzfuOLy/zo2cVmyUZjJggN1u9dlhdAIw30UtlmTBAT2BnvrS+A
3rhZL3TXggntBS8nwpwF0Lxp7RhxayY8Y12Vcz4rgFaovVx3xZYJEgYaFM1Q
AfR5vFrovD2RH9dn/3TCBNDWAWzRxZEJLZINXoWXBNBeCiegy4kJPZPMkGhv
AXQy7NHPAyeZ0Hfis4SMjQC62Elzqz7NBNVNYSpZ6gLoxn0VI7LuTCC7ryiW
lRJAxc+SHG54EvML7rk4/ocflWso+bTahwltIY+TdrzmRxnbFU3PnGHCtkMp
fSNx/Ki2a2HroD8T0ievHTlrxI8aP5PVMzrHhNh/Lq3LW/hRR/7bdS8uMMH+
379jhfWbUG/bXWqql5iQ6i/28tb5TWjcCgma4GUmLPLuV9F4txHNOpZaGhzO
BBX51+s0vTai926JKPyIZMLslPw1ff6NaIPWFqmWaCYcDk00ILM2oN03YtLQ
OCZ4H2efPlnPh46ObNh6P54JL9dPTdgZ8aGrr6zhi0lmQk4z1nvQZj0KzX9/
6eYwIR55l7bywFq00mT49esKYvyYgqlB4ko02/mJB97DhI28iocy8WnEIOXz
+tVfmECfGIleoTCF/HuzfEunl+AjdqvBdM84Yiav2dUxSMSjcbc49fAosnmi
EcYniPNS1Vr0QeIrgu2Y+kiaZsLSQcnW4JGPiKvBljP+P5lgqKTwvOlVJ/Lm
vnHhylkmWJXE6YyGNiGXvL9sEeNhgcJkC+WG93FM8RZPsc1KFkiZ2Z/L/VOM
fXy/W/s2LwuaD+upOk88wWhU53PK61nwfe1P9ea6BmzwRJTwmQ0s6L/mlhnj
0YLF37hb8ngTC3z8Hzy7av8em5yd6tcSZIHFmTaK9lwXlrFPMPCqMIvwW2Eq
tzJ7CL9C2dYqwoJnvGTxrfJfsPzHAbpW21lgIJIQ9ORCH2b0PW0oZwcL/rjl
HA3N6sdWSjy7NLKTBSvOhSBnKgYwm8AVFd7SLPirEr/Z/9kQtrFkj8FDWRbU
Zyi86Swdxh5/0Rpd3EfMj7gBT+oIJgJXJKKUWPA2H9t25OA37KVncVWzMgte
KzEP1QmMYd45zUeEySwodCX15jWOYc0rhcJu0ljQl+A5AHvHsQuq1J1DDBZs
5e7erfdqHJN3NH0kz2bBxM69p+3MJ7CuxLOGnlwWfM6ouJM3MIGFv0qfqERZ
YCjMU6vhOIlR/jyL+KvGAnwYyXbomcT6ZXt3qWmyIME3f7/8oSksznTl03Bt
FmhIuho/vzeFcSOlTRoPsmBdbv/FQt5pbOyh9vQWXRYcveWzbuX+aSzlm8sV
U30WqL9Y9XTp2DSmLX5VOvMwC3jKlGLKfaax3zr3sP6jLKjZec2HEjeN5Z5/
Z7bPiMBPH9klFUxjR4p//HQzYQGdeVRn7Ok0tvRJKLrcjAXmWhPSB5qmseJN
tL3zFiywv75vCO+exiwQs1rEmgVRTZmXXPqnsXUe5ywv27JgbdHIqNHINFZ1
M2Om3p4Fgh+yt6aOTmOOLVisgCMLhnkdFw4OT2OCK/rkjJ1Y8HDg7dWA3mms
hrTqZZoLC2r3+GDsD9OYu4OMTe8pFjDP/A7Pb5jGJBIOzMm4scAscqy78fE0
5ndgTVqGBwvGg3CRVfnTWMvfl2whbxYcyL71Nj56GpMvDf0c5cuCRYe9J5O8
prFQR/VLPP4seKTVYytN8PNJdMUu/7MsWPnqsJS58jRGa8KfT5xngYv11u36
6wl+qdw1PUEsWJNyd9UD5ylMc+zvnaOhLGihDWRqrZ/CsrIeH3oTxoLccSBJ
501iR9cyoiuvEPoO+fn6SuMEVvTkz37FaBYUGEVGB5hNYLyelS25sQRfu9+0
nP86jj3sIgvHJbLA/Ua9UczX75hg9I/KNcksaNzfZLrK/DvmqlZqGphKxHtn
ycq8eQzbWaSUfiqLBbukPH763PuGhZ/ft1urgAXOp3d9+6U+ghlJSqosPCHi
98tbeXu2Dytp+9TqiRH5Hfp7f+WBPmxdRLrPSA0Lbr2J9fJM6sWeTIlWt79i
we/0kdNRdl+w3bVCyP13LKhTiqurrevCLpxp+yrTxoKDr3VuX7f/gHXKXQ/O
aGdB68fYp/cWO7CoeP5XUd0s4GPV5tmz32PTx9frOQ6wQO/BpGr5/beYjuib
iY9DxP6jAkTMN9djtxvDY4+OskDoAi3+19k6zJTK+x6ZYMEvdRtnyulaDFuz
bC42S8TjILc92/M+Jvrk2d/YeRZ0ika+aj+Vj3l7XMhc848F2ZnODSma6ZhM
13zvLx42fP9tMuxy7CxyrfC3czMfGx427Io7/aYUCeOayW3fxIbtxc9+vFxb
gVxsfTLmLMCGJClVrWfy1YjnfIjbCmE27OphOo9IPENORg/vNxBhQ+a9+MjX
4zjisEtnOk2UDT1bi7Jbj9QiRoe2+FB2EPPvOiLQ8fkFov/ZlxK8kw2llPmG
2s2vEG2vrpmmXWx4IyeZ95FWhzBSbwY4y7Lhlvattaj1G4SktIpVsY8N8RTn
R33W9Yh8rdNfHgU2fItz/2RzrAGR+KZ0MU2ZDeRdAvU3tjUiWwOvoyMkNuhs
3/i0YLQR4d8yw0OhEPFuFvbRKGlC1uaZPQ+isQHv7wqJd2lGeJhPQ5sYbND2
2xhUu+0dMt+4U0uczYan9+yW/z55h/y0C13jzGXD7qoXDVXyLchgpE4Ujzob
TFZfUTxW0YJ8lijR0ddkg23XpKndjxaks3TLxjRtNghXSjHs5VqRd5pnmoYP
smHpWkDyKatW5E1XV4yqLhsKjh6G+CutSK0r50iQPhtSfi/+myhvRR7zZG9p
OswGK+fPyQldrUh54qr3YsfYEJCu3ZMy14oU73NOdDJiQ1BI/HUh4TYk72mD
cbkJG35tEg8TU2hDso7s38ZjzgYHZVpQDbcNSR683qVnyYbDXai+pF4bEhcw
k5pqTeCF2KqDJm1I1EZzy2FbNvSFXwo3tmpDQrKfSqg6EHx7OEdY2LQh5ylS
Xy45smE6LzvUjfjc903ozUYnYv3tl7VuE+PdrEbsxE6y4W3tqWRh/TbEaVpn
t9NpNthduafRjrYhtpdLBsrc2PDCKU94fn8bYiYqmLfswYbgg3fbU8TbkKPF
Z5z0vIn87BI1qF/ZhuhA995UXzZQ+jV1s0daEY12zrchPzawAq/cUK1vRTgu
2UXks2yoGVBbSLnTilD/rXK9dJ4NhmtfwnBIK7I/zlmpMZANZ7tPUkiWrYjU
w/2lJ0LYcO/wZb1tq1oRMb14r7LLbGjsLFr9pa0FEeydIS+HsyG/zSxp/mYL
wrvuWWXKVTaUTZbYh5NbkMV0Kf+haDZMDWxx0p5+h/xRvswgx7FB3S5jXZff
O2TUVPfJ20Q2BGr/u/nArxlpvNNds5TJhos3rSxXajciLncoU2g2oa8LFx5U
l79FVt+J3RGcywabkvP31STfIki+1rlVd9jQq3isz3+sHim9/UB1XSkbdmj8
eTd2/DWSkBOVv+U5G6RsWs50LdUiKjmD7cdesuHflYrEbfq1SGM2uiqxjg1z
3nZGT9NqEN7sGVuRt2ygiSWMVp7EEL8se7Ht7Ww4uH/qfXvrQ8QinXlNepgN
Yob9Msstd5E/aYmPT4yyYX9y5pKdSiGSkDY1mj9G6NdCDMlMzkcaU/O05KbY
4F3HGqMG5SBIypZlpTk2xA0ubz2vHIt8THZV8lhgg8Q6lyvy02GIf/Jry9J/
bDC7Jf/8Rv1ZpPRG4EPyCg5Indlw4bGyA7Y76ZsXnY8D4ZvifpjYxGNYomZ2
wEYOBP1JH+jecQOzTLzZ/IifA3aF3bdv16ZiiQnGChwhDiSe81S+ZpmNqSSU
mgdu5UDP2DGbXN5crCl+QyS2jQMOEfXdttm3sDXxtYMgwYH5KPftRqX5WO51
CaEQSQ7cSxBPbJQuwNDr/movpDggusUE87hWiAXEKWVpyXCg8a7ftUfUYkw4
LrIxfC8HOly7+3P872GlsQMLr+U44Dpad5hxrwT7FpNqqrOfAx53JU/Ony3F
yILXo5+qcGD40cDuVfwPsHNJkS/2q3KgU5h7Y3v6A4wvw19ZiMEBOYOUuMbs
MuzYTo8TYSwOHP0rsCFWrBxLy3VKn+VwIDl+rWzF1XJModB47Sc1DlB2OEif
s6rAfBX1uQaaHICvrL+aTyqwp/c1fWq0OVCx75J5nVAlxqvKKSQf4oBs3zeG
kFMlplel+vW2LgcmpqgJUFaJJTIVtm4z4MAJjqTD8blK7NPT3bpRRzgwds/6
ZhyjCpMG8eC/xwg+Fe5rfvauwtxebKl2M+ZAUWaTrs2dKqxKe/3EV1MO5I75
lOzrrMKW6nn2HLPgwLoFK6ejy1WYtv6c2UsrDhiWa7hN7K7GYlqmYmi2HPi6
2P90i1o11mk48rLAngOra2cM3ptXY5IfviyIO3Jg9yBtxwG3aszJolMl2okD
eQb2u0LOV2P3Pzc5Lbtw4MOIsnHq5Wpszu5VhtdpDognW5flRFZjMPi0bcCN
A80aeeTSiGos0rlinYknBww6at91B1djLWN3kTfeHFgku4eq+ldjou63fFln
OKCqeeJAm3M1ZvcjrajYn+B/2n7rW8NqrMA3vlfyHAeqJXeOkNnV2I/ZKJHr
FzhQXGVaJSlZjbHOB+utusSB2zfrLtz6V4WFLAWEnAnmwMpaWUonwUdDsOfD
kVAOSKxU7XxbXIUJrnaZNA/nwGGdfKvUi1WYRaStdGMkB2aC2LWGelVY7gZT
C+QqB7yj7y0KiFRhqoLadbvjOMB+JTTUl1mJXUji/kuM54A6Hhi6y6oSeylK
Ja9NIuJRLO2tEqnEjHZKZ31P5UDLkjlGC67AMnK3t1tncOAg+QBZl1SBDcoI
8bVkcSDYb1R3/Zdy7IziSr+KWxzwayabdiqVY9j9+buy+RyYLj3KEWgtw9ao
/uhLKeDAS7XNJVpeZdgNZq9+4D0OXNlgJrlc8ACr1sZktKs5UCO+dvXXqfvY
vN25jg8NHJg7W/hITa8A630hoiDVxAGOsMC5ctM72BvZ8iCXdxz45CUcoWSX
j6WMf1eYf0+MF1T58tzlNkYLsA4R/8yB0t1rBhStsjHvWFC2nuJA3FMJF607
sZjFz0+X835wgMds0HOd6VVMzfjsx4lfxPh8zZ3eqyKwzdvLwi7OcaA3UCGh
suACVpK/59PNFVzg2dqwubDdDBl7tiaqX4gLLilFH0T645E2qVtf5EW4MLez
r2rD6iTkUShK8RHlwvQFLOqUTDISeSjg66odXPAM57Mytk5HZDu+UWVkufCv
TNSf2pqD8DPCr7rt48I6sd/HMttzkZm03X2V8lyIrETPFXbcQl7aWV7TVubC
hfkZQ9mWPMRhvLHfmcGFFN/Q1tncQkTn8ElGKYsLbyzC8l/HFiGkstUxcxwu
cDQSRRXO3kV4AhBmlBoX1EPuXJBWu4dkrSqNLdIhPgdpL6GjpUi4k97QTz0u
OOfezRqvLkXc6kdZ7MNciP0eoREh8QDhxO4afmvIhXin/NdPvzxAPooncCas
uLDjuH6krlY5UityNuKsLRdIouYBTTnlSIGgbdtqBy74orpiHxbKET8+BRdJ
Zy5ouHek7s6tQKzXbCkvOsmF4sdOAtTpCkRz5ewizZULyytb7T1ZlYjQwvOE
w15EfFv21K98UYkszBR86fHhwth2Xl/5FVVI/48YORc/LhgVl+6VYFch9RO+
vr8DuIA7yijXeFYhpd8s8KDzXLg3YtOxlFOFJA8B36aLXIj7YH6iprkKudgn
a5waxIX2TkH5iT9VyInPG7NlQol8RYS7u4lXI3rdP8cehHFBJ/pBoByzGlHt
6KIikVwwiYrLXW9YjYi3YkENV7gQKim1749zNbKi6fZbk2gi3ikr8w/+1cjo
mysiA7FcmM3UCE4KqUbevfS094gn+GpqGRONrEaqakyK/yZyQWrnir7//583
6ylnNiKZC+601pLNodVI2MPd6sJpXPCu5N40DqhGXCvWRWdncOEWorHI41KN
GJVOflC8yYUTvl+E/h6tRtjF7bsf5XCBNr9hvyKtGtld8NhN6zahF483Ny4I
VyPrb2c/bM3nQtHZzant41XI9M3wVTaFXFB83HtJAq9CPqS7GozdJdZ7T73B
uVqFYMnHUv1KuDDhvHHvjqNVSF4CY3DlAy5sELcPzN9chVyLlVSOLecC65rK
YE19JeJzlffc9ioiP3b++UYXKhGLiLGXdx5y4QqLLKCzrxJRC20RoDwh8BPr
k1FNFci+S1UWNc8IPsP/LC+crkBm/UKmu55z4XuIA79IYjnyxduFfeIVF57M
75eI21GO1LkbhP94zYUBDcv4zzfLkEQncQm+JiJfn14NJMQ8QM478DjfeMeF
EM9Fo6aFUsTBZvjB7jYuWNpHWJy3LUVUTMoOsD9wAalfn1m8pwTZdiwl/nU3
F9r8B/LuYMXIkv7Fz4afuOD6W1u5+dBdpFFLx8e1jwv7T8dt71UuQMrVVLC5
AS5smXIpcr2Sj6RxRdaHDXPBz6h0i3P7bcSF2p+V+Z0LzA+etSPUHOQw6c03
uUku3P738LRkWhZCUyqhVE1zoYHCqGzKS0N4Zc41NM9w4XPUnFibYTzyXcpu
q+UcoSdfrvj7satIm4S23cgCF7bOuu1qHApBHosq3vVZ5IKjyTv1W8o+SI6w
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$70123#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1., 0.}, {1., 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2., 6.88214269644119*^-22}, {2., 
        6.88214269644119*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3., 4.235164736271502*^-22}, {3., 
        4.235164736271502*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4., 8.470329472543003*^-22}, {4., 
        8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5., -1.3552527156068805`*^-20}, {
        5., -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6., -5.421010862427522*^-20}, {
        6., -5.421010862427522*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{7., -8.131516293641283*^-20}, {
        7., -8.131516293641283*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8., -7.589415207398531*^-19}, {
        8., -7.589415207398531*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{9., 1.734723475976807*^-18}, {9., 
        1.734723475976807*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{10., 0.04969024160430335}, {10., 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{11., 0.5000000000000001}, {11., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{12., 0.9503097583956966}, {12., 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13., 1.}, {13., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14., 1.}, {14., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15., 1.}, {15., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16., 1.}, {16., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{17., 1.}, {17., 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{18., 0.9503097583956969}, {18., 0.9503097583956969}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{19., 0.5000000000000001}, {19., 0.5000000000000001}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      RGBColor[1, 0, 0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{20., 0.04969024160430336}, {20., 0.04969024160430336}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{21., -1.6263032587282567`*^-18}, {
        21., -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22., 1.3552527156068805`*^-20}, {22., 
        1.3552527156068805`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23., -2.0328790734103208`*^-20}, {
        23., -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[1, 0, 0], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24., 7.623296525288703*^-21}, {24., 
        7.623296525288703*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{25., -6.352747104407253*^-22}, {
        25., -6.352747104407253*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26., 1.164670302474663*^-21}, {26., 
        1.164670302474663*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27., 3.441071348220595*^-22}, {27., 
        3.441071348220595*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28., 1.9852334701272664`*^-22}, {28., 
        1.9852334701272664`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29., 2.6469779601696886`*^-22}, {29., 
        2.6469779601696886`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.}, {30., 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8564532547464256`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"6befe3c2-9f5a-4da6-8719-dab03cc8a42a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "initial", " ", "Values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.845045263868204*^9, 3.8450452694034853`*^9}, 
   3.8450476199467487`*^9, {3.8450479635610037`*^9, 3.845047975491262*^9}, {
   3.8460006615647287`*^9, 3.8460006668143864`*^9}, 3.8460872315102835`*^9, {
   3.846087771965379*^9, 3.84608777251213*^9}, {3.8460922546844273`*^9, 
   3.8460922579585743`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dis", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pixelInitialValueGraphics", "[", 
  RowBox[{
  "10", ",", "1", ",", "0.04", ",", "p", ",", "listv0", ",", "dis", ",", " ", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.001", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.8444610720575733`*^9}, 3.844465103128627*^9, {
   3.844468954478764*^9, 3.844468955836996*^9}, {3.8445223288621674`*^9, 
   3.844522331588422*^9}, {3.8445224254548025`*^9, 3.844522442397056*^9}, {
   3.844523120633779*^9, 3.8445231264669933`*^9}, {3.844865883020569*^9, 
   3.8448658976377945`*^9}, 3.844865928166531*^9, 3.8448688843438253`*^9, {
   3.845045172614132*^9, 3.8450451828856764`*^9}, 3.8450452794504633`*^9, 
   3.8450455327267056`*^9, {3.845047989488798*^9, 3.8450480081172156`*^9}, 
   3.8460874847973375`*^9, {3.846088028094764*^9, 3.8460880409247837`*^9}, {
   3.8460881130570087`*^9, 3.846088139269883*^9}, 3.8460882479390144`*^9, {
   3.846092261895195*^9, 3.846092278344483*^9}, 3.8460961301642113`*^9, {
   3.8551661464711957`*^9, 3.8551661508206663`*^9}, {3.8551662323122654`*^9, 
   3.85516623279241*^9}, 3.855166423799381*^9, 3.855166459895472*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.4222657831339925, 0.07773421686600751}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.844531566267985, 0.15546843373201502`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.2667973494019775`, 0.23320265059802253`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.68906313253597, 0.31093686746403004`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.1113289156699624`, 0.38867108433003755`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.533594698803955, 0.46640530119604506`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{2.9558604819379473`, 0.5441395180620525}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3.37812626507194, 0.6218737349280601}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{3.8003920482059326`, 0.6996079517940677}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{4.222657831339925, 0.7773421686600751}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.07773421686600751, 0.4222657831339925}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.15546843373201502`, 0.844531566267985}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.23320265059802253`, 1.2667973494019775`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.31093686746403004`, 1.68906313253597}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.38867108433003755`, 2.1113289156699624`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.46640530119604506`, 2.533594698803955}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.5441395180620525, 2.9558604819379473`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.6218737349280601, 3.37812626507194}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.6996079517940677, 3.8003920482059326`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.7773421686600751, 4.222657831339925}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.5, 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.5, 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{4., 0.}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{4.5, 0.}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{5., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 1.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 1.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 2.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 2.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 3.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 3.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 4.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 4.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 5.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.25, 0.25}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.5, 0.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.75, 0.75}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1., 1.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.25, 1.25}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.5, 1.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.75, 1.75}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2., 2.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.25, 2.25}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.5, 2.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.125, 0.375}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.25, 0.75}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.375, 1.125}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.5, 1.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.625, 1.875}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.75, 2.25}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.875, 2.625}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1., 3.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.125, 3.375}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.25, 3.75}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.375, 0.125}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.75, 0.25}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.125, 0.375}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.5, 0.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.875, 0.625}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.25, 0.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{2.625, 0.875}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3., 1.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3.375, 1.125}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3.75, 1.25}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.2, 0.3}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.4, 0.6}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.6000000000000001, 0.8999999999999999}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.8, 1.2}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1., 1.5}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.2000000000000002`, 1.7999999999999998`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.4000000000000001`, 2.1}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.6, 2.4}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.8, 2.6999999999999997`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2., 3.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.3, 0.2}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.6, 0.4}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{0.8999999999999999, 0.6000000000000001}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.2, 0.8}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.5, 1.}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{1.7999999999999998`, 1.2000000000000002`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.1, 1.4000000000000001`}]}, {
       RGBColor[1, 1, 0], 
       PointBox[{2.4, 1.6}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{2.6999999999999997`, 1.8}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{3., 2.}]}}, {
      Thickness[Large], 
      GrayLevel[0], 
      LineBox[{{1, 3}, {-1, 5}}]}}, PlotRange -> {{-1, 1}, {-1, 1}}, Axes -> 
    True], "\"ConstrainedNewMethod\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{3.856453256282892*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"03e58d06-146f-4621-a965-636af5faa5b6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"pixelInitialValueGraphics", "[", 
    RowBox[{"10", ",", "1000", ",", "p", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "dis", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
     RowBox[{"0.001", "*", 
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.84446109126562*^9}, 3.844465109413933*^9, 
   3.844522645686282*^9, {3.844523132263279*^9, 3.8445231640872555`*^9}, {
   3.8450306042313957`*^9, 3.8450306073687077`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f18ac198-8579-4ade-8334-41343ab1cfed"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 512, 8, 97, "Title",ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-04efcb90444f"],
Cell[CellGroupData[{
Cell[1117, 34, 359, 6, 67, "Section",ExpressionUUID->"564bd16b-5ad2-477e-879c-a49b47193581"],
Cell[1479, 42, 426, 8, 28, "Input",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],
Cell[1908, 52, 590, 16, 49, "Input",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],
Cell[2501, 70, 362, 6, 49, "Input",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],
Cell[2866, 78, 310, 7, 28, "Input",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3213, 90, 337, 5, 67, "Section",ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-e28adb0822c9"],
Cell[3553, 97, 267, 5, 28, "Input",ExpressionUUID->"bcce114e-be95-4be9-af3b-e98691bcc37f"],
Cell[3823, 104, 2541, 59, 88, "Input",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],
Cell[CellGroupData[{
Cell[6389, 167, 2260, 64, 166, "Input",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],
Cell[8652, 233, 84729, 1410, 234, "Output",ExpressionUUID->"f9762356-b453-479a-bab6-98966dd805b1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93430, 1649, 277, 4, 67, "Section",ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-301a424457b1"],
Cell[CellGroupData[{
Cell[93732, 1657, 162, 3, 54, "Subsection",ExpressionUUID->"86d2106e-d02d-4249-a85a-97f3df8af812"],
Cell[93897, 1662, 19251, 388, 942, "Input",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[113185, 2055, 191, 3, 53, "Subsection",ExpressionUUID->"09c54b45-a793-4cfd-ad20-2e7a5f10a972"],
Cell[113379, 2060, 1458, 30, 88, "Input",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],
Cell[114840, 2092, 450, 9, 49, "Input",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],
Cell[CellGroupData[{
Cell[115315, 2105, 2411, 44, 88, "Input",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],
Cell[117729, 2151, 317, 7, 32, "Output",ExpressionUUID->"3855349e-cd40-4678-97e8-fd59108db2a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118083, 2163, 971, 18, 49, "Input",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],
Cell[119057, 2183, 50300, 846, 234, "Output",ExpressionUUID->"d6b4019c-8421-44c2-a340-9c3a2fedcc83"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169406, 3035, 182, 3, 54, "Subsection",ExpressionUUID->"a4c25ec2-f772-4494-87f0-6c86ae6eb27a"],
Cell[169591, 3040, 5583, 112, 474, "Input",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[175199, 3156, 1670, 51, 107, "Input",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],
Cell[176872, 3209, 8654, 213, 248, "Output",ExpressionUUID->"21a2a012-8b9e-45bd-bed0-a7bd467c62ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185563, 3427, 1677, 29, 49, "Input",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],
Cell[187243, 3458, 4243, 122, 111, "Output",ExpressionUUID->"fc8a504a-2ca1-4eb3-b4cb-71f7c7817426"],
Cell[191489, 3582, 1154, 35, 53, "Output",ExpressionUUID->"8d84f5cb-77c1-4d03-8694-6bc0caf0bd3e"]
}, Open  ]],
Cell[192658, 3620, 12221, 246, 728, "Input",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf",
 InitializationCell->True],
Cell[204882, 3868, 862, 25, 68, "Input",ExpressionUUID->"08e05903-787d-43a8-99d8-db087c7053c6"],
Cell[CellGroupData[{
Cell[205769, 3897, 4772, 103, 478, "Input",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],
Cell[210544, 4002, 434, 8, 32, "Output",ExpressionUUID->"728c4a38-f512-410e-aca7-54bec7196834"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211015, 4015, 562, 14, 49, "Input",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],
Cell[211580, 4031, 51665, 870, 234, "Output",ExpressionUUID->"59d174ee-c47c-4367-b7e6-8b1a3d68b54a"]
}, Open  ]],
Cell[263260, 4904, 20119, 343, 884, "Input",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[283404, 5251, 182, 3, 45, "Subsubsection",ExpressionUUID->"1677df7d-d338-4ae0-86ef-227ba8502fad"],
Cell[283589, 5256, 802, 23, 49, "Input",ExpressionUUID->"b3e9302c-f436-4a5a-8d84-0d7bab68e55c"],
Cell[284394, 5281, 215, 4, 28, "Input",ExpressionUUID->"b14c0653-3e9f-41bc-ad3b-fb428643f9e5"],
Cell[CellGroupData[{
Cell[284634, 5289, 4541, 98, 185, "Input",ExpressionUUID->"a2f96ad6-157a-40a4-b5dc-b0107b8c5ea4"],
Cell[289178, 5389, 3580, 87, 111, "Output",ExpressionUUID->"2891d675-3f09-43ae-b591-56cb65e3ff59"],
Cell[292761, 5478, 103452, 1801, 336, "Output",ExpressionUUID->"1af68017-1631-44f0-80c7-7eb4a86e4435"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396262, 7285, 182, 3, 45, "Subsubsection",ExpressionUUID->"4d225df1-a7b8-4e3e-b420-6ff5f34abf9d"],
Cell[CellGroupData[{
Cell[396469, 7292, 4161, 95, 185, "Input",ExpressionUUID->"9fd57488-dee4-4f36-8bcc-ab84a909ef9e"],
Cell[400633, 7389, 1485, 38, 72, "Output",ExpressionUUID->"d56140a7-9ccb-4b95-88f3-a1a4cdb41c3b"],
Cell[402121, 7429, 66286, 1165, 336, "Output",ExpressionUUID->"7b0ef6b1-bda8-4b11-b087-ed003e046e3d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468456, 8600, 182, 3, 45, "Subsubsection",ExpressionUUID->"1addfeb2-5c39-4529-bb6d-d0c229ca6ab7"],
Cell[468641, 8605, 240, 6, 35, "Text",ExpressionUUID->"880a687b-6dd2-4828-9358-0c01b407a3f7"],
Cell[CellGroupData[{
Cell[468906, 8615, 5457, 103, 244, "Input",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],
Cell[474366, 8720, 9200, 128, 174, "Message",ExpressionUUID->"4cebbea9-2233-4e6d-909e-ea3032ac3425"],
Cell[483569, 8850, 41796, 816, 122, "Output",ExpressionUUID->"cb3d32ef-6d47-4c60-a439-89d0b29f2379"],
Cell[525368, 9668, 206, 4, 32, "Output",ExpressionUUID->"fbc9549c-a74e-41e9-a4fe-26709afa2f54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525611, 9677, 1598, 26, 49, "Input",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],
Cell[527212, 9705, 25035, 431, 230, "Output",ExpressionUUID->"4674208d-80ee-436f-bbe6-53daf976c57d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[552320, 10144, 275, 4, 67, "Section",ExpressionUUID->"d69ea01b-c1ef-4113-8cab-b11ccf013757"],
Cell[CellGroupData[{
Cell[552620, 10152, 292, 5, 54, "Subsection",ExpressionUUID->"c8124fb5-6975-4957-950c-1a0ca8f99e5a"],
Cell[CellGroupData[{
Cell[552937, 10161, 182, 3, 45, "Subsubsection",ExpressionUUID->"8aa49981-e1b7-40e4-b201-cbbe28e3204e"],
Cell[CellGroupData[{
Cell[553144, 10168, 3996, 90, 185, "Input",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],
Cell[557143, 10260, 3620, 91, 131, "Output",ExpressionUUID->"92999f65-b37f-403e-830e-c21aff4ccc49"],
Cell[560766, 10353, 103465, 1801, 336, "Output",ExpressionUUID->"ddd072a9-0f0d-4e54-8895-bfe2e364df61"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[664304, 12162, 325, 5, 67, "Section",ExpressionUUID->"b94d5e78-6273-405e-baaa-6e385d5d2376"],
Cell[664632, 12169, 13278, 295, 767, "Input",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[677935, 12468, 510, 13, 28, "Input",ExpressionUUID->"6afb2ab1-6406-455a-ab94-2769a5499948"],
Cell[678448, 12483, 221, 4, 32, "Output",ExpressionUUID->"89d4bd28-a9c2-447b-95bc-f4e2fd84b055"]
}, Open  ]],
Cell[678684, 12490, 1208, 24, 107, "Input",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],
Cell[CellGroupData[{
Cell[679917, 12518, 4964, 110, 458, "Input",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],
Cell[684884, 12630, 1178, 29, 53, "Output",ExpressionUUID->"8fe43e2c-697d-4252-8c5a-c3c2d96ec3da"],
Cell[686065, 12661, 219, 4, 32, "Output",ExpressionUUID->"a63e5730-3820-4d7e-be7c-3fe7e96fa856"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686321, 12670, 157, 2, 28, "Input",ExpressionUUID->"b5aab08a-f9a0-4958-8e09-335872c0ec55"],
Cell[686481, 12674, 1176, 29, 53, "Output",ExpressionUUID->"cac472d6-3a64-4edd-970b-14f48568827c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687694, 12708, 568, 13, 49, "Input",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],
Cell[688265, 12723, 32224, 548, 239, "Output",ExpressionUUID->"a6d4cd27-d589-40a9-818a-6c5d43753cd2"]
}, Open  ]],
Cell[720504, 13274, 16108, 285, 884, "Input",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626",
 InitializationCell->True],
Cell[736615, 13561, 149, 2, 28, "Input",ExpressionUUID->"5fe77e72-3787-42b0-922b-c84a01b1a3a6"],
Cell[CellGroupData[{
Cell[736789, 13567, 182, 3, 45, "Subsubsection",ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-481b488627c2"],
Cell[CellGroupData[{
Cell[736996, 13574, 1995, 32, 68, "Input",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],
Cell[738994, 13608, 180240, 3463, 642, "Output",ExpressionUUID->"bed41ed5-59f3-4a10-b189-a957de0ba505"]
}, Open  ]],
Cell[CellGroupData[{
Cell[919271, 17076, 1217, 24, 68, "Input",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],
Cell[920491, 17102, 3411, 94, 131, "Output",ExpressionUUID->"44492fe2-73aa-48c5-ac06-c05533bf4a00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[923939, 17201, 1267, 29, 88, "Input",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"],
Cell[925209, 17232, 8742, 226, 96, "Output",ExpressionUUID->"8ca4ffc7-2d5f-40bb-9266-258a057d7133"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[934000, 17464, 182, 3, 45, "Subsubsection",ExpressionUUID->"27418d46-f597-4820-9d54-72d01137cc93"],
Cell[CellGroupData[{
Cell[934207, 17471, 496, 10, 49, "Input",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],
Cell[934706, 17483, 1738, 44, 239, "Output",ExpressionUUID->"cfee87a4-8fe0-4967-a70b-f8e0629bb96f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936481, 17532, 934, 18, 28, "Input",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],
Cell[937418, 17552, 103018, 1796, 339, "Output",ExpressionUUID->"6befe3c2-9f5a-4da6-8719-dab03cc8a42a"]
}, Open  ]],
Cell[1040451, 19351, 2585, 81, 107, "Input",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],
Cell[CellGroupData[{
Cell[1043061, 19436, 1910, 40, 146, "Input",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],
Cell[1044974, 19478, 7645, 222, 391, "Output",ExpressionUUID->"03e58d06-146f-4621-a965-636af5faa5b6"]
}, Open  ]],
Cell[1052634, 19703, 1253, 32, 127, "Input",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

