(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    623888,      11730]
NotebookOptionsPosition[    615378,      11576]
NotebookOutlinePosition[    615969,      11597]
CellTagsIndexPosition[    615926,      11594]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Constrained method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, 
   3.843831097875743*^9},ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-\
04efcb90444f"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 3.843153621995445*^9}, {
  3.843752212635614*^9, 
  3.8437522150627623`*^9}},ExpressionUUID->"564bd16b-5ad2-477e-879c-\
a49b47193581"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431523924971895`*^9, 3.84315239273125*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->
  "In[476]:=",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{
  3.843747328636345*^9, {3.8437486091702127`*^9, 3.8437486224305134`*^9}, {
   3.8445130212660832`*^9, 3.844513027637513*^9}},
 CellLabel->
  "In[478]:=",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.8444602155397797`*^9, 
   3.844460218580969*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-\
e28adb0822c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "4"}], ",", 
           RowBox[{"30", "-", "4"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9, {
   3.8445119817060966`*^9, 3.844511983305078*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
       ",", 
       RowBox[{
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}, {3.8445127985159717`*^9, 3.8445128295209723`*^9}},
 CellLabel->
  "In[484]:=",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
XuVE/Ad94Us3
       "]]},
     Annotation[#, "Charting`Private`Tag$10787#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13lcTG8XAPDRXtq10qZNaJs7ldLynH6opI2UIiS0SYtsRYi0SdoQWkzN
jDZJ2ihuqJSSolWquSNKKkmlTd77/jWf72funXvuec45zzNrvYJ2HeWiUChP
VlAo//+cKh/IolAm0bG/ruFFt+n4Xb3FoUD1SXR94/anu3LpuGW+7MZ+m0lE
T5A4M15Mx5MynCqfJk+iSuNgG0oDHde78ur9CbVfqD7oJO3ubzoe4MSifLWa
QnqSkk9u2eXg30aPezVdn0YXfwZlBM7k4IlH4vM2lU6j6me5s8n/cnDDAdYE
s2sayVsK3M0TzMWj2gfDLyvPINm24puPFHNxtaqdqaaPZ1CKbuROtW25uOdV
w7qHHbNImFV2+E5yLv5J+a9Gypp5dMFK3ei8CgO36CC+im+ZRyUvEroK1zPw
3NgG5g3/eZSkUSzXjDHwgF83NK4/nUfToW+derYy8OVXqhqxexaQErf+Jm1f
Bq7qbaN+IXURGfl9k3xUyMCjV+sMLT1bRF3TrvwfnzDwH60SjHOcRWRnadrz
tZqBl23qUwujLiGvdpGB7mYGbiUYqHby/RJqfU5XGRtl4H5Fqar+K5cRxaqm
8q0GE2/1PMsZwZbRXX5OYZc2E8ek9+f47F1G+h5GlW00Jr4Qoal6NH8ZCYXK
cxItmXiC49O1ntb/ENsqSQ/zYOJuYUHihZYUuMB7dlAwkYnHfzwU7O9CgVvK
lIu/Upl4jc7utvV+FGBnhQQ33GHiaznGSXlJFIiOxGWNmUx81JZLnDVIgZGG
d0om1Uz8vMJNMXrECtjc9mPrgy9MPC+0OEAiaQX03H3YKzrCxDvevmmKzFkB
HTcHwo6OMXGdsIUrXm9WQPha37LBaSY+0HlwTk2CC7DHYvN8vCxcSCfMJU2N
C+qULdu+CrDwTVEppTxGXLC58abXE2EWnoTVB3zdywXBzZeTVkuxcMsbGwgW
gwv8aw7Nyaqy8MBvWyxkK7lAaU3ujWMaLPyu+f57MU1cYPy8OvmhFguf+nHD
xXeCC6DNrnhJl4UzbGaa1htzg5DzkF7DZhbeli267q4tN3BNdPIkmLPwpdl1
UUL7uYHduWsaAQt3Ye61+BHJDctJjQsh21g4H1dtaVEzNxh13Un468DCMfde
McUBbkiY71Og7WThB0umAq5PcoNd6P4zrs4svOqAxrpAaR7oCJzz8t7DwofK
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
8w0=
       "]]},
     Annotation[#, "Charting`Private`Tag$10787#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 30}, {-0.043836299904091436`, 0.6687693491405521}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.845464173094145*^9, 3.845657119840164*^9, 
  3.845918220719572*^9, 3.8459184762774835`*^9, 3.845918597917674*^9, 
  3.8459188695469418`*^9, 3.845997862624544*^9, 3.845998623557855*^9, 
  3.845999822814056*^9, 3.8460000159555874`*^9, 3.846000238319934*^9, 
  3.846001077427862*^9, 3.846001763431698*^9, 3.8460018024292245`*^9, 
  3.8460021484537106`*^9, 3.8460188912413273`*^9, 3.8460191891720667`*^9, 
  3.846019972903713*^9, 3.84602157945201*^9, 3.8460234568067136`*^9, 
  3.84608420430811*^9, 3.846087849485326*^9},
 CellLabel->
  "Out[487]=",ExpressionUUID->"fb43d087-defb-497a-b213-40bc5ff1505e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D (PyrFlow1D)", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.843153511988031*^9, 
  3.843153515512398*^9}},ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-\
301a424457b1"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"86d2106e-d02d-4249-a85a-\
97f3df8af812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "update", " ", "values", " ", "of", " ", "v1", 
    " ", "and", " ", "v2", " ", "with", " ", "Over", " ", "Constrained", " ", 
    "standards"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Any", " ", "value", " ", "that", " ", "does", " ", "not", " ", "meets", 
    " ", "the", " ", "constraints", " ", "becomes", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}], ",", " ", 
        RowBox[{"and", " ", "counter", " ", "e"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status", " ", "and", " ", "e"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", "c", ",", 
         "d1", ",", "d2", ",", "dv1", ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e"}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitud", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "n"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e"}], "}"}],
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}],
                "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", 
                "0"}]}], ")"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"e", "<", "2"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                  RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e"}], 
                 "}"}], "]"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.01"}], 
             ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", "e"}],
           "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "No", " ", "other", " ", "solution", " ", "will", " ", "be", " ", 
     "calculated", " ", "when", " ", "status", " ", "records", " ", "an", " ",
      "error", " ", "message", " ", "in", " ", "this", " ", "pyramidal", " ", 
     "level"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "n"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "0.", ",", "status", ",", "n"}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840549828869686*^9, 
   3.840549841777425*^9}, {3.8405509817557898`*^9, 3.840550982064629*^9}, {
   3.8405510933457384`*^9, 3.8405510984627314`*^9}, {3.8405511395527105`*^9, 
   3.840551141478009*^9}, {3.841319162361234*^9, 3.841319168699852*^9}, {
   3.842638275839821*^9, 3.842638283825076*^9}, 3.843047150844548*^9, {
   3.843047683246418*^9, 3.8430478826039906`*^9}, {3.8430662477842984`*^9, 
   3.84306626706721*^9}, {3.843066357433008*^9, 3.84306638005869*^9}, {
   3.843066471098827*^9, 3.843066471456827*^9}, {3.8430665682341595`*^9, 
   3.8430665823535037`*^9}, {3.843066614023039*^9, 3.8430666158403826`*^9}, {
   3.8430666478257236`*^9, 3.8430666560026145`*^9}, {3.843066691062875*^9, 
   3.843066695028036*^9}, {3.8430670820101533`*^9, 3.8430670822719493`*^9}, {
   3.8431531584724064`*^9, 3.8431532415742707`*^9}, {3.8431541924011116`*^9, 
   3.8431542010920024`*^9}, {3.8431543579685593`*^9, 3.84315458831942*^9}, {
   3.8436736200598516`*^9, 3.843673659839816*^9}, {3.843675802266506*^9, 
   3.84367580324864*^9}, {3.843676094738164*^9, 3.843676095993743*^9}, {
   3.843676148112191*^9, 3.843676217593154*^9}, {3.843747759180975*^9, 
   3.8437478035510416`*^9}, {3.843747837199093*^9, 3.843747911811542*^9}, 
   3.8437479433562737`*^9, {3.843748377618887*^9, 3.843748418267103*^9}, 
   3.8437487463423266`*^9, {3.8437522385411882`*^9, 3.8437522397665625`*^9}, {
   3.843752288076639*^9, 3.843752310561741*^9}, {3.843752372567502*^9, 
   3.8437523938328533`*^9}, {3.8437532528926954`*^9, 3.843753253873748*^9}, {
   3.8437532996776743`*^9, 3.8437533168563538`*^9}, {3.8437535125676455`*^9, 
   3.843753519661378*^9}, 3.8437535832591257`*^9, {3.8437536229410996`*^9, 
   3.8437536714702573`*^9}, {3.843753713138695*^9, 3.843753713497829*^9}, {
   3.8437538032027535`*^9, 3.8437538110533333`*^9}, {3.8437541111506634`*^9, 
   3.843754123500203*^9}, {3.843756514694689*^9, 3.8437565228370256`*^9}, {
   3.844259791226394*^9, 3.844259814136951*^9}, {3.8443564826670113`*^9, 
   3.8443564849271317`*^9}, {3.8443619303990293`*^9, 3.844361934480361*^9}, {
   3.844368304375413*^9, 3.8443683086155677`*^9}, {3.8444602254264507`*^9, 
   3.8444602371283655`*^9}, {3.84451200345923*^9, 3.844512005814104*^9}, {
   3.8445156047558804`*^9, 3.844515606918198*^9}, {3.8445158304009256`*^9, 
   3.8445158324047036`*^9}, {3.84451649753236*^9, 3.8445165016123977`*^9}, {
   3.8447823272091274`*^9, 3.844782349008145*^9}, {3.844782526684991*^9, 
   3.844782536256265*^9}, {3.8447826509613276`*^9, 3.8447826523153005`*^9}, {
   3.8447826850334997`*^9, 3.844782691498364*^9}, {3.845918060041156*^9, 
   3.8459181031181545`*^9}, 3.8459184702466784`*^9, {3.845999275777835*^9, 
   3.845999282502781*^9}, {3.8459997280634265`*^9, 3.84599975722418*^9}, {
   3.8459997899691124`*^9, 3.845999798075818*^9}, {3.8460001536819735`*^9, 
   3.8460001549021235`*^9}, 3.8460207290920916`*^9, {3.846086347396666*^9, 
   3.8460863496307783`*^9}, {3.8460864047584777`*^9, 
   3.8460864419004726`*^9}, {3.846086481744698*^9, 3.8460864838225775`*^9}, {
   3.8460865281713114`*^9, 3.8460865302178683`*^9}},
 CellLabel->
  "In[488]:=",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"09c54b45-a793-4cfd-ad20-\
2e7a5f10a972"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "3.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "10."}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.844782546275529*^9, 3.8447825467162204`*^9}, 
   3.844782672224075*^9, {3.846084808331871*^9, 3.846084901361394*^9}},
 CellLabel->
  "In[493]:=",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}, {
  3.844515659297496*^9, 3.844515674142517*^9}},
 CellLabel->
  "In[496]:=",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", "p", 
     ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "noteBookMode"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9},
 CellLabel->
  "In[498]:=",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9934902162924366`", ",", "2.867290705221706`", ",", "\<\"ok\"\>", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.845464173153974*^9, 3.845657119887639*^9, 3.8459182207764173`*^9, 
   3.8459184763352175`*^9, 3.845918597970253*^9, 3.84591886960937*^9, 
   3.8459978627055354`*^9, 3.845998623625846*^9, 3.84599982286029*^9, 
   3.846000016036371*^9, 3.846000238430538*^9, 3.846001077471328*^9, 
   3.8460017634805737`*^9, 3.8460018024767523`*^9, 3.846002148509054*^9, 
   3.8460188912896285`*^9, 3.846019189223137*^9, 3.846019972955851*^9, 
   3.846020734318001*^9, 3.8460215794998503`*^9, 3.8460234568525915`*^9, {
   3.8460847908203487`*^9, 3.846084904063655*^9}, 3.8460859377934427`*^9, 
   3.846087849594672*^9},
 CellLabel->
  "Out[498]=",ExpressionUUID->"38b31532-864d-402e-a746-8dcb7bf8a3a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9, 3.8445156454523244`*^9},
 CellLabel->
  "In[499]:=",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
tlNdVAawOBsborHLXDx3OcozwG9nwFEX7DzzkxmTCgy4f/KLwXbsK7qRM6cY
DHBzNrdbjR3FvqK/SpEBU69ia/txPE+RC7JSWAyoLvDzuIbtzX+XK8dmgErW
SPARbKf5/wzvKjPg6ZX6OXlsy8/Pc7Q3MWDUvm/6A86nUc+b762bGbDYtt4n
HVu7adTokBoD/MtNwoywqTnL5vy2MkBbQSk9H9cHKW6dyV8NBrjbxVX+v34E
Tklfi9/GgJL9tumjuL64Ftv3lWgzQKSV+ELGblztXzy4kwEpw88kDuJ6rfx1
7renHgP0JHvfvsX1XfwlYf+8PgN8bmq22mInPC79I2zEgA8Cp1z34/1gd2b4
oKEpAyQ/8C5tOIb7ldfMrVdmDDhZ/z09BO+vXVZLy5z3M6AiRObZe7z/WFvE
756xZIDv70JyricXLUyYrbpny4A/v6Lnv+P9PdXvYK9rzwDmuvjrgP3h6bHK
dgdcL3lVe+PduOhpYYzjmBOOb9DoUzFXvP9tiRpJDwY4Cc42CzlxkWqbikf0
CQZ4f50mh9ng/NhEJW4NYoCm/fvKZNyPfowPVn0+yYD3PzLu5VnhfPPF8uiF
MOB2D1OhCvcvLYNPmf/CGPB6qL+C2I/3c9PVF6cuMaBh3Y3/gnB/tK7hUTt2
kwHDG1xLW3E/rjewsibfYgBvRwu3WAPXb9+dc89vM+B8ZM+diK1c9G7Wtp1R
gfNBv/tMawsXuajed/tcg+u3J97whgquh9teVx1a8Poq1vacx/0+rLBnyewD
A7JKrigW4vOi+d3LnR+HcfwoGZYFG7iIV6IjOvAjA5RGmS/z13NRTNIz4cxR
BgzsNh8vXIf7dWiD/MdJPL/EALn/VnNR7qGSvYELDKgsGz2IePH5cPn65VWL
DIAFq/+sV3CRXEfB64zfDLDNGDUIXM5FRXrZTg//4vX21Py7x8NFtzcnB65a
yYTdBb/3XlnE569gSE7GeibsP0MfaZ/moCWD4BHWRia0SvT57Z7iIN3wQPpD
ESaw3p0NfjbBQc0/fStGxJjgsYv2pvcLBz3/7NrCkmHCfOoFB/mPHNTfuG+q
gcWEp+1tgVfw+UteNFY1YzNhRfdfA4vXHGS/1ejkiDITJB8064n3cdCHW7t4
Vqky4caNw5V3e/D5nqEpYqbJhH1/q96u6eSguQCKzogeE8RX/9SNe8JBRWYe
+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
1+3+ro/es+Ae373D/8/HpQjrHdkjLGAGqd62xf6VH799zycWrNfPOnAQ2+1h
49afn1nQSP+vyAxbe0FexWIc509tyVQPu0TUmrVsAtfXcEypzv/zvyWeXj6J
+8Wdwoqt2OM+32RWc1hw6679y//Xn0W8vGQ9lwVynh5fZLAbS63EPL6zYJNJ
fwUJO+3Tw3WP51iwNvOx7UrsXTZxPGeWWKBecE3mA673OycfLjH/smDhe2Nf
L7Z4Knfh9T8WbI7i6rVhczoPfVNboQRjAR5G1dg5+rSPEwJKMEpErYzC5nM5
9D5jtRI02NJjT2EHnI8dMFyrBMPGsc+PYe95wOkpFFaC+a0+F/Zjz29qeGwr
pgTvLlziSGCbSR4sbpNXAh2XnUb5uF9kfVZpsqPj3+/T4E/GHrvDPzjFUII4
FHY1DPscPgnWKSmB3GFnujP23SO0UAtVJXhbc0ZUDntNxbcDQzuU4CAv60Ea
7mfP9S/xzBxSAjSvQXfD/VJEyFPyvLUS1IjcnDHDdnqzU0PYVgk+x41kaGMv
eM0dU3NQgozS2dQN2Mwk+zcnXZXgfRehTeD+HP2WdfffcSX4T3j9k43Yer7P
7NbHKkEs2/nlHXweLPV/NWyJU4KNJzbzpGHX6K1RC05QAsUV6rRQbKbEfv53
SUqwaNu6yxhbqGWgujRdCVzc65ZG8fkzIDGzFoqU4G7fHh4p7IAnIk2+BF6/
c/fRGHx+sTdr3qI8UoJIbpqpL/Zolk16b7MS6F5br3MQ29ovz1vrqRLMNsto
0rB1JZkSqzqUICGS2kzg72tBf+2A3AElGP/q2vUbn5/XpFzkX8wpQdZFn++R
+HzV2aKk4vJTCYQnwuaPY7/e80NzYUEJkrXPi9lhCwZHm8gvKYHT54JKVeyA
7rKA0OVsGBa+8V/TPw7aFT3bxF7HBt0z2QExf/H3Vk5DW7MwG2KLfx51xj5Z
FdVrvYENLrml17Wxy4bFxiNF2fBojv819w8HbdTWWfdOkg0Kex7rOmJ/5kQ6
JDLZkBkiI2eA7w/nVpl60FhseH72mTQNW1xazL9eiQ1Rpk/slmHvNb4ZOarC
hlJrIqPxN/5eKOq4tWMrGzLW3SHpYEfZkBand7JBjv84VQ/fT+iPb6Sb2rGh
h5Z4OhzfX7rYC0VD9mz4aTCywhM7JN2o6qgjGxrWCrwwxe7w+voy2pkNSpde
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
yHKRWEzhxoCjWIz+H/xyw0c=
        "]]},
      Annotation[#, "Charting`Private`Tag$10836#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$10836#2"]& ]}, {}}, {
    PointBox[{{10., 0.04969024160430335}, {10., 0.0993804832086067}, {
     10., -5.421010862427522*^-20}}], 
    PointBox[{{9.006509783707564, 0.04969024160430335}, {12.867290705221706`, 
     0.04969024160430335}}], 
    LineBox[{{10., 0.0993804832086067}, {10., -5.421010862427522*^-20}}], 
    LineBox[{{9.006509783707564, 0.04969024160430335}, {12.867290705221706`, 
     0.04969024160430335}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{5., 15.}, {-0.028786040543277963`, 1.0288025645345067`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8454641732273397`*^9, 3.845657119958444*^9, 3.8459182208523064`*^9, 
   3.8459184764054565`*^9, 3.8459185980372314`*^9, 3.8459188696761923`*^9, 
   3.8459978627626047`*^9, 3.8459986236764145`*^9, 3.84599982291584*^9, 
   3.846000016134815*^9, 3.846000238513461*^9, 3.846001077527213*^9, 
   3.8460017635397024`*^9, 3.8460018025366144`*^9, 3.8460021485749164`*^9, 
   3.846018891361373*^9, 3.8460191892828693`*^9, 3.846019973021202*^9, 
   3.846020735676855*^9, 3.8460215795682745`*^9, 3.8460234569360886`*^9, {
   3.8460847927729893`*^9, 3.8460849053446074`*^9}, 3.846085938871336*^9, 
   3.846087849672747*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"adc87bf9-8d04-4386-a602-731cbb811265"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"a4c25ec2-f772-4494-87f0-\
6c86ae6eb27a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"random", " ", "values", " ", "between", " ", "10", " ", "and"}],
      " ", "-", "10"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"newValues", "[", 
    RowBox[{"i_", ",", 
     RowBox[{"{", 
      RowBox[{"v1_", ",", "v2_", ",", "status_"}], "}"}], ",", "newv0_", ",", 
     "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "r", ",", "rs"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"v1", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "\[NotEqual]", "0."}], " ", "&&", " ", 
          RowBox[{"status", "\[Equal]", "\"\<ok\>\""}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "=", 
             RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"1", "-", "r"}]}], "}"}], "*", "v"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "i"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", "newv0"}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8444612782790546`*^9, 3.844461325604576*^9}, {
   3.8444614444947405`*^9, 3.844461444680009*^9}, {3.8444616627212477`*^9, 
   3.8444617077996845`*^9}, {3.844461750131506*^9, 3.844461922366767*^9}, 
   3.844461992692705*^9, {3.844512017440218*^9, 3.8445120256983542`*^9}, {
   3.8445122065868797`*^9, 3.8445122095714564`*^9}, {3.844513491064845*^9, 
   3.844513494072491*^9}, {3.8445142258228316`*^9, 3.844514312429041*^9}, {
   3.844514415782257*^9, 3.844514441020333*^9}, 3.8445145878545675`*^9, {
   3.844516209750566*^9, 3.8445162128424377`*^9}, {3.844516353977727*^9, 
   3.8445164220099287`*^9}, {3.8445200934575386`*^9, 
   3.8445200959212675`*^9}, {3.844955341554967*^9, 3.8449553524295*^9}, {
   3.8450304282022247`*^9, 3.8450304305575495`*^9}, 3.845037288844064*^9, {
   3.845037352023071*^9, 3.8450373985419507`*^9}, {3.8450374655873547`*^9, 
   3.8450374689407897`*^9}, {3.845037715084822*^9, 3.845037758048954*^9}, {
   3.8450448673646674`*^9, 3.845044868815566*^9}, {3.845046972287678*^9, 
   3.845046973292132*^9}, {3.8459181523994007`*^9, 3.845918212292648*^9}, {
   3.8459184851144123`*^9, 3.845918488148816*^9}, {3.845918637593907*^9, 
   3.845918651943948*^9}, 3.8459188651809173`*^9, {3.8460197890200834`*^9, 
   3.8460198128202815`*^9}, {3.8460198949855614`*^9, 3.8460199127711*^9}, {
   3.846020910983465*^9, 3.846020914248888*^9}, {3.846020948908036*^9, 
   3.8460209591148877`*^9}, {3.846021089282728*^9, 3.846021127719087*^9}, {
   3.8460851128439245`*^9, 3.8460851170900936`*^9}, {3.8460856051591797`*^9, 
   3.846085605331028*^9}},
 CellLabel->
  "In[500]:=",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "We", " ", "create", " ", "the", " ", "list", " ", "of", " ", "values", 
     " ", "in", " ", "case", " ", "v"}], "=", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8450447961470428`*^9, 3.84504486192747*^9}, {
   3.8450477213099747`*^9, 3.845047735608878*^9}, {3.845998533077533*^9, 
   3.845998537668522*^9}, 3.846021855425663*^9, 3.8460219091850967`*^9},
 CellLabel->
  "In[501]:=",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nV", "=", 
  RowBox[{"newValues", "[", 
   RowBox[{"10", ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "\"\<sign\>\""}], "}"}], ",", "newv0", 
    ",", "\"\<ConstrainedNewMethod\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Total", "/@", "nV"}]}], "Input",
 CellChangeTimes->{{3.8444617140346737`*^9, 3.8444617347846212`*^9}, {
   3.844461808872343*^9, 3.8444618170070076`*^9}, {3.8444619033008537`*^9, 
   3.8444619337709484`*^9}, {3.8445122194771366`*^9, 
   3.8445122413158827`*^9}, {3.844512362020856*^9, 3.844512362180772*^9}, {
   3.8445143201938887`*^9, 3.8445143394214225`*^9}, {3.844514444454789*^9, 
   3.844514453803335*^9}, 3.844516223273226*^9, {3.8450374078987455`*^9, 
   3.845037428030212*^9}, {3.84504487350133*^9, 3.8450448751270533`*^9}, {
   3.845047741752062*^9, 3.8450477436917725`*^9}, {3.8459182397694316`*^9, 
   3.8459182457373877`*^9}, {3.845998523959859*^9, 3.845998524451099*^9}, {
   3.846021755261832*^9, 3.8460217586190915`*^9}, {3.846085848611929*^9, 
   3.8460858946636086`*^9}, {3.8460860381303816`*^9, 
   3.8460860426293545`*^9}, {3.8460865712288933`*^9, 3.8460865730409603`*^9}},
 CellLabel->
  "In[504]:=",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12301615703372765`", ",", "0.07698384296627236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2460323140674553`", ",", "0.15396768593254473`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36904847110118294`", ",", "0.23095152889881712`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4920646281349106`", ",", "0.30793537186508946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6150807851686382`", ",", "0.3849192148313618`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7380969422023659`", ",", "0.46190305779763424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8611130992360936`", ",", "0.5388869007639066`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9841292562698212`", ",", "0.6158707437301789`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1071454133035488`", ",", "0.6928545866964513`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2301615703372764`", ",", "0.7698384296627236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3531777273710042`", ",", "0.8468222726289961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4761938844047318`", ",", "0.9238061155952685`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5992100414384594`", ",", "1.0007899585615407`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7222261984721872`", ",", "1.077773801527813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8452423555059145`", ",", "1.1547576444940855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9682585125396423`", ",", "1.2317414874603578`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.09127466957337`", ",", "1.3087253304266304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2142908266070975`", ",", "1.3857091733929026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.337306983640825`", ",", "1.462693016359175`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4603231406745527`", ",", "1.5396768593254473`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5833392977082803`", ",", "1.6166607022917197`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7063554547420083`", ",", "1.6936445452579922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.829371611775736`", ",", "1.7706283882242646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9523877688094635`", ",", "1.847612231190537`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.075403925843191`", ",", "1.9245960741568091`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07698384296627236`", ",", "0.12301615703372765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15396768593254473`", ",", "0.2460323140674553`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23095152889881712`", ",", "0.36904847110118294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30793537186508946`", ",", "0.4920646281349106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3849192148313618`", ",", "0.6150807851686382`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46190305779763424`", ",", "0.7380969422023659`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5388869007639066`", ",", "0.8611130992360936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6158707437301789`", ",", "0.9841292562698212`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6928545866964513`", ",", "1.1071454133035488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7698384296627236`", ",", "1.2301615703372764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8468222726289961`", ",", "1.3531777273710042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9238061155952685`", ",", "1.4761938844047318`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0007899585615407`", ",", "1.5992100414384594`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.077773801527813`", ",", "1.7222261984721872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1547576444940855`", ",", "1.8452423555059145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2317414874603578`", ",", "1.9682585125396423`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3087253304266304`", ",", "2.09127466957337`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3857091733929026`", ",", "2.2142908266070975`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.462693016359175`", ",", "2.337306983640825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5396768593254473`", ",", "2.4603231406745527`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6166607022917197`", ",", "2.5833392977082803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6936445452579922`", ",", "2.7063554547420083`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7706283882242646`", ",", "2.829371611775736`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.847612231190537`", ",", "2.9523877688094635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9245960741568091`", ",", "3.075403925843191`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4000000000000004`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8000000000000003`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.6`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8000000000000003`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6000000000000005`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.800000000000001`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.6000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.2000000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.4000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.4000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2.8000000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.4000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.8000000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.6000000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.800000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "5.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845464173312419*^9, 3.8456571200375137`*^9, {3.8459182209510374`*^9, 
   3.845918250321363*^9}, 3.8459184765082817`*^9, 3.8459185234802847`*^9, 
   3.845918598116514*^9, {3.845918658502438*^9, 3.845918666383337*^9}, 
   3.845918869796836*^9, 3.8459978628244333`*^9, {3.8459985254507666`*^9, 
   3.8459985404849577`*^9}, 3.8459986237460513`*^9, 3.84599982299198*^9, 
   3.8460000162455263`*^9, 3.8460002385946426`*^9, 3.8460010775936937`*^9, 
   3.846001763617594*^9, 3.846001802611309*^9, 3.846002148688633*^9, 
   3.8460188914342127`*^9, 3.8460191893547134`*^9, 3.846019973098221*^9, 
   3.8460207497339187`*^9, 3.8460209282575936`*^9, 3.8460209680157757`*^9, {
   3.8460211079591217`*^9, 3.8460211335254807`*^9}, 3.8460215796471033`*^9, 
   3.8460217591384974`*^9, {3.846021799373912*^9, 3.8460218027444057`*^9}, 
   3.846021857508373*^9, 3.84602191071506*^9, 3.846023457027272*^9, 
   3.8460851208858533`*^9, {3.846085849861377*^9, 3.8460858952726088`*^9}, 
   3.8460860431290073`*^9, {3.8460865682293634`*^9, 3.8460865740248795`*^9}, 
   3.8460878497508593`*^9},
 CellLabel->
  "Out[504]=",ExpressionUUID->"12ebc3fa-a0c1-4c26-9080-1653ca91e32f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.2`", ",", "0.4`", ",", "0.6000000000000001`", ",", "0.8`", 
   ",", "1.`", ",", "1.2000000000000002`", ",", "1.4000000000000001`", ",", 
   "1.6`", ",", "1.8`", ",", "2.`", ",", "2.2`", ",", "2.4000000000000004`", 
   ",", "2.6`", ",", "2.8000000000000003`", ",", "3.`", ",", "3.2`", ",", 
   "3.4000000000000004`", ",", "3.6`", ",", "3.8`", ",", "4.`", ",", "4.2`", 
   ",", "4.4`", ",", "4.6000000000000005`", ",", "4.800000000000001`", ",", 
   "5.`", ",", "0.`", ",", "0.2`", ",", "0.4`", ",", "0.6000000000000001`", 
   ",", "0.8`", ",", "1.`", ",", "1.2000000000000002`", ",", 
   "1.4000000000000001`", ",", "1.6`", ",", "1.8`", ",", "2.`", ",", "2.2`", 
   ",", "2.4000000000000004`", ",", "2.6`", ",", "2.8000000000000003`", ",", 
   "3.`", ",", "3.2`", ",", "3.4000000000000004`", ",", "3.6`", ",", "3.8`", 
   ",", "4.`", ",", "4.2`", ",", "4.4`", ",", "4.6000000000000005`", ",", 
   "4.800000000000001`", ",", "5.`", ",", "0.`", ",", "0.2`", ",", "0.4`", 
   ",", "0.6000000000000001`", ",", "0.8`", ",", "1.`", ",", 
   "1.2000000000000002`", ",", "1.4000000000000001`", ",", "1.6`", ",", 
   "1.8`", ",", "2.`", ",", "2.2`", ",", "2.4000000000000004`", ",", "2.6`", 
   ",", "2.8000000000000003`", ",", "3.`", ",", "3.2`", ",", 
   "3.4000000000000004`", ",", "3.6`", ",", "3.8000000000000003`", ",", "4.`",
    ",", "4.2`", ",", "4.4`", ",", "4.6000000000000005`", ",", 
   "4.800000000000001`", ",", "5.`", ",", "0.`", ",", "0.2`", ",", "0.4`", 
   ",", "0.6000000000000001`", ",", "0.8`", ",", "1.`", ",", 
   "1.2000000000000002`", ",", "1.4000000000000001`", ",", "1.6`", ",", 
   "1.8`", ",", "2.`", ",", "2.2`", ",", "2.4000000000000004`", ",", "2.6`", 
   ",", "2.8000000000000003`", ",", "3.`", ",", "3.2`", ",", 
   "3.4000000000000004`", ",", "3.6`", ",", "3.8000000000000003`", ",", "4.`",
    ",", "4.2`", ",", "4.4`", ",", "4.6000000000000005`", ",", 
   "4.800000000000001`", ",", "5.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.845464173312419*^9, 3.8456571200375137`*^9, {3.8459182209510374`*^9, 
   3.845918250321363*^9}, 3.8459184765082817`*^9, 3.8459185234802847`*^9, 
   3.845918598116514*^9, {3.845918658502438*^9, 3.845918666383337*^9}, 
   3.845918869796836*^9, 3.8459978628244333`*^9, {3.8459985254507666`*^9, 
   3.8459985404849577`*^9}, 3.8459986237460513`*^9, 3.84599982299198*^9, 
   3.8460000162455263`*^9, 3.8460002385946426`*^9, 3.8460010775936937`*^9, 
   3.846001763617594*^9, 3.846001802611309*^9, 3.846002148688633*^9, 
   3.8460188914342127`*^9, 3.8460191893547134`*^9, 3.846019973098221*^9, 
   3.8460207497339187`*^9, 3.8460209282575936`*^9, 3.8460209680157757`*^9, {
   3.8460211079591217`*^9, 3.8460211335254807`*^9}, 3.8460215796471033`*^9, 
   3.8460217591384974`*^9, {3.846021799373912*^9, 3.8460218027444057`*^9}, 
   3.846021857508373*^9, 3.84602191071506*^9, 3.846023457027272*^9, 
   3.8460851208858533`*^9, {3.846085849861377*^9, 3.8460858952726088`*^9}, 
   3.8460860431290073`*^9, {3.8460865682293634`*^9, 3.8460865740248795`*^9}, 
   3.846087849766509*^9},
 CellLabel->
  "Out[505]=",ExpressionUUID->"c6486635-6b32-43c1-aaab-1570c9bf206c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "will", " ", "give", " ", "back", " ", "a", " ", "value", 
     " ", "that", " ", "converged", " ", "or", " ", "is", " ", "on", " ", 
     "\"\<ok\>\"", " ", 
     RowBox[{"status", ".", " ", "If"}], " ", "not"}], ",", " ", 
    RowBox[{"error", " ", "is", " ", "returned", " ", "and", " ", 
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2"}], "}"}], " ", "goes", " ", "back", " ", "to", 
     " ", "0."}]}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pickNewValue", "[", 
    RowBox[{"tableNewVals_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newValCon", ",", "newValAny"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newValCon", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
              RowBox[{"(", "\"\<converged\>\"", ")"}]}], "&&", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], 
            ")"}], "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newValAny", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"tableNewVals", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], 
            ")"}], "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"newValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"newValAny", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"tableNewVals", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"newValCon", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"newValAny", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}], "!=", 
              "\"\<converged\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{"newValAny", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverged\>\"", ",", 
                RowBox[{
                 RowBox[{"newValAny", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "4"}], "]"}], "]"}], "+", "1"}]}], "}"}],
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"newValCon", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844462754631737*^9, 3.8444628201358075`*^9}, {
   3.8444628882695293`*^9, 3.8444629100440626`*^9}, 3.844463007546508*^9, {
   3.8444630757865353`*^9, 3.8444631139402637`*^9}, {3.844463401643854*^9, 
   3.8444634786750946`*^9}, {3.844463586249464*^9, 3.8444636494751883`*^9}, {
   3.844463682583321*^9, 3.8444637031772294`*^9}, {3.844463924790797*^9, 
   3.8444639289631586`*^9}, {3.8444639810663843`*^9, 3.8444641244819984`*^9}, 
   3.8444687035611553`*^9, {3.844512874276967*^9, 3.8445129886481595`*^9}, {
   3.8445141007182693`*^9, 3.844514126835699*^9}, {3.844514163494574*^9, 
   3.8445141666815147`*^9}, {3.844514595376998*^9, 3.8445146477215595`*^9}, {
   3.8449553556067853`*^9, 3.8449553559599857`*^9}, 3.8450378756013985`*^9, {
   3.845037940092245*^9, 3.845037999784536*^9}, {3.8450384331500416`*^9, 
   3.845038435309373*^9}, {3.845038775409644*^9, 3.8450388297344503`*^9}, {
   3.8450389859878855`*^9, 3.8450390344000597`*^9}, {3.8456575620143347`*^9, 
   3.8456575685119963`*^9}, {3.845998611362694*^9, 3.845998617607574*^9}, 
   3.8460020989436474`*^9, {3.846018677328916*^9, 3.846018677775216*^9}, 
   3.846018880796386*^9, {3.846019116136244*^9, 3.846019173366503*^9}, {
   3.8460192515065284`*^9, 3.8460192528890114`*^9}, {3.846019610710576*^9, 
   3.846019619271961*^9}, 3.846020801971831*^9, {3.846021529128915*^9, 
   3.846021536340768*^9}, {3.8460852132039795`*^9, 3.8460852169216146`*^9}, {
   3.846085530410911*^9, 3.8460855309110503`*^9}, {3.8460869673692822`*^9, 
   3.846087000251961*^9}, {3.8460871143659906`*^9, 3.8460871172715235`*^9}, {
   3.8460877961782217`*^9, 3.846087844208644*^9}},
 CellLabel->
  "In[506]:=",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"updateValues", "=", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
      "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude", 
      " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ", 
      "v0"}], " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
    "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ", "fed", 
     " ", "to", " ", "the", " ", "function", " ", "to", " ", "try", " ", 
     "all", " ", 
     RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nV", "=", 
    RowBox[{"newValues", "[", 
     RowBox[{"10", ",", 
      RowBox[{"updateValues", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "newv0", ",", 
      "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tableNV", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tValues", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", 
           RowBox[{"updateValues", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tValues", "=", 
          RowBox[{"PyrUpgrade1D", "[", 
           RowBox[{"tValues", ",", "p0", ",", "  ", 
            RowBox[{"pyrf12", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"threshold", "*", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", 
            "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "tValues"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"pickNewValue", "[", 
   RowBox[{"tableNV", ",", "\"\<ConstrainedNewMethod\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.844512465652463*^9, 3.8445126589651527`*^9}, 
   3.844512696700407*^9, {3.8445127397523556`*^9, 3.8445127770015326`*^9}, 
   3.844512836960084*^9, {3.844514523287268*^9, 3.844514592311226*^9}, 
   3.8445146572758875`*^9, {3.8445157328956614`*^9, 3.8445157967537203`*^9}, {
   3.844515854741083*^9, 3.8445158692234373`*^9}, {3.844515900171852*^9, 
   3.8445159113818007`*^9}, {3.844960825416167*^9, 3.8449608326621675`*^9}, 
   3.8450378099077854`*^9, 3.845038006025897*^9, {3.845039038790265*^9, 
   3.8450390397869205`*^9}, {3.845044890366269*^9, 3.8450448920499763`*^9}, {
   3.845047769282398*^9, 3.845047795159435*^9}, {3.84591828507213*^9, 
   3.8459182912915144`*^9}, 3.846019257618719*^9, {3.8460208160192947`*^9, 
   3.8460208645720215`*^9}, {3.8460209788702793`*^9, 3.8460209926060295`*^9}, 
   3.846021742436345*^9, {3.8460218159794292`*^9, 3.8460218163150682`*^9}, {
   3.8460219593228226`*^9, 3.846022029946898*^9}, {3.8460220758808374`*^9, 
   3.8460220762055054`*^9}, {3.8460230529286184`*^9, 3.8460231106115284`*^9}},
 CellLabel->
  "In[507]:=",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09656164663115077`", ",", "3.8872456244636155`", 
   ",", "\<\"converged\"\>", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454641733961973`*^9, 3.8456571201288443`*^9, 3.8459182213894663`*^9, 
   3.8459182917334895`*^9, 3.8459184765952473`*^9, 3.845918562562052*^9, 
   3.8459185982002883`*^9, {3.8459186831133776`*^9, 3.845918687807723*^9}, 
   3.8459188698837023`*^9, 3.845997862896223*^9, 3.84599857452374*^9, {
   3.8459986204664383`*^9, 3.8459986238214855`*^9}, 3.8459998230687428`*^9, 
   3.846000016390212*^9, 3.846000238713324*^9, 3.846001077676076*^9, 
   3.8460017637013674`*^9, 3.8460018026916227`*^9, 3.8460021487851458`*^9, 
   3.8460188915240364`*^9, {3.84601918460964*^9, 3.8460191894464693`*^9}, 
   3.846019259043589*^9, 3.8460199736494102`*^9, 3.8460207529591837`*^9, {
   3.8460208042495365`*^9, 3.8460208650409*^9}, 3.8460209327087946`*^9, {
   3.8460209814915504`*^9, 3.8460209956259985`*^9}, {3.8460211369245176`*^9, 
   3.8460211382530155`*^9}, 3.8460215801060276`*^9, 3.8460217431693597`*^9, {
   3.8460218056678348`*^9, 3.84602182113717*^9}, {3.846021859822583*^9, 
   3.84602191243501*^9}, 3.8460219600691776`*^9, 3.8460219922109566`*^9, {
   3.8460220261664667`*^9, 3.846022034628396*^9}, 3.8460229492307854`*^9, {
   3.846023095789749*^9, 3.8460231111379976`*^9}, 3.8460234571046104`*^9, 
   3.846085126103385*^9, 3.8460855884128823`*^9, 3.846085902364692*^9, 
   3.8460870033606176`*^9, 3.8460871220670753`*^9, {3.8460878463633223`*^9, 
   3.846087849828993*^9}},
 CellLabel->
  "Out[514]=",ExpressionUUID->"47952026-a6f2-4559-a9a0-ada963f55c19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8460218930933437`*^9, {3.846023115078058*^9, 3.8460231176116033`*^9}},
 CellLabel->
  "In[515]:=",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
tlNdVAawOBsborHLXDx3OcozwG9nwFEX7DzzkxmTCgy4f/KLwXbsK7qRM6cY
DHBzNrdbjR3FvqK/SpEBU69ia/txPE+RC7JSWAyoLvDzuIbtzX+XK8dmgErW
SPARbKf5/wzvKjPg6ZX6OXlsy8/Pc7Q3MWDUvm/6A86nUc+b762bGbDYtt4n
HVu7adTokBoD/MtNwoywqTnL5vy2MkBbQSk9H9cHKW6dyV8NBrjbxVX+v34E
Tklfi9/GgJL9tumjuL64Ftv3lWgzQKSV+ELGblztXzy4kwEpw88kDuJ6rfx1
7renHgP0JHvfvsX1XfwlYf+8PgN8bmq22mInPC79I2zEgA8Cp1z34/1gd2b4
oKEpAyQ/8C5tOIb7ldfMrVdmDDhZ/z09BO+vXVZLy5z3M6AiRObZe7z/WFvE
756xZIDv70JyricXLUyYrbpny4A/v6Lnv+P9PdXvYK9rzwDmuvjrgP3h6bHK
dgdcL3lVe+PduOhpYYzjmBOOb9DoUzFXvP9tiRpJDwY4Cc42CzlxkWqbikf0
CQZ4f50mh9ng/NhEJW4NYoCm/fvKZNyPfowPVn0+yYD3PzLu5VnhfPPF8uiF
MOB2D1OhCvcvLYNPmf/CGPB6qL+C2I/3c9PVF6cuMaBh3Y3/gnB/tK7hUTt2
kwHDG1xLW3E/rjewsibfYgBvRwu3WAPXb9+dc89vM+B8ZM+diK1c9G7Wtp1R
gfNBv/tMawsXuajed/tcg+u3J97whgquh9teVx1a8Poq1vacx/0+rLBnyewD
A7JKrigW4vOi+d3LnR+HcfwoGZYFG7iIV6IjOvAjA5RGmS/z13NRTNIz4cxR
BgzsNh8vXIf7dWiD/MdJPL/EALn/VnNR7qGSvYELDKgsGz2IePH5cPn65VWL
DIAFq/+sV3CRXEfB64zfDLDNGDUIXM5FRXrZTg//4vX21Py7x8NFtzcnB65a
yYTdBb/3XlnE569gSE7GeibsP0MfaZ/moCWD4BHWRia0SvT57Z7iIN3wQPpD
ESaw3p0NfjbBQc0/fStGxJjgsYv2pvcLBz3/7NrCkmHCfOoFB/mPHNTfuG+q
gcWEp+1tgVfw+UteNFY1YzNhRfdfA4vXHGS/1ejkiDITJB8064n3cdCHW7t4
Vqky4caNw5V3e/D5nqEpYqbJhH1/q96u6eSguQCKzogeE8RX/9SNe8JBRWYe
+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
1+3+ro/es+Ae373D/8/HpQjrHdkjLGAGqd62xf6VH799zycWrNfPOnAQ2+1h
49afn1nQSP+vyAxbe0FexWIc509tyVQPu0TUmrVsAtfXcEypzv/zvyWeXj6J
+8Wdwoqt2OM+32RWc1hw6679y//Xn0W8vGQ9lwVynh5fZLAbS63EPL6zYJNJ
fwUJO+3Tw3WP51iwNvOx7UrsXTZxPGeWWKBecE3mA673OycfLjH/smDhe2Nf
L7Z4Knfh9T8WbI7i6rVhczoPfVNboQRjAR5G1dg5+rSPEwJKMEpErYzC5nM5
9D5jtRI02NJjT2EHnI8dMFyrBMPGsc+PYe95wOkpFFaC+a0+F/Zjz29qeGwr
pgTvLlziSGCbSR4sbpNXAh2XnUb5uF9kfVZpsqPj3+/T4E/GHrvDPzjFUII4
FHY1DPscPgnWKSmB3GFnujP23SO0UAtVJXhbc0ZUDntNxbcDQzuU4CAv60Ea
7mfP9S/xzBxSAjSvQXfD/VJEyFPyvLUS1IjcnDHDdnqzU0PYVgk+x41kaGMv
eM0dU3NQgozS2dQN2Mwk+zcnXZXgfRehTeD+HP2WdfffcSX4T3j9k43Yer7P
7NbHKkEs2/nlHXweLPV/NWyJU4KNJzbzpGHX6K1RC05QAsUV6rRQbKbEfv53
SUqwaNu6yxhbqGWgujRdCVzc65ZG8fkzIDGzFoqU4G7fHh4p7IAnIk2+BF6/
c/fRGHx+sTdr3qI8UoJIbpqpL/Zolk16b7MS6F5br3MQ29ovz1vrqRLMNsto
0rB1JZkSqzqUICGS2kzg72tBf+2A3AElGP/q2vUbn5/XpFzkX8wpQdZFn++R
+HzV2aKk4vJTCYQnwuaPY7/e80NzYUEJkrXPi9lhCwZHm8gvKYHT54JKVeyA
7rKA0OVsGBa+8V/TPw7aFT3bxF7HBt0z2QExf/H3Vk5DW7MwG2KLfx51xj5Z
FdVrvYENLrml17Wxy4bFxiNF2fBojv819w8HbdTWWfdOkg0Kex7rOmJ/5kQ6
JDLZkBkiI2eA7w/nVpl60FhseH72mTQNW1xazL9eiQ1Rpk/slmHvNb4ZOarC
hlJrIqPxN/5eKOq4tWMrGzLW3SHpYEfZkBand7JBjv84VQ/fT+iPb6Sb2rGh
h5Z4OhzfX7rYC0VD9mz4aTCywhM7JN2o6qgjGxrWCrwwxe7w+voy2pkNSpde
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
yHKRWEzhxoCjWIz+H/xyw0c=
        "]]},
      Annotation[#, "Charting`Private`Tag$10885#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$10885#2"]& ]}, {}}, {
    PointBox[{{10, 0.04969024160430335}, {10, 0.0993804832086067}, {
      10, -5.421010862427522*^-20}}], 
    PointBox[{{9.903438353368848, 0.04969024160430335}, {13.887245624463615`, 
     0.04969024160430335}}], 
    LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
    LineBox[{{9.903438353368848, 0.04969024160430335}, {13.887245624463615`, 
     0.04969024160430335}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{5, 15}, {-0.028786040543277963`, 1.0288025645345067`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8460218747707224`*^9, 3.846021914044482*^9}, {
   3.8460231041437283`*^9, 3.8460231181378536`*^9}, 3.8460234571784134`*^9, 
   3.84608559400529*^9, 3.8460870050945854`*^9, 3.8460871233948812`*^9, 
   3.846087849891445*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"0258f9df-e3cd-4d00-b2d8-9b76e8a16aed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "listv0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", " ", "updateValues", ",", "nV", ",", "tableNewValues", ",", 
        "tValues"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
        "Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "n"}], "}"}]}]}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "listv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
             " ", 
             RowBox[{
             "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ",
             "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
               "Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"tValues", "=", 
                  RowBox[{"PyrUpgrade1D", "[", 
                   RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "tValues"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "We", " ", "only", " ", "update", " ", "updateValues", " ", 
             "with", " ", "the", " ", "tValue", " ", "that", " ", 
             "converged"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"pickNewValue", "[", 
             RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.843752560973708*^9, 3.8437525791150923`*^9}, 3.843752658661976*^9, {
   3.8437532609577184`*^9, 3.8437532630116253`*^9}, {3.843753321731477*^9, 
   3.8437533404766655`*^9}, 3.8437535235027065`*^9, {3.8437542615756073`*^9, 
   3.8437545058254924`*^9}, {3.843754584362295*^9, 3.843754613448418*^9}, {
   3.843754788152096*^9, 3.8437547901701674`*^9}, {3.84446023967266*^9, 
   3.844460243138896*^9}, {3.8444607278874874`*^9, 3.8444607297363987`*^9}, {
   3.844460774388563*^9, 3.844460843946801*^9}, {3.844462037391844*^9, 
   3.844462105400992*^9}, {3.844462169596165*^9, 3.84446222491173*^9}, {
   3.8444623679769106`*^9, 3.844462391371277*^9}, {3.844462439619422*^9, 
   3.844462440758129*^9}, {3.8444624986906347`*^9, 3.8444625790197444`*^9}, {
   3.844462952206507*^9, 3.8444629975774703`*^9}, {3.8444630353273516`*^9, 
   3.8444630422572412`*^9}, {3.8444630963197064`*^9, 3.844463097574968*^9}, {
   3.8444631367198167`*^9, 3.8444631620261145`*^9}, {3.8444631957424603`*^9, 
   3.844463217092122*^9}, {3.844463279949193*^9, 3.844463282173604*^9}, {
   3.8444635938104506`*^9, 3.844463601998819*^9}, {3.8444638964881496`*^9, 
   3.844463899627947*^9}, 3.844464021984146*^9, {3.844464194811337*^9, 
   3.844464197865275*^9}, {3.8444642413958893`*^9, 3.844464282685113*^9}, {
   3.844464603077302*^9, 3.8444646428051577`*^9}, {3.8444647003023415`*^9, 
   3.8444647101585493`*^9}, {3.8444650402932653`*^9, 3.844465047181552*^9}, 
   3.8444687193751507`*^9, {3.844469164171029*^9, 3.84446916505202*^9}, {
   3.844469262191881*^9, 3.844469273354315*^9}, {3.8445147154312534`*^9, 
   3.844514920195876*^9}, {3.8445150225856075`*^9, 3.8445150482989445`*^9}, {
   3.844515133898366*^9, 3.8445151681683445`*^9}, {3.8445152348500757`*^9, 
   3.844515453692839*^9}, {3.8445154857004576`*^9, 3.8445154866340466`*^9}, {
   3.8445159926576605`*^9, 3.844515993121111*^9}, {3.844516074572565*^9, 
   3.8445160903677597`*^9}, {3.8445161517680817`*^9, 
   3.8445161878225985`*^9}, {3.844516251196046*^9, 3.844516273742357*^9}, {
   3.84451646477081*^9, 3.8445164780299234`*^9}, 3.8445165295396204`*^9, {
   3.8445165629572544`*^9, 3.844516592682452*^9}, {3.8445169157063313`*^9, 
   3.8445169192029696`*^9}, 3.844516963591753*^9, {3.8448672233060846`*^9, 
   3.844867245115175*^9}, {3.844867353997981*^9, 3.844867357674706*^9}, {
   3.8448674432605042`*^9, 3.8448674485507154`*^9}, {3.844869076768549*^9, 
   3.844869085865178*^9}, {3.8448731333838654`*^9, 3.8448731338260813`*^9}, 
   3.8448737701146564`*^9, {3.844955365518254*^9, 3.8449553724457283`*^9}, 
   3.845030439682123*^9, {3.8450375386523123`*^9, 3.845037545723833*^9}, 
   3.8450382282659655`*^9, {3.845038281748803*^9, 3.8450383149303274`*^9}, {
   3.8450384076219177`*^9, 3.8450384106480255`*^9}, {3.8450384691870403`*^9, 
   3.8450384694118032`*^9}, {3.845038525051551*^9, 3.8450385294382544`*^9}, {
   3.8450390760778513`*^9, 3.8450390898653*^9}, {3.8450391231991873`*^9, 
   3.845039124190837*^9}, {3.845044900308997*^9, 3.8450449085151877`*^9}, {
   3.8450478878754888`*^9, 3.8450478911507916`*^9}, {3.845918130250128*^9, 
   3.845918143807156*^9}, {3.8459988288087425`*^9, 3.8459988385172453`*^9}, {
   3.8459988752133303`*^9, 3.8459988833283424`*^9}, {3.84599903561343*^9, 
   3.8459990448355284`*^9}, {3.8459990809048405`*^9, 3.845999094061246*^9}, {
   3.845999185714033*^9, 3.84599920077864*^9}, 3.845999453539628*^9, {
   3.845999812775424*^9, 3.8459998209297647`*^9}, {3.846000004463835*^9, 
   3.846000008580392*^9}, {3.8460009720676517`*^9, 3.8460009811076927`*^9}, {
   3.8460197840505905`*^9, 3.8460197844570885`*^9}, {3.846019863658993*^9, 
   3.846019868489476*^9}, 3.846019942481623*^9, {3.8460210288916287`*^9, 
   3.8460210293879004`*^9}, 3.846085913627901*^9, 3.846085981096647*^9},
 CellLabel->
  "In[516]:=",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1addfeb2-5c39-4529-bb6d-\
d0c229ca6ab7"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"880a687b-6dd2-4828-9358-\
0c01b407a3f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initializing", " ", "values"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", 
      RowBox[{"max", " ", "lvl"}]}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", 
      RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"i", ",", " ", "p", ",", "newv0", ",", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
      RowBox[{"0.0001", "*", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437553466508884`*^9, 3.8444611315278234`*^9, {
   3.8444611768614936`*^9, 3.8444611887169385`*^9}, 3.844462125512904*^9, 
   3.844462356446972*^9, {3.8444633170999546`*^9, 3.844463321081232*^9}, 
   3.844463957058437*^9, 3.8444640642630997`*^9, {3.844464176408199*^9, 
   3.8444642066331835`*^9}, {3.844464361712132*^9, 3.8444644432157106`*^9}, {
   3.8445155082491083`*^9, 3.8445155337439795`*^9}, {3.84451594973834*^9, 
   3.8445159707794123`*^9}, {3.8445160028143573`*^9, 3.844516016773574*^9}, {
   3.844867278823122*^9, 3.8448672867837*^9}, {3.8448674780006113`*^9, 
   3.844867482844355*^9}, {3.8448675512620215`*^9, 3.844867552535472*^9}, 
   3.8448690922499695`*^9, {3.8450375572578297`*^9, 3.8450375788333464`*^9}, {
   3.845038492456919*^9, 3.845038495570486*^9}, {3.8450391079598455`*^9, 
   3.845039108408127*^9}, {3.8450401552418346`*^9, 3.845040155409791*^9}, {
   3.8450449183244*^9, 3.8450449251510773`*^9}, {3.845998917876772*^9, 
   3.8459989184715147`*^9}, 3.8459989522552752`*^9, {3.8460211607198453`*^9, 
   3.8460212127086706`*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.9172995266923776`", ",", "0.08270044239057323`", 
   ",", "\<\"converged\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454641734660263`*^9, 3.8456571202246284`*^9, 3.845918221467665*^9, 
   3.8459182978329706`*^9, 3.8459184766601095`*^9, {3.8459185764446325`*^9, 
   3.8459185982661123`*^9}, 3.845918703249054*^9, 3.8459188699555435`*^9, 
   3.8459978629553967`*^9, 3.845998623879321*^9, 3.8459989215074825`*^9, 
   3.845998953961999*^9, 3.8459990470788383`*^9, 3.8459990970237722`*^9, 
   3.84599920423997*^9, 3.8459993043982306`*^9, 3.8459998234924536`*^9, 
   3.846000016801696*^9, 3.8460002388259425`*^9, 3.84600107775387*^9, 
   3.846001763789133*^9, 3.846001802776396*^9, 3.8460021488682632`*^9, 
   3.8460188916078157`*^9, 3.846019190512682*^9, 3.84601926255221*^9, 
   3.8460199737237196`*^9, 3.846020760977115*^9, {3.846021141837803*^9, 
   3.846021220381258*^9}, 3.846021580186778*^9, 3.8460231232635508`*^9, 
   3.8460234574247885`*^9, 3.846086630511634*^9, 3.84608700817199*^9, 
   3.8460871263316927`*^9, 3.8460878499852085`*^9},
 CellLabel->
  "Out[522]=",ExpressionUUID->"872ef51f-5636-4823-9f45-d468b3dfa479"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.9999999690829506`", ",", "\<\"converged\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454641734660263`*^9, 3.8456571202246284`*^9, 3.845918221467665*^9, 
   3.8459182978329706`*^9, 3.8459184766601095`*^9, {3.8459185764446325`*^9, 
   3.8459185982661123`*^9}, 3.845918703249054*^9, 3.8459188699555435`*^9, 
   3.8459978629553967`*^9, 3.845998623879321*^9, 3.8459989215074825`*^9, 
   3.845998953961999*^9, 3.8459990470788383`*^9, 3.8459990970237722`*^9, 
   3.84599920423997*^9, 3.8459993043982306`*^9, 3.8459998234924536`*^9, 
   3.846000016801696*^9, 3.8460002388259425`*^9, 3.84600107775387*^9, 
   3.846001763789133*^9, 3.846001802776396*^9, 3.8460021488682632`*^9, 
   3.8460188916078157`*^9, 3.846019190512682*^9, 3.84601926255221*^9, 
   3.8460199737237196`*^9, 3.846020760977115*^9, {3.846021141837803*^9, 
   3.846021220381258*^9}, 3.846021580186778*^9, 3.8460231232635508`*^9, 
   3.8460234574247885`*^9, 3.846086630511634*^9, 3.84608700817199*^9, 
   3.8460871263316927`*^9, 3.8460878499852085`*^9},
 CellLabel->
  "Out[523]=",ExpressionUUID->"97745750-f85d-4086-a438-a37dc338dfe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9, 3.8445155022047677`*^9, {3.84451610892062*^9, 
   3.84451616442041*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV2nk8VF8UAHAqEiWKUFpsM2PMan62lHcqiaSihSLZlewphRASUlFSWSNp
L1sl0SClrBGSVEr2mKnsWX5n/urz/Uzm3XfvOefe8+YpOXhZOM8REhLynCck
JPh348JPokJCqpCs1Vsk7POckCz3E7kkrAoNU2a/mjqeE5/8peapzlWFja6X
8uLMiwjvzi3CxqKqcHfuJ6JY6wWRXvT038WFqhDpuJX2QqyEmDqUwF+toAp3
RJY6SLiXEk9f72gjNFVhQ/7pPYrRFYRGyJuHIU6qsKK+4OqPhlrCqeVeEMdF
FbKmD7v3kOuINPpF0x5XVfgj/+ebQXAdIdVu2bf9iCqYfFj077tGPTGq26e6
ylcVoo308702vydK/0ikFIeowqv9S1ceu99A7HYxj5lIUgUn/54Y97gmItis
3eVogyo8q9vV6JvVRowtTX3H0FGD6azoe14ancQat8cvSnTVYG7V0neLNnYS
W0vLHm5bqwaqfvJnbll1Eqnu3fFu69Ugq/CfUtmZTmLTa+b+7E1qMHhviWjW
t07i4vHy/pU71SDyWCXjd/xPgvypR2LRYTVYevd4sSevi9jJnJxOdlOD5SGt
5/vmdRMBZxbyqe5qENw5385qeTdRy2Y3GXupgUmh3i7pzd3E0ZiAlIhjamCw
tvHcwPVugqu/iD51Wg1COlZMK2zoISzTNLcPJKlBRrF+kmpELzF05bxUSooa
BLxv+u5zvZeIPN/buC1NDVqp59zvPeolCoLSLB9lqEGcv6xLe2svIWUtbu9z
Rw2EG8Vuraf1EVVyP46OPVED+7iH9Fd1fcS6+PjrcxvUQMp2vqGJ8ADxIeqX
dUGjGjSHy/RcXDpAuIVuWeXcpAbush43i9QGiGte05lvPqrBM3gT9sJkgBgx
O/wg+qsanJY/fdUpboB4JL6Bu/iXGkg3Wg8ryf8ilCL4P1fMJ4FUyoLC4sWD
xDXyn9ePxUige27OMGnlICFV/Td7kzgJlrWTDPyog4TQkrFDRxaR4OHSuYcL
DQeJb+nTv4qWksCQH76o33+QSH0hPrJvDQmuSp7QEv80SMgcXNgyqESCcXPN
mdyfg0TsHMlnp1VI4FN04IwBf5AIMpE+eZdEAu8jCvqi84cI649y0+M0EoQ4
punu4gwRCn9VRa7pkeCk9ePV/yKHiLhEUreGPgks1M+e/Bc3RIitpVRy15Hg
9jfZjT+ShojxUI3oHoIEZ44fPuf4aIj4KKm5SMeIBHMcHf/qNA0RV6iEbIsF
CeK7fYuJFTxiYR2MHt5NgtXHKu7nq/CICJ+NH6f3kCDm8ZKixTQe4Ve4+bra
PhKUXXuaHrqOR+wy2rby2EESZFokhhvb8Ahph31qMu4kyFsaaR51lUeMZt9s
eedBAvPOm8vWpPOI9oHBsyFeJNgbdasuNZtHZB8L6+/3JUG1fccN0yc8Yl30
/cdlJ0nQUSIW79fAI5TrRuz8A0nQdFMhh2jlEfOXwhL6KRLUniI1//7KIxpT
mvyuhZKAvbK0SOIXjziUM63ndZYEYUWOn2Pn8IntI1sGVKNJYMQxcooT4ROc
tZdS2mJIYP8kb+KsGJ+YeUWa3XyBBGZfeBd2SfKJyx93VCheIUH6bydDWwU+
8XImY3tVJglsPp3r3knnE1mbfs2GZJEgrXbTllQmn4iO0s7VyibBl77Uyq9s
PrF7SfXSjLskWJw5c2SDNp/oUxtu9c8hQYNRu+pZAz5R52YQQ88jQXnOYqdg
4BMFj6P0O/NJIGHhs+3IRj4RrLcybfszEmzeeOYAyYhPyJgZOaq9xO9bvN9B
xYxPTMbHyXzmkmDP4cM177bziW8tba/jykhgLM457LKTT9yz86JMVeD1yC9C
wnbxCfC7NthYTQL6/AVzjPfxCdLzH2lRtSRwr9ndmbGfT0jM0HYa1GO89HSH
/rHmEy1ny/LuNpLgDTlL64QtnziS3O8f+okEBvMGXeQc+YQdp5jO+EwC7vOd
yqpOfGJv9fnOz+0k+FA/fpTijNf7x9qh00EC333UFfKufELr8hyRru8kaOtf
Hz/3EJ+gajQVXeokwRX5e1+70TLW/qShbhK8iLgBV9z4xIK/xu3JvSQQ+V5w
zO4Irk/M8ksm/SSwk9V+peLOJ3qLSqazBkkwb+Pl3ksefOKLxcV8Cx7en9VE
h4Enn2jstzss9JsEymEdmp3o4uXzmq2HSbDWzEhV1ptP5OY1xywYJYHewh0/
M9HZW2/DszESVCwfNFD34RPJP06MOk1gfJ11NryDjgvY+mDJPxJscpiet8aX
T5xZouhQOkUC2ecTcXHogHuDcp4zJNBMTh+fQDu1xYW/EybDovVTyc+O8ol9
vg56/nPJ8GD5+nEJP4xH8f94qiJk2MXV99mH3pQpcqtRlAyjeuvlbqB1137c
HypGhrDrkZPf0PTGO1IMcTL0/rLRUDjGJ5TdAt58liDDsk0iRaZouTnbgqIX
kWH6XsVTf/TCpJWaOovJcJ7TwU5FC2vyen5KkSF/IEW/GD36rjT10hIyOPwg
fjahB+wv7QIZMkSTJNf1oDsmHBcMyZJBrnLbrr/o5ngtbrIcGSYbYe0Eukp9
/jETBTKo7WMKC8wta6WOLSdD5KEDhX/QBfvudWQpkmGhlJR3N/ru78BEi1Vk
uG0bqyu4Xlq02TahNWTY4iinLBjPZaXVcx4pkeELbXRdGjrqOf+ZtQoZ9lZ5
XA9AnzIv91igRoabW19tMUf79l1WeUYiw5NifStltOtp509OFDKcZCp+HsT5
slHQubiESoaO3Lsd+WjzXLHNpRpkaLNQP+mHNjJpm/Sg4/crdRQw0frf7+es
YJLBkLY0qwvXi3XylMs7FhkSwuZbJqLVpHco+muSQYsz5+sG9PK7axpV/8P5
MTM26cX1nvfp1fpQHTLYjlctIqEnvK/8peuRIeN2/NkSjJ8hMde7n9eSofPf
M9JOdKuuuKyOARlI9TrLXDH+Hl7b+WvQkAyt5fGnD2C8hrW/LQ02Esx3U8In
jG+rNRuuLDYmQ9Vc5jdz9Lw7bAO2KRmOJkya6WA+7H+2JM7PnAzlC++LfDyM
4/8X4ySyiwzaJY6btNEixFy9xN1k2E75qHQJ8y3nzd/vzyzJ4PiPO0Jgfs5v
aeL8O4DXY+49cgzzuV3BTCz2IH6+M2PNC8z3vAOv2xXt0a+3dkw78Anbridn
DJxw/AEx+QH2uN7DiR9Pu2H83D25YhfWC/ul+wLF/MngM/ovOMaST2hbNuy4
foIMt5zLxW/vxfhMNlGlBpDB6gDDr2wPnyhUXltreooMevlvZfhYryQ1V6y+
GE6GosuvZrSwnr3Y+aVcNo4Mh2aezvU25hOyF+zFVe6SQYL1AiZ0cH6OKj9u
vkcG1dhzRk1Yb1OsOndFPSDDRNLy4kdamC8qzqmDjzFeTtTqOXBwfgoPsQqf
kmFD9Z+9rxl8YusPr71mFbj+4Tc+xKhh/dUOzvT/Roaevw9zo5byibIVxBbq
dzLM+bt5u+8SnH9hoV/tPzA/O+2PHZDmE+eqT2tt7CZDLARn6y7mE9fszrxd
OEiG9NNPjsyTwPmLiR3KmCTD7paw9UJz+cSIl9nl3VNkaEkscRHH/Ul3j6Tu
/BnM596vZDlhzKfVcafdhSmQWHrCxWeGR9QUXJbREaOAnuvWYt0xHtHzNWlt
jSwFHio36FX28Qhx7zkz9nIUEOPP9TLt5REMYbeyMXkKLOv3Um7q5hHHVfSM
VRQpkH/7M/9PJ48QPfRxT4AyBdhKNtnOuH+q/V7qQ2FSQKGu3mhFE48wDgv8
7yWLAr/NapW7GnmE+9LOsV2aFNgkdouVj/txgVZecIgWBSq9quus63mEYcDO
2BZ9Cpz4YXbxaxWPcJx7/naEMQUs5cb/3irnEZEJw27Lt1JAm9SQk1PGI+6p
2TByTClgdUptF7eUR/zZovHk83YKNGyhaPW+5BFhse/KNfdQ4L0av9f1BZ4P
VrIj3+6lQNf2adP4Ih5R9eiaia0VBVZu2ev58jmPWNLg+j7amgKBvR++qBTy
iAxZ0a8d9hTgv7H8sRzPExXZHhnHHSlgvWFlkX0Bj+jVaXZa6EyBRulZ6oN8
HsHanzWgc4gCu8dnK0zzeERp2saJC554f/k7dz95zCN+Mu8Vq3rjfD+18JJH
i5VJhxb5UOB04obp4Ec8Ymdnh2i3HwU8WXW2ex/yiG/kEJn1gRRwuzWVR7+P
41vo2V4VRIGSHBfnR/d4hBHfJssqmAKjIcWbNNEPCtf+53eaAkKhDN9Nd3lE
R4r6lHA4Bd7ob3v+/g6PWHpavuJiBAX2NFgtt0cHmIzuun+WAoXpG+TP3eYR
j+hdK/SicTyOqx+oor9LN3W+iaHA2DLeljI8Xxm35R79cZ4CbQ6uZ+ailx3x
uKyQQIEH5Ibr97N4xNYdNta3r1CAM2c3zwZ9imOqonWVAprjdRRp9M9/lPyd
SRQI3ZajFXaTR8h3yAV+TaZAuZa8EIE2rRDd5J5KAbudgSkzmTwiL/Zn49kb
FEhmautForu9PyTJZlJAPeQiaztaYU+5w82bFPgn29Mjj96ml0tl36JA1POS
/d0ZPCJ05Y0/L7MpsJWZEPEUXSB8sWjbHQo8XzdgF43u6ToV1naXAttvbxqw
RW9/ZL1k9AEFmu/+G5NGh13a2hb+COenxsaHd4NHPDmulymdQ4FbDuWR9eje
/RS39FwKyLMfcvLQioScJj2fAtHTqUevoneqiE4WFVDA97zsxhB0+PyRMuOn
FDDJTkg6jH460Bnd8owC5xalnNiL7q9vNHd6ToGcqAcfN6NXFZQp/CnC/Ppi
lK+DNr+W8z2kmAJn3g+I0tARQel3F72kAJWiWKeMLrS74JPMpUDCXat5iuhf
hqf01MsoQCxXviWHXq3uLvysnAJZxMR9WbTFIut3hhUU0P9mK7MMHfnbJL7x
NQVCXn74JI8uatbdZ1dJgd7M1rGV6MHnZKWhtxTgmQ8dVkOvSVvWF1hFAcn4
KxpM9O4wkdwFNRQoVtuhq4+Ochk+cbWWAsebk8+ZoF9s7QS1egrkOk+t2Y8e
YjSK5b+nQE/y77/uaOWlZe+hkQKX1k/NnkbvHXt8re4DBZhSqXAdHf05zc6m
GePr0+5cwXwXc89T+lsoIGubZVaH5t8M4vu3Ynw7LZT+hVaNOlIo0kYB59xF
YxK4npbu+0Mvf6ZAmbj6Pzr65X+6Uo+/UsBoPMf0BPpgkdcd2w6sjzrnlmah
heA2SP7A/P/0d1MjeqPpMh+PLgpwnY5XamG8db43W7CyhwId+5YuPoKO2Hsm
o6aXAp9rDO9koivthxs0fmE+Gx0plMf4PtSj4fZ5kALS+ztVLNHiHo5zzvEo
cENk9N1V9LYTjZr9fyiQYvD70WrMl/cXci7fmaDAlaHD+ia3eISPTK+G1T+M
hxPf266hlyStrpg/TYGftbOR/ejdty4MuwipQ+aY9tBlzM9PL9z3qM1XB8l/
zy1nMJ9/9FLkMmXU4b/jh+JoWE/CPe0emy9Th1v1c02S0KrDV7cIy6vDqQO2
eQse8AiXWdETdivUIZRlGTqIHpDtal2lrA6WbmGH3mK9Gt6YkZTMVIfG7zKO
b7DezU9VWHVlqzqsifhYXYT1NqpurIm8TR1Y3wf0TYrxfoVazhWZqYP12SVn
WtGSjpcmvu1Uh2SzXxcnSniEjLpEM9USryenLrIZ67nyk6lzpY7q0LkjzGq6
gkcY1H6bGAhSB0ZV1HhjHdbXmZKc4GB1MJQ7GHoU94+NrBRX6VB1+JExbCrz
nkdsvmzVrB2uDusk85P34n6zbV9Dzuloddh7vSnpywcesb+r3FUuUR2EKc5z
fmM/eHz6VvPGx+pwIC2+ZiHuby7va2zGctShtNGVVoTec/Nv5/08dWgjDWm4
/uQR/5ls+CPzFMdnuPkPt4tH/E5ol+wpVoflY/kjR3D/dKctNT5XpQ6KVOOs
O4M8wmZWr56oUQe3OTwtsyGsd412e4dr1YG0hyH2G0098cjpQIM6ZIXm7NXm
Y315ZXKa2YrzdWHfyNM/uB9ahxZ96FKHqoC/Iudw/7Zg3N4Q1aMOIZn8j2vG
8f6F696u61MH23TPc0/Qa26v+HjrlzpsZJJDPk/wiK9/nv71/6sOjkZKf+Wn
8P5jBmmKwlSw/qLsQRXC88sBmYL3c6hwlUcTOoLWY+nrn5lHhTnx59vuoeVb
okyG5uPnBqaHKHi+aFZSdSmVpEKH95mp5Xj+2Pl8f7qTIhXIl20ffcXzyY5v
YhrSq6jwXCJTbuk87FdEnj0tWU2FlgDbNiP0NvOldctUqHBOaInXA7RxX/XU
W3Uq5Mxb0ueF/TUorN9P16FC/pve4lZRPkEQA12fdKkglSyzZO58PmHgfN0n
ci0Vth8br6ah1+WORH1bTwXT2WfewWhdk0fP4g2poFBREb9cTHAeXy07ak6F
dz1n67UX8Almeu2NzF1UcFx0vsISzXgdSNuxhwq6xtHqJ9A06dZNd6yo4Fym
bfQMTbkb57v/IBUeKMp8ZYjzCXK9wYyoPRX+GIW6mKJJI7+i8x2osFIy3MkV
rbrBJGOhCxUmtRUrUtFrPgm/f+mOf29mqiY4z62efWx9xJMKE8+XeyqiV6nZ
9sh5U+HT1jWa/6EVfYpmvI9SYU1aKsMBLb/gKF0lgIr1c/GiQrQcU+l5fSAV
nMwNNtWgl+2pNww6RYXdfRsnv6FlMjRsmkOpwP2eMiiykE9I6/2MOXuWCrd2
bJw2RfPF9bTkoqmgYULVtUa/bz//LTuGClGW5gvc0HGhOv+9OU8Ftags70i0
t0Xs1z0XqSB3ZXh+AnqH6veorjgqbIit1slAS76N+TIvgQqpknsdi9BD17+d
TbhChbAIut0bdO2R/zRVr1Jh9vmHsQZ07OKvkZuSqEDVa5roQYtbsllhN6jQ
cyDFavEiPtFPiWyTzqTC5uwOfXn0u8m2iIybVBDaF/5yDToqLeJTaTYVeI0a
WSz0Ie9P4TvvUKE5Yo+YLtp4I4PRcZcKJ4+rSRLo+d0fw2YfUOHg0KzQNnT3
Mxr94iMqWBxk8MzRb6JPf1yVQwWXrq2nLdHZ1i2nH+VSYeRYzzMbdCRdg2aQ
T4VdoomX7dEusyEttQVUaD/XK+OC3tzQFHrgKRW6/3mvc0Or3lTXGHxGhRrT
MnFP9Lxjwc1Bz6nw0/tIqA/6p9GHkIUvcL7thNP80K/kKdSUYipIS8k6+aMz
+4OaNF5ivvjpfjiJDituCH7BpQIzYnogEO1wgaRuWkYFf87oo1PojXaBH9rK
qTDvRIFiCFpZ8/0ptwoqMLZUaYWiheepUSZfU2Fn4rtJgTuaTzZGV1KhbL+h
+2l06e26IIV3VGiLrokR+MZJFfLdKoxv+eG9AoeanmjQrcF8md7WIPh7u5W1
gW9rqRBBOzwpuB7BUyJZ1VPhcXJbYzB6Vdnx9z3vqaAPHGvB+GYuVQf4N2I8
LBZJEIz/q9MatflNVPg88/2U4P5KtI/VJzZTIX2ujYLg/lPEqk6SPlKBtFTE
VTA/QW2rVJ+2Yv4qe7kK5s/mwdG6zW1Yf8i0FYL5XRf89kTzZypUyNWFCeb/
n5Jv7fBXXK/zYt4O6La/b/wjOjB/pitGD6CLXq9QlvmB42M84uxDBxx+fZzT
RQWDW9sbt6P36y9XetWN8dCirmWC1lvkVW3RS4XVqSd3bkKP58iv8R2gws3S
l3nagvVXfZqkMoj54qTmwkRfurpLtnmICsV5q9+S0fTgC+K6f6ggsrYwSU5w
vd8aZ/r+4v/vqVooiPe3Tu9mk0aooEfZzxIVrK/pvJHpccy3HR8v/MX8ePwy
w+vxJK7fXb3qPvQUm+i3m6LC/lDh4m/oq/IB317NUqH0/L2SKnRNF+9dtKgG
dIeX7klFK+w7b6gvpgEvlB+axKNdaqjcXws0YJVUw1gEWjjfuWDHIg1w594+
cwStHfo5TVZGA7TrhgK10DeWVx7NUNIATmrLsRKsL4PnnYYsVDTgt2e400P0
WuE5h+epaUCBpoRCKrq5Z52tK0UD2CcTWgLR4k/yjOlMDRC1+/VMG+23I23l
83Ua0Hwm62km1keTiGOV7y01YNGz2hdWWG+P33xu57xPA3RFijYborPKpycm
9mtAu79+LhMtJBxJU7HVgM3h1kxRdOGpxPhjThpwmLjRmov1nuT/zHq5jwbE
5Rc7zkPPc5vgOcbgeEoNQ5NwPyndcUp+rFgDFkjf/3Mf9ysbKfGwhy81QHbB
4JVL6LH3iQOOpRpQrD254SSaYZHz8v0rDRhuOvHMCJ2yu9PpXpUGFJ5ToP/A
/e/EPpPcA60aoGwVNLACzXKU3VrxVwM+yTtOpOP+WaOSmR8wogEhxhYa0WjX
n4yV7DENiHmpFOyLTnM25qdOakD/aqfozeiFhwIT/YVpsOhXX2LbLJ4H3L//
oC6mgbRZVPpZ7Oczjj8MjKfSILUxgq+A+/m2mLI+gkYDBq1bf/QfjxhPbbYc
otPA0/VSfSN6++tpjimbBnPCq+tj0ZNLt/+ap0sDj+2lnHno3blDNic2o7UL
ooUmecRsxZxq0hYaiN9/te87nh/utS7TazamwV7hVb7laCEhQlZzGw2Ed+UH
nkE/3H6xdsCCBmkxdn8k0aK/mAYH7WggYvrag4nnkdzZTQ8WOdDgQVtYuQza
ZqnV8mJH/HzbuYOTeJ7JWxs6Ku9Kg8oPQb5v0Aej3z9q9KBBkv+Pf/boQpLP
aqNAGjhKFaZkj+J5aO2Z88NBNJB/oXI8Di25/fq/zGAaBG9puxqAdjpW9nH2
NA32i1AKdqClK6TjnkfRwF7WaOf0CI9ws88ToifS4Epk7DIX9Ogaj/Mvr9Ig
tAoy9qDDOsjLd16ngU3FN7fN6OsHUzlHU2jw49OXIjX02wNRLs8zabA6ts2s
bxjnb+Wmv1uzaBAR8rO+Dd3RPh3SfosGnyif4mrQY9ZHr8/eocH21LD6HDRp
v23N5sc0OLyohQhC5yko7PuYQ4MtOVrPvdAGnz50HcqjwdIFoT6O6D1WJrPn
ntAgoL0pzXRY0G/8p9n4ggZ+4iG/VqGllvFeOpbQoMbmvwMy6JTmu6YjL2mw
2LlpoTg6f/dqZ/lynL+rTZTRv9gPWIhfs31LAwhv3tWA9lzyWpX/jgYLz3S8
eIuebAjJPV1Ng6p1LQ6laGnzkaqsOhpI1p32yEGnSOVYar+nQeJtnYY7aMp7
t5+VDXg9ndajGWjY0THd30SDd/6fjl1G10gmxwS10EBKfW1zLNqqbo+cZCsN
DOPOHI1Ee5lVs9ifaeAf2u4eILj+wsiS8nYanFzQW+mHjqyBrbu/0sDN+Ku9
FzrN9Kmj/3cayPXGWDijqRI+fLFOGjQZb7hrh35apXEq6ScNwg7+MLBBb4zp
XkDrpoEizXOpFbrWJCOxpIcGtx/9JO0WjGeBjcqOPhqs6tl8cif659tlOR39
NDjTHC9uhp7aEvtu7hANSE19fUboqPlb9l7h0WDfzxEdQ/TSSuFO0m8ahNz7
VbFBML7IYq/CPzS4TKqLIwTjM/KfMhmmQYJVUvJ6wfhENKM/j9DgLJh36QvG
9/qXrMcYDZy//vFYi66LuJ05M04DLc0QLT30PkMHZtwkDUb0R/V10Ra3nGM3
TdGgbUuonw56m+jhvtFpGrz+Ojuqjd7s6m50b5YGuULHXgls8Nbr5gFhOtx6
+O2TwLrqR4Wk59IhqYtYK/h7dszxAxXz6JBw58pPgakDJ4v8RelwebSjVXA9
1W2n5DTE6HCtXklOML5VD0P9vi6gQzrHKl0wfjnJiIZ4CTo8UI7wEdyflNdZ
xuZFdChOuXVecP/i72POjUvS4X1G8V/B/MxjX+i9L0WHfva7m4L5m46P33xw
CR1EzapTt6BH/yRkLpGhA+Vv+fetaP6ua7OvZelgpprjtR3dX5Bsc1KODv4d
l7ZYoDtl05/TFPD+yEcO70W3fLx19LIiHRZbTsUcRNfr3n1vtIoOW4knMU7o
t9cf0CdX0yEmz7HpMPqFdX6PnQodlq3N2HwMXVD81FBGjQ7221kegehHK4sy
Kkl0yB8s+HoafeNbqTWDSgeH2rT0i4L4dKyr/8eiwx+pkWuP0KEVDbTHmvj5
KZbUM/RJteZoh//o0ORn38BFu/d83vROhw7v5mWxG9HmR/qeJRrQofPO/cOT
6K01v2S2Ah38PC6zRDB/Del8n+kNdBAv8d4ghdbmjWo4babDpmmJDWS04tF5
N9jb6NAt/PqZFXpZ0/zpn2Z0SF61r84ZvVhLYv+1HXTY8+YH4yh6zpi0zKwF
judpS+0FdE/A6qiafXSYo7gh/J2gHoWt9XZ1pYP22OqabVjvYi/+HJg+RId/
a2ctDqBdUi64JrjRQc3VcrknevnTH7ZlHnTIPeHrFieon30xZiv86JAYukuq
FW2x8zO1PpQOGSplvkexHtMOnMl2DqND3SBDOAot6sZUngqng+sN2fcp6KLw
cAX1s3R489KMWYlWfqYhFn6eDns7Dv1dhfvBn5VBXdpJdHjydOulNnQNlWRf
m0wH8/lbKH/R2Trv2x1T6bATimckcL/Zb67aFHeDDlFHpD0M0OURNeX92XSo
yHbZkY2+NKB4Iy2fDkE5xdQw3L/Yz0v2i9bSYVRKbp0b7o/LFXhtCXU43lK/
dTHoeSfXWKu8p0NY4LuAe+hW3XBr+ECHaGmr3AF0cKGxTcAnOgiXLhD1wf25
6tmHA0NddLhH4pqdncb96WmfXcsMHT4u9937A/f37ctWfHcSYoACs1VcBPd/
nePb7P8KM0CMarhAAS2u/dheSoQBq6Vs7Tagc5/4OWyVYMAflzeul9EzBbOO
L+UYcDq23mYd9udX82Vds1kMOKQ82p+K55GhgovP9moyYMRs58mnaKOnC8Tm
/8cA/XNpy+rRw4XTd1x1GDC8/b9Awe8L5i+7+ikGDNA8K9XqiJZ498TzvikD
rFb0GtCwXw/5uud4jgsDTrSM5r/Efr3lW/0bu0MM2NXfW/QRzfhuIiftxoCp
x8+e89HtnesLfTwYUOAklqKM5y+9PrVJTT8G1M9u+HYG/ffvyKknpxlAHPB9
aYL9u+uCxDNFKQxY+fxeYxme39KePh02S2NANyV2sAXd4vjR8Xs6A6qUjQYH
0EYv5TeK3cT75Qxck8XzIOlo8syeuwwwW38hzhX9s/2G/+8nDKhJ+3xKBM+b
ijFl3RHPGNAR1p0uj96t82OP/HMcb79rqga6Il7lP6KYAU2vj1HM0TeNsvmx
5QywWGHhmYR2yLl/mFLPgAR+jpYanmeTDtS0vnjPgLqeirda6EbxwS07Ghkw
YzNIN0JvdGaQjjcz4A2h4u6CVlqe++PVZwZss3l2OwttVdlgbvmFAfcK577I
R8f5/Snt/8qAsYv5yeVooXpOuvQPBnymd5UL+vuO8KfWB3sZwExRvSaH53N5
9seqP30McNusJKqG3vl1TC9ygAHnXN6v00RzdfXkHw7h/V0YFN6GTht80TQ5
jN8/+KwtCN2S1L7pwigDKqrbT0UJ+nnj6TylcQb4rJrbdRkdnGkQb/wPr3/j
39Rd9AHLMrNEYSbYXGRt+oCek009bzqXCcFiq199Qd8ZvlwjJMIEq39zxgT9
/d94F9MjYkxYUfPI/x/6Wkd9zBpxJkweGi+fh/2OAVOvqlmCCUHTa7mL0NE1
EiawmAnbzz2qXIVmrDgWNSLFhIRN9o0kdNPhr5X3ljDB1UfqHAO9en6ukewy
Jly/7zp3Pbpiz/LIKjkm8I7Hlwn6Nbes8NchCkx4ofWCuhX9ZMNew35FJmRK
LPm3R9DvxXHD01cxIfd7qZ01Wugb5dXuNUxYo37U007wPIB+aY64MhPcyw6r
OKNNg/5t4KowYVFMV/BhNL/K6bSfGhNCHMihHuhEhbpSdTIT9KneJEG/uu6Q
Dn4lE0pKhXwE/ez3pzeIBCoTQkWWHxT0u5Ei4iEmNCbMfJziCfph2u6jL2fo
TMiR61cOQjdmtk/nM5mwNEt5TNBP+//evP4wG8dv03NE0H8rwuOgVRwmNK05
GSroz8svyBd/+I8JpPfy/wn690NfTv+L0maCzNb5kQIvog2sNdBlwjLPM8cE
zgvYHfBXjwnZK5qEBbZ6V/L8jj4TNmr+RxV834wceeLAeiY4xHcPCvr7my5x
uksJJpyWp20TjMf4yYT/W2DC8tubDQX9/dBcx2enNjLhtqJf8wl0gkXNqKYh
E25Zjc8cE/TTGVravZuZELN2aamv4HkAL+1Y6hYcf4aIvBc6wkDsiYUJzoeH
lOgRNPW8z/B8U5yvYL9owfOW+s9tnJJtTGjJ880QPI/xoxoe9d3OhMB+UzPB
85rlJx/mkXcyoW/ehti9aOdloexLu5ggYRdWKujnxZ37vLfsYULewZ0FG9E5
+RY5U3uZIFm6Xldf8PxgpxrTdT8TqtcEDFIFz0PSL3gq2jBBqWPrSmW00dDY
w4YDOJ/BBm2C51Px56po6+yZwP0QPy6IZ+02jvtvBya4bT1qNYnx3k5JvZ/t
xIT0lYEbeWjyGy+q9CEmRFsK531ElwjJUro9mdAYI9SfifbNFHG/7M2EiDXR
VYLnbRTD0cfgy4RwvRKO4HncpbMfdZKPMSH+4u5UV0E/L5m0ZWcQEwzmnniu
il6RE3Nu+hQTrvYnVC8RPN8zD6y/F4L5Ef3UTgi99oqNpUg4E95G/SfdhvVk
seJq16JozM9Xu/zPoitKFt93PccE0fS68z7ogINCPJnzTJhwua1kjf6Z+f24
VxwTVPakv6ShC9WzIlWvMqHue8fzd1gf7XXUsy9kMeHVcXe5fqy/yz4p9Otn
MyFFVehxNbomQJzRd5sJuuSswgdo7ZcDTzbdZ0JXhclqD7T45kevx3OZcPD6
JlIP1ndud9qC7HzMf9VLayvQflEXzXY9YUKP7tYXN9Bfq72bHxYyYdVVlVlL
dL4Fp8uBi/lpnx/Exf3k0LCKulQZE6LcIzuuolclyniUlDMhTEvxvhc66tPI
sNwbJigmFfusRNvYFc6rrWGCVpdYrg/uTyKe61V12nB+18fvm8L9L+lFU2Tl
Z6x/Bg2MOjRrgXuf5ReMH/1Rv3S0TVbSoxMdTGijZJkDOq9tTLeomwkPv4et
C8T91G5Lntn6v5hfaj8tm3G/Hk0wyakdZkKA9L3RVHTsj44ltqNM+DVLmXZG
Pzu1uDV4AuOvS5QYxv1essDdoXSWCSfbtSIXoG3jLr9QEmXBoHC0FBPPG+o6
3371oT9QjMMf4nlk+At1Vd58Fpy9VN9FRcdolIduXMACMaWLscrY7z95w9/s
uJAF4bW630XwPLRw2ux91hIWJAcdvXcDz6NFh8W6yKtZYDfi2WLUzyPW2Z+Y
EVrDAqOhaMn0Ph7x0qpXrg1dPx2TP9rLI8q2vN0aq8yCAscs66wePG+rReXw
1Vhw8OBY5cRPHtH8fX7QcxoLrhZpMy99w/P9vvlLTdeyoEilg5LZxCN8zf1p
qvos+GJz3+LvBxy/cc/mafTKiogsQ/SYTuWJx+tZ0LO68mNPA4+YkT37dekG
Fqgrma1h1/MIiUbRe+1bWPB56Lhl0zvst7eKbvDcw4LFbaI7Irk84trVd326
e1nQudF215+X2J90xV6aa8kCr3KblQfRQyFLf16zwvvN3yurX4L92pM1Z19Z
s8Bkpd/y6SIeYaSkXyvvwILdsnNvPnzKIwo9Z451ov8a5a2joKnFZaseObLg
sBG59+YTHiFpaey9yZkFD2zczqYVYH8Su2ep5yEcz+0Y94w8PE+Pe+175ckC
82ffJ78/wvPkZs6cC14sUFNtGvBCb708es/KmwXjsvfXzj7kEQzGqalBHxa4
a0uKKKNHHWPS5Y+xYIr6reHEfR5xKNfMuBO9J1RDZwm6bUbq98PjLNj49Mia
h/dwva5f3bjpBAsyfOrje+5i/1Kf1eURyAJ+975jXnd4xLjioQu6QSxwEw4M
kUW7uWnozD3FAgmrdE7JbTyviuRFXQtmQYzrxANp9DJ9rsar0xhP7ymH629h
fxwV1nQ+jAUGsdeNw9GTzZtPWYWzgNmhOK6L/updUzcYwQLxaYe2u1k84lb2
Jx/5KBaQqpXZmTexf07tUPyG1vdM2uyCvpbQU3krmgU6D8+uo6Fjw0ZWcs6x
IDggp7MkE8d/curtBPrSmx8p0ehQ77l+pbEsUKae2GqJ9rOVrjK7wIKt+c8T
xjN4hOce+WMyF1lwL9FmbQ360LbVaz6jFRbt7M5AW6+lHz8Uz4KnjGWOu9C7
2f8pMS/h+l39to4peF+Aol8zgjZa3MNYJPh9eJmJcngCC4ZupXoI3g9Yt2hn
rckVFrwL2/QqH609z/KEVCILmvtkNiWhWf8OqHxET+ud/x2GVv/jVJd6Fcfb
SP7gIfg9vO/ISadrLCBL2/0S/F6u2OGrqnGdBWN7cjdsRS/7eLL+N9p3NvGj
4Pd2qbrQgMIkFpxyj80T/B4v/vqsWkgyxsO/hR8Fv9fPK77wfnMKC1oXJpis
Qs/kXQlcmIrrPZ0iqYAeu5tC+oBmMG5SBe8D8G/cbLiexgKfKaVMwfsC/Vfv
Bdmls+BmZcJJwfsEPy/kksk3WJA9dPzJCvTXM4WNg2jb95v2C95HaA3inirI
YEFe9XF3DXTj0TeUwEwWnCHO8bXRNW61HzbcZEFJzFS/Ifq1fVOwWBYL1i80
sttzQ1BPPqvXo38pd+4+JHi/YcePpiu3cP7pO2pPofOM+kJsslngeE6k7gr6
wXo+VeU25kfSaescdPZ/Y819aLMXBgG16BsaM6E5d1hgaFrIGEQnKYvQ/O+y
4O3dw6cW4/olKCz8uP4eCwq16tz+Q1+QWho27z6uj5n9P+sMwfOe5fRq9Cnz
NE4kOnCEHG71EO/vytyHP9B+vxiM1Y9Y8F+C8pgMxptnp9anLnToROukCdqh
YRPzaA4LFvhNQDHa5u3WNr1cFshs2R87gd7LNT8jlMeCwCniph7G99aHBz+f
z2fBcPTZzeVowyyXyN0FWF9Xd3wSx3wxSPZgr3jCgtSl9033otnRgWfvPGXB
tbgzn0bQ8s5XOa+es0B1Q/UKq2ysvw/K3yQVseCn63fXUvTJ4cF9vi8wvj7p
GdAwf9vCDUOVSlgwZ+/1G5KY76mZv2tCSlmQ1HSofQbrw/Z+RTvLMhbMO9Kz
PALrxwzb+C+jHPeTMn/pRVhf7MrSFL6+YsGjw0/WUx9g/HaYuqyrxPUom9S8
hPWrkew/sfQtC2r8DjRqPeYR4V6ZsQNoiwMZll8E70fNjOclVbFgU0wBVTeX
R9xemT07Xov56mV7eSXWS5q10PUnTSy4vNHH5wHW3/ZMDdr5ZhYE/bd4VfwL
HnG+fy/XqYUFxlvoCwOKsX6ffNi1tBXrX0zDKyus57nX9mv6fsb4z5DasLUc
16PjzGuTdqz3T0WSzF/xiCWUXCulLyw4bb/V4UAFruez+SHvv7Lgh9Y9y7A3
mL8tBdWMHzhffxWOz6nmEd0rO2xFO3G/+fi9j17DI646S/z5gjaofDt5oBbr
57C9/Pku/P7Iz+I1uB+9WLrYeaAXx5viFtGB+xuYH565zWNB19yObzzc/74P
9azx4bMg65Va8PbvgvfXXDat/Y31d46Yd+4PHlFR6RhV84cFpufX2Ud08Qhj
A9slv0ewPlal/7Md4BE7NHaR1k6xwMVrlfLAGI+wFVm/vUaMDX+XbL7AxvPY
bOYL7ysL2KBul+hKwvPaDVh72VacDY87f48o4nnwR6BOK1+CDavOOU5JSuJ5
+Q/bQXYxG96YHFsrsoRPuH8jHbeVZYPkuE8tYzmfCHwulcZXYsO/7Opv8hrY
n9zOv1OlzIZLiseDN9DwvJ64Nz9LhQ37qo+R3eh8os035a2VGhv6zLx3v2Di
+Z9G+VtKYYOfnqaB9X98YiyNMI5n4vjW//IKW88ntp//YXGExQaxMIcXNw2w
/wo8c2Azmw2zXSuEKwg+sdeq2ndCkw2FEbt0hDdiPydtmWqvzYa7Xk993Y34
xNEIzz/s9Ww4fcHMcGw7n6jylZ6WMGDjfuapL7STTyjbF8zvRu8/yVWcb47j
Xz+pmARsqP7N3ye5i0+wx85smWPIBsLS84eQJZ4PuygW7ehC/LYxdMeHapun
m9nAot5ZOWCF/XqOtK/bFrz/vadSq/bzCd7h1JTGrWzwPdu81dUW+wUruP3A
lA3Ms8G/jA5i/23UmRu5jQ0dPkaHVOzwflXUK9duZ8OV04x7jfZ84mF7we9M
czbcbycCxZz5xLxqy6kgCzbYRJZK16Jtnk+KWu5iw/giy8nzLnxiYSIoSuxh
gzOr7NS8Q3ziyI4ao6NWbDgm4+ZT7sYnCi6XdxjsY0NM4voBmyN8YupjYYD4
fjakSJGK/qJj7W49yrBmw+vPTauXeWB/nZVs7GHDBo+s/qQMtGJf/A/dA2yg
7y7gqHvyiQc+wcve27JhsdWcszQvPjH8xC8n+SAbXqq0qN1Br5t02+pqx4bM
11P3VnvjeT/MMnjGng1Kgd9Zc3z4hEylmXyVAxtMRXmyHmgbCcO8K44Yb3uH
7n5A/7rM6qY5s+Gdtv3ty7584r9WUug4+sd61ZFf6CDFlcsrXNjgMuFfJHif
usJuacFFVzasUYvoi0cvvLVgu/UhNrQEeft9Qe/um+0hHWaDWbGTmaofn0ih
j57+g96RHuXigv7p82vFSzc23Pw+N+8mmvb0x5PoI2yQImaU2tF+k6079riz
wfpo+p3Fx/hEsUF93xoP/L61i3UN0PPCX4f/Qj/acazcFb2t8sXKQk82GHlN
6MWiEyTynoV7seHT7ldx99HtO+6Y7/DG+CmeLHyNVk1IG1juwwZp+8qsNrR7
a8KZbvTm2Z1G/YL34RXPrc7zZcNlC+7FYfSU3ennp46yoWzZ2qOC9+cNb/nv
MvHD+Jnf92McHdvnMShzjA3tHX/fC96nb6I7ne1A77ENYwrez1f03a/04Dgb
6vSL+c1op6c7X/j7s0Fc650oF/1g0mjPphNsaBJpcMxEDxus50meZAPv8L+J
EPS6cE50G1ptpfcLS3REpbpKdgAb1n/em6SOrpFYU+ITyIapgx+jRnD+ZHYu
s1wfxAYNV4WTLwTv1ycs/C12Cu/ngeGBQHRW65xzTejRgVCyFnpQcUL1RjCu
5/eRd724ftr2vJdHQtjwcUu1tuB9+uBbXVY6oRgPnyl269Fv+j7/mXOaDaL7
tHW/YnxIMhpj69CSgStyT6D3+r4lJYWxgTs9W7zQV/A88WWpczgbvqdIbE/C
eGMQ94enIjB/V+u8zcB4PR6eceHtGTbkB2RfWYF+WXmVkhDJhgPfP+dcwPje
vjPCRiOKDYGlOtftMB887Q9U7DuH97Nj4aNczCeDHVftlGLZsO23PX0c809y
fcNUL/qDx8dGHfQj+c1aJy5gPXH6Y52J+RosGtJAXMR4lw1Vq3XF7x8u9Jgf
x4Yli2c6+Jjfg/W07MR4NjzfkjyhjPlfXOKy0fYS1quSzHVsJ1zv+ze+ql1m
Q1Cf23pdR4zfszJyTxLYwKhfZMjCeuJuMHX2w1U23G7YOf7GBtePpq2afI0N
WX+kiq9bY74s9y51uM4GmSzNZiesX/dHOsd/J7GhWO3Ih06sd/0Pqg9LpbFh
TqbjpXALPlGUJCLaig417Lwsh/UzJorITE9ng6GFc9jNHVj/nfLbGBlskFi5
4U/mNj5xeEWyqVkWGzw9xHMMsD7rLmjukbnFhnmHdj6IM+QTYmOSEe3o3Dt6
9Das53caw4qP3Mb1OvwmahfW+95oN3rMPZzf3kC9rzp8otA/6535fTa8l744
2K+F9dn5q7PCA9yPrLtLhjh8grzBIu3OQzYEl7JDPuN+4zKut7gyhw1yb4eW
GZMxnrqP3r+Qi/ky2kwsVOMTok0Pt+zNY0PDmkzFSmXcbx4rhXbls2Go+XnJ
mlV8ostlwe+5z7Bell5nOchgvjS3NkIJG64tcv2iOsMjBpbqWCq8ZEPRxK1D
/3D/9bW48vk3umrCWq3oN48IqTf/mVnKBqvIiYc87H+T3lWNzKvA+iMSb6lT
xSPqS4rl31Xh/rWus3dFHJ4Hp5anZlSzofdTBM85Cs87a08qBdSw4Xxt3ZLE
UDyPP9OiatSx4bAYhXrHG8/3eY/0zzdgfRaOHLu4g0eszb5ha96K8Xcjo2+n
GI8o/TnzQ/0T7geyRasGZ4aILSoHXOe04XhUHlh7jAwRu28oeOd/ZsPq/X2u
Cj+GCK+kS6dlv2E9dLVVUywaIrIuRGR96sLzQtZPqcdOQ8Ri/0P99n9xfE+G
LirdHCQiJZbPaAyzIfw1J+Zb4iAxlV4tPYrmF0D06ZhBov8tQy9mlA2KeofU
fXwGiTfLR87mTbDBfE7vv3/rB4ngl6fV5gppgtZwoN6dhl/EkEiyXdZCTZg9
q/bBoXOAcE7a5ue5SBNsD74jEj4MEO2MmbO6kppAbK3Suv9qgKiytH9cs1gT
vEnXT8TcHCCy75JnhpdoQu05R7+lDgOErVlB8mYFTajM8lI80dZP1CbUtnSr
acLiH9G/Gp/3EZMnbzaWkTSBrxlEP3Wrj6AcPFmXQtYE1gNPvcXxfUSEutob
C3VN6M0eSh9w7SPWvQx68pKmCYxbCaRYmT7iXo9GQiJHEwbnGcvcONxLRK6N
MTfaoAlXzN4Q+fN6COgwqrllowlev/hbz0j8JG6fv2fhfEkTTNaJLVMu/0xs
85XroF/WhOaSkYPUhM/En70RHqNorUZbJ32Xz4TBGtuos1c04ZzYgwUnxT8T
LXnSL+9ew/FOupe572ojRFtPqA+l4d97W3PP9LQSTspbhPzva4L70eBXU8tb
CPH5BeeJB5pgBT202qFmImdgzQqxh5qwxFDyeW55MzFVMKl1/ZEmHDBMzy50
ayYub3l05EWuJnzzn99Y+aKJKHeX/Tj7TBO4Kq826Tt8IJSedT6MqtDE83Kg
/Uj5eyL4l5+Kw2tN2BXvNT8q8T3RpiR6Xf+NJpQMmtQQbu+JhFhKxFClJoTo
SESsWfKeEHXw2L+7WhNyqt2rXCrriF8Lx0TXNOL83nl1dMHKGqLQQdzu2TdN
MA01lBFbWEnIXktujuvQhCPcv706L98QvrU0U7fvmlCjICVd7/2G0NDdob2y
UxNmdA1ntD++JtIWJSwM79aEiHeRXNG7FURE4crn2wfx/59p8/OxLyd2SrKX
dE9qwsaB2uoblsVE6nVZudx/mnBP6cL2J99fEP2qkyuCpjSB9K35bI77CyJC
/5XakhlNiPx8W8z+TBFReGiPnoEwB7K9p+mNZYXEmlcn7RLnc/C8Ovh0xOUJ
4bHd1tlejAPdm3yu5swWEEWfNrrRFnAgf+4Gkvn1AmI3X8KvXJwDd1NkO4j6
fCJqZdrZoUUcEFpSXfJicx7x27/8kZEMBzb8Nm35VPiIMJh7O19algOW6S1e
OqKPiNgL5wrb0T2bw/iGex4SpFu7y33lOEAu/fru0Ph9Yn9jd3Pacg78XKlY
f9PiLlFOk5geXcOBO9akZy57sojFhTzhciUOpC2saBguvknYbGoSPa/MgSMF
ErZypJvE6L5UKRVVDohS9IeWTGcQ1LNM1R1kDlx9IsN1DUwnLn3fZXqbzoH0
a/WaelJXCddlQRaeDA5s72mIMZZNJNaZZu3TYnJg1SeXeNrKK0R3wbDrKxYH
qlOqipy1LhN6UVcivnE4UFUl+TNc8iLRwfhYIreWAzt7zq5Mtj5NPHGcrfiK
Tjj9cOpCQAgRc41cc0ufA/KMJ6FHjIMIzpwTbZz1HJDYJb4kaO5xIrJZfmwH
cGDcQ2Sn8oAjQQ/az4oy4oAHWbctNvwQd05umM6OLTh/Gt0Xwws9uC1d9wyW
GXPg1UOwEvPw4Ybu+Lcty4QD9Gadj/d8jnOblFMOl27jQNFRZqnlvFDuXcsK
77NmHHBr22fjr3GaGxz7y3/7dg4k5umY883CuOTRdZHtOzjwunKBqtiZCG7A
uy+Z4xYcEJf8FRlRHMXdMSNyj7uLA+qhicKq3GiuKoeRG7mbA45Rvy7tLInh
1qUEc2X24vg8rra6PYjlKnmvbmft44BThEsETSOO+3aZvezhgxxorhy0d/C6
zN2d8nDeBjsOxHytFU9rucztUJr8K2/PgW9eCWkn9BO4Y7TLjW8dML7u/pZY
MZPAJW16fZHiwgF7qScZUa6J3Ly30iFCrhz4Exe/mVmcyF2/3dazFd3Wdv7r
Fcmr3N37xrZFHeZA7NE5x/IfXOWGe6mL97pjPJtmfbxZd40rOXJsguvBAelH
W96WSF/nJgWU91715IC2umFhocV1bt4Z68ot3hyYkXJe4VB3nWsgcefpah+8
foNcg/yCJO67uOFbY+gH5iBRtiGJ25F8PuL2UQ6cWbv40uiDJK67UtvRED8O
vB/dpBT7LYk7nk1ytDzGgXfLJYpUpJK5i/O4G+b7c+AfeJw/fCSZm6SzkP0N
PZ6YKL4mMZlLKrFa8+wEB/ZMeS7re5nMNXj7e8YlgAPCKSYHX4mncKvMDIYM
AjmwjNr2tZ2ewt3zIebLsiDMZ09tX4UdKdwOq481Q+h3l2+tPeWZwnX/qlL8
5hQHvF957lsYm8Idd/S+nxbMAWfyJ17V7RRuRF9x0vEQDgT3aawuKUvhJg/v
OUk6jfPHvF27jZ/CJQVkHppBw3zbi3/mpXLzZocsW8I48PSngle7XCrX4Iz+
lkfhHMj9rXRBUj2VWyUepR0ZwYElViWLzuumcvfGNanZnuFA4QbOYhujVO53
WSVZ7UgOHGutyg+xSOW6J3vMkzzLgfVG1YpTNqnc8TVFf7vQ/ILAI83OqdyI
bNHOkij8/9tVyhZ7pHKlaLsar0Rz4NK6BcRj31RuSm56mUcMrt9dP9HC46lc
ss6vnM3nOGD48oEu4ySOt1j3xspYDsTdGh+VDcDxbjxzcQQ9Jzrd4Sh+XlXZ
EFx7ngOBl3pTtvrjeM1Wed66wIHWgeWV6UdTuT8a3Q6cusiBkZen5vh7pnI9
rJ5t2xPHgVItK+8mVxzvl7nr6PEckAr4zS4+iON13Kkhcgnv90ncIc29ON6+
lOVf0JlLTmnpm+J4PfsWPLnMgbyi6edtBqlcyrDWRGwCB15+3Ccny07l5p8M
63W6gvl4udVzSCmVy9ij7MpIxPg1O+AUtySVe49V3jWGHjl4tV9kTio3s0e4
M+YajueMuezJLyncVa8y7Hdfx/tP/Ol16l0KNyltQ8fKJMzHcYtKh4IU7qU9
p7/kJON47/e0folM4UqylWwCUjhwaHyNSQDGS8zCsrZNqRwYjrNWFtmTwg17
JdTaksYB3dTJwL+rUri+7NDGqQwOPBrpK43LTuYOLVxj/iaTA2VeOp4zZ5K5
br3c+os3OaBHabQ55pTMdUifrVG+hfltJusWuyqZa7EopNL4Dgc2Eu16JWeT
uHW9q4yW3OVAREhqd+PBJO7WipcVn9G7f489WKiTxN0YOFPmeZ8DBo5pfyZ+
XOdq9p0qTnjEAeNdL/YqsK9zH1Ws1Ld9jPXv747XD+dc51JvlDwn52C9fvZO
7fSHa1xly+mnRbkc+HznEuWP7zXuktdBuR0FHLCeDqda373K/XMjMJv2ggOT
Ypy3umNXuLlWJ+MqKjHfj+o8TGdc4mqXqQffeov5s1JXZXlPPLdIve1I5DsO
MOViLKjp8dyKybVbjKs5ELJkOmqVZDy3JWVqurqOAxcq9aTy6i9ypzpCjnxo
5sBaW8c6y5XnuMaHI41+dHKgZlD//UDCaW5tg/Z/r35ywPdqY6zzdCjXYm2P
UlYXB9ojSk5quYRyrSWMp517MF9LY09M+gRzPR8uKOjrx3iQIBIc357kJvyO
Vfr9mwNBpESfgjxvrsL+9Ysb/3Cg87yQ2AGGFzetfHAq7y8H7pOjD89OunNv
X97e6jeC+bU2bsPP9EPcIi2pi+PjWI+vOH7ZpGjHNUgrDfo0wQHZV3GzwYts
uK9EfdyKJjlgZEHSo/yy5NZ8bNgcNMWB4yvq4o5f3ME1hzDOgWkOBCxumfCL
2cJtuaOpZDDDAVpM3sV92gR3v3Sn5OpZDry1LXepFWNyv528PDWLFhKivP1P
cvvL/wE0tV4f
        "]]},
      Annotation[#, "Charting`Private`Tag$10934#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/VLszQkljx8pMa+Q51QcSwvy/1vyTbA=
        "]]},
      Annotation[#, "Charting`Private`Tag$10934#2"]& ]}, {}}, {
    PointBox[{{15, 0.9503097583956966}, {15, 1.}, {15, 0.9006195167913933}}], 
    PointBox[{{11.082700473307622`, 0.9503097583956966}, {15.082700442390573`,
      0.9503097583956966}}], LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
    LineBox[{{11.082700473307622`, 0.9503097583956966}, {15.082700442390573`, 
     0.9503097583956966}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 20}, {-0.028786032866411626`, 1.0288023941428994`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.845464173651163*^9, 3.845657120293439*^9, 3.84591822153712*^9, 
   3.8459182997923293`*^9, 3.845918476721944*^9, {3.8459185777574663`*^9, 
   3.845918598327521*^9}, 3.84591870594099*^9, 3.8459188700244694`*^9, 
   3.845997863007262*^9, 3.8459986239262114`*^9, 3.845998921608356*^9, 
   3.8459998235463457`*^9, 3.846000016940708*^9, 3.846000238916339*^9, 
   3.8460010778086452`*^9, 3.846001763846897*^9, 3.8460018028312488`*^9, 
   3.846002148923218*^9, 3.846018891669146*^9, 3.8460191910174522`*^9, 
   3.846019264578638*^9, 3.84601997378932*^9, 3.84602076268795*^9, {
   3.846021145346625*^9, 3.846021221595503*^9}, 3.846021580254821*^9, 
   3.8460231250685654`*^9, 3.846023457508645*^9, 3.8460866324955544`*^9, 
   3.8460871278782096`*^9, 3.8460878500632796`*^9},
 CellLabel->
  "Out[524]=",ExpressionUUID->"661174a1-9b10-4889-b18b-eab1730511e5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"d69ea01b-c1ef-4113-8cab-\
b11ccf013757"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"c8124fb5-6975-4957-950c-\
1a0ca8f99e5a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"8aa49981-e1b7-40e4-b201-\
cbbe28e3204e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangev0", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newv0", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
        "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
       "rangev0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"newv0", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "called", " ", "from", " ", 
    "pyramidalCyclope1D"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9, {3.844464480693434*^9, 
   3.844464504604334*^9}, {3.84486825964192*^9, 3.844868272187944*^9}, {
   3.8448683520091214`*^9, 3.844868356341675*^9}, {3.844868427697589*^9, 
   3.8448684476274395`*^9}, {3.8448685418473353`*^9, 3.844868563237012*^9}, {
   3.8448691126289816`*^9, 3.844869155906944*^9}, {3.8450361773449993`*^9, 
   3.84503617876492*^9}, {3.8450376268553333`*^9, 3.845037637354021*^9}, {
   3.845037672100178*^9, 3.8450376743438373`*^9}, {3.8450449336238585`*^9, 
   3.8450449411574297`*^9}, {3.845047809720543*^9, 3.845047835488903*^9}, 
   3.8459188305217996`*^9, {3.845998657736218*^9, 3.845998673314041*^9}, {
   3.846000313466345*^9, 3.846000314942738*^9}, 3.846021239109475*^9, {
   3.8460212767184973`*^9, 3.846021316800701*^9}, {3.846021392877076*^9, 
   3.8460213943050365`*^9}, {3.846021479068741*^9, 3.8460214897007265`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"mag\"\>", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"sign\"\>",
      ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"sign\"\>",
      ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"sign\"\>",
      ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"mag\"\>", 
     ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.1244988106792015`", ",", "0.8763436195990688`", ",", "\<\"mag\"\>", 
     ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.993037630948603`", ",", "3.007216160699932`", ",", "\<\"converged\"\>",
      ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0067998249375185`", ",", "2.993204398950747`", 
     ",", "\<\"converged\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9949531556878772`", ",", "3.005046823925877`", 
     ",", "\<\"converged\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.2839790761429892`", ",", "0.716020885852971`", ",", "\<\"mag\"\>", ",",
      "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5538091883828931`", ",", "3.4461908116496263`", 
     ",", "\<\"converged\"\>", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4999956501685405`", ",", "2.5000043498622686`", 
     ",", "\<\"converged\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.4999956501685414`", ",", "1.5000043498622684`", 
     ",", "\<\"converged\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.44618217544682`", ",", "0.5538178245819155`", ",", "\<\"converged\"\>",
      ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.8824691824691095`", ",", "0.1175308078512276`", 
     ",", "\<\"converged\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9998537926836316`", ",", "3.000146187879843`", 
     ",", "\<\"converged\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.002868665156123`", ",", "2.9971309993355693`", 
     ",", "\<\"converged\"\>", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.375813951090884`", ",", "2.624195599689238`", ",", "\<\"mag\"\>", ",", 
     "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5538182082720263`", ",", "3.4461817973170135`", 
     ",", "\<\"converged\"\>", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000043498622688`", ",", "2.49999565614549`", ",", "\<\"converged\"\>",
      ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.5000043498622677`", ",", "1.499995656145489`", 
     ",", "\<\"converged\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.4461907908280414`", ",", "0.553809215511148`", 
     ",", "\<\"converged\"\>", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.613151360354055`", ",", "1.386542742375485`", ",", "\<\"mag\"\>", ",", 
     "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0027229631438104`", ",", "0.9973719963567971`", 
     ",", "\<\"converged\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0085591384983603`", ",", "0.9914484816705277`", 
     ",", "\<\"converged\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.004743687582621`", ",", "0.9956775302846986`", 
     ",", "\<\"converged\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"mag\"\>", 
     ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"sign\"\>",
      ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"sign\"\>",
      ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0021162645422935222`", ",", "0.4978837354577065`", ",", "\<\"sign\"\>",
      ",", "30"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454641754593525`*^9, 3.8456571221590166`*^9, 3.84591822464896*^9, {
   3.8459183047592325`*^9, 3.845918319477686*^9}, 3.845918479844388*^9, {
   3.8459185815015774`*^9, 3.8459186202027197`*^9}, {3.845918710849156*^9, 
   3.845918718115782*^9}, 3.845918831158429*^9, 3.8459188709082613`*^9, 
   3.8459978639621887`*^9, 3.845998624935521*^9, {3.8459986617318096`*^9, 
   3.8459986750108805`*^9}, 3.8459998363800087`*^9, 3.846000029948039*^9, 
   3.84600023979399*^9, {3.8460003169144177`*^9, 3.8460003295385838`*^9}, 
   3.8460010789698253`*^9, 3.846001764885115*^9, 3.8460018038143153`*^9, 
   3.8460021500476246`*^9, 3.8460188926637325`*^9, 3.8460192129913826`*^9, {
   3.8460192676231613`*^9, 3.846019278654165*^9}, 3.8460199742470603`*^9, 
   3.84602069857485*^9, {3.8460212282516794`*^9, 3.8460212405435534`*^9}, 
   3.8460212798348694`*^9, {3.8460213106750517`*^9, 3.846021327898576*^9}, {
   3.8460213715267143`*^9, 3.8460214028334417`*^9}, {3.846021481737358*^9, 
   3.8460214944983797`*^9}, 3.8460215807574444`*^9, 3.8460231316742563`*^9, 
   3.846023460484393*^9, 3.846086634823089*^9, 3.846087011592943*^9, 
   3.8460871303774815`*^9, {3.846087850594406*^9, 3.8460878872280064`*^9}},
 CellLabel->
  "Out[590]=",ExpressionUUID->"ab4c85a2-6dfe-4028-929e-f00f0c771664"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$14941#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwUl3c41e8bxyV775V1rGOTtMTnuWVGSaKsMsqWJGQmsqPsTSnZXzOl9flI
KEIIlTKjKOkYZYR+5/fXuV7X837u+33f7+e6PtchOV+0cKGloaHpY6Sh+f/v
UtNYEQ0NBRkenCoWst//PE/t77SPDAXl2tCm3Jbhx3UrBJVGjSno8Omm43Of
ZPCUAvNHj1MpKLv1izTXUU38gMCFLfJDCtrLbBFGz3AQn7iVoJc1QkH+G+on
6Ap1cLXrrW/9pBeRcaPDh6bdevjw5hj/pNEikuV9f+H5EQP8auBfu+Pei8iE
vcOJYm6E93pozio1LSIhfhP6CBVT3Nu8lGbGcAmFVVr0fuU+gfN1tRqe9FpC
XppdeuOfT+BP9caTXtxaQlZ9z5j47ljgLPuFhIs+LKHCCY3+GE5LvKFO04Ft
awntk+sIm39qidsqnrgfQlpGupIrr6YcrfAKscTdpz2XkfAgSu7POIWbZ5de
ab+5jKQcLtQuS5/G17hePt/TuIy4da1erFWdxu8kju+8+34ZXXX+l/Vb2Ro3
pts8wrW5jNirL9P9K7XGKeFCKVclV5Alw5NRBREbPHtVc3hefwUt2Iz8SYy1
wb9+v+DcmbyCcm69PqBnaovfPJ9Yvr9hBU0eLmVuu2eL7x0rXbg/vIIoqeGe
vb9t8c+nX2ry/V1Bri6n1K7o2uHR/eMhURK/0cT9A8rvYu1wZdPNForeb7R2
SHnvarsdPtgmxOjg/hsZcx0UX9u2w8Owvcd6kn6jS6xuT7/vtselm0+kH6r/
jTgF8IkvZ+3xrt0+HyuGfqNmIUPntRh73K8qUUJo4zfi3WTg0ymzx0Vky1xi
xf+gxnKmro5We7y16GXVyuE/SJvxpHXlB3vcU2hi0dntDzKkWUjbnLXHudM2
9/ff+IN8wiaPDSzb482swldR3R908vzeM7BujzvG7G37b/APSr2zmGFHZaZ/
J1hE1/+gl8LinQdW7PHaIB/zRLFVFN/c2jM/Z4+fWkrMWtNdRUEu3wKTRuzx
ba+yz66uq0iDOSNHucMeL515KTWUuIpOJfUxTFXb42YOE+56taso5H1J5oub
9vifD5s19e9WEXonJDzhZY8XWgj/llhbReCu6WKhb4/rd+89dFN0DYlG/Dum
ImSPzxtYRG7CGvKiiSqL+WaHZxA+rzxd1lDP4EsD3wY7XPvgDfaPCWtocrp7
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
SW//npBFhYPxt2zCMLP9T5x/mUMFb/VH7f/7o6fP6u0U86nAiYk4+r8/8qB9
XXa4EOdDrq3V//5IIGPDvaYiKrj5vrIPxpw1aR0mWkqFZ4uPH/fDvMUqibqr
DK8XcLPAHXNHY9tIfgUVYqs33rDF7LDi97kvF/D+r6vd/d/fTQaRrWjVVNA+
t6uChjmx110yooYKpa4rbP/XQ4lVeOdhLRU2LfndKYT5Rs7zYyvqqPC4KOTr
J6ynxZy41v4GnO8bVl6+i3nUTvdzzTUqFGSYiZ3DHHkjKG+uiQovBYsHAzGv
VKjZZdBCBfODp+kmmGtDPy1IbaWC7Ksz46sxG75b1fruFhVUjTeJjuB8eM/b
dVT1Ls7fzpeuVzEHFsapBbRj/exWCx7DvPjfzf5b96hQLnj0IQsz95baDpsu
KoRV7Kv93x89W+8sfP4xFdRqxy65Y/aKzGrid1PB8ePpc/KYc7aKqMS9oELy
uyklX5z/pFL2255XVMiuuZUnh/m+sG/q2j4qmLZmdl3D9TLV9m6+4T3W79J+
xW+43pKUZRsEB6hwO8tGLRKzcqzxwR0fqRD0fM/VZZgtDa+9+jRMBXe7AwsV
cb1e6UyplflBhW3KN7UlRcbRWEbrs90/qaBb/iE1DNe/isvYVNokFWqyWzRG
cX/InzPkyc5RwYk+P1iP+0m8+r9OWWEa/FwaN74G+6G70xrfLEVpMEYvD7mK
+9X8XbtlGQtowE81/8rD/c3fvtFquSQNHr6I0uTgfulw5tDH5ctpsLppCeXN
Dz7Ksc0Ts1pBg4yn5JeUcdyflTtVM+VpkP3FtjP6Ox8ZtSr5yK2lwcTk5C75
r3ie89/8kdtEA5v7CwaW4fuk+C5juZUsGvxa8ykv5wWeb2uOsWw4NIh6cvxQ
5zM870fK7LN5NDi3ZOH+uad8NBkpWLpyKw2Y8iZHnPF9tv/qdS15ExpQc5cL
muP77urwIQvbHTRwnJAfTm/H/dpENjDHDO/vXMre9/+/L/p4pEXekgZf3kqV
ReD79DXZTUar9tFg/5oll5fg+/ZEv6W3nSMNSDZmf6Ou4/vupZPJuc40OHM5
VE8Q389L9N+/WOVGg+qsXr/l+D7/Tkpy1s6DBua5ZbRLV/lo5XuWQp4XDaAg
7/zOK3i+BGa4rD5Cg644pFdbw0edW+/G7PWlgcHA6Z2+l7AfWvqjMs+fBk/W
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
           "]]}, Annotation[#, "Charting`Private`Tag$14941#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{0.9978837354577065, 0.}, {1.4978837354577066`, 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 4.963083675318166*^-24}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{2, 4.2599801546480925`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{1.9978837354577066`, 4.2599801546480925`*^-22}, {
        2.4978837354577066`, 4.2599801546480925`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 1.3234889800848443`*^-23}}], 
      RGBColor[1, 0, 0], 
      PointBox[{3, 6.617444900424222*^-24}], {Arrowheads -> Small, 
       ArrowBox[{{2.9978837354577066`, 6.617444900424222*^-24}, {
        3.4978837354577066`, 6.617444900424222*^-24}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 2.6469779601696886`*^-23}}], 
      RGBColor[1, 0, 0], 
      PointBox[{4, 1.3234889800848443`*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{3.9978837354577066`, 1.3234889800848443`*^-23}, {
        4.497883735457706, 1.3234889800848443`*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, -1.0587911840678754`*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.36054667152722*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{4.997883735457706, -1.36054667152722*^-20}, {
        5.497883735457706, -1.36054667152722*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, -4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.44218668610888*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{3.049992904859501, -5.44218668610888*^-20}, {
        7.050834819844701, -5.44218668610888*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, 1.6940658945086007`*^-21}}], 
      GrayLevel[0], 
      PointBox[{7, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{6.005708775554186, 8.470329472543003*^-22}, {
        10.005626441804807`, 8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, -6.776263578034403*^-21}}], 
      GrayLevel[0], 
      PointBox[{8, -8.707498697774207*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{7.005044326593945, -8.707498697774207*^-19}, {
        11.005044188786227`, -8.707498697774207*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 2.710505431213761*^-20}}], 
      GrayLevel[0], 
      PointBox[{9, 1.748276003132876*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.994135634084284, 1.748276003132876*^-18}, {
        12.99413506165487, 1.748276003132876*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.87759525971459, 0.04969024160430335}, {
        13.877595257288867`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.}}], 
      GrayLevel[0], 
      PointBox[{11, 0.4503097583956967}], {Arrowheads -> Small, 
       ArrowBox[{{10.446190414317359`, 0.4503097583956967}, {
        14.446190414349491`, 0.4503097583956967}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, -8.673617379884035*^-19}}], 
      GrayLevel[0], 
      PointBox[{12, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.50000434983146, 0.5}, {14.500004349862268`, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.0722325369815907`*^-45}}], 
      GrayLevel[0], 
      PointBox[{13, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5}, {14.500004349862268`, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{14, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{10.553817827390505`, 0.5496902416043034}, {
        14.553817827419183`, 0.5496902416043034}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{15, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.118465852986628`, 0.9503097583956966}, {
        15.118465829895438`, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.003204766768194`, 1.}, {16.003204727552095`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14.000488501581296`, 1.}, {18.000488298407916`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956968}], {Arrowheads -> Small, 
       ArrowBox[{{17.8837414604773, 0.9503097583956968}, {21.883741614036683`,
         0.9503097583956968}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 1.}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{18.446182174350906`, 0.5496902416043034}, {
        22.44618217994625, 0.5496902416043034}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 1.}}], 
      GrayLevel[0], 
      PointBox[{20, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{18.49999565013773, 0.5}, {22.49999565614549, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {21, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{21, 0.49999999999999994`}], {Arrowheads -> Small, 
       ArrowBox[{{18.499995650137734`, 0.49999999999999994`}, {
        22.49999565614549, 0.49999999999999994`}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{22, 0.45030975839569665`}], {Arrowheads -> Small, 
       ArrowBox[{{18.55380943961802, 0.45030975839569665`}, {
        22.55380944593317, 0.45030975839569665`}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {23, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{23, 0.04969024160430337}], {Arrowheads -> Small, 
       ArrowBox[{{20.284262438523932`, 0.04969024160430337}, {
        24.284265848843326`, 0.04969024160430337}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 2.3852447794681098`*^-18}}], 
      GrayLevel[0], 
      PointBox[{24, 1.1934694226813092`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{21.997879727814443`, 1.1934694226813092`*^-18}, {
        25.99788431163404, 1.1934694226813092`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {25, 7.589415207398531*^-19}}], 
      GrayLevel[0], 
      PointBox[{25, 3.8052955155399443`*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{21.991467908324097`, 3.8052955155399443`*^-19}, {
        25.991547565462874`, 3.8052955155399443`*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{26, 2.72109334305444*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22.991627271726816`, 2.72109334305444*^-20}, {
        26.991612677024044`, 2.72109334305444*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, -1.2585168176455822`*^-48}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, -7.940933880509066*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{26.997883735457705`, -7.940933880509066*^-23}, {
        27.497883735457705`, -7.940933880509066*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, -6.776263578034403*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, -3.40136667881805*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{27.997883735457705`, -3.40136667881805*^-21}, {
        28.497883735457705`, -3.40136667881805*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 5.293955920339377*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{28.997883735457705`, 5.293955920339377*^-23}, {
        29.497883735457705`, 5.293955920339377*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{29.997883735457705`, 0.}, {30.497883735457705`, 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8454641754593525`*^9, 3.8456571221590166`*^9, 3.84591822464896*^9, {
   3.8459183047592325`*^9, 3.845918319477686*^9}, 3.845918479844388*^9, {
   3.8459185815015774`*^9, 3.8459186202027197`*^9}, {3.845918710849156*^9, 
   3.845918718115782*^9}, 3.845918831158429*^9, 3.8459188709082613`*^9, 
   3.8459978639621887`*^9, 3.845998624935521*^9, {3.8459986617318096`*^9, 
   3.8459986750108805`*^9}, 3.8459998363800087`*^9, 3.846000029948039*^9, 
   3.84600023979399*^9, {3.8460003169144177`*^9, 3.8460003295385838`*^9}, 
   3.8460010789698253`*^9, 3.846001764885115*^9, 3.8460018038143153`*^9, 
   3.8460021500476246`*^9, 3.8460188926637325`*^9, 3.8460192129913826`*^9, {
   3.8460192676231613`*^9, 3.846019278654165*^9}, 3.8460199742470603`*^9, 
   3.84602069857485*^9, {3.8460212282516794`*^9, 3.8460212405435534`*^9}, 
   3.8460212798348694`*^9, {3.8460213106750517`*^9, 3.846021327898576*^9}, {
   3.8460213715267143`*^9, 3.8460214028334417`*^9}, {3.846021481737358*^9, 
   3.8460214944983797`*^9}, 3.8460215807574444`*^9, 3.8460231316742563`*^9, 
   3.846023460484393*^9, 3.846086634823089*^9, 3.846087011592943*^9, 
   3.8460871303774815`*^9, {3.846087850594406*^9, 3.846087887759158*^9}},
 CellLabel->
  "Out[591]=",ExpressionUUID->"cb1963c7-e887-4229-aab6-43076d3b92e4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"pixelIterGraphics", "[", 
    RowBox[{"10", ",", "15", ",", "newv0", ",", "4", ",", " ", "4", ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"3", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
     "\"\<ConstrainedNewMethod\>\""}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.845918930643983*^9, 3.845918939622538*^9}, {
   3.8459986998843117`*^9, 3.8459987732142467`*^9}, 3.8459989019717846`*^9, {
   3.8460190712262526`*^9, 3.8460190718312306`*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"2274d0e1-de70-45ff-a5ed-0d79db6d0f5b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"b94d5e78-6273-405e-baaa-\
6e385d5d2376"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pickNewValueIter", "[", 
   RowBox[{"tableIterNewVals_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
  ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newIterValCon", ",", "newIterValAny"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newIterValCon", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
             RowBox[{"(", "\"\<converged\>\"", ")"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], ")"}],
           "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIterValAny", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tableIterNewVals", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "15"}]}], ")"}],
           "&"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"newIterValCon", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"newIterValAny", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"tableIterNewVals", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"newIterValCon", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"newIterValAny", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", 
             "\"\<converged\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{"newIterValAny", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"newIterValAny", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0.", ",", "\"\<fakeconverged\>\"", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Last", "[", 
                    RowBox[{"newIterValAny", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", "1"}]}], "}"}], 
                "]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"newIterValCon", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.844466207590722*^9, 3.8444663304974847`*^9}, {
   3.844466467059284*^9, 3.844466482937065*^9}, {3.8444669028168545`*^9, 
   3.8444669220431056`*^9}, {3.8444670322139096`*^9, 
   3.8444670870482016`*^9}, {3.8444671566049376`*^9, 3.844467158920144*^9}, {
   3.844467196948223*^9, 3.8444672718024893`*^9}, {3.844467321158042*^9, 
   3.8444673278403487`*^9}, 3.844468299730402*^9, {3.844468502462919*^9, 
   3.8444685083530297`*^9}, {3.844520161191785*^9, 3.8445202245778556`*^9}, {
   3.844520332705359*^9, 3.844520377455515*^9}, 3.84452048068826*^9, {
   3.8445205845433617`*^9, 3.84452068650521*^9}, {3.8445209863115625`*^9, 
   3.8445209977867584`*^9}, {3.844955378499539*^9, 3.844955378702995*^9}, {
   3.8450399851794863`*^9, 3.8450399905968895`*^9}, {3.8450402066544905`*^9, 
   3.845040239394699*^9}, {3.8450434161210747`*^9, 3.8450434242961826`*^9}, {
   3.845043604555329*^9, 3.8450436349903736`*^9}, {3.8450478558828373`*^9, 
   3.845047867869722*^9}, {3.8456575526918926`*^9, 3.8456575749662375`*^9}, {
   3.846000761958229*^9, 3.84600076666483*^9}, 3.8460020837549314`*^9, {
   3.8460186851196623`*^9, 3.8460186856315947`*^9}, 3.846018886808941*^9, {
   3.8460189616153903`*^9, 3.846019059973849*^9}, {3.846019103568391*^9, 
   3.8460191037534432`*^9}, {3.846019638725012*^9, 3.846019644968521*^9}, {
   3.846086647334755*^9, 3.846086666377084*^9}, {3.846086708054812*^9, 
   3.8460867093045206`*^9}, {3.8460870240121717`*^9, 
   3.8460870976665087`*^9}, {3.8460873018211837`*^9, 
   3.8460873044143124`*^9}, {3.846087339218552*^9, 3.846087399411335*^9}, {
   3.8460874432447863`*^9, 3.846087446900208*^9}, {3.8460876173270864`*^9, 
   3.8460876318802443`*^9}, {3.8460876965682096`*^9, 3.8460877516886625`*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updateValues", "=", 
   RowBox[{"{", 
    RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.844519953596135*^9, 3.8445199606029215`*^9}, {
   3.8445200284976707`*^9, 3.844520080540944*^9}, {3.8445201144548054`*^9, 
   3.84452013632008*^9}, {3.8445204044409313`*^9, 3.8445204048126707`*^9}, {
   3.844521111054682*^9, 3.844521111228567*^9}, {3.845038037655663*^9, 
   3.8450380378721824`*^9}, {3.845038171548463*^9, 3.8450381719784317`*^9}, 
   3.8450400525206423`*^9, 3.845040270633919*^9, {3.8450435281953635`*^9, 
   3.8450435292420616`*^9}, {3.8450449581286364`*^9, 
   3.8450449584168606`*^9}, {3.8460012756798897`*^9, 3.846001276159388*^9}, {
   3.846001463969864*^9, 3.8460014671759553`*^9}},
 CellLabel->
  "In[532]:=",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
    "\[GreaterEqual]", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
      RowBox[{
       RowBox[{"updateValues", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
      RowBox[{"updateValues", "=", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", 
         RowBox[{"updateValues", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "}"}]}]}], "]"}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
       "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude",
        " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ",
        "v0"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"random", " ", "values", " ", "between", " ", "5", " ", "and"}],
       " ", "-", "5"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nV", "=", 
     RowBox[{"newValues", "[", 
      RowBox[{"10", ",", 
       RowBox[{"updateValues", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "newv0", ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableNewValues", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "We", " ", "initialize", " ", "whith", " ", "values", " ", 
        "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", " ", 
        "calculated", " ", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tValues", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"updateValues", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iterTable", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tValues", "=", 
            RowBox[{"PyrUpgrade1D", "[", 
             RowBox[{"tValues", ",", "p0", ",", "  ", 
              RowBox[{"pyrf12", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"threshold", "*", 
               RowBox[{"2", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"goodValIter", "=", 
    RowBox[{
     RowBox[{"pickNewValueIter", "[", 
      RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Last", "[", "goodValIter", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8445199189976206`*^9, 3.8445199365460973`*^9}, {
   3.844519973444282*^9, 3.8445200208896346`*^9}, {3.8445201321606035`*^9, 
   3.8445201335175266`*^9}, 3.8445204255897226`*^9, {3.8445207635164404`*^9, 
   3.844520772183606*^9}, {3.844521615845844*^9, 3.8445216204018307`*^9}, {
   3.8449608965047283`*^9, 3.8449609389132614`*^9}, {3.845038043311702*^9, 
   3.845038045807271*^9}, {3.845043232309779*^9, 3.8450432374252357`*^9}, {
   3.845043271633041*^9, 3.845043280468442*^9}, {3.845043388631222*^9, 
   3.8450433948913903`*^9}, {3.845043436701793*^9, 3.845043458830859*^9}, {
   3.8450434913708134`*^9, 3.8450435144542074`*^9}, 3.8450435634013424`*^9, {
   3.845043652260578*^9, 3.845043652741896*^9}, 3.845044961232326*^9, 
   3.8450478485078444`*^9, {3.845918357722026*^9, 3.8459183622702703`*^9}, {
   3.8460012212613683`*^9, 3.8460012264810104`*^9}, 3.8460217144186335`*^9, {
   3.8460231595946617`*^9, 3.846023165534622*^9}, {3.846023197994383*^9, 
   3.8460231990390916`*^9}},
 CellLabel->
  "In[537]:=",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.024394258036038462`", ",", "3.619676913545377`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04307964117111815`", ",", "3.69344225772642`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.05737736082205904`", ",", "3.7451674728982782`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.06830696126609262`", ",", "3.782851253518648`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.07665454941765903`", ",", "3.81078481384916`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08302532851028341`", ",", "3.8316841634604026`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08788441379397892`", ",", "3.8474068260747036`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0915886427836551`", ",", "3.859276143994221`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.09441135453235924`", ",", "3.8682570623526433`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.09656164663115077`", ",", "3.8750631263677513`", 
     ",", "\<\"converged\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454641756365995`*^9, 3.845657122358302*^9, 3.845918224824729*^9, {
   3.8459183383795385`*^9, 3.8459183663513756`*^9}, 3.8459184799461017`*^9, 
   3.8459186002155757`*^9, 3.8459188720291295`*^9, 3.8459978651126595`*^9, 
   3.84599862620144*^9, 3.8459998734359674`*^9, 3.846000247528346*^9, 
   3.8460007720323315`*^9, 3.8460008033204913`*^9, 3.84600085310566*^9, 
   3.846001085703822*^9, 3.846001227036154*^9, 3.846001277396369*^9, 
   3.846001469601372*^9, 3.8460017716152687`*^9, 3.8460018364219513`*^9, 
   3.8460021570443244`*^9, 3.8460189288848567`*^9, 3.8460192983992424`*^9, 
   3.8460199796643*^9, 3.846021586833003*^9, 3.846023137457803*^9, 
   3.8460231677056646`*^9, 3.8460231996677237`*^9, 3.846023466311986*^9, 
   3.84608673243949*^9, 3.8460870430387306`*^9, 3.8460871433119764`*^9, 
   3.8460874504928794`*^9, 3.8460878563290343`*^9},
 CellLabel->
  "Out[540]=",ExpressionUUID->"166c4006-003c-42c8-960d-24852b18ffcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09656164663115077`", ",", "3.8750631263677513`", 
   ",", "\<\"converged\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454641756365995`*^9, 3.845657122358302*^9, 3.845918224824729*^9, {
   3.8459183383795385`*^9, 3.8459183663513756`*^9}, 3.8459184799461017`*^9, 
   3.8459186002155757`*^9, 3.8459188720291295`*^9, 3.8459978651126595`*^9, 
   3.84599862620144*^9, 3.8459998734359674`*^9, 3.846000247528346*^9, 
   3.8460007720323315`*^9, 3.8460008033204913`*^9, 3.84600085310566*^9, 
   3.846001085703822*^9, 3.846001227036154*^9, 3.846001277396369*^9, 
   3.846001469601372*^9, 3.8460017716152687`*^9, 3.8460018364219513`*^9, 
   3.8460021570443244`*^9, 3.8460189288848567`*^9, 3.8460192983992424`*^9, 
   3.8460199796643*^9, 3.846021586833003*^9, 3.846023137457803*^9, 
   3.8460231677056646`*^9, 3.8460231996677237`*^9, 3.846023466311986*^9, 
   3.84608673243949*^9, 3.8460870430387306`*^9, 3.8460871433119764`*^9, 
   3.8460874504928794`*^9, 3.8460878563290343`*^9},
 CellLabel->
  "Out[541]=",ExpressionUUID->"f93c1783-27d2-4f75-8163-07bf46c44b87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p0", ",", "5", ",", 
    RowBox[{
     RowBox[{"Last", "[", "goodValIter", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845040090183707*^9, 3.845040128420087*^9}, {
  3.8460007875636425`*^9, 3.846000801253723*^9}},
 CellLabel->
  "In[542]:=",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
tlNdVAawOBsborHLXDx3OcozwG9nwFEX7DzzkxmTCgy4f/KLwXbsK7qRM6cY
DHBzNrdbjR3FvqK/SpEBU69ia/txPE+RC7JSWAyoLvDzuIbtzX+XK8dmgErW
SPARbKf5/wzvKjPg6ZX6OXlsy8/Pc7Q3MWDUvm/6A86nUc+b762bGbDYtt4n
HVu7adTokBoD/MtNwoywqTnL5vy2MkBbQSk9H9cHKW6dyV8NBrjbxVX+v34E
Tklfi9/GgJL9tumjuL64Ftv3lWgzQKSV+ELGblztXzy4kwEpw88kDuJ6rfx1
7renHgP0JHvfvsX1XfwlYf+8PgN8bmq22mInPC79I2zEgA8Cp1z34/1gd2b4
oKEpAyQ/8C5tOIb7ldfMrVdmDDhZ/z09BO+vXVZLy5z3M6AiRObZe7z/WFvE
756xZIDv70JyricXLUyYrbpny4A/v6Lnv+P9PdXvYK9rzwDmuvjrgP3h6bHK
dgdcL3lVe+PduOhpYYzjmBOOb9DoUzFXvP9tiRpJDwY4Cc42CzlxkWqbikf0
CQZ4f50mh9ng/NhEJW4NYoCm/fvKZNyPfowPVn0+yYD3PzLu5VnhfPPF8uiF
MOB2D1OhCvcvLYNPmf/CGPB6qL+C2I/3c9PVF6cuMaBh3Y3/gnB/tK7hUTt2
kwHDG1xLW3E/rjewsibfYgBvRwu3WAPXb9+dc89vM+B8ZM+diK1c9G7Wtp1R
gfNBv/tMawsXuajed/tcg+u3J97whgquh9teVx1a8Poq1vacx/0+rLBnyewD
A7JKrigW4vOi+d3LnR+HcfwoGZYFG7iIV6IjOvAjA5RGmS/z13NRTNIz4cxR
BgzsNh8vXIf7dWiD/MdJPL/EALn/VnNR7qGSvYELDKgsGz2IePH5cPn65VWL
DIAFq/+sV3CRXEfB64zfDLDNGDUIXM5FRXrZTg//4vX21Py7x8NFtzcnB65a
yYTdBb/3XlnE569gSE7GeibsP0MfaZ/moCWD4BHWRia0SvT57Z7iIN3wQPpD
ESaw3p0NfjbBQc0/fStGxJjgsYv2pvcLBz3/7NrCkmHCfOoFB/mPHNTfuG+q
gcWEp+1tgVfw+UteNFY1YzNhRfdfA4vXHGS/1ejkiDITJB8064n3cdCHW7t4
Vqky4caNw5V3e/D5nqEpYqbJhH1/q96u6eSguQCKzogeE8RX/9SNe8JBRWYe
+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
1+3+ro/es+Ae373D/8/HpQjrHdkjLGAGqd62xf6VH799zycWrNfPOnAQ2+1h
49afn1nQSP+vyAxbe0FexWIc509tyVQPu0TUmrVsAtfXcEypzv/zvyWeXj6J
+8Wdwoqt2OM+32RWc1hw6679y//Xn0W8vGQ9lwVynh5fZLAbS63EPL6zYJNJ
fwUJO+3Tw3WP51iwNvOx7UrsXTZxPGeWWKBecE3mA673OycfLjH/smDhe2Nf
L7Z4Knfh9T8WbI7i6rVhczoPfVNboQRjAR5G1dg5+rSPEwJKMEpErYzC5nM5
9D5jtRI02NJjT2EHnI8dMFyrBMPGsc+PYe95wOkpFFaC+a0+F/Zjz29qeGwr
pgTvLlziSGCbSR4sbpNXAh2XnUb5uF9kfVZpsqPj3+/T4E/GHrvDPzjFUII4
FHY1DPscPgnWKSmB3GFnujP23SO0UAtVJXhbc0ZUDntNxbcDQzuU4CAv60Ea
7mfP9S/xzBxSAjSvQXfD/VJEyFPyvLUS1IjcnDHDdnqzU0PYVgk+x41kaGMv
eM0dU3NQgozS2dQN2Mwk+zcnXZXgfRehTeD+HP2WdfffcSX4T3j9k43Yer7P
7NbHKkEs2/nlHXweLPV/NWyJU4KNJzbzpGHX6K1RC05QAsUV6rRQbKbEfv53
SUqwaNu6yxhbqGWgujRdCVzc65ZG8fkzIDGzFoqU4G7fHh4p7IAnIk2+BF6/
c/fRGHx+sTdr3qI8UoJIbpqpL/Zolk16b7MS6F5br3MQ29ovz1vrqRLMNsto
0rB1JZkSqzqUICGS2kzg72tBf+2A3AElGP/q2vUbn5/XpFzkX8wpQdZFn++R
+HzV2aKk4vJTCYQnwuaPY7/e80NzYUEJkrXPi9lhCwZHm8gvKYHT54JKVeyA
7rKA0OVsGBa+8V/TPw7aFT3bxF7HBt0z2QExf/H3Vk5DW7MwG2KLfx51xj5Z
FdVrvYENLrml17Wxy4bFxiNF2fBojv819w8HbdTWWfdOkg0Kex7rOmJ/5kQ6
JDLZkBkiI2eA7w/nVpl60FhseH72mTQNW1xazL9eiQ1Rpk/slmHvNb4ZOarC
hlJrIqPxN/5eKOq4tWMrGzLW3SHpYEfZkBand7JBjv84VQ/fT+iPb6Sb2rGh
h5Z4OhzfX7rYC0VD9mz4aTCywhM7JN2o6qgjGxrWCrwwxe7w+voy2pkNSpde
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
yHKRWEzhxoCjWIz+H/xyw0c=
        "]]},
      Annotation[#, "Charting`Private`Tag$14348#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$14348#2"]& ]}, {}}, {
    PointBox[{{10, 0.04969024160430335}, {10, 0.0993804832086067}, {
      10, -5.421010862427522*^-20}}], 
    PointBox[{{9.903438353368848, 0.04969024160430335}, {13.87506312636775, 
     0.04969024160430335}}], 
    LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
    LineBox[{{9.903438353368848, 0.04969024160430335}, {13.87506312636775, 
     0.04969024160430335}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{5, 15}, {-0.028786040543277963`, 1.0288025645345067`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8454641756964207`*^9, 3.845657122429109*^9, 3.845918224904479*^9, {
   3.8459183712900667`*^9, 3.8459183822098703`*^9}, 3.8459184800051208`*^9, 
   3.845918600277338*^9, 3.845918872092704*^9, 3.8459978651632447`*^9, 
   3.8459986262547474`*^9, 3.8459998735157185`*^9, 3.8460002476189938`*^9, {
   3.8460007745215282`*^9, 3.846000804841978*^9}, 3.8460008552471304`*^9, 
   3.8460010857597055`*^9, 3.846001771675108*^9, 3.846001836490651*^9, 
   3.8460021571051598`*^9, 3.846018928949895*^9, 3.8460193001045876`*^9, 
   3.8460199797291613`*^9, 3.846021586918234*^9, 3.8460231392840643`*^9, 
   3.846023203196143*^9, 3.8460234664107194`*^9, 3.846086736844707*^9, 
   3.84608704491329*^9, 3.8460871466861925`*^9, 3.846087453398451*^9, 
   3.846087856391523*^9},
 CellLabel->
  "Out[542]=",ExpressionUUID->"3952b88f-9ed1-40d6-ace7-a2c1bf8a1ef3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "newv0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedNewMethod\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", "updateValues", ",", "newVals", ",", "tableNewValues", ",", 
        "tValues", ",", "iterTable", ",", "goodValIter", ",", "nV"}], "}"}], 
      ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Flag", " ", "to", " ", "stop", " ", "when", " ", "e"}], 
           "\[GreaterEqual]", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "n"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "n"}], "}"}]}]}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "This", " ", "will", " ", "only", " ", "give", " ", "values", 
               " ", "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ",
                "magnitude", " ", "of", " ", "v", " ", "\[IndentingNewLine]", 
               "Or", " ", "if", " ", "v0"}], " ", "=", " ", "0"}], ",", " ", 
             RowBox[{
             "list", " ", "newv0", " ", "is", " ", "created", " ", "and", " ",
               "fed", " ", "to", " ", "the", " ", "function", " ", "to", " ", 
              "try", " ", "all", " ", 
              RowBox[{"it", "'"}], "s", " ", "contained", " ", "values"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nV", "=", 
            RowBox[{"newValues", "[", 
             RowBox[{"10", ",", 
              RowBox[{"updateValues", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "newv0", ",", 
              "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"tableNewValues", "=", 
            RowBox[{
            "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "We", " ", "initialize", " ", "whith", " ", "values", " ", 
               "calculated", " ", "at", " ", "nV", " ", "and", " ", "last", 
               " ", "calculated", " ", 
               RowBox[{"updateValues", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tValues", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"updateValues", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"iterTable", "=", 
                RowBox[{
                "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tValues", "=", 
                   RowBox[{"PyrUpgrade1D", "[", 
                    RowBox[{"tValues", ",", "p0", ",", " ", 
                    RowBox[{"pyrfunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                    RowBox[{"threshold", "*", 
                    RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                    "\"\<ConstrainedNewMethod\>\""}], "]"}]}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "=", 
            RowBox[{"pickNewValueIter", "[", 
             RowBox[{"tableNewValues", ",", "\"\<ConstrainedNewMethod\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"updateValues", "=", 
            RowBox[{"Last", "[", "goodValIter", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"goodValIter", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.844362111190406*^9, 3.844362121675807*^9}, {
   3.844460247556864*^9, 3.8444602629714775`*^9}, 3.844465539884472*^9, {
   3.844465612855119*^9, 3.844465633559856*^9}, {3.8444656735616617`*^9, 
   3.8444657778591137`*^9}, {3.8444658333678555`*^9, 
   3.8444658639118805`*^9}, {3.8444659988895426`*^9, 3.8444660455485296`*^9}, 
   3.844466163146289*^9, {3.8444667480392838`*^9, 3.8444667624380555`*^9}, {
   3.844466856125552*^9, 3.8444668566340017`*^9}, {3.8444673031048746`*^9, 
   3.844467313894212*^9}, {3.8444673578772583`*^9, 3.844467358944499*^9}, {
   3.8444679481500235`*^9, 3.8444679562208757`*^9}, {3.8444680363683558`*^9, 
   3.844468068400166*^9}, {3.84446843803209*^9, 3.844468495636952*^9}, 
   3.844468729720846*^9, {3.8444692499050045`*^9, 3.844469250302681*^9}, {
   3.8445194746865516`*^9, 3.8445194778982077`*^9}, {3.8445196492146997`*^9, 
   3.844519681203652*^9}, {3.844519712403158*^9, 3.8445197430357046`*^9}, 
   3.844519790054809*^9, {3.844520712407405*^9, 3.84452075661621*^9}, {
   3.84452089517029*^9, 3.8445208997409673`*^9}, {3.844521591603115*^9, 
   3.8445215932704096`*^9}, 3.8445216953082337`*^9, 3.844521792030468*^9, {
   3.844523094337858*^9, 3.8445230949554443`*^9}, {3.844524092322474*^9, 
   3.844524096286628*^9}, {3.844528920321431*^9, 3.844528951245701*^9}, {
   3.8448659934702606`*^9, 3.8448659940698223`*^9}, 3.844868957719557*^9, {
   3.844869197092396*^9, 3.8448692031366224`*^9}, {3.8449553839120035`*^9, 
   3.8449553896059885`*^9}, {3.8450381992746*^9, 3.8450382174107485`*^9}, 
   3.8450438414452667`*^9, {3.8450439365198903`*^9, 3.845043941073431*^9}, {
   3.845044970362219*^9, 3.8450449749652495`*^9}, 3.84504790511629*^9, {
   3.845918420937899*^9, 3.845918426274135*^9}, {3.8460015072013903`*^9, 
   3.84600154481453*^9}, {3.8460015963097467`*^9, 3.8460015965694647`*^9}, {
   3.846023301078119*^9, 3.8460233050893593`*^9}, {3.846086750529233*^9, 
   3.846086761370406*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-\
481b488627c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PyrFlow1D", "[", 
    RowBox[{"10", ",", " ", "p", ",", "newv0", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, 3.8444602703342605`*^9, 
   3.8444657790598745`*^9, 3.8444658517453156`*^9, 3.844467337496135*^9, {
   3.84446810899422*^9, 3.8444681207636952`*^9}, {3.8444690196543484`*^9, 
   3.8444690537755437`*^9}, {3.8444692346263294`*^9, 
   3.8444692429257164`*^9}, {3.8444693087297163`*^9, 
   3.8444693418978047`*^9}, {3.844521729294717*^9, 3.8445217319462013`*^9}, {
   3.8445219790342903`*^9, 3.8445219906796007`*^9}, {3.844869018428*^9, 
   3.844869027052926*^9}, {3.844869216681383*^9, 3.8448692177693863`*^9}, {
   3.8450380595407257`*^9, 3.845038066363885*^9}, 3.8450449792125807`*^9, {
   3.845045066071169*^9, 3.845045066668535*^9}, {3.8450470968326883`*^9, 
   3.8450470996875415`*^9}, {3.845047134527914*^9, 3.8450471376710906`*^9}, {
   3.84504718148096*^9, 3.845047182877651*^9}, {3.845657156700632*^9, 
   3.845657158718465*^9}, {3.846001168170922*^9, 3.8460011691828656`*^9}, 
   3.8460233467870703`*^9},
 CellLabel->
  "In[544]:=",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.7692287157852935`", ",", "2.231613945107`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9921803993092289`", ",", "3.0078848911288314`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9934864376993426`", ",", "2.0065304895912557`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.012601072995896`", ",", "1.987398175329557`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2524248263171556`", ",", "2.7475752075768893`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5538092152719779`", ",", "3.446190784759799`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4999956501685412`", ",", "2.5000043498622686`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.499995650168541`", ",", "1.500004349862268`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.4461820274298773`", ",", "0.5538179725994222`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.8817334905343115`", ",", "0.11826649849064326`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9913285283273476`", ",", "2.0086714458269825`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9955855996629843`", ",", "2.004414217397262`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.12560288562086766`", ",", "3.8743448478827185`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5538178441732761`", ",", "3.4461821614232235`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000043498622686`", ",", "2.499995656145492`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.5000043498622686`", ",", "1.49999565614549`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.446190811300664`", ",", "0.5538091950358914`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.613721962222145`", ",", "1.3862671767068737`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.995556296542285`", ",", "3.004318651304978`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.975652957540815`", ",", "0.024395087172960128`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.683498217063735`", ",", "2.332239487734243`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845464175776202*^9, 3.845657122522014*^9, 3.845657169864709*^9, 
   3.8459182250956306`*^9, {3.845918408974287*^9, 3.845918434948286*^9}, 
   3.84591848005698*^9, 3.8459186004863205`*^9, 3.8459188723240986`*^9, 
   3.8459978654095864`*^9, 3.8459986265053196`*^9, 3.8459998790030146`*^9, 
   3.8460002484308558`*^9, 3.8460008078447285`*^9, 3.8460010859920835`*^9, 
   3.846001177760255*^9, 3.846001772718013*^9, 3.84600183753244*^9, 
   3.8460021582771573`*^9, 3.8460189301160717`*^9, 3.846019304337449*^9, 
   3.84601998007143*^9, 3.846021587575029*^9, 3.846023209125909*^9, 
   3.8460233092624116`*^9, {3.8460233420953293`*^9, 3.846023349720303*^9}, 
   3.8460234669492908`*^9, 3.8460868390081635`*^9, 3.8460869105229764`*^9, 
   3.8460870498027644`*^9, {3.8460871502634735`*^9, 3.8460871850521574`*^9}, 
   3.84608745758496*^9, 3.84608785689137*^9},
 CellLabel->
  "Out[544]=",ExpressionUUID->"254b42d4-24a5-4b72-9eba-c8620d488fdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{"10", ",", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445219867175174`*^9, 3.8445219991011286`*^9}, {
   3.8448692242987785`*^9, 3.844869225296276*^9}, {3.845038072374775*^9, 
   3.845038075093134*^9}, 3.845044985460975*^9, 3.8450471983336673`*^9, 
   3.8456571610417123`*^9, 3.845657206167536*^9, {3.8460007155152283`*^9, 
   3.8460007186018267`*^9}, 3.846001175303458*^9, {3.8460016281623354`*^9, 
   3.846001630633064*^9}, {3.846001678204561*^9, 3.8460017159634113`*^9}, 
   3.8460233480474925`*^9},
 CellLabel->
  "In[545]:=",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.731771798878129`", ",", "1.2798828248003977`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001639287475266996`", ",", "3.998427172911331`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0010940366359575`", ",", "2.998996136282196`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9893557614322216`", ",", "3.0106481460779198`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9890560921486105`", ",", "2.0109417199403365`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.12061601439217205`", ",", "3.8793839849890404`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5538093498563791`", ",", "3.4461906501773165`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4999956501685412`", ",", "2.5000043498622686`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.4999956501685405`", ",", "1.5000043498622675`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.4461821579283156`", ",", "0.553817842100719`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.9002756163334635`", ",", "0.09972423793514477`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9989340010950506`", ",", "3.0010659819716343`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.999090767436336`", ",", "2.000909408788224`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.11724973473784407`", ",", "3.8827493184899606`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5538178684705939`", ",", "3.4461821371160326`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.500004349862267`", ",", "2.499995656145491`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.500004349862267`", ",", "1.499995656145491`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.446190786521571`", ",", "0.5538092198180876`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.895116290398075`", ",", "1.1049060076729207`", ",", "\<\"ok\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9791657759435253`", ",", "2.0207745765356946`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.983397710615846`", ",", "0.016197217062974573`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0036196923247673`", ",", "0.9936394851987015`", 
     ",", "\<\"converged\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"mag\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2626703428743926`", ",", "0.23732965712560739`", ",", "\<\"sign\"\>"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845464175830392*^9, 3.845657122576865*^9, 3.845657170146604*^9, 
   3.845657206890447*^9, 3.8459182465768504`*^9, {3.8459184324033866`*^9, 
   3.845918436040906*^9}, 3.8459184802861342`*^9, 3.845918600867896*^9, 
   3.8459188727157893`*^9, 3.8459978658055305`*^9, 3.8459986268954625`*^9, 
   3.845999879464026*^9, 3.846000248820811*^9, 3.8460007192532268`*^9, 
   3.84600080922919*^9, 3.846001086192548*^9, 3.84600118222327*^9, 
   3.846001549510909*^9, 3.846001600323146*^9, 3.8460016310985317`*^9, {
   3.846001678929759*^9, 3.846001732431382*^9}, 3.8460017737929263`*^9, 
   3.8460018385784063`*^9, 3.846002159571607*^9, 3.846018931166535*^9, 
   3.8460193054150486`*^9, 3.846019981204467*^9, 3.846021588768668*^9, 
   3.8460232108293543`*^9, 3.8460233105817504`*^9, {3.846023344041623*^9, 
   3.8460233528455987`*^9}, 3.8460234674446325`*^9, 3.846086840976418*^9, 
   3.8460869127724504`*^9, 3.8460870518335047`*^9, 3.8460871519505816`*^9, {
   3.846087188551367*^9, 3.846087189863531*^9}, {3.8460874597719216`*^9, 
   3.846087465270632*^9}, 3.8460878573912864`*^9},
 CellLabel->
  "Out[545]=",ExpressionUUID->"057e276a-90b1-4d66-9abb-4d9db5e7244f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"10", ",", " ", "p", ",", "newv0", ",", " ", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "noteBookMode"}], "]"}], "==", 
    RowBox[{
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{"10", ",", "p", ",", "newv0", ",", " ", 
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
       "noteBookMode"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8445221438362274`*^9, 3.844522149421374*^9}, {
  3.844869258717738*^9, 3.8448692675606394`*^9}, {3.845038079850918*^9, 
  3.8450380918328047`*^9}, {3.845044990996796*^9, 3.845044992268646*^9}, {
  3.845657164114723*^9, 3.845657166006479*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "False", ",", "False", ",", "False", 
   ",", "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "True", ",", "True", ",", "False", ",", "True", ",", "True", ",", "True", 
   ",", "False", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.845464177054885*^9, 3.845657123728532*^9, 
  3.8456571719708247`*^9, 3.8459182483536053`*^9, 3.8459184831471806`*^9, 
  3.845918602607316*^9, 3.8459188744933615`*^9, 3.8459978676489935`*^9, 
  3.8459986289836335`*^9, 3.845999933717125*^9, 3.846000255965553*^9, 
  3.846000874546649*^9, 3.8460010882785296`*^9, 3.84600172909391*^9, 
  3.846001774628726*^9, 3.84600184059359*^9, 3.8460021618526697`*^9, 
  3.8460189332419553`*^9, 3.846019307499442*^9, 3.8460199827482414`*^9, 
  3.8460215906222363`*^9, 3.846023227147694*^9, 3.8460233704307323`*^9, 
  3.8460234688463883`*^9, 3.846087193690789*^9, 3.8460874705975065`*^9, 
  3.8460878586722383`*^9},
 CellLabel->
  "Out[546]=",ExpressionUUID->"d7b6edb2-b468-45c6-b6a5-183039b7ab12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"27418d46-f597-4820-9d54-\
72d01137cc93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "List", " ", "of", " ", "initial", " ", "values", " ", "we", " ", "are", 
    " ", "going", " ", "to", " ", "try"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"newv0", ";"}]}]], "Input",
 CellChangeTimes->{
  3.8450450496882987`*^9, {3.8450479351213055`*^9, 3.8450479543324203`*^9}},
 CellLabel->
  "In[547]:=",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{"newv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]], "Input",
 CellChangeTimes->{{3.844460992649581*^9, 3.84446100281861*^9}, {
   3.8444650287524195`*^9, 3.8444650299651155`*^9}, {3.844465076147544*^9, 
   3.84446508980591*^9}, {3.8444651218401146`*^9, 3.844465122987401*^9}, 
   3.8445228563042336`*^9, 3.8448659693383055`*^9, {3.8448692845010266`*^9, 
   3.844869286212863*^9}, 3.8450380999025164`*^9, 3.8450450085264883`*^9, {
   3.8450450881570735`*^9, 3.845045099085638*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
5M3vFTN80EFbnC7W3yRPMwoGddP5oIuPZ60i6A9Z/3vC7OIvPhh8dy9x9Ppf
MrXJ6xuZix/KqiN+2V1gQCIO8l/fa/PDF9uD1++PMSI/41zffzv4oduVWdU0
dCtqVGT8orSXH+jaS317mZiQ48/Jz6H2/HD7wW3/T/LMqCinfJIrmh9mL2g7
uJiyom9n+D31LvCD2u7tXltesyJD9/MTzhn88AObCR43Z0MfNDzHq67xw5XY
1BM1iB0RhQfceqv5we53/lGzRnYUvQljP+v4Qf5hilGSGgeS6JYbhTZ+aHRx
ebiPmRMFNeS4+vfww8EkR7OY45zo6RWGT5lUvD8Bp588GeBELgETIyMz/KBD
PaBen8mFbh+0cdmyyA+6JUoKsl+40O/trR9UfvNDQaHT9w0DbnSVuex9OJcA
SFVzvAt8w42KN85HuIsIwKTZnTaiOA8qXvQWspQTgEbXe3rvXXnQlZl9DfpE
ATizcbx9dzEPKhpVsZHVFwD5nZaCBgO4h9gX2Mn4+5rXW1K28KLC1z/Sl80E
QIT22mOrOi8qwHrxwlYAyJdUiqMO4H50v/P1EQFQUhdmfRqA+84l34e+AvBw
kGaSH8OLLpeHbb1+UgC+lQotvkvlRfmF9uUXo/DnNyZq7DJxZxqg8AsCwLFW
xz5yEfcF8VG3TAEYq5uqM4jjRXlRG9EWhQKg8HXQyDiIF+WeHBXTLxeAgbtj
Zk/x+Lm+WKPMHQF4K+EdGqeK+0i5HfsjAVA3bXFy/s2DLh26sPSTIgAdJpZF
Em08KMfMN2fslQAUk/z7LiXgNjbTfD0oAFmCp4qyDHlQtp5az4NPAnCX92Xe
xDQ3ylLjDLr2FZ/P7a1HHVNwy86zXqQLAMt1LO+FLDfKFH5TGfZbAJCb3NDi
PS6UwVm/141JENzT0JOHOri35E2a8wiC/Y7ozyO3OVH6Wni8npgg6JzXoOmJ
c6K0eQdpGXlB+HSmMSo7hgOlfTZsZiMJgrZeqFzLMDu6+EHC+ec2Qdj/uuVc
BoEdpb4cy39lIQgOo5GfrYtYUWpzq+6Dw4KgmXJDbvI5C0qpv9FfelQQir37
Mw6PM6PkUj+usFOC8Izznr/oylaUlGd+++hZQQjeKsLPNs+IEi8Szc2TBCE0
ac1N9P0WdOH0wgXpK3g8Bp3mMu5/5IRj/QS2m/j/LRRzdfM3yQmeDdjSXUHQ
d1wsifv3i3zuQMRGZ6sgSJ3csuNFwjI5TulvaOg3QWh9enehzWuCHCc5wXd0
SRBsnAZ9sf1D5Fj+F7Vmm4LAQBw/LHXsETnmT9J3KT4huGO3Naxq5R0lisrt
1WkgBGJvoj5k0Fco4UnSh6RShGB7sm6D9GcubAtx9Mb7HCEo2B2f1LedF8vq
K1nOLxYCrprIiQedfNgtUaki7lohmFL2TTmsLIiN3ZIY/zssBL48vzQOLYli
Zn2ixyflhWHoq2XxthY5bDj0HaWUJAwvVIryGw8RMC/RQj6X7cLwsCLM7OU0
AYvxEHk4aCEMnBkRlAlmBaxuSWijLUQYblQKmXlpKWHGhcP7z0ULQ4HLriM3
HyhhXUb513YlCgM/pr8muU0Z+5IouOdRoTB49RvWsmmpYBKiAherKMLwoWb1
uPxvVay6eWDE65UwhJ/gEgn1VsP0PS6RZAeFQdVxm/DNV2rYwVt8/YVfhOF+
tyfD3yQi9ulAP8GOJgxHlrd5DI4SsaCl7DC+X8KwGkX5+0lbHUs04hW9yCUC
qdTM8dlOdYx/oi9gn4gIhJhXXi7gJGHXErOebpETASZbgdA+CxKmrmbNRVET
gafQUuuXQMKaerndovVEgNE7K0n/EQnbF9p7f7uxCBxkPaHNPUXCBkUyt/w0
FQHhGJPZl2wamEfz/sP3bUTgFe/vWT01DWzenavymIsI9POdCSbt1cCimXpW
VXxE4HbvzduJDhoY26108+nj+Pv5AWP83hrY5QNWxWVnRKDk4b3dtwI0MPkl
jjnX8yKQd/YIj5y/Bna/oMtYPF0E5Axd4qzcNLBdRmnZ1HwRaDXM7Waw1sBe
j1tMXromAh+7f2gJb9fAHBLZ9axrRGABHfxyVEQD+6z6OpGjQQRcP1co1S2Q
sJDe1LcdzSJQxUQlTlJI2N9T5qoXXoqA7lKnZkcyCUsXYYtGb0Qg7rfvMX1T
EibW3Nm98V4Efh8rlNjyRx2rck+RbpoSAc7LJhFb7qhjekxmJ8PnRMCo3b6J
w0Yda61hea69KgI0swcSSz+IWFe386V9/0TA5E1+sm4yERteuOvpwiYKdbZF
w4ZiRGyMn0H3JL8oWNcHHpgqV8Nm9Q8zJkqIgmTXwx1cCmrYsmPVYJGCKBjG
KE3lXVXF/kb/unGPJAqdVf7ZDpyqmMDz63vfkUVhzySvJGO/MiY1vSQ4ZyYK
Dvd70yoVlTFlVtNphkOiwBPKJf/rpBJmdGAukegtCrmHns0qfVfATEOQPQoW
hXOkpDtPxBQwm7xcJbvTonAiMu5xqLE85vPBsCM2RRR2jtf3vw6Qw05sphfk
5ohCeEjKmMmYDBYpO+5XfUUU+jeDVohvpbBM3yTWgTui0F7SvxKfLIYVpb5/
9+WhKJSQGBl9yCLYjTvqNb9bRCE/21bDf0IQa1wcMFfsFwWxzKMHgtq4sVYh
JfEdH0ShTGNY8/s5NqzLIHL2wJQoTPiYfojh24qNx8qknVnG+yt34uCzrAUK
G8ex7i4xMdAzr0nXD96CBDQoV8cJYjDbwCr1RpYNSdnwBy8TxcCi9WqexCYP
0il4zCVjjDuDP9E+TwS5yDNZn/IUg6NbycdbX8ijuztL+0VviwHDA4ZQj0Ad
1HiUXkZ6IAYPP6dJvwvVRa3n9p7a/UwMFA5/OuAYq4eoHbP8x/rEYEWsV+RU
/jb013b7YcqSGHwPvI+W23agg8feUH2MxOHKjokD7WuA2Erz2433icP1tK1S
aud2oxd9zg9EDopDwGy4+0uWPUhfdzrnlZc4jF6w4/vHvRdJ/Fq3IqWJA5tY
WtnSPxM0TKTsZM4Xh6nnZdezTu9Dma4X1MZKxUF5klgj+m0fYmjlZs2pF4dN
vbvXrdpM0dPFwZWAZnGIeX735011MxSmUDS9+6U4mEXqSZrkmKGvyfIvfr4X
h3bhr7WNB8xRWdNMXc+UOPg7SJ7bXmWOnL/fvV45Jw764bMLTr/NkYBUaFbc
qjhoSlHvLVtYoJ4DBrGODBLguOF1ciLfAiXFbx7T5pCAXIro16URC0Suf+7C
LiQBXwUi2xmlLNH6VLLFlLQE7K9ka/nqaInqhfYbNqtIQJ28dcLpLEsUZMqv
kq8jAXyGvR1JmCVSjHwrfNxIAoJzOYwXvlui0VtXmUz3ScDdsbTCJD4rVPDR
46fMQQl4+3owVV7bCtlwK0+tOUnAOIN/21ULK/yG9qO/30sCHmv3/Op0tUIv
QuqwW8ES4MaSMhYbaIVibpyuTYiQgF5NKcX8k1Zo+/DO0iPnJGDNgS928oQV
ojEzZOinScCQ+reru/ytUI3By2jufAlwdVHVi3GyQl6BaYFfSyUgLdt+JWKP
FZK6etAJq5aAQ5HL+VuVrBC1R8isqB4f3/OL7ev/LFHW3w/bTjVLQKlY8XaN
IUtkrn1d0fKlBHASb5eeuWaJGL18BBXeSMDPG+S7tZ6WqDlPjXHzvQTYaX8S
uoXPX/jLBfrwlAQoxLOmGb+xQJprD8bvzeHzuWsfZU+UBZpRjepLXpWAz0IS
PtkSFqjMhdziziAJbY84NH83mCNByqtifiFJ8GKyXU98ZYZ6aJkXv0tLgjBX
w1HbfWYomXA4sk1FEr5nQ31RkylCh8X8S3Qkgdk4oVJT3hStJ47anzaSBHLr
xtz38/tQQ+MNE+t9kpDQobOz4p0JOvbNX0/loCTMbdYgHQUTNGa1xPfBSxJ6
7h03Jlzdg4piH/+rD5YEzYT2Yp3O3ejQ/ZiFtAhJKNh5MjrkG6B2AdaeXWmS
QBKpEr4lSEZxJj1PhfMlQfE3cbe14C5kEHHp1kKpJDDxxDKzbO5Atz9IppTV
S4IhqXbOK2UbmrgYvjzwVBJg2wlPP1s9JLqz13NruyS031OyO8ymgxKL43b5
vZWESD795if+qsjtyOSi+oYknHtGOGOptE7O59zpfpRJCowaqngY1Vcp3c25
PVncUmBbsF4hHsWPGUqZVC/KSkHfcqZfFVEJExitcn1sIgUZ5s+j4mYMMPPM
f6+/HZCCm5XZ/VRfIyze2MlAwlEKrgcce0hbImNzpewCsYFSsK0ieBaT2It1
uAV37smSAruuJslDZZZY9ISObt87KXByv3N+VNEeq8tJu/5vAu/PS3KdmLwD
NgOfuXS+S4FZ7U0dcVlHzK48fyZvUwre5b10OinqjGl6rZU4E6RBL+LGsfzf
rpiPgA1HOlEaglt+e8vQjmJXX9SceaYnDdUlP1giJ90wNgUXW1lTachwMH52
0N0Dm/r8jPVLkDSUnGy7tqjmhYnlC58WCZcG5LjgxlrkhR00OTFlFisNlsIW
chxM3tizCtmW29nSUP4hfpcz1RtbsoskfiqShosv7Kb8dvpgaswDhdw3pIHb
zEp2usQHK/BNCA15KA0rM1nL9519sR7hj+PlLdKw9nX4HfbAF9vaoXdgqEMa
ukw1vz3n8MNClL+obP8gDfR5LmXZ+35Y1Vvjy/5T0jAmmn7NaNMPG00uYLzy
Qxre+vOM9OzzxyxnzEY3/kjDN7KIdn+vP8ZjGvf3L4sM5OUc1B7mCMAGKx7K
MvLJwOIoj+v63gCsYOsPYBaXAY6te9RkowKwI14ELzZ5GVj/+JZb/XYAJvfc
8QKnugxgJs3xf98GYNOyWRU8+jJwSnx0+ey/AKwmrv0lv7EMELYTPycpBGLB
o7+/CpnKwFhETuvfPYGY9i4dNrGDMtD0+A/j66OB2HKxv5qkkww8G3aX6wwL
xJp+lVrKeMoAw+2KrI+JgVis0/AxQpAMXo88bfuWE4jtecyRqRgmAxHzmdsG
CgMxFpHdtSoxMtAnyONy5kog1hV+5g0xSQbKvFSrWy4HYllD9+gaWXj/H3Xl
JmcEYra60/w6hTJAn53KfRgbiIlcktDTL5OB7BE3aWJgIDZCs7EzuCUDc96k
mtfWgdh165TTOxtkgMtrx63TmoGYz72WAuNmGWCtDyvgYwvEVLmWH0M73h7p
9ZeYjwHYXBDxw95eGRioV+EurQnA6l57/DZ9KwMUydiEwycDsHDVQknLcRl4
bvq4OUErADNM6d114JsMzPO0a3LP+mObX7a62SzKgIPNpUPUq/7Yc5Od8Yd/
y8Dvr1zFLWb+WPLNkDKHrbKwUqsYVzPnh1kyVj935pIF38SOsMg0P2wQE2Ty
kJGFR53uxw7V+WIFMpZK3iqy0Dyv6yxr6Iu5xJ4z9dOWBb9LZtquTT7Y553z
qcF7ZGHi+dypu+XeWM0VhdsnrWShj8X5VSKHNxa87twdaicL9Tso4/bHvLDl
Rx3cUX6ycOIDUS1YyBNrEvqjGXNSFtz+cptFuHpgMWF6NvGRsrDMuHeD2dAd
Y9Ypy01Kk4UcRXlxV0ZXTORulGhurSy8miBpyT63w0Y46gwvP5aFcO0tL76+
sMWuBX51LmrF/Ufwy0i9Daaicrjk2iDev7FOkSd3zTHDGyTCnVXcL24rRRUr
YZsM3ntq/8kCw8NHSczM7ykT93vqnZjkQMY/481OiiKq4Nk6dIRbDixIbPJy
PoA0ek4Ke8nKgXaQ98DeHXboK6PJo32KcpBIVSXbVDuish1i9mpqcpBHk+xM
VzqChKpb8+m6cvDNop4qpOKJfp/nF4o3lYPuB8TCK0UB6JXBA4GS43LQ+M1I
jUkgHCWcSGmID5WD+uif03u4T6NdlUdsvc/IQchY5hdltgh0X4Apl3heDq4t
Twi93DiDCubt+J/ky0H5wR2vqgbPIp+bq7xvm+WgSb1Fp+HceSQz0nX/Sasc
eO0ptN74fh6957t+sPSlHAic7uv5bJuArOLMsn3eyMF2SV5pFskLiOmRpJb5
sBzwMK8m/4q+gCg/aH3qH+Sga235/L93F5CucxHPzyk5OD294tKYmojmsoNr
387IwSs7ar/cp0RU1QHWT+fkoO5pCis/KQmJ689mnl+VA0Y7uZmV1iQ0GNSi
4bshB2/+fFapYE5GGeWXes0ZCMCZts3ZyjQZMfDu5ObjIEDQduOWtafJ6Ok+
nns/eQiw2NOf0riQjMJjpva/EyRAme690EnpFKT5oHHuqRgBbss/t7A3T0Ez
s2kZ16QJsMNp4/3C8RRUJudOSpAnQEaW5VxaVgpycdTr8VUhwJtzpQdZbqcg
oSzWYAsSAXZ+n+ozbk1Bfe0fOTV0CPAviX07z0AKSt24f4dvOwH28jIcsvuU
gvboJlot7ySA+e5HP+YmU9BmgNOPd4gA296JDj7E/eg6Kb3ZhADkDJH+1I8p
6MRbBvXrFgSokCyr3/cmBalyU7sSrAlwHm7uefUsBU3tvRXkd5gAIo08B+dv
pqCS6FgOSycC5BoM3LiUmILyQ67OfnAlQJTv4xZbzxSU4ffkVaAnAeKFzm7X
MkxBia7vqn/5EkDv6UAYB3sKirVdSb4YRACpnpBPnUPJKMJc0E/8JAFeYdzv
LIuS0Qmyzr5bYQQY4XDrinBIRn76BxV3RBJgUF5UWosnGbkRj299HUMAFLuw
zRFLQg5y6VNO5wlQm33l7GBgErIWufX8WxIB7r3ptUvkTkKmXJ1lkWkE6GwA
VZvbiQgxfolnyyZAaG21qzgkIsN1RveiPALYGzY5tfVdQNoLcmTVIgIIdahc
0HG4gORGXDfNygkg2/brz4x1AhLrj/74rpIA56Q7Jdew84ivo+ip/20CfDn0
mtFJ7Tza0jAcmfIA3x/GiVk7Xsej39VLjqJNBAgxMZvOCo5DS6V8BtXPCKB9
V5bx5r8YNHVx/0rHSwKYWDzrll+OQiPxQcMOXQSYtnMQkLKPRIOnUx987SOA
zfF6B1pFBGrzbD/F8p4AdSEOPIgvDFXs2LWw7zsB5FYkvC7I+KESLZde6gIB
mszanuY+90T5SpF3fX8SwKPbsDsp1gUl8T8MStokAHx6MTuhQUZ+s+oz7Tzy
8Fl3iu3sigfmNm7RYScoDw1/h6epkX6YA9W/clpUHuquJtbPiwVjZs9vejMR
5KHay8QqezAMU70iObFXTx66hC+HsA7FY3LZO7AhA3n4tX1P5eqp85hYkuM1
713yUG8nxxm3mYCxn8pzvbBPHrgSf4zvEk7GvptzfnjhKA8RrIixdG8GNkVW
a7J1lYdDhT843nZlYh/1zQqnPOQh4e2212wHs7EeuQv2jEHywHkunnFG6RJ2
b/33wO4YeVi7s/Q1hjEf21w51Kp3Xh7mbdM707F8bP/PmlqlZDyeUyNDz5nL
2Ny8Qzp7Dt6/bnF/eF+A7fpxL2ojXx5ue8VerIgvxDK+MQXMX5EH7urXC1fk
ijDS5waTgZvy8CA1NLjowBUsZoJdr61GHvoO/I4aeH8F6xn1IDy6Jw9OfM8f
bhwpxqQ+PuatbpAHEx9X0ftvi7Fj73n+Fj2WB89Rz5IL5lexp1TfubRn8tDE
60/mr7+KcQw9G4l5Lg/W2VvWabwlmEu/4OsTHfLwh9bR9tinBLvdG/TYo1se
ql7uL2G4X4L97npeadsvD+YVqjFeCyWY5SuxfBOqPHTK0o+eli/Fil+eTNg+
gve/x3DXgGUp9v1FR4jquDyIGRfx8/iXYjtbpd0lpuWhjaXifVtEKZbWEn6A
a1Ye2FsW09OiSrGRp91Gf+flYeCniPLvE6WYWpM8kb4kD8LoVvlth1Is8lGU
2NSaPGC65F962qXYq4Z+luFNfH94HVPR3CjBxOpUVl5uUYAxrw5lncclWMC9
uM+PWRRAv3N6cdi7BGu6TR24xakA9xRcL9QzlGBsNaTWq3wKIMv1guqWeRVz
qrxQmymsAPlCdz+Hs1/Fam6MlMRL4O31369ODy/G1q/rpJ+SVQBGqpeUUd8V
zLw0NcpbUQGmH7rskhS5ghUVj/vbqylAKJMGY7tVEfatcLuDmSbenuPJgN4T
hZjh5UyTHXoKYLrnceCbuAIsNXdaV91QAcKdihm8zl7GVDJzeXn3KICIY+qH
IsM8LCJt9g+DmQJE+1P4jq9fwjpSYG7JSgHeL33p1LmZg/klLLx6a68AOZcx
+HAyHWuM3/f4lYsCRMY9Pa60JxVjiS2pfOquAKQ/JicFZhKxqjOWCdcCFYDe
GHRR2uosthpeHpJzQgHKhD8zb0aHYaah624JYQrg0VJ9yyDPD/saXGXkF6sA
5/bKNVzgdkbbg/6oOSUogJydjc1Zk5Mo2d9OzDIFb+/Kqv+HgCik5MW4onFJ
AQyveSnNiKegcHfnz7IFClDnn9HzoDQDtbvWDfBfVQBF9xw+G9Il5OPoVrtS
oQDtBgt/040KUcX+p/4tTQpAmdxx/NCRG8iIwKBd1KIAUjXXuONUKtDgyr71
0BcKIPPhwfsExir079pAqmqPAiyRt7388OUWcln8ditvHH9uTAnM1qtHiy81
Q09MKwBzdJXtY8cGlFocvtNiVgGu1pFU+BIfoEd7Gbr/LinA/bltfxtXHiG+
AtG5QBZFcH0plxOCmlF10NGHJpyKcHxphOpW/QyR0c0YWT5FmI+Xta4WpeD1
pyY3VVwRLofGFFqntqKOnaaaoKEI+rFe2c/ut6GY8fAQETtFCKt5nvW9sgsJ
PnxquOikCA6kw5EvcrvR7VSGLT1HFeGDbgYpPKEHvdPJuHTeXxH+HTlA4Avq
Q7qJNxvmohVBSGzXjjn1AfRNdXD5RbkicGoH6GUdoCK7UK2okzRFaAszu/JP
eAypsWDnVn/i7fP8Tu6/Oob+XrFOjV1XBI83h+ybCOPo1vPjhelblOAsq4MI
VWQC/eW7+6haUAkqTC7/ypWfRDX3VZfGDZTApUeh4uy2zyh2b9Mvv11KQL0h
Kyh65jOyfWe2ZQGUILJsWiGq6TP689ePb9NCCciNKmvxO6eRrXWlppirEvj3
ETZkjb6gP3OEYzbnlGDXK0+Nr8QZNHiuPvRdohJc8Zu9M+M3g2qEdke7XVQC
ida6P0E3ZpDtLo+LwblKoGfhOvNF9BuqSb9WnVqhBOoGjYH6m99QrKzmfd5b
SvBPu1usR28W2T5oaSy4pwQftT7qtQXNoj8jn15WNCpB46RFNOUt/pwoOd36
SgkyihbHQqq+IxXK7R9mvUpw3vhEYvr772jz0M6ffQNKEK5TrvmZ/QeqjnJm
HB1RAtc7KUcNg36gzVeFcr/mlGAo8GvzFsIcGnBVUT23qAT57JXSGfvnUBW9
UYt1VQks91CldM7MoUNib8nC/5SgUOEb9uQ1/txf6KgOvzJQFtn00r3n0RDj
aJiEiDJoRPb4PkqbRwzXKtO2SiqDhQY28aZuHrkMb2+iKirD/d8TgVO/5lHK
yX99FDVlyInzp05ILaCHHK++VGsqgylbz95P5AXEvdtZMNpQGVyYxj6/jV9A
Oz8RiN7GynBoair007UF5HfmO+zfowx7S8OxH88WUOu9sydk9ivD0fPzVvqr
Cyhc4trrF+7K4Da9ub/jKA2VP/KbuOOjDDEZ2p9DT9NQn43WWn6gMsxj1nf3
ZNCQakqron+YMixd/3XJ6TEN2ctfNLKJVAbpplHOym4aSmg5ZLsjVhle6h4J
I4zT0MefU/GcKcrglPfN6+MWOmLLvlOwnK4Mr5L4WI9x0JE+MfzeaI4ysF92
/VckQEdZHswf7xcrQ+npJou3BDpq3uhdLLquDE83w7q+qdLRt4ICtoQKZSBz
3dm8rkVHe3pVttvVKoOo9udBxl10dDKAvt/4gTLo/86urN9NRyVbn3grNymD
dRNvCqcZHb2+dj6at0UZ9u9r4hHYT0erOywvrT9XBv6Y8aEOGzpSoArUTHYo
Q6LBx+Pq9nRkE/KR0tWtDKm2W8J3O9PRrarguRKqMowIKMqnetDR293btiaP
KMPy8Z71Zm86Yhz9I35yXBm2568WVfvRkVZkh7bTtDIkeKxf2R9IR66C2Wa7
Z5Xh+T2VvLvH6OhiraMbcUEZ3jmMSL4+TkeNFnKnBX8qw63tft03T9LR5+lv
6ZtryiChSthBPkVHfOfqb3zZVAZBFs/NK6F0ZCwZ/aRviwpE3Tl7tymMjoIa
9/Q/ZlEBjZ8dE1fD6ajwEOdMGacKiDUVae87TUftc0N/LvKpgCzVVK8R92JK
iVCYsAooKamco+OWUfBVd5VQAYEL2bUruC0pGnv2yapA12uqfSfuM86rTpqK
KqA3fJDbH3fFMuWkqJoKaMUeDn6Lx+vPTklm0FSB6uvbOURx/yHalM7qqkCc
yME4It4/YofYw0EDFSh+tuQugPff0XOyq3mXCkwGnzHtD6GjxM1bkxW7VcCQ
Ue+1Lz7++sLQ9UxTFUhwPBs/jM/PmK4R7xkrFagyq2KQCcb7l3nAl8tGBQbz
sUyfIDp6NOPeXG6nAmmFrW6ZAXSUUZLo33NUBUpG3X6l+dDR2mpBi6eXCizV
nXD28qIjr0O3BNf8VKDX2YpIwNdzB0sfRghRAb79NlYuR/DxeUwIPw5XgVCl
HzrvnPD5b146tj9KBQ4vGzSCAx19PSkqdiZBBTJye9rH8P2T/8EjpCdfBa7X
Kekf20dHDPphHZ5XVKBDOH/PqT10dCwrSWqtVAXc6uLMTyB8/+69/YpQrQLv
K+/52+6gI/rdn3JnnqjAy1ONGjMkOrI6lzxAGFOBH+m5t32E8P0xUqTyeEoF
9rFeCzvNT0fy2+7E7p/Bx2PwdOYSDx2tz75RO0NXgd0f2P8usdGRj8lUPNeK
Ckx8uL99Jwsdvbm2TC3/pQLd963McrfSUdVh8YQeRlVwtOGRXt6kIYFa9fee
rKrweenisMg6DcWykTXXOFVBlXe0zuMnDdm1eI0QhFVhh5YXR8B3GmJUuat7
RkUVxn0PlxuO0NCJ85RULpIqVGqujqe8paEPH/vHyrVVYcSXUPN7kIbqclbS
enaowvsrgawWPTQk+YN10pOsCoNDDY8VXtNQ8j4Jg7U9qpC1+klBroOGjv4m
fybsV4W7ISSvmFYaemV3aMdjG1UwZI478LGFhvTve2fvt8f7u8mm4tJMQxw+
qUZn3FRhJlvh3aNGGoqgFF/i8laFYwHjHZce0tCk2L2Zcn9V8JfReJfeQENN
vQN5PSGqIFj6Nv19LQ2d1ZL+1XZaFdZPbJay3qMh8qUAt+ZoVfgrYf/V8Q4N
bfn5oK0hXhXmazkGX92ioXa7f6q3E1Uh09Csz7mGhlIaLbPKL6rC9Zf65hzV
NGQpVvCzKAt/3/vP3Q+VNMQdPemUk6cKBoTuwM4KGur/SKKkFKmCFeerH4M3
aSjPOFIhvlQVvmrJlG3coCGH622pETdUgVqy9hNwi2/hXThejc+fe5zdjXIa
+uTlctj3rio8Tf6kKYv7entlk2u9KhjJ7qI3ltGQl/KitF2jKigZdDIH4lZK
3XXBqlkVjD9Vf9LH/W025dueVlUwk2KbEsd9x2rowM6XqsDBLHBBFPeJezIP
dLpUwbqCRtLArcMbJKb2RhWGWLv3u+BeDnkUKzesCt7GfQev4X48yPBZ9IMq
tNsq3FzHHa2/35x3TBWa7JcfBOD9My4ovMfyWRXY7I7R5nEzrE8J/J1Rhcgj
DS9S8PG1OWtGrsypwpuon8Xb8PlIbo4anVvE4z1z+rKK20L65Z7pVVWw0OXi
7cbnjyuer+bjhiqszhgk1ePz+2biCPcQgxqU/WB+dKuKhnL3VId2MasBj1UZ
5wN8PcRYyMZPeNXA1G5qchVfv4/+F2/UCalBufiYkTa+vtdeD7PWiKvB8Cnr
U5F3aUgx89hggYIajPJvU9C7T0PaQlf8ww3UQD73Qd7uRzT08/R0z7FdajB7
cv7JJL7fGt9p6XrvVoMn1nOKGU00tOtqx+YhKzVIMp2M/YPvT3P55Uta7moQ
XrabtKeNhjgT0ZqyjxqIsRkHKr7Ev7df0lxlAtVgceyAHVcnft5uEVS4w9Tg
CL/T7PcuGvLQPvjse7Ia3OKo+TeIn6co8u2vlbVqoOnK6NU3hX9/z0wrJT9Q
g2O+Akkt0zSUUSfj69ekBo1nnlrd+kpDZfJ5n5VfqIE62igMx8/vK5aYiWqq
GtTyHvnVtUhDg6hRNnVEDfxFzVhy8PP+KZLuFjCuBjcMpNwPrNAQ/bvPqOqs
Ghy2uP2qFs8PYm8OjNzaVIMm/1Pmf/7SkDxbqnjaFiJgefbPdzLQEWn3C6cg
FiIYx15bp+OGB9vfEfmI8Cd237wVI56/50JEOIWJ8JzLs5eO207pjv0PcSIQ
LM+x5eD5yb9QdviOAhEomAm1hYmOQvqdBTNUiRB3svrifmY6imbPtw3WIMLn
Z6ljVNxZZ9kGSAZEuCm75/57PN8VPdzDx72LCIl33x2wZaWjG/MxB+eBCPwd
foMduBvdF3vvWRJhZ9bcYBmeL1uL1LmzDhLB9WHZKRZ2Ouoa8N1/wo4Ieg6v
jfxxj+0d6dJ0IwL35lKhBH5/+RYjxMHrTYS8M/X7j+NeemRtQfMnwoej7qHN
uJlV2zrvnyLCLWcmB0tOOuLx/MOSE0GExq9N29NxixUbmIacJUJm77veTtzy
Q6eSbM4RYf41RmLgwueP6267dhIRrhS+8dHHvX3f1638aUQ4tOSb4oMb4uT2
LmYR4ePlycoc3JaPXRIG8oiwalw+0ITbjp7/vL6ICAFVW6VGcbupvWHILSXC
Qpp/wR/cAV7sEHqDCDbV6rYS3HQUenVvvG01Eawe13ro4Y4ZjqXo3iVCRcTB
IXPcydxNfwTqiSBZHtzsgjvHdGnXz0dEiFjyIQbiLo4nxQw9JUKYcqFOOO6b
TX7NDzAivF/3nDqL++5i2e+8diL4KClan8PdSPy4I/w1EUb8dyWfx93qLRxl
14fvj7PsJfG4u0oONukPESFH+ntZNO5h6sU1off4+NmMq0Jxj/G0b1/5RAT2
dY8Wf9zfzP6epk7i8WserjnjXjpn+OjRVyI4Ugv8LHDvjHqmt+cHEcRc98cY
4L5wChr6aPh4RHJBAXdPYLv2kWUi3PFMeM6FW8jL/P7MOhH4Sg24l/H5cnXp
0Qj/Q4Sryj06H3BX2trcZWBUh3xXF+Nn/6/PXqdb4pzq8M+0d3cM7jijTypV
vOrA3vTVwRl3p55Hla6QOty39k7/fz2dFANuWkmrA4MfLe0Lvv5RzJGlsVrq
sJyx7aQe7hd/NiQ59NVB6awlx1bcHKvxxQWG6mB9/vK2AXx/FX9NKby/Wx3P
NwanA3E/6yy8NHlYHTTIGQrp+H5lSHuctC9SHcoWM/Ou4/vdPMGIaTBGHZ7l
evS54b4UjSW4nVeHVG3es9K45Y91xp9JUwf3j4FeV/Dzs3f/u6hbJepgQV77
mYGfr2SetePcz9VBsjkx6iR+PvtYzs5deakO11zCTpBwi/77G6Tchbf38XPj
LH6ea2gsAWhIHV78fhDti7urX8Tr1Bd14Pu35OSN1wPcedsdqOwkWO+Pd2P/
R0O1uT8/t/GQgIPuefASnk+sc+tONQiS4JvK3lpJ3FmXiJnZ0iQQmGJsNPhD
Qzw5Mu0WOiTgPHdmPmMD/3/2x0OG20mQ6WtrrYrbOrtoXNmIBB+9SdIdv/H/
ZwlsbN1Hgpnbo0zsuHkyWXQpTiSo9tq2eQfPZ7UZbdjdoyQo5mHvdcFtnXHu
wFUvEhwd+sjJhTsr/XdAZDAJDlTHDZ1eoyHN9MerfqdIEN1o7aqJuy8tPNE+
ggQRY9KHZ1fx9tMWruueI8GnyCdpfrhrL97RICSRwORHUrcqbuuLAc28aSSI
ijgUPY/n16zUqbdzeSSwf/eFEIdbM/W6z8cifH7u1kpY4u5LcV16XUqCoKsR
58Vw86S85a6uJkHLi61Xni3j7SfnXb18lwRXN15Z5OK2TrZRS6wngcWBzIAg
3AtJ3I9DG0nw8rHNignurKQuE89mEvAbCdIJuDWTUgYPtpJA/d2w0xbcfYkm
HuSXJBDJuKz1Gf8enEjcskDqIkGfs314J26eRMpZyTckcAIhlVrctRfOsnMM
k6AWDZoV4ra+YFi4/p4Ew47ZbxNwLySsKM6MkuB1qtVQCO6shIYG6hQJLg2y
kD1xayachPYZEihtey5ih7vvPKmvYY4EF+uij1r8H//87JHyRRI8M9ET2P1/
/PNVs9mrJGhd/K5v9H/8c95n4jbw9h6XvzT4P/45OebjDBqgV+DYvv3/+PGj
uUeYNeBmJpeO4f/x44vlLDk0YLq0lXPX//HjHWsNeTVguSPMbs//8eOEdqkI
acAwmzKn1f/x4wZeC4trQJL3Oy2H/+PHZTkyyWgA47uUF97/x4+1+rIkrwGH
vQ3awv6PH8sWNqmiAafYvuok/x8/5iVDP0kD3DvyeK7+Hz8mIYuiowEypeDc
8H/8GCR1b7sG3MmY4+/5P/7ZzVtXjTSA43Kh4TfcvGcjXkbu0wB9+vc3Kv+v
547YXEFLDRgnRQ6Z4+5Zv+Bea60Bn+4brRzDnRZx6ddnRw34kOqb14Q7YFtR
R5yrBrwf6+adwm22fC1P3FMDiGcDbnPj+4kp9K7GwSAN6E022XkM95T2g9+z
J/D+rV7QKsX9nPakMzFMA9rv/NozgDvueKfn0xgNEPie0o7w/bweMHVZKRvv
f4OW7nb8PLxVmfVqzdOAajuCeBTuR19pWkeKNGBtl4UMBXeoz5/XOeUaUDRh
dMEaP19z7mJ/Nx7g/Q+7+zj1Fw11ych2FzRpQKK5Tc4n3LdGlYp0WjQgzpuY
ooufX78jerr+HRpwJvj8m2ncEw7WfoPvNSCo62mXF17PUITt9Y6PakDrAN/l
Ttylw0cY2KY0IFC2NFYTzx8utoHFxj80oCXT6RYjnl+GDyT21fzB/9/ocqwd
z0evTZ5uj5fXBPWjud2DeL5q0FVmJQVrguFHrbe8eH58/0qy9n6IJhwxL3W0
xf3Hjd9e77QmjJOTkvJxm6dv3tgZpwkXOsvvi+L5dezzINkiRxNC9oo1i+L3
DaboV1968jXh05qPjANuNT5Khs0VTSjU/4rl4Q7fdWvE8YYmnDT1TubC8zn7
5fgIv4ea8KPT9voSbk3109LfmzSBq9k6VA3P/3bPg9qPt2hC0LYdwu64r83b
C5zu0ITDWGNeB+72C1ZP1rs0oci66fA67lnx3R4xbzQh1yfprir+fdE3JdVe
eK8Jworui4m4XT4R7FlH8fEdGHlehzs+VHQzbVITujb//BzB3XWN0TL3uyZc
n5c0JeLfM7r+Ol2YpgmttYmWB3ELd88XXvmpCedXQqNCcXusvf9StqkJHoIt
sg9wJ2f2ZShu0QKDoJSz/bjvKLTr1TBrgbLpw64fuPufPBlR59ACzpnof0z4
93j14P3z93m0oD1DgEsKt9TXClU9QS3QONMwpY17d0zxm0ZR/P9fL53ei9tP
ICdip5QWZIh/azyMO6MmSZoipwVGh+aKPHE3kM+271bSAoFeKvdx3O+GQ469
VNOChZ6PrBG4N4P8BCw0teB+zraoGNzyW1yf9Ohqga6ThN3/9xezwkMeNgZa
YOv9PO3/+0uwhhnrsJEW0BY9ef9/ntu2q9YRtODrXr3h/+8/j5117T+aaIHI
leDu/+9Hn2gqm24WWnBEZ99MEG7GZOmbUwe0IH//srgbbhUpQUs/Wy24Tqy3
t8a9v4FtcdZBCxw5H2QY/X9fM/9bePyIFpRo6tQr4S4c+0ledNeC/cNej/6/
vzwLn/0S7qMF+3bFp9Px+ZziGM9YD9AC76oWpQHcbOXDejHHteCCrX1ELW4N
g66Rf6e0IOlc7MlU3La92PkLEVpgHnJ8qzvuSO9HqqxntaDS01VRF/e1X7ff
pMVrQVz++fYtuNuyyyJ4ErWg1lzobe//991n6e3CmVqQpe8ucgR3uvPT6I1L
WsAT6Fclgptt7Zv2ZIEW1Ow5396L70dGXdPSu2VaUGiX4aOJO/5N+OHcSjxe
u0XbO3y/bwbfZI+8rQU7LR4FxuBerWaI2PtQC4L+aZs9xs9L2D4tktoTLWgJ
4DlyADd96ugUD0ULWBz0Q8bw8/ddutl6pFMLvqkvOy7i53M877TKqY9aMN8f
o/0ery9cdSpGHSa0YNH3nacJ7pG+wbxdX7Tg1dH7rHfw+80wuzYDGw2f/y+n
gvzx+8w0Oh18cIs2pGmE7d2G54sbWRlmL7Zqw5VQ7uh6PL94jt6U38aiDR//
bsuSx/PPWPTgewlObcg45ZbwBc937x9p7fsqpA0X3U0Y/uL1VwGTmZyzqDao
xqVe1KbTkP1ht41ucW2QmH/g4LqA12f0jPp6GW3IhnlaOV6/9ah/l45V1Ybb
RwmJy3j911pesSq4SxucQ/b76g7h+ZnePJBM1gZjaWOS0QBef6Ohu79AG56Q
OreavqGhp5+2eI/v0waO9SFRn24aeijq/ub2QW1gm2DdOYDXp6F+EbelbbWh
cvfGj1/P8fr/UWZSjp02rPJMCqm14t8722dGEc7a4Hmq7m/JMxqqyRSv2e2t
DQorl4u+4/UxyzPqjTRfbfjSnCZ46iEN+Xy/VDrkrw2iAYGbDA9oSNaMI883
WBvOueROkutoKOZ0R2btCXw+Lz94MV9LQyM3E1LXQrTh8fXgj9X38Plh2Ii9
eFobpDntYhFery9rPo4cPKMNJE/nH9K3acj2aFiYZLQ2cIdUuLDj9X1dutYJ
nxhtUG4oM2asoSHupz8C7sVpw0z5Exb2ahoK+lbtvXoOb/+Ji6pMFV4Pi/i4
oQvawBJOE9pTSUPK++ScU5O0AVl9Jp+uoKHEsE+HB1K0oftJuVjTTfz7WF5k
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$14399#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwUl3c41e8bxyV775V1rGOTtMTnuWVGSaKsMsqWJGQmsqPsTSnZXzOl9flI
KEIIlTKjKOkYZYR+5/fXuV7X837u+33f7+e6PtchOV+0cKGloaHpY6Sh+f/v
UtNYEQ0NBRkenCoWst//PE/t77SPDAXl2tCm3Jbhx3UrBJVGjSno8Omm43Of
ZPCUAvNHj1MpKLv1izTXUU38gMCFLfJDCtrLbBFGz3AQn7iVoJc1QkH+G+on
6Ap1cLXrrW/9pBeRcaPDh6bdevjw5hj/pNEikuV9f+H5EQP8auBfu+Pei8iE
vcOJYm6E93pozio1LSIhfhP6CBVT3Nu8lGbGcAmFVVr0fuU+gfN1tRqe9FpC
XppdeuOfT+BP9caTXtxaQlZ9z5j47ljgLPuFhIs+LKHCCY3+GE5LvKFO04Ft
awntk+sIm39qidsqnrgfQlpGupIrr6YcrfAKscTdpz2XkfAgSu7POIWbZ5de
ab+5jKQcLtQuS5/G17hePt/TuIy4da1erFWdxu8kju+8+34ZXXX+l/Vb2Ro3
pts8wrW5jNirL9P9K7XGKeFCKVclV5Alw5NRBREbPHtVc3hefwUt2Iz8SYy1
wb9+v+DcmbyCcm69PqBnaovfPJ9Yvr9hBU0eLmVuu2eL7x0rXbg/vIIoqeGe
vb9t8c+nX2ry/V1Bri6n1K7o2uHR/eMhURK/0cT9A8rvYu1wZdPNForeb7R2
SHnvarsdPtgmxOjg/hsZcx0UX9u2w8Owvcd6kn6jS6xuT7/vtselm0+kH6r/
jTgF8IkvZ+3xrt0+HyuGfqNmIUPntRh73K8qUUJo4zfi3WTg0ymzx0Vky1xi
xf+gxnKmro5We7y16GXVyuE/SJvxpHXlB3vcU2hi0dntDzKkWUjbnLXHudM2
9/ff+IN8wiaPDSzb482swldR3R908vzeM7BujzvG7G37b/APSr2zmGFHZaZ/
J1hE1/+gl8LinQdW7PHaIB/zRLFVFN/c2jM/Z4+fWkrMWtNdRUEu3wKTRuzx
ba+yz66uq0iDOSNHucMeL515KTWUuIpOJfUxTFXb42YOE+56taso5H1J5oub
9vifD5s19e9WEXonJDzhZY8XWgj/llhbReCu6WKhb4/rd+89dFN0DYlG/Dum
ImSPzxtYRG7CGvKiiSqL+WaHZxA+rzxd1lDP4EsD3wY7XPvgDfaPCWtocrp7
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
SW//npBFhYPxt2zCMLP9T5x/mUMFb/VH7f/7o6fP6u0U86nAiYk4+r8/8qB9
XXa4EOdDrq3V//5IIGPDvaYiKrj5vrIPxpw1aR0mWkqFZ4uPH/fDvMUqibqr
DK8XcLPAHXNHY9tIfgUVYqs33rDF7LDi97kvF/D+r6vd/d/fTQaRrWjVVNA+
t6uChjmx110yooYKpa4rbP/XQ4lVeOdhLRU2LfndKYT5Rs7zYyvqqPC4KOTr
J6ynxZy41v4GnO8bVl6+i3nUTvdzzTUqFGSYiZ3DHHkjKG+uiQovBYsHAzGv
VKjZZdBCBfODp+kmmGtDPy1IbaWC7Ksz46sxG75b1fruFhVUjTeJjuB8eM/b
dVT1Ls7fzpeuVzEHFsapBbRj/exWCx7DvPjfzf5b96hQLnj0IQsz95baDpsu
KoRV7Kv93x89W+8sfP4xFdRqxy65Y/aKzGrid1PB8ePpc/KYc7aKqMS9oELy
uyklX5z/pFL2255XVMiuuZUnh/m+sG/q2j4qmLZmdl3D9TLV9m6+4T3W79J+
xW+43pKUZRsEB6hwO8tGLRKzcqzxwR0fqRD0fM/VZZgtDa+9+jRMBXe7AwsV
cb1e6UyplflBhW3KN7UlRcbRWEbrs90/qaBb/iE1DNe/isvYVNokFWqyWzRG
cX/InzPkyc5RwYk+P1iP+0m8+r9OWWEa/FwaN74G+6G70xrfLEVpMEYvD7mK
+9X8XbtlGQtowE81/8rD/c3fvtFquSQNHr6I0uTgfulw5tDH5ctpsLppCeXN
Dz7Ksc0Ts1pBg4yn5JeUcdyflTtVM+VpkP3FtjP6Ox8ZtSr5yK2lwcTk5C75
r3ie89/8kdtEA5v7CwaW4fuk+C5juZUsGvxa8ykv5wWeb2uOsWw4NIh6cvxQ
5zM870fK7LN5NDi3ZOH+uad8NBkpWLpyKw2Y8iZHnPF9tv/qdS15ExpQc5cL
muP77urwIQvbHTRwnJAfTm/H/dpENjDHDO/vXMre9/+/L/p4pEXekgZf3kqV
ReD79DXZTUar9tFg/5oll5fg+/ZEv6W3nSMNSDZmf6Ou4/vupZPJuc40OHM5
VE8Q389L9N+/WOVGg+qsXr/l+D7/Tkpy1s6DBua5ZbRLV/lo5XuWQp4XDaAg
7/zOK3i+BGa4rD5Cg644pFdbw0edW+/G7PWlgcHA6Z2+l7AfWvqjMs+fBk/W
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
           "]]}, Annotation[#, "Charting`Private`Tag$14399#2"]& ]}}, {}}, {
      PointSize[0.001], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{0.7373296571256074, 0.}, {1.2373296571256074`, 0.}}]}}, {
      PointSize[0.001], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 4.963083675318166*^-24}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{2, 4.2599801546480925`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{1.7373296571256074`, 4.2599801546480925`*^-22}, {
        2.237329657125607, 4.2599801546480925`*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{3, 0.}, {3, 1.3234889800848443`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 6.617444900424222*^-24}], {Arrowheads -> Small, 
       ArrowBox[{{2.737329657125607, 6.617444900424222*^-24}, {
        3.237329657125607, 6.617444900424222*^-24}}]}}, {
      PointSize[0.001], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 2.6469779601696886`*^-23}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{4, 1.3234889800848443`*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{3.285642470524362, 1.3234889800848443`*^-23}, {
        7.297297251417944, 1.3234889800848443`*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, -1.0587911840678754`*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.36054667152722*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{4.737329657125607, -1.36054667152722*^-20}, {
        5.237329657125607, -1.36054667152722*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, -4.235164736271502*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{6, -5.44218668610888*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5.167554169745319, -5.44218668610888*^-20}, {
        9.168395410794437, -5.44218668610888*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{7, 0.}, {7, 1.6940658945086007`*^-21}}], 
      GrayLevel[0], 
      PointBox[{7, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{6.995115084485777, 8.470329472543003*^-22}, {
        10.995204832712794`, 8.470329472543003*^-22}}]}}, {
      PointSize[0.001], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, -6.776263578034403*^-21}}], 
      GrayLevel[0], 
      PointBox[{8, -8.707498697774207*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{6.008535279298257, -8.707498697774207*^-19}, {
        10.008532129171256`, -8.707498697774207*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 2.710505431213761*^-20}}], 
      GrayLevel[0], 
      PointBox[{9, 1.748276003132876*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{6.9986712010954495`, 1.748276003132876*^-18}, {
        10.998670501986368`, 1.748276003132876*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{10, 0.0993804832086067}, {10, -5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.900673154764174, 0.04969024160430335}, {
        13.900673194691477`, 0.04969024160430335}}]}}, {
      PointSize[0.001], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.}}], 
      GrayLevel[0], 
      PointBox[{11, 0.4503097583956967}], {Arrowheads -> Small, 
       ArrowBox[{{10.446190437146603`, 0.4503097583956967}, {
        14.44619043717967, 0.4503097583956967}}]}}, {
      PointSize[0.001], 
      LineBox[{{12, 1.}, {12, -8.673617379884035*^-19}}], 
      GrayLevel[0], 
      PointBox[{12, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5}, {14.500004349862268`, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{13, 1.}, {13, 1.0722325369815907`*^-45}}], 
      GrayLevel[0], 
      PointBox[{13, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5}, {14.50000434986227, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{14, 1.}, {14, 0.09938048320860673}}], 
      GrayLevel[0], 
      PointBox[{14, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{10.553818042653957`, 0.5496902416043034}, {
        14.553818042683066`, 0.5496902416043034}}]}}, {
      PointSize[0.001], 
      LineBox[{{15, 1.}, {15, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{15, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.122208343954586`, 0.9503097583956966}, {
        15.122208315369457`, 0.9503097583956966}}]}}, {
      PointSize[0.001], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      GrayLevel[0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14.007955281766513`, 1.}, {18.00795524092526, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      GrayLevel[0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13.015697569155583`, 1.}, {17.015697064868345`, 1.}}]}}, {
      PointSize[0.001], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.}}], 
      GrayLevel[0], 
      PointBox[{18, 0.9503097583956968}], {Arrowheads -> Small, 
       ArrowBox[{{17.895183726384808`, 0.9503097583956968}, {
        21.895183613734208`, 0.9503097583956968}}]}}, {
      PointSize[0.001], 
      LineBox[{{19, 0.09938048320860672}, {19, 1.}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5496902416043034}], {Arrowheads -> Small, 
       ArrowBox[{{18.446182084985907`, 0.5496902416043034}, {
        22.446182090587094`, 0.5496902416043034}}]}}, {
      PointSize[0.001], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 1.}}], 
      GrayLevel[0], 
      PointBox[{20, 0.5}], {Arrowheads -> Small, 
       ArrowBox[{{18.499995650137734`, 0.5}, {22.49999565614549, 0.5}}]}}, {
      PointSize[0.001], 
      LineBox[{{21, -6.505213034913027*^-19}, {21, 0.9999999999999999}}], 
      GrayLevel[0], 
      PointBox[{21, 0.49999999999999994`}], {Arrowheads -> Small, 
       ArrowBox[{{18.49999565013773, 0.49999999999999994`}, {
        22.49999565614549, 0.49999999999999994`}}]}}, {
      PointSize[0.001], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.9006195167913933}}], 
      GrayLevel[0], 
      PointBox[{22, 0.45030975839569665`}], {Arrowheads -> Small, 
       ArrowBox[{{18.553809185501525`, 0.45030975839569665`}, {
        22.553809191838095`, 0.45030975839569665`}}]}}, {
      PointSize[0.001], 
      LineBox[{{23, 9.486769009248164*^-20}, {23, 0.09938048320860673}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{23, 0.04969024160430337}], {Arrowheads -> Small, 
       ArrowBox[{{20.374358519532734`, 0.04969024160430337}, {
        24.374337561830185`, 0.04969024160430337}}]}}, {
      PointSize[0.001], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 2.3852447794681098`*^-18}}], 
      GrayLevel[0], 
      PointBox[{24, 1.1934694226813092`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{21.018825555025604`, 1.1934694226813092`*^-18}, {
        25.01881121882491, 1.1934694226813092`*^-18}}]}}, {
      PointSize[0.001], 
      LineBox[{{25, 2.117582368135751*^-21}, {25, 7.589415207398531*^-19}}], 
      GrayLevel[0], 
      PointBox[{25, 3.8052955155399443`*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{22.995110638374776`, 3.8052955155399443`*^-19}, {
        26.995296175594074`, 3.8052955155399443`*^-19}}]}}, {
      PointSize[0.001], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 5.421010862427522*^-20}}], 
      GrayLevel[0], 
      PointBox[{26, 2.72109334305444*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{22.016766949199273`, 2.72109334305444*^-20}, {
        26.0179064579775, 2.72109334305444*^-20}}]}}, {
      PointSize[0.001], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, -1.2585168176455822`*^-48}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{27, -7.940933880509066*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{26.737329657125606`, -7.940933880509066*^-23}, {
        27.237329657125606`, -7.940933880509066*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, -6.776263578034403*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, -3.40136667881805*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{27.737329657125606`, -3.40136667881805*^-21}, {
        28.237329657125606`, -3.40136667881805*^-21}}]}}, {
      PointSize[0.001], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 5.293955920339377*^-23}], {Arrowheads -> Small, 
       ArrowBox[{{28.737329657125606`, 5.293955920339377*^-23}, {
        29.237329657125606`, 5.293955920339377*^-23}}]}}, {
      PointSize[0.001], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{29.737329657125606`, 0.}, {30.237329657125606`, 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.845464177816049*^9, 3.8456571245355144`*^9, 3.845918249499398*^9, 
   3.8459184842289023`*^9, 3.8459186033526487`*^9, 3.8459188752469425`*^9, 
   3.84599786847644*^9, 3.8459986297761383`*^9, 3.845999994280383*^9, 
   3.846000259410144*^9, 3.846000888442731*^9, 3.8460010890717616`*^9, {
   3.846001841375801*^9, 3.846001876922844*^9}, {3.8460021627665854`*^9, 
   3.846002179020224*^9}, {3.8460022157234087`*^9, 3.8460022340906773`*^9}, 
   3.846018934084423*^9, 3.846019308279252*^9, 3.8460199830752697`*^9, 
   3.8460215912217035`*^9, 3.846023227882283*^9, 3.8460233778197145`*^9, 
   3.8460234694495773`*^9, 3.846087198424053*^9, {3.846087473956128*^9, 
   3.846087477549036*^9}, 3.8460878592814655`*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"1bec148b-afb8-4d93-ad38-d7ba98d36167"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "initial", " ", "Values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5", ",", "0.5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.845045263868204*^9, 3.8450452694034853`*^9}, 
   3.8450476199467487`*^9, {3.8450479635610037`*^9, 3.845047975491262*^9}, {
   3.8460006615647287`*^9, 3.8460006668143864`*^9}, 3.8460872315102835`*^9, {
   3.846087771965379*^9, 3.84608777251213*^9}},
 CellLabel->
  "In[549]:=",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dis", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pixelInitialValueGraphics", "[", 
  RowBox[{"10", ",", "p", ",", "listv0", ",", "dis", ",", " ", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.001", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.8444610720575733`*^9}, 3.844465103128627*^9, {
   3.844468954478764*^9, 3.844468955836996*^9}, {3.8445223288621674`*^9, 
   3.844522331588422*^9}, {3.8445224254548025`*^9, 3.844522442397056*^9}, {
   3.844523120633779*^9, 3.8445231264669933`*^9}, {3.844865883020569*^9, 
   3.8448658976377945`*^9}, 3.844865928166531*^9, 3.8448688843438253`*^9, {
   3.845045172614132*^9, 3.8450451828856764`*^9}, 3.8450452794504633`*^9, 
   3.8450455327267056`*^9, {3.845047989488798*^9, 3.8450480081172156`*^9}, 
   3.8460874847973375`*^9},
 CellLabel->
  "In[552]:=",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       RGBColor[1, 0, 0], 
       PointBox[{-0.07573365255659334, -4.924266347443407}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.06816028730093401, -4.431839712699066}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.060586922045274674`, -3.9394130779547254`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.05301355678961534, -3.4469864432103847`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.04544019153395601, -2.954559808466044}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.03786682627829667, -2.4621331737217034`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.030293461022637337`, -1.9697065389773627`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.022720095766978005`, -1.477279904233022}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.015146730511318669`, -0.9848532694886813}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.007573365255659334, -0.4924266347443407}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.007573365255659334, 0.4924266347443407}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.015146730511318669`, 0.9848532694886813}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.022720095766978005`, 1.477279904233022}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.030293461022637337`, 1.9697065389773627`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.03786682627829667, 2.4621331737217034`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.04544019153395601, 2.954559808466044}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.05301355678961534, 3.4469864432103847`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.060586922045274674`, 3.9394130779547254`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8984956063592713`, 0.10150614601527314`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.06816028730093401, 4.431839712699066}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8940239834850687`, 0.10597297968998855`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.07573365255659334, 4.924266347443407}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.881837254083994, 0.11816291589700911`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-4.924266347443407, -0.07573365255659334}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-4.431839712699066, -0.06816028730093401}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3.9394130779547254`, -0.060586922045274674`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3.4469864432103847`, -0.05301355678961534}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.954559808466044, -0.04544019153395601}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.4621331737217034`, -0.03786682627829667}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.9697065389773627`, -0.030293461022637337`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.477279904233022, -0.022720095766978005`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.9848532694886813, -0.015146730511318669`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.4924266347443407, -0.007573365255659334}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.4924266347443407, 0.007573365255659334}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.9848532694886813, 0.015146730511318669`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8762246714108026`, 0.12377541501157871`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.477279904233022, 0.022720095766978005`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8958726105446897`, 0.10412741850941244`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.9697065389773627`, 0.030293461022637337`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.877758647987935, 0.12224133022897539`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.4621331737217034`, 0.03786682627829667}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8811187288821203`, 0.11888125166890784`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.954559808466044, 0.04544019153395601}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.875944619340359, 0.12405546680274107`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.4469864432103847`, 0.05301355678961534}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8821802554906117`, 0.1178197837197802}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.9394130779547254`, 0.060586922045274674`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.903422562095052, 0.0965774023078785}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{4.431839712699066, 0.06816028730093401}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8888863320235516`, 0.11111365000810564`}]}, {
       GrayLevel[0], 
       PointBox[{4.924266347443407, 0.07573365255659334}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-5., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-4.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-4., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.5, 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{0.5, 0.}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8796759738742845`, 0.12032399565285977`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8778392998306446`, 0.12216069174061914`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2., 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.885220443705461, 0.11477891536373284`}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{2.5, 0.}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3., 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8850623383157026`, 0.1149376405912006}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.5, 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8938551647836683`, 0.1061448176527736}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{4., 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.87558866785654, 0.1244113159053367}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{4.5, 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.90127160620954, 0.09872836277098618}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{5., 0.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8989962950016324`, 0.10100370929523082`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -5.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -4.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -4.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -3.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -3.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -2.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -2.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -1.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -1.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., -0.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 1.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 1.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 2.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 2.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 3.}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{0., 3.5}]}, {
       GrayLevel[0], 
       PointBox[{0., 4.}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 4.5}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8960896166884402`, 0.10391125138166668`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0., 5.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.879430181002, 0.12056986029565675`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.5, -2.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.25, -2.25}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2., -2.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.75, -1.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.5, -1.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.25, -1.25}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1., -1.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.75, -0.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.5, -0.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.25, -0.25}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.25, 0.25}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{0.5, 0.5}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.75, 0.75}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.88178822052884, 0.11821175228741657`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 1.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.877678372700563, 0.1223217010185406}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.25, 1.25}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8959577041922695`, 0.10404228594431052`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 1.5}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8756416529425315`, 0.12435833872458152`}]}, {
       GrayLevel[0], 
       PointBox[{1.75, 1.75}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2., 2.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8853767731803073`, 0.11462322133123344`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.25, 2.25}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8993795208469537`, 0.10062060841866337`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.5, 2.5}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8904083172750767`, 0.10959165746673102`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.25, -3.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.125, -3.375}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1., -3.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.875, -2.625}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.75, -2.25}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.625, -1.875}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.5, -1.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.375, -1.125}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.25, -0.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.125, -0.375}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.125, 0.375}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.25, 0.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.375, 1.125}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{0.5, 1.5}]}, {
       RGBColor[0.5, 0, 0.5], 
       PointBox[{0.625, 1.875}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.75, 2.25}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.916818920790425, 0.08317843080015634}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.875, 2.625}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.893124211822456, 0.106875748693394}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 3.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8815291810959067`, 0.11847083951816699`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.125, 3.375}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.874585991808863, 0.12541399427996625`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{1.25, 3.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3.75, -1.25}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3.375, -1.125}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3., -1.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.625, -0.875}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.25, -0.75}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.875, -0.625}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.5, -0.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.125, -0.375}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.75, -0.25}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.375, -0.125}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.375, 0.125}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.75, 0.25}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8893644035475337`, 0.11063557595008598`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.125, 0.375}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8806529944769226`, 0.11934701663645048`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 0.5}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8895930876641027`, 0.11040691421435976`}]}, {
       GrayLevel[0], 
       PointBox[{1.875, 0.625}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.25, 0.75}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.888810042995029, 0.11119009214747481`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.625, 0.875}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.9014189275890665`, 0.09858104610409109}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3., 1.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8784626649694722`, 0.12153742862053049`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.375, 1.125}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.897835019729355, 0.10216512726991044`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3.75, 1.25}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.89160132158487, 0.10839921201158677`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2., -3.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.8, -2.6999999999999997`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.6, -2.4}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.4000000000000001`, -2.1}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.2000000000000002`, -1.7999999999999998`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1., -1.5}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.8, -1.2}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.6000000000000001, -0.8999999999999999}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.4, -0.6}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.2, -0.3}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.2, 0.3}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.4, 0.6}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.6000000000000001, 0.8999999999999999}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.892768372283836, 0.1072319381159157}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.8, 1.2}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8963206614103485`, 0.10367915383872434`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1., 1.5}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.898374555021169, 0.10162593797434456`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.2000000000000002`, 1.7999999999999998`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8860974343800225`, 0.11390255541486219`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.4000000000000001`, 2.1}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.878854290085458, 0.12114570092151683`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.6, 2.4}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8769674732808985`, 0.12303250572242602`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.8, 2.6999999999999997`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.878676771706636, 0.12132319983365877`}]}, {
       GrayLevel[0], 
       PointBox[{2., 3.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-3., -2.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.6999999999999997`, -1.8}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.4, -1.6}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-2.1, -1.4000000000000001`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.7999999999999998`, -1.2000000000000002`}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.5, -1.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-1.2, -0.8}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.8999999999999999, -0.6000000000000001}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.6, -0.4}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{-0.3, -0.2}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0., 0.}]}, {
       RGBColor[1, 0, 0], 
       PointBox[{0.3, 0.2}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.6, 0.4}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8749232235680875`, 0.12507675438117327`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{0.8999999999999999, 0.6000000000000001}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.8809627448720536`, 0.1190372401634788}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.2, 0.8}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.886153280154938, 0.11384670753747757`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.5, 1.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.878971460237699, 0.12102864470178276`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{1.7999999999999998`, 1.2000000000000002`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.875992465946939, 0.12400803222979903`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.1, 1.4000000000000001`}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.885622258377309, 0.11437781424447943`}]}, {
       GrayLevel[0], 
       PointBox[{2.4, 1.6}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{2.6999999999999997`, 1.8}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.885214797686262, 0.11478510674449163`}]}, {
       RGBColor[0, 0, 1], 
       PointBox[{3., 2.}], 
       PointSize[0.05], 
       RGBColor[0, 1, 0], 
       PointBox[{3.88467170936933, 0.11532825845513463`}]}}, {
      Thickness[Large], 
      GrayLevel[0], 
      LineBox[{{10, -6}, {-10, 14}}]}}, PlotRange -> {{-10, 10}, {-10, 10}}, 
    Axes -> True], "\"ConstrainedNewMethod\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.845464178297761*^9, 3.845657125048648*^9, 3.8459182499391108`*^9, 
   3.8459184843864803`*^9, 3.845918603487195*^9, 3.84591887538525*^9, 
   3.8459978686056666`*^9, 3.845998629905509*^9, 3.8459999944830976`*^9, 
   3.8460002595417905`*^9, {3.846000644560299*^9, 3.846000670561097*^9}, {
   3.846000890929101*^9, 3.8460008925056577`*^9}, 3.846001089198475*^9, 
   3.846001756649641*^9, 3.846001841983941*^9, 3.8460021634757576`*^9, 
   3.8460022384341545`*^9, 3.846018934694893*^9, 3.846019312557478*^9, 
   3.8460199833485403`*^9, 3.8460215914284573`*^9, 3.846023230363841*^9, 
   3.846023382494257*^9, 3.8460234704186645`*^9, 3.8460872034853373`*^9, 
   3.846087233790761*^9, 3.846087312693409*^9, 3.8460874093775215`*^9, {
   3.8460877677317705`*^9, 3.846087775354985*^9}, 3.84608785987508*^9},
 CellLabel->
  "Out[557]=",ExpressionUUID->"03ce4afa-3195-430a-9acb-e2536276c588"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lvlmin", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"pixelInitialValueGraphics", "[", 
    RowBox[{"10", ",", "1000", ",", "p", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "dis", ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
     RowBox[{"0.001", "*", 
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8444609276853704`*^9, 3.8444609607139034`*^9}, {
   3.8444610149123635`*^9, 3.84446109126562*^9}, 3.844465109413933*^9, 
   3.844522645686282*^9, {3.844523132263279*^9, 3.8445231640872555`*^9}, {
   3.8450306042313957`*^9, 3.8450306073687077`*^9}},
 CellLabel->
  "In[558]:=",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f18ac198-8579-4ade-8334-41343ab1cfed"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 512, 8, 97, "Title",ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-04efcb90444f"],
Cell[CellGroupData[{
Cell[1117, 34, 359, 6, 67, "Section",ExpressionUUID->"564bd16b-5ad2-477e-879c-a49b47193581"],
Cell[1479, 42, 430, 9, 28, "Input",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],
Cell[1912, 53, 594, 17, 49, "Input",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],
Cell[2509, 72, 366, 7, 49, "Input",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],
Cell[2878, 81, 314, 8, 28, "Input",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3229, 94, 337, 5, 67, "Section",ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-e28adb0822c9"],
Cell[3569, 101, 2444, 59, 88, "Input",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],
Cell[CellGroupData[{
Cell[6038, 164, 2162, 63, 166, "Input",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"],
Cell[8203, 229, 20840, 363, 237, "Output",ExpressionUUID->"fb43d087-defb-497a-b213-40bc5ff1505e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29092, 598, 277, 4, 67, "Section",ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-301a424457b1"],
Cell[CellGroupData[{
Cell[29394, 606, 162, 3, 54, "Subsection",ExpressionUUID->"86d2106e-d02d-4249-a85a-97f3df8af812"],
Cell[29559, 611, 17779, 373, 1059, "Input",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[47375, 989, 191, 3, 53, "Subsection",ExpressionUUID->"09c54b45-a793-4cfd-ad20-2e7a5f10a972"],
Cell[47569, 994, 1259, 27, 88, "Input",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],
Cell[48831, 1023, 353, 8, 49, "Input",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],
Cell[CellGroupData[{
Cell[49209, 1035, 2204, 42, 88, "Input",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],
Cell[51416, 1079, 854, 16, 32, "Output",ExpressionUUID->"38b31532-864d-402e-a746-8dcb7bf8a3a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52307, 1100, 971, 18, 49, "Input",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],
Cell[53281, 1120, 52640, 884, 234, "Output",ExpressionUUID->"adc87bf9-8d04-4386-a602-731cbb811265"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105970, 2010, 182, 3, 54, "Subsection",ExpressionUUID->"a4c25ec2-f772-4494-87f0-6c86ae6eb27a"],
Cell[106155, 2015, 3623, 74, 338, "Input",ExpressionUUID->"d2398203-6386-43c0-9979-4c3a161cff6f",
 InitializationCell->True],
Cell[109781, 2091, 1692, 51, 107, "Input",ExpressionUUID->"2bd77349-c9bc-44ac-a63c-3ac4e9680b0d"],
Cell[CellGroupData[{
Cell[111498, 2146, 1243, 21, 49, "Input",ExpressionUUID->"a2d66308-b602-429c-a4cb-375b3cdee7c5"],
Cell[112744, 2169, 9685, 228, 248, "Output",ExpressionUUID->"12ebc3fa-a0c1-4c26-9080-1653ca91e32f"],
Cell[122432, 2399, 3166, 47, 92, "Output",ExpressionUUID->"c6486635-6b32-43c1-aaab-1570c9bf206c"]
}, Open  ]],
Cell[125613, 2449, 6067, 128, 474, "Input",ExpressionUUID->"3b77723e-5b7c-4b87-a566-76e628ef95bf",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[131705, 2581, 4164, 95, 497, "Input",ExpressionUUID->"210d9792-72c0-46f2-9ed0-2441a1782fd9"],
Cell[135872, 2678, 1633, 26, 32, "Output",ExpressionUUID->"47952026-a6f2-4559-a9a0-ada963f55c19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137542, 2709, 508, 13, 49, "Input",ExpressionUUID->"cc9b0cb0-f357-44ab-8811-9a55a4754405"],
Cell[138053, 2724, 52243, 878, 234, "Output",ExpressionUUID->"0258f9df-e3cd-4d00-b2d8-9b76e8a16aed"]
}, Open  ]],
Cell[190311, 3605, 17156, 298, 903, "Input",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[207492, 3907, 182, 3, 45, "Subsubsection",ExpressionUUID->"1addfeb2-5c39-4529-bb6d-d0c229ca6ab7"],
Cell[207677, 3912, 240, 6, 35, "Text",ExpressionUUID->"880a687b-6dd2-4828-9358-0c01b407a3f7"],
Cell[CellGroupData[{
Cell[207942, 3922, 4956, 95, 244, "Input",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],
Cell[212901, 4019, 1175, 20, 32, "Output",ExpressionUUID->"872ef51f-5636-4823-9f45-d468b3dfa479"],
Cell[214079, 4041, 1139, 18, 32, "Output",ExpressionUUID->"97745750-f85d-4086-a438-a37dc338dfe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215255, 4064, 1602, 27, 49, "Input",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],
Cell[216860, 4093, 49296, 828, 234, "Output",ExpressionUUID->"661174a1-9b10-4889-b18b-eab1730511e5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266229, 4929, 275, 4, 67, "Section",ExpressionUUID->"d69ea01b-c1ef-4113-8cab-b11ccf013757"],
Cell[CellGroupData[{
Cell[266529, 4937, 292, 5, 54, "Subsection",ExpressionUUID->"c8124fb5-6975-4957-950c-1a0ca8f99e5a"],
Cell[CellGroupData[{
Cell[266846, 4946, 182, 3, 45, "Subsubsection",ExpressionUUID->"8aa49981-e1b7-40e4-b201-cbbe28e3204e"],
Cell[CellGroupData[{
Cell[267053, 4953, 3448, 84, 185, "Input",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],
Cell[270504, 5039, 5572, 141, 170, "Output",ExpressionUUID->"ab4c85a2-6dfe-4028-929e-f00f0c771664"],
Cell[276079, 5182, 105212, 1817, 340, "Output",ExpressionUUID->"cb1963c7-e887-4229-aab6-43076d3b92e4"]
}, Open  ]],
Cell[381306, 7002, 633, 13, 28, "Input",ExpressionUUID->"2274d0e1-de70-45ff-a5ed-0d79db6d0f5b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[382000, 7022, 325, 5, 67, "Section",ExpressionUUID->"b94d5e78-6273-405e-baaa-6e385d5d2376"],
Cell[382328, 7029, 6403, 137, 455, "Input",ExpressionUUID->"4d6e6574-d124-419c-b1db-b73c29cb5d6d",
 InitializationCell->True],
Cell[388734, 7168, 1163, 24, 107, "Input",ExpressionUUID->"e1e7e8f0-feeb-4e92-97b4-04a336e56dd8"],
Cell[CellGroupData[{
Cell[389922, 7196, 4857, 110, 458, "Input",ExpressionUUID->"a7b9aafc-000b-4097-b9b2-23d1538a9e04"],
Cell[394782, 7308, 2271, 57, 53, "Output",ExpressionUUID->"166c4006-003c-42c8-960d-24852b18ffcd"],
Cell[397056, 7367, 1102, 19, 32, "Output",ExpressionUUID->"f93c1783-27d2-4f75-8163-07bf46c44b87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398195, 7391, 572, 14, 49, "Input",ExpressionUUID->"4b0a6ba8-61f6-4078-8e53-0b4d90119711"],
Cell[398770, 7407, 52776, 886, 234, "Output",ExpressionUUID->"3952b88f-9ed1-40d6-ace7-a2c1bf8a1ef3"]
}, Open  ]],
Cell[451561, 8296, 15482, 275, 903, "Input",ExpressionUUID->"8385c2d2-a002-4ef8-98d2-e49b64703626",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[467068, 8575, 182, 3, 45, "Subsubsection",ExpressionUUID->"6b4bc2b5-e68e-44bb-810a-481b488627c2"],
Cell[CellGroupData[{
Cell[467275, 8582, 1862, 32, 68, "Input",ExpressionUUID->"8f29aaff-4057-427e-b12a-e251f29196c1"],
Cell[469140, 8616, 4877, 137, 150, "Output",ExpressionUUID->"254b42d4-24a5-4b72-9eba-c8620d488fdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474054, 8758, 1101, 24, 68, "Input",ExpressionUUID->"9ad54e40-504a-4c1a-b978-a6521a5b7d82"],
Cell[475158, 8784, 5125, 140, 150, "Output",ExpressionUUID->"057e276a-90b1-4d66-9abb-4d9db5e7244f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480320, 8929, 1166, 28, 68, "Input",ExpressionUUID->"2b2e38a0-bfe5-4cd3-9e4c-8a2caf5aacc2"],
Cell[481489, 8959, 1237, 20, 53, "Output",ExpressionUUID->"d7b6edb2-b468-45c6-b6a5-183039b7ab12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[482775, 8985, 182, 3, 45, "Subsubsection",ExpressionUUID->"27418d46-f597-4820-9d54-72d01137cc93"],
Cell[482960, 8990, 432, 10, 49, "Input",ExpressionUUID->"25dd636a-90a0-4b88-9550-82fdc8c67c30"],
Cell[CellGroupData[{
Cell[483417, 9004, 787, 16, 28, "Input",ExpressionUUID->"e367219d-7852-4603-8fb6-fba98b6361fb"],
Cell[484207, 9022, 104740, 1811, 342, "Output",ExpressionUUID->"1bec148b-afb8-4d93-ad38-d7ba98d36167"]
}, Open  ]],
Cell[588962, 10836, 2554, 81, 107, "Input",ExpressionUUID->"c0ec4130-9ea0-4540-ba87-f28abe49a96a"],
Cell[CellGroupData[{
Cell[591541, 10921, 1537, 35, 146, "Input",ExpressionUUID->"23e13519-5896-4236-b559-8301feacc5ad"],
Cell[593081, 10958, 20989, 578, 394, "Output",ExpressionUUID->"03ce4afa-3195-430a-9acb-e2536276c588"]
}, Open  ]],
Cell[614085, 11539, 1253, 32, 127, "Input",ExpressionUUID->"4f59b7b5-9a67-4041-af81-7f5ca165cbaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

