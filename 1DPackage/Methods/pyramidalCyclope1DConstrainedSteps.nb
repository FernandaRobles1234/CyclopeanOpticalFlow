(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    204130,       3866]
NotebookOptionsPosition[    199410,       3772]
NotebookOutlinePosition[    199871,       3790]
CellTagsIndexPosition[    199828,       3787]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Constrained Steps method", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.843157046858073*^9, 3.8431570473239956`*^9}, 3.843746389245494*^9, {
   3.843747216246171*^9, 3.8437472272964706`*^9}, {3.8437522034332137`*^9, 
   3.843752204235346*^9}, {3.843755084665349*^9, 
   3.8437550873707857`*^9}},ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-\
04efcb90444f"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 3.843153621995445*^9}, {
  3.843752212635614*^9, 
  3.8437522150627623`*^9}},ExpressionUUID->"564bd16b-5ad2-477e-879c-\
a49b47193581"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431523924971895`*^9, 3.84315239273125*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packageDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<*\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.843747298847076*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramidalCyclope1D`\>\""}]}], "Input",
 CellChangeTimes->{
  3.843747328636345*^9, {3.8437486091702127`*^9, 3.8437486224305134`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noteBookMode", "=", "\"\<ConstrainedSteps\>\""}], ";"}]], "Input",
 CellChangeTimes->{
  3.8437533462956824`*^9, 3.8437535060531635`*^9, {3.843755002120947*^9, 
   3.843755002813573*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-\
e28adb0822c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "1"}], ",", 
           RowBox[{"30", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
      RowBox[{"Joined", "->", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}, 3.843747388415428*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
        ",", 
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8431536109231205`*^9, 3.84367550184682*^9, {3.8437473622190533`*^9, 
   3.8437473924405236`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D (PyrFlow1D)", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.843153511988031*^9, 
  3.843153515512398*^9}},ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-\
301a424457b1"],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"86d2106e-d02d-4249-a85a-\
97f3df8af812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "update", " ", "values", " ", "of", " ", "v1", 
    " ", "and", " ", "v2", " ", "with", " ", "Over", " ", "Constrained", " ", 
    "standards"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Any", " ", "value", " ", "that", " ", "does", " ", "not", " ", "meets", 
    " ", "the", " ", "constraints", " ", "becomes", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}], ",", " ", 
        RowBox[{"and", " ", "counter", " ", "e"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status", " ", "and", " ", "e"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fric1", ",", "fric2", ",", "p1", ",", " ", "p2", ",", " ", "c", ",", 
         "d1", ",", "d2", ",", "dv1", ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"fric1", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline1", "'"}], "[", "p1", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fric2", "=", 
          RowBox[{"1", "*", 
           RowBox[{
            RowBox[{"dfline2", "'"}], "[", "p2", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<sign\>\"", ",", "e"}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<mag\>\"", ",", "e"}], "}"}],
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", "0"}]}],
             ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "\"\<flip\>\"", ",", "e"}], 
               "}"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d1", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d1", "]"}], "*", 
                RowBox[{"Abs", "[", "fric1", "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"d2", "+", 
               RowBox[{
                RowBox[{"Sign", "[", "d2", "]"}], "*", 
                RowBox[{"Abs", "[", "fric2", "]"}]}]}], ")"}]}]}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", "e"}],
           "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "No", " ", "other", " ", "solution", " ", "will", " ", "be", " ", 
     "calculated", " ", "when", " ", "status", " ", "records", " ", "an", " ",
      "error", " ", "message", " ", "in", " ", "this", " ", "pyramidal", " ", 
     "level"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "2"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "status", ",", "2"}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_", ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840549828869686*^9, 
   3.840549841777425*^9}, {3.8405509817557898`*^9, 3.840550982064629*^9}, {
   3.8405510933457384`*^9, 3.8405510984627314`*^9}, {3.8405511395527105`*^9, 
   3.840551141478009*^9}, {3.841319162361234*^9, 3.841319168699852*^9}, {
   3.842638275839821*^9, 3.842638283825076*^9}, 3.843047150844548*^9, {
   3.843047683246418*^9, 3.8430478826039906`*^9}, {3.8430662477842984`*^9, 
   3.84306626706721*^9}, {3.843066357433008*^9, 3.84306638005869*^9}, {
   3.843066471098827*^9, 3.843066471456827*^9}, {3.8430665682341595`*^9, 
   3.8430665823535037`*^9}, {3.843066614023039*^9, 3.8430666158403826`*^9}, {
   3.8430666478257236`*^9, 3.8430666560026145`*^9}, {3.843066691062875*^9, 
   3.843066695028036*^9}, {3.8430670820101533`*^9, 3.8430670822719493`*^9}, {
   3.8431531584724064`*^9, 3.8431532415742707`*^9}, {3.8431541924011116`*^9, 
   3.8431542010920024`*^9}, {3.8431543579685593`*^9, 3.84315458831942*^9}, {
   3.8436736200598516`*^9, 3.843673659839816*^9}, {3.843675802266506*^9, 
   3.84367580324864*^9}, {3.843676094738164*^9, 3.843676095993743*^9}, {
   3.843676148112191*^9, 3.843676217593154*^9}, {3.843747759180975*^9, 
   3.8437478035510416`*^9}, {3.843747837199093*^9, 3.843747911811542*^9}, 
   3.8437479433562737`*^9, {3.843748377618887*^9, 3.843748418267103*^9}, 
   3.8437487463423266`*^9, {3.8437522385411882`*^9, 3.8437522397665625`*^9}, {
   3.843752288076639*^9, 3.843752310561741*^9}, {3.843752372567502*^9, 
   3.8437523938328533`*^9}, {3.8437532528926954`*^9, 3.843753253873748*^9}, {
   3.8437532996776743`*^9, 3.8437533168563538`*^9}, {3.8437535125676455`*^9, 
   3.843753519661378*^9}, 3.8437535832591257`*^9, {3.8437536229410996`*^9, 
   3.8437536714702573`*^9}, {3.843753713138695*^9, 3.843753713497829*^9}, {
   3.8437538032027535`*^9, 3.8437538110533333`*^9}, {3.8437541111506634`*^9, 
   3.843754123500203*^9}, {3.8437551085421066`*^9, 3.8437551142583804`*^9}, {
   3.8437551446336703`*^9, 3.843755154773133*^9}, {3.8437552124512386`*^9, 
   3.843755225892112*^9}, {3.843757532903584*^9, 3.843757538085153*^9}, {
   3.843757592057612*^9, 3.8437575994225674`*^9}, {3.843846509635804*^9, 
   3.8438465181845875`*^9}, {3.843847162565233*^9, 3.843847182806486*^9}, {
   3.843847231709714*^9, 3.843847232425688*^9}, {3.8438474485486183`*^9, 
   3.843847506165636*^9}, {3.843847786776182*^9, 3.8438478162585993`*^9}, {
   3.8438478824151487`*^9, 
   3.843847884092346*^9}},ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-\
05549f24bf19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"09c54b45-a793-4cfd-ad20-\
2e7a5f10a972"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "14"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.84141418354974*^9, 3.841414205257785*^9}, {
   3.8430483435931425`*^9, 3.843048352325457*^9}, {3.8435736817894325`*^9, 
   3.8435736942554803`*^9}, {3.8437537396040974`*^9, 
   3.8437537554626484`*^9}, {3.8437538585293627`*^9, 
   3.8437538590227833`*^9}, {3.843755252745864*^9, 3.843755253135765*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437542033517194`*^9, 3.8437542128398094`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Test", " ", "for", " ", "PyrUpgrade1D"}], ",", " ", 
    RowBox[{
    "manual", " ", "test", " ", "to", " ", "iterate", " ", "multiple", " ", 
     "times"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "level", " ", "of", " ", "pyramid"}], " ",
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
   RowBox[{"PyrUpgrade1D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", "p", 
     ",", " ", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", "0.01", ",", "noteBookMode"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841319243228366*^9, 3.8413192702952523`*^9}, {3.8413206397350407`*^9, 
   3.8413206517595778`*^9}, 3.8414141937325172`*^9, {3.843153289728837*^9, 
   3.8431533303648815`*^9}, 3.8435737335282726`*^9, {3.843673768874278*^9, 
   3.8436737693178988`*^9}, {3.843675813944577*^9, 3.843675814060481*^9}, {
   3.843676226210335*^9, 3.843676250671171*^9}, {3.8437479795353403`*^9, 
   3.8437479971997814`*^9}, {3.843748584473981*^9, 3.8437485968546877`*^9}, {
   3.8437524135173283`*^9, 3.8437524152382493`*^9}, {3.843753838280105*^9, 
   3.8437538424018755`*^9}, {3.8437540451602316`*^9, 3.8437540745383673`*^9}, 
   3.8437542020459256`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6894501419214198`", ",", "0.25087551976300254`", ",", "\<\"ok\"\>", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.843753781453285*^9, {3.8437538247061377`*^9, 3.8437538766980343`*^9}, {
   3.8437539859951963`*^9, 3.8437539911962633`*^9}, {3.8437540290644183`*^9, 
   3.843754081708538*^9}, {3.8437541570103893`*^9, 3.8437541746237764`*^9}, {
   3.8437542144241033`*^9, 3.8437542186355944`*^9}, 3.843754834347181*^9, {
   3.843755245144733*^9, 3.8437552571709785`*^9}, 3.8437552886060743`*^9, 
   3.843762010778161*^9, 3.8438478284842324`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"9cc431dd-b46d-4925-9445-1214b4c0a418"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841319285628847*^9, {
   3.84315333406427*^9, 3.8431533569493647`*^9}, {3.8435736708990726`*^9, 
   3.843573675032316*^9}, 3.843748176006432*^9, {3.8437524294863195`*^9, 
   3.843752440945123*^9}, 3.8437538508453565`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$432547#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV2Hk4VVsUAHBkSkUhc4YGGe45h6JIOQtdTwqlRCgplSlFSimlUEnqJfQq
ylShDBkyJBkjSaYoJbNk6Coyx1vnr/v9Pr67z157DftcpQPHLA/xcHFxhXNz
cTGfMjqv8EMF5mJtyk/oddP1/tM1MWg25z1noX43fe2t7n0DbhVYLfh75hF0
01O2L9YG8KjAWvXpwmZ2N/3ZL82Jn08Fnslyt+tu76b/K419s1BIBZxrbYMm
nLrppRaXr0mLq4Bsi/7nfTe66cWHLUTXqqjAp/HbQe/au2mnoMKSip0q0JqQ
6xV/q4eeEvBaduacChS/2tVLaPXSV7z+UdiXoAIVrR41NbW9tGfNZHHCBxVY
f8aLvdPnO/0gdFhYcEIF3rjUam8U6aNV9MtmqleoQktFZUNGWh+d2JR3q9xc
FSSKvj9PMvlBu9WP1LacUoX0R+UBv+p/0CGvhZ7viFMFJQtF+VcH++mfIof1
eqpUIcSkJa64p5/+x6TL/dlvVfjEFXFk6f4BetZzE/1xmRooLlVWyP82QI/P
fnkpY6wGqsHjRW3mg7S5n/XnYk81KGv4rzOweJC+3zUaHRWlBmav6le/UBui
1VKaFoaXqUGcb57Kz6AhWtI5Qm6Iowau8Zx0no4h2vjyf00HpNShosXfzpb8
STdEnNbcsFkdxK0vF3ad+UnvDvVdyz6mDoJhxZbSBT9p2b6iNvc76pCdKBK3
YuQnra/VzRorUQfXcU/nrtUcOr5r68qoAXXoq5Kb49nJoed8P5acFGNB9rxe
wV4fDp07byPPc30W3LrGvml8j0M7p3U6WtIssBXdvrUALWUXXDyCXpZ18aXm
fQ59OqPJf50BC8q7M3Nlozi0jqPn3EsjFmy3qlAZjObQOYWPZ96YsIAyYY+c
j+XQL84sGf9qyQLdZd417okcOovTOyB4hAUSZZaBHtkcWk1kSX0O+q/6BbMW
9ENSL/ewMws0FqqVsV9w6GtHbwaWubAgyfxovmwOh3YYWL/M350Fa69Xvi/N
5dBC36+aj3uyoMOtIpG3gEPv/6b2vOccC95/CBvfUsKhF733OFUSxoKi/CLt
H+859HJvbXWP2yxQ9XJJoGvw+WVn2qTDWVBX7VYVgT7gErzFM4IFNgd+bDT4
gM/PlyCn+B/u993LwvBa/H79zyV+0SyYDbAzIxtwP2lGIrqJLJjuO7mT9YlD
24dJJaa9YoGH363+PR0cetb06geLQhZ8F1Lafw8dM29ijIOOeLcnqgXd493M
1ihiwe2L8i62nRzawzqyK72EBZUze3Zbd3FofzlxhYwKFtyUKA0z7uHQjx6L
RGbVsWCeUApruo9DmzhceLWrngWPhOtjtX5w6H5JTvco2kB+b/tRNBlcs1a7
kQX7J2fy2tC5bqF12U0Y7y+VHUX9HLpKY8GinC8sENB9KXFmkEP/zOcPzOth
QWvgnrRiDofe/X1S80gvC97N3CidQBeKDbWJf8d80a+8Rw1z6FD3Br3jfSxQ
askOi0Kz5GNGlAdYMBMc8vTELw7telH3YPgwC4Ru37orMcKhe/9xNzw2zQJx
vxtqGmMc2tzbYVhuhgVivnYfHdAvYiwfVKEVxZONb6KDJnWmVs2y4O1nPb8h
9MqnfBlfuQhQKqM3PRnH8xJ+qGTKTwB80VVaPMmhWxvruFYtIaCa7bcxd5pD
14t6KFWge9yPbPiGfrNdyNBFlIDmLQbzeWc4dHq1YUCKGAE3BBRkLNCBZZl8
6yQIKC+eFepCq2VFCP0ji+ulamzimeXQp27vEXdZRYCysraBCNcw7Vb3R2uB
MgGBjiqHFND7RcKsUtC5XHNeFHpLSFXkr9UEFH0J2GaBlgvQk/ZVI0BBTm0i
FF3itUw+hCLAPfCzngD3MC1i2bE6RZcAsndL2Q90gqSM5LYNBAgqco2PoXVa
LfkH0OGPGpby8gzTB5zLulU2EsB98K+kPDrr/JPYBH0CeCyvUDvQe54elY0y
IqBzd31WJjqed0o4xIyAlFTqoOs8/L6qNbOq5gR4lGwlT6Krb7oNVaJ/3v/S
ewE9JtP6jn87AYeOXVSMQJtoFl29ZEnAnOGSnEL00N7LPL7WBKwbeeArzDtM
r88RHXN2JICltvdxDDpsuMZt6QECnt42+ZmEHlQN6ShGZwX/UspEx0TNey/j
RMCJ9xnbytGCl0bjqw8T0HbL83kf+tO2ph0a7gTc52ouVecbptdcDqv4iuaI
8NasRV9/bb4p+CgBf068LdNDw5oKlU4PApYP7jy9FZ0kmTt325MAg7O9Ey5o
3867KeOnCMjgn3SLRzfK7l6R4EOAub64cTKatBK9u/00ASVhcYueozsrrgUm
nSFAf7PFoUL01pSzdnbnCGh4ckTnE1ru9N75ry8SEHAw5Iwg/zB96rn0BbdL
BHxkG2gKo2v7P45KBhCwehG7WQwduNe8/XggAZ9m3H/KowcN6ZzlVwh4pP/K
VAv9apHSocvXCZDW311hh06wuWy2OhTPM9dadj/6evyAdiX6rUXafie0re4L
fqGbBJxlh752R485bU0MvUWArYHeh3Po1rT0f8kwAhbHrUzzR5dNLT3zAV0y
WeAfiA77t33LknACHkwpT4agqYKTA+GRBGhskIR7aAmBLw3adzD+pmmp0ejZ
HVDQhJZVtxCJRVd/FwqVukvA78r6x0/QzmIxZNR9At4fU9TIQse6VnnGxxDg
qhqaXYW+mk3Zbo4lYGSkact79HGuCMMe9Dtoqf2A1o90EFsdT8D0e92cRnRL
8WhW8iOMf+rt3lZ08ULb6K2PsT4C2pe0oxOtXwcNokMyaY1OJv5DwbvJRALk
bjsa96LFpBUmnicTcI7t+nkIPXUwsN3yKQEvh/wfcNCdqT8qR9BBVTzWv9Dp
m7PuaqcQsPmGd9wo+s5N6UtN6EtPfbXH0Odbzrv6pGL/cJEqGEdvO75FLy+N
APt1/yRMode+TF1hm05Are9Pvhm0DL/4wmn0UPUeu7/ovvvfvm7MICCJP6lj
Dv2h16i8FX1zZbwot8Aw/UIzKeV8JtZLQeh6HnRQxYnzRVkEiFbu38srwOS/
/ZBHNgEnaz1O8KG/bWbbL3tBQFhx0Fl+dMg88t079KnizJMCaJ0SiQ2+ORiv
Mf4Dguhu/7lElVwCKoJCYT76Ft0n2Yy2iLRaIoTuL8j7szafAIf6zuAF6Miz
cU6daG7TMs2FaKMNIQ3/viTgTYtCNePhiROGdAHGM3nenkXoqBz750PowTa/
T4xNTrEVo14R4BwTZSqM/qNF3jQtJEBP1CONcdyIxOwE+oQdl4AI2jxjzv3J
a8yvOMcdjKeO932xKiLAaGHMDcZPqDpT3mICxl+/LWS862deXgbaqGuwgzFX
SpyKYwkBWlGSE4xT3ELuiJQS0LLYhnsx2lbNm78QTR8p+Mv8nf+H/Un3MgI8
yy2HGGc+YXfLlBNwfodqLeP9h8mdb9FemuaPGS9cJVni84YAu5APxxjndc1p
KFdgvgS9ZDE+HNf3sBGtz1ZsZfYn6lgnHFBJwK5fCy4yfq2Q76f5loBbadel
GLt/ixtsQ/M/To9n4iUVHWJ3o4qAV1NByxmX2XlXbXyH86hBJoKJt6fMXt0B
tKq13zRzPvKf2Yl3qwmYSn5pxbjqDilp8h773Z+ueOY8fXZLXh5DL7Tn7WXO
e+VSrj8JNViPfOpyjP3C6uq5a7E/5JY6MfmitiPfIB3ttcjSh8mnJpH49H11
BNzbpHCeyTeNUO8bL+sxXm9SneehO69Imp78iPMknsycxXy+YcyVt6KJgLQJ
2oXJdz2+H6vr0R023OJMPYRfyuejPuE8a6j+ZxJt7Le3uK+FgKpmUbUR9G89
Y407X3A+pGlcYerx4RT5kP2VAJ3SY5+Zep3w4fKLayVgg/a1vYPop17xOvbt
BDz0KOjpRncbasvMoS1aVES60PJiFdOxHbif0nNUB9PvMvsLv3di/JbPt2L6
yelRTfaJHsyXB2NaH9HsU0U7rvUT4DOuY1nK1Lux5VpiAOs5IoBThM6V6Bav
RUvweAQWolk5Ap+WDmH/t9kekYcWnTDfF8shID84dFcauu1Mq2vuKAE7nGYt
76KlTI9ts/tDwMzGZ8ci0ZYy3OQsWlgrI/A2+k3+yl9G49iPbo3eCUU/m3bz
+TBJQGhkhNNF9Bm/qYDeWcwHam/MEaa/XZSMFp9Pglvjo98kM08+sc2y0I3S
4UbqzPdpeP/dKUSCecrVG6uZ/bbX7r29gAR7tXRRRfQ3+pq8qDAJe46rfFyM
Tp6deSgiRoJpxaZtv3C+GZ7rjBNaRkLhuQnzVLSnT0oilyYJQ13h/LLoxUYO
bSno9dGHypeiU4WXSNitIcFVyNF/MXrwkXdA9loSpl1FBvjQzo16+1zXkfCR
qAkfxvm+X7NKrFGPhEieETYz/y0Ges8/MSahQ7XxgjuacFC0Mrcn4dC5N3uy
8b6hntz8NDeQhKKMyW378T4jN5395UgQCa1X9xfYooW3hS+QvEyCxNps0go9
PLTd7eQVEjJsHOVMeZj+WqW25hoJzht2L9NCG+YVJD29SYJP78YSQea+VBn7
5ME9Es7ttpzJwvuWqbR/s9l9Ek5X6PSkoTe67hP4i9bLbK5PRssvlD1iF03C
oMXpghh0t0W4slQMCdWcj1XX0cebLz+69YiEdTah7YfQV3rd4gPTSRAwMNgl
h5Z63Rur8ZyErV2uvFLo5DuOMV/R26gv+WLoahPraK1MEo7wvdmwAC361PBO
dzYJK47D1Sm8P0Ydkw7Z/JKEX8cfH2pBEybhwcNopy2R/k3oQkWRq1EFJEh/
eBRXj+6o4w0afUXCqhW2M1VoZa3h8wlFeD6ZtwUK0OkTb7x435DwPkkl+CHa
oM7AMx2dPewhF4WuTyo4Zl9BgmNfSs5/6D+2Ge5Zlbh/tW38YegNr6IPO73D
5ykJ4gtCl130ti2rRR97d8cdbWXLsTleR8KtvRPpLujeNa7WcvUknJ0bqz+M
nt/tsMu7gQTh2Ieajmhz463mK5tIsFaSsduN/iy03DDwCwmp/4S5GqInRtmZ
K7+SMBXeow9oiTaXleVol2uxsvpoy8zn/PzfSCj1ufBTF11tZ/DuSjvmV5zA
tCa6n31oo0oHCSU+jWIaaEGN4JRKdL/gAW0Szeatuzm/iwRF14EwNSaez/bv
Cukh4Z7HQO4K9NfIwHL1XhLU3H9LLUdP+yeuq0av2iB6SRGtYzUstagPz29H
5bFl6Od/L7Te6CchLtMwXxJd+z3enBrA5/fd7CSB/llX8foD+ptyjuRStNpj
kbjFQxjvdbL3RdEJ5g8Ph3GwHn1Flwoz7w86pc1rhkkYf/ZhwSJ0+/LvJg3o
tmarhQvRy8ZJdfHfJNQr/VATQm/ssIzKQnezF26Zj7Z9d2qR1QgJee4rPQXR
kQ8LORGjJLyodmjjR2cFd+5f94eEPqG7qxg3nOCvb0IPWo2c5EP/3qtm5DNG
wpb0M7W86MUm5lmS4yT4y63XZkyu8VqVi5aOXpcwD71NLjLSZgLrXStgGWNX
/nyBSfTZntWxPOjg4dbTdydJMMugKMaJLdz9ulMkhEU/quBGvylbZdeCrk4K
d2Xcnbql2nca1/ssIMWY5+7RTbIzJGhTQrVcaMWAW6kv0W4pj8MY00ezFez/
kpC0u8+B8T7rz//OoE8QLesZnzP4yx09i+trXZFhfE9d6cSmORIKjk4JMM5d
yu5uRbO/6nMxbppztjrPRUFhzt55jP/8uP5GnpuCp0ctlzAWb0xf/xodwiuq
xnhNYWOiAw8FrWdumTHenjghzTWPApl35WcZe4TJhcSgi//EZzG2HC69ZM5L
QdAes1nG68zdfGfQNzcf2sXsV+aZqFcyHwWlKa0vGP+dn+9iw08B3/XEVUz8
2o84OvILUKDTlBPDuKxccE8W2jDg72om/tcvWpssnk/BoY4RW+a8jrfN0oVo
E/+r/Mz57tr0eL27EK63V7aQsezkqHLlAgq+pc7bIYCe3R0lf2ohBWmLN7GY
/OnMMpJYuYgC7+sbxZj8Sj4exucvTMGxFCveBegbNbp/CREK3GGnMJOfXqyO
0S/o4cpvK5j81e2jutcvoWBp5BFP5v1azrj5Sw/av9IkaTGaK+F8w21RCriq
LwwuQVc6vC/hiFFQp5QTLo5+9so7P1qcgu+O9yeZ+vlXVi5j61IKEsyjXZh6
s2l2jX0iQUHU/BJXGfR3c0F/B2kKfPn5h5l6rXqW5rNIhoLkZ+bPmHpOFbI+
9hL94MXmEyvRp9482icph/Gq41JSQfPrG236IE/BvhUaU8z7fv/9fi0/BQri
+2yF1qBrJm+x1BUp+FBZslILHZHdLntFiYKD2UtO66BXEuen9FdScBxW3DFg
+k/Iqt+D6HetKeNG6MG+6h/3VlGgZsZ3wBidmSD7eUwZ88Gvc+dWtKFcXk6q
KgUxq94nWzG/PywY9ZanKOi4JyvN9Ns6381tRWi1u9qtHsz/94dvOahBgae9
ZJInesVbbflETYzfJV4bH6YfX/ap0NSiwDGQvSQAfZRnWpqtS0GWgNP3+2jf
Se7XbkYUXDqlWM/MkwFnS1XhzRTQOqJnmHlj/ynudjramb1PmZlH+jlGzn/Y
FJSFNd/uQHOfDFpywYSC7ZRI3jD66rCgU5gZBdFy4csX43yL+C4yP8+aAnuK
Z/lO9ONvMwY2NhSYmSk4W6NffPzhO4522jeRYYf+VFo6qG1LgbhF5m4ntEyM
T22GPeaPvMLHk+gYm7Y7zxwp4BFxSrjLzNe3qcoxbhSIKm436EYXPTXbfOUC
BYtlpWQCcP6bODor5iRTsH74qtEvvG88bb1oafOUAk7+ywdjaGHb+4GTaItO
wclp9EfLmj69FApMo8uT+fG+cmCz1vOiNAr0Ff/llkOfXc1lWJVFwZYNCV7G
6NShOwdbCylwLXoofg+9xPV5xPnXFFQPnN30EO3dW1WhUETBKuVFTgnoDW1/
1Q8UUzBPfnlyKrqi9uBobykF5061SpWi2zOpoOFKCkKTG08NoMV8Kx7Pa8B8
V4zq1cX7lukRpf9y0HWq1fo0+tKus8FujbjeT8ewzehhknJv+EiBeYi/ugW6
pitSM/4TBS4qzSuc0FfNDhcYfqNgR4mlQih6RpGv/uIPPF/O28YW9Fphh1Lt
fgqCL98924Z2nc7N+oG+WN8q243+/NH9zo5BCpY7XzYZQr+41mivxMH+lJCw
fY65T47Gfy8axXohzgsvZ97nO/5+8v5DAVtnB1sZ3V5jXaUyhvHzjvFWQ5sn
LUj5d5yC6w4nC9Yw9+99J7z2T1EwKWfMMUQf3Pr+oPg09ovqf/qM0fd0VltV
opPdtnw2Rc8X+7Je4y/G00Y43hINXNqq3ejy8Iyzu5n78dANmf9mcb0YqW22
6LSWvgXb5iiw+60hvg/dW2H4dw5dxDPY4Ij+H92EW20=
        "]]},
      Annotation[#, "Charting`Private`Tag$432547#2"]& ]}, {}}, {
    PointBox[{{14, 0.9960114371902633}, {14, 1.0107569150078866`}, {
      14, 0.9812659593726402}}], 
    PointBox[{{13.31054985807858, 0.9960114371902633}, {14.250875519763003`, 
     0.9960114371902633}}], 
    LineBox[{{14, 1.0107569150078866`}, {14, 0.9812659593726402}}], 
    LineBox[{{13.31054985807858, 0.9960114371902633}, {14.250875519763003`, 
     0.9960114371902633}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12., 0.6322573522966762},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{12, 16}, {0.6322573522966762, 1.0159989084058196`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.843753851173655*^9, 3.8437538671892476`*^9}, 
   3.8437539961259604`*^9, {3.843754030172044*^9, 3.843754047933215*^9}, 
   3.8437540807259073`*^9, 3.8437541859766674`*^9, 3.8437542173459377`*^9, 
   3.8437548343970814`*^9, {3.843755245201418*^9, 3.843755257226039*^9}, 
   3.8437552886564674`*^9, 3.843762010826136*^9, 3.843847828544265*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8939dee5-7b60-4104-916d-10e27e39c93c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"a4c25ec2-f772-4494-87f0-\
6c86ae6eb27a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", " ", "pyrfunctions_", ",", "threshold_", 
      ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", " ", "v2", ",", "c", ",", "status"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0"}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "}"}]}]}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "=", 
               RowBox[{"PyrUpgrade1D", "[", 
                RowBox[{"updateValues", ",", "p0", ",", " ", 
                 RowBox[{"pyrfunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                 RowBox[{"threshold", "*", 
                  RowBox[{"2", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                 "\"\<ConstrainedSteps\>\""}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"i", "*", "2"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"updateValues", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       ")"}]}], "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.843752560973708*^9, 3.8437525791150923`*^9}, 3.843752658661976*^9, {
   3.8437532609577184`*^9, 3.8437532630116253`*^9}, {3.843753321731477*^9, 
   3.8437533404766655`*^9}, 3.8437535235027065`*^9, {3.8437542615756073`*^9, 
   3.8437545058254924`*^9}, {3.843754584362295*^9, 3.843754613448418*^9}, {
   3.843754788152096*^9, 3.8437547901701674`*^9}, {3.843755195913307*^9, 
   3.8437552049125032`*^9}, {3.8438488260271997`*^9, 
   3.8438488267532673`*^9}},ExpressionUUID->"d9b9e833-8770-43d6-9196-\
3f072660ee39"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1addfeb2-5c39-4529-bb6d-\
d0c229ca6ab7"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"880a687b-6dd2-4828-9358-\
0c01b407a3f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initializing", " ", "values"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", " ", "v2"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", 
      RowBox[{"max", " ", "lvl"}]}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", 
      RowBox[{"min", " ", "lvl"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PyrFlow1D", " ", "solution"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "status"}], "}"}], "=", 
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"i", ",", " ", "p", ",", 
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
      RowBox[{"0.0001", "*", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}], ",", "noteBookMode"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8413207426066556`*^9, 
   3.8413207925909653`*^9}, {3.8413209376882544`*^9, 3.8413210241504335`*^9}, 
   3.8413222332344046`*^9, {3.8414140432904825`*^9, 3.8414140724559326`*^9}, {
   3.84141413690991*^9, 3.84141413740768*^9}, {3.8414142297267976`*^9, 
   3.841414240079482*^9}, {3.841414549010152*^9, 3.8414145504451213`*^9}, {
   3.8414146901179533`*^9, 3.8414146986307*^9}, {3.841415020445265*^9, 
   3.841415021414605*^9}, {3.8430474058140574`*^9, 3.843047448725752*^9}, {
   3.84367389883642*^9, 3.843673905167404*^9}, {3.843675682137754*^9, 
   3.843675684292006*^9}, 3.8437485674067793`*^9, {3.8437487258149405`*^9, 
   3.843748726711255*^9}, {3.8437526740847363`*^9, 3.843752682484831*^9}, {
   3.8437546371842413`*^9, 3.8437546374028807`*^9}, {3.843754674012761*^9, 
   3.843754739857795*^9}, 3.8437552845273266`*^9, 3.843755350812041*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.47634005113472205`", ",", "0.36080219478505776`", 
   ",", "\<\"converged\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.843754515185701*^9, {3.8437546168767614`*^9, 3.8437546376807137`*^9}, {
   3.8437546764692883`*^9, 3.843754740906331*^9}, 3.843754834451845*^9, {
   3.843755245260261*^9, 3.84375525728189*^9}, 3.8437552887122817`*^9, 
   3.84375535481015*^9, 3.8437620108997684`*^9, 3.8438478286075277`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b16c1f52-6988-4b32-8a0e-530d5eee0ebd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8371422459197798`", ",", "\<\"converged\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.843754515185701*^9, {3.8437546168767614`*^9, 3.8437546376807137`*^9}, {
   3.8437546764692883`*^9, 3.843754740906331*^9}, 3.843754834451845*^9, {
   3.843755245260261*^9, 3.84375525728189*^9}, 3.8437552887122817`*^9, 
   3.84375535481015*^9, 3.8437620108997684`*^9, 3.8438478286095433`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"8b6fd0cf-7a9c-448d-8c08-3df4fcd4ddba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "see", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"seePlot", "[", 
   RowBox[{"p", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.8413207591374435`*^9, {3.8413208116846724`*^9, 3.8413208985881786`*^9}, {
   3.843153463279521*^9, 3.843153469118759*^9}, {3.8436756974695063`*^9, 
   3.8436757009951077`*^9}, {3.843748733032687*^9, 3.8437487368004684`*^9}, 
   3.843752705032522*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$432596#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV2Hk4VVsUAHBkSkUhc4YGGe45h6JIOQtdTwqlRCgplSlFSimlUEnqJfQq
ylShDBkyJBkjSaYoJbNk6Coyx1vnr/v9Pr67z157DftcpQPHLA/xcHFxhXNz
cTGfMjqv8EMF5mJtyk/oddP1/tM1MWg25z1noX43fe2t7n0DbhVYLfh75hF0
01O2L9YG8KjAWvXpwmZ2N/3ZL82Jn08Fnslyt+tu76b/K419s1BIBZxrbYMm
nLrppRaXr0mLq4Bsi/7nfTe66cWHLUTXqqjAp/HbQe/au2mnoMKSip0q0JqQ
6xV/q4eeEvBaduacChS/2tVLaPXSV7z+UdiXoAIVrR41NbW9tGfNZHHCBxVY
f8aLvdPnO/0gdFhYcEIF3rjUam8U6aNV9MtmqleoQktFZUNGWh+d2JR3q9xc
FSSKvj9PMvlBu9WP1LacUoX0R+UBv+p/0CGvhZ7viFMFJQtF+VcH++mfIof1
eqpUIcSkJa64p5/+x6TL/dlvVfjEFXFk6f4BetZzE/1xmRooLlVWyP82QI/P
fnkpY6wGqsHjRW3mg7S5n/XnYk81KGv4rzOweJC+3zUaHRWlBmav6le/UBui
1VKaFoaXqUGcb57Kz6AhWtI5Qm6Iowau8Zx0no4h2vjyf00HpNShosXfzpb8
STdEnNbcsFkdxK0vF3ad+UnvDvVdyz6mDoJhxZbSBT9p2b6iNvc76pCdKBK3
YuQnra/VzRorUQfXcU/nrtUcOr5r68qoAXXoq5Kb49nJoed8P5acFGNB9rxe
wV4fDp07byPPc30W3LrGvml8j0M7p3U6WtIssBXdvrUALWUXXDyCXpZ18aXm
fQ59OqPJf50BC8q7M3Nlozi0jqPn3EsjFmy3qlAZjObQOYWPZ96YsIAyYY+c
j+XQL84sGf9qyQLdZd417okcOovTOyB4hAUSZZaBHtkcWk1kSX0O+q/6BbMW
9ENSL/ewMws0FqqVsV9w6GtHbwaWubAgyfxovmwOh3YYWL/M350Fa69Xvi/N
5dBC36+aj3uyoMOtIpG3gEPv/6b2vOccC95/CBvfUsKhF733OFUSxoKi/CLt
H+859HJvbXWP2yxQ9XJJoGvw+WVn2qTDWVBX7VYVgT7gErzFM4IFNgd+bDT4
gM/PlyCn+B/u993LwvBa/H79zyV+0SyYDbAzIxtwP2lGIrqJLJjuO7mT9YlD
24dJJaa9YoGH363+PR0cetb06geLQhZ8F1Lafw8dM29ijIOOeLcnqgXd493M
1ihiwe2L8i62nRzawzqyK72EBZUze3Zbd3FofzlxhYwKFtyUKA0z7uHQjx6L
RGbVsWCeUApruo9DmzhceLWrngWPhOtjtX5w6H5JTvco2kB+b/tRNBlcs1a7
kQX7J2fy2tC5bqF12U0Y7y+VHUX9HLpKY8GinC8sENB9KXFmkEP/zOcPzOth
QWvgnrRiDofe/X1S80gvC97N3CidQBeKDbWJf8d80a+8Rw1z6FD3Br3jfSxQ
askOi0Kz5GNGlAdYMBMc8vTELw7telH3YPgwC4Ru37orMcKhe/9xNzw2zQJx
vxtqGmMc2tzbYVhuhgVivnYfHdAvYiwfVKEVxZONb6KDJnWmVs2y4O1nPb8h
9MqnfBlfuQhQKqM3PRnH8xJ+qGTKTwB80VVaPMmhWxvruFYtIaCa7bcxd5pD
14t6KFWge9yPbPiGfrNdyNBFlIDmLQbzeWc4dHq1YUCKGAE3BBRkLNCBZZl8
6yQIKC+eFepCq2VFCP0ji+ulamzimeXQp27vEXdZRYCysraBCNcw7Vb3R2uB
MgGBjiqHFND7RcKsUtC5XHNeFHpLSFXkr9UEFH0J2GaBlgvQk/ZVI0BBTm0i
FF3itUw+hCLAPfCzngD3MC1i2bE6RZcAsndL2Q90gqSM5LYNBAgqco2PoXVa
LfkH0OGPGpby8gzTB5zLulU2EsB98K+kPDrr/JPYBH0CeCyvUDvQe54elY0y
IqBzd31WJjqed0o4xIyAlFTqoOs8/L6qNbOq5gR4lGwlT6Krb7oNVaJ/3v/S
ewE9JtP6jn87AYeOXVSMQJtoFl29ZEnAnOGSnEL00N7LPL7WBKwbeeArzDtM
r88RHXN2JICltvdxDDpsuMZt6QECnt42+ZmEHlQN6ShGZwX/UspEx0TNey/j
RMCJ9xnbytGCl0bjqw8T0HbL83kf+tO2ph0a7gTc52ouVecbptdcDqv4iuaI
8NasRV9/bb4p+CgBf068LdNDw5oKlU4PApYP7jy9FZ0kmTt325MAg7O9Ey5o
3867KeOnCMjgn3SLRzfK7l6R4EOAub64cTKatBK9u/00ASVhcYueozsrrgUm
nSFAf7PFoUL01pSzdnbnCGh4ckTnE1ru9N75ry8SEHAw5Iwg/zB96rn0BbdL
BHxkG2gKo2v7P45KBhCwehG7WQwduNe8/XggAZ9m3H/KowcN6ZzlVwh4pP/K
VAv9apHSocvXCZDW311hh06wuWy2OhTPM9dadj/6evyAdiX6rUXafie0re4L
fqGbBJxlh752R485bU0MvUWArYHeh3Po1rT0f8kwAhbHrUzzR5dNLT3zAV0y
WeAfiA77t33LknACHkwpT4agqYKTA+GRBGhskIR7aAmBLw3adzD+pmmp0ejZ
HVDQhJZVtxCJRVd/FwqVukvA78r6x0/QzmIxZNR9At4fU9TIQse6VnnGxxDg
qhqaXYW+mk3Zbo4lYGSkact79HGuCMMe9Dtoqf2A1o90EFsdT8D0e92cRnRL
8WhW8iOMf+rt3lZ08ULb6K2PsT4C2pe0oxOtXwcNokMyaY1OJv5DwbvJRALk
bjsa96LFpBUmnicTcI7t+nkIPXUwsN3yKQEvh/wfcNCdqT8qR9BBVTzWv9Dp
m7PuaqcQsPmGd9wo+s5N6UtN6EtPfbXH0Odbzrv6pGL/cJEqGEdvO75FLy+N
APt1/yRMode+TF1hm05Are9Pvhm0DL/4wmn0UPUeu7/ovvvfvm7MICCJP6lj
Dv2h16i8FX1zZbwot8Aw/UIzKeV8JtZLQeh6HnRQxYnzRVkEiFbu38srwOS/
/ZBHNgEnaz1O8KG/bWbbL3tBQFhx0Fl+dMg88t079KnizJMCaJ0SiQ2+ORiv
Mf4Dguhu/7lElVwCKoJCYT76Ft0n2Yy2iLRaIoTuL8j7szafAIf6zuAF6Miz
cU6daG7TMs2FaKMNIQ3/viTgTYtCNePhiROGdAHGM3nenkXoqBz750PowTa/
T4xNTrEVo14R4BwTZSqM/qNF3jQtJEBP1CONcdyIxOwE+oQdl4AI2jxjzv3J
a8yvOMcdjKeO932xKiLAaGHMDcZPqDpT3mICxl+/LWS862deXgbaqGuwgzFX
SpyKYwkBWlGSE4xT3ELuiJQS0LLYhnsx2lbNm78QTR8p+Mv8nf+H/Un3MgI8
yy2HGGc+YXfLlBNwfodqLeP9h8mdb9FemuaPGS9cJVni84YAu5APxxjndc1p
KFdgvgS9ZDE+HNf3sBGtz1ZsZfYn6lgnHFBJwK5fCy4yfq2Q76f5loBbadel
GLt/ixtsQ/M/To9n4iUVHWJ3o4qAV1NByxmX2XlXbXyH86hBJoKJt6fMXt0B
tKq13zRzPvKf2Yl3qwmYSn5pxbjqDilp8h773Z+ueOY8fXZLXh5DL7Tn7WXO
e+VSrj8JNViPfOpyjP3C6uq5a7E/5JY6MfmitiPfIB3ttcjSh8mnJpH49H11
BNzbpHCeyTeNUO8bL+sxXm9SneehO69Imp78iPMknsycxXy+YcyVt6KJgLQJ
2oXJdz2+H6vr0R023OJMPYRfyuejPuE8a6j+ZxJt7Le3uK+FgKpmUbUR9G89
Y407X3A+pGlcYerx4RT5kP2VAJ3SY5+Zep3w4fKLayVgg/a1vYPop17xOvbt
BDz0KOjpRncbasvMoS1aVES60PJiFdOxHbif0nNUB9PvMvsLv3di/JbPt2L6
yelRTfaJHsyXB2NaH9HsU0U7rvUT4DOuY1nK1Lux5VpiAOs5IoBThM6V6Bav
RUvweAQWolk5Ap+WDmH/t9kekYcWnTDfF8shID84dFcauu1Mq2vuKAE7nGYt
76KlTI9ts/tDwMzGZ8ci0ZYy3OQsWlgrI/A2+k3+yl9G49iPbo3eCUU/m3bz
+TBJQGhkhNNF9Bm/qYDeWcwHam/MEaa/XZSMFp9Pglvjo98kM08+sc2y0I3S
4UbqzPdpeP/dKUSCecrVG6uZ/bbX7r29gAR7tXRRRfQ3+pq8qDAJe46rfFyM
Tp6deSgiRoJpxaZtv3C+GZ7rjBNaRkLhuQnzVLSnT0oilyYJQ13h/LLoxUYO
bSno9dGHypeiU4WXSNitIcFVyNF/MXrwkXdA9loSpl1FBvjQzo16+1zXkfCR
qAkfxvm+X7NKrFGPhEieETYz/y0Ges8/MSahQ7XxgjuacFC0Mrcn4dC5N3uy
8b6hntz8NDeQhKKMyW378T4jN5395UgQCa1X9xfYooW3hS+QvEyCxNps0go9
PLTd7eQVEjJsHOVMeZj+WqW25hoJzht2L9NCG+YVJD29SYJP78YSQea+VBn7
5ME9Es7ttpzJwvuWqbR/s9l9Ek5X6PSkoTe67hP4i9bLbK5PRssvlD1iF03C
oMXpghh0t0W4slQMCdWcj1XX0cebLz+69YiEdTah7YfQV3rd4gPTSRAwMNgl
h5Z63Rur8ZyErV2uvFLo5DuOMV/R26gv+WLoahPraK1MEo7wvdmwAC361PBO
dzYJK47D1Sm8P0Ydkw7Z/JKEX8cfH2pBEybhwcNopy2R/k3oQkWRq1EFJEh/
eBRXj+6o4w0afUXCqhW2M1VoZa3h8wlFeD6ZtwUK0OkTb7x435DwPkkl+CHa
oM7AMx2dPewhF4WuTyo4Zl9BgmNfSs5/6D+2Ge5Zlbh/tW38YegNr6IPO73D
5ykJ4gtCl130ti2rRR97d8cdbWXLsTleR8KtvRPpLujeNa7WcvUknJ0bqz+M
nt/tsMu7gQTh2Ieajmhz463mK5tIsFaSsduN/iy03DDwCwmp/4S5GqInRtmZ
K7+SMBXeow9oiTaXleVol2uxsvpoy8zn/PzfSCj1ufBTF11tZ/DuSjvmV5zA
tCa6n31oo0oHCSU+jWIaaEGN4JRKdL/gAW0Szeatuzm/iwRF14EwNSaez/bv
Cukh4Z7HQO4K9NfIwHL1XhLU3H9LLUdP+yeuq0av2iB6SRGtYzUstagPz29H
5bFl6Od/L7Te6CchLtMwXxJd+z3enBrA5/fd7CSB/llX8foD+ptyjuRStNpj
kbjFQxjvdbL3RdEJ5g8Ph3GwHn1Flwoz7w86pc1rhkkYf/ZhwSJ0+/LvJg3o
tmarhQvRy8ZJdfHfJNQr/VATQm/ssIzKQnezF26Zj7Z9d2qR1QgJee4rPQXR
kQ8LORGjJLyodmjjR2cFd+5f94eEPqG7qxg3nOCvb0IPWo2c5EP/3qtm5DNG
wpb0M7W86MUm5lmS4yT4y63XZkyu8VqVi5aOXpcwD71NLjLSZgLrXStgGWNX
/nyBSfTZntWxPOjg4dbTdydJMMugKMaJLdz9ulMkhEU/quBGvylbZdeCrk4K
d2Xcnbql2nca1/ssIMWY5+7RTbIzJGhTQrVcaMWAW6kv0W4pj8MY00ezFez/
kpC0u8+B8T7rz//OoE8QLesZnzP4yx09i+trXZFhfE9d6cSmORIKjk4JMM5d
yu5uRbO/6nMxbppztjrPRUFhzt55jP/8uP5GnpuCp0ctlzAWb0xf/xodwiuq
xnhNYWOiAw8FrWdumTHenjghzTWPApl35WcZe4TJhcSgi//EZzG2HC69ZM5L
QdAes1nG68zdfGfQNzcf2sXsV+aZqFcyHwWlKa0vGP+dn+9iw08B3/XEVUz8
2o84OvILUKDTlBPDuKxccE8W2jDg72om/tcvWpssnk/BoY4RW+a8jrfN0oVo
E/+r/Mz57tr0eL27EK63V7aQsezkqHLlAgq+pc7bIYCe3R0lf2ohBWmLN7GY
/OnMMpJYuYgC7+sbxZj8Sj4exucvTMGxFCveBegbNbp/CREK3GGnMJOfXqyO
0S/o4cpvK5j81e2jutcvoWBp5BFP5v1azrj5Sw/av9IkaTGaK+F8w21RCriq
LwwuQVc6vC/hiFFQp5QTLo5+9so7P1qcgu+O9yeZ+vlXVi5j61IKEsyjXZh6
s2l2jX0iQUHU/BJXGfR3c0F/B2kKfPn5h5l6rXqW5rNIhoLkZ+bPmHpOFbI+
9hL94MXmEyvRp9482icph/Gq41JSQfPrG236IE/BvhUaU8z7fv/9fi0/BQri
+2yF1qBrJm+x1BUp+FBZslILHZHdLntFiYKD2UtO66BXEuen9FdScBxW3DFg
+k/Iqt+D6HetKeNG6MG+6h/3VlGgZsZ3wBidmSD7eUwZ88Gvc+dWtKFcXk6q
KgUxq94nWzG/PywY9ZanKOi4JyvN9Ns6381tRWi1u9qtHsz/94dvOahBgae9
ZJInesVbbflETYzfJV4bH6YfX/ap0NSiwDGQvSQAfZRnWpqtS0GWgNP3+2jf
Se7XbkYUXDqlWM/MkwFnS1XhzRTQOqJnmHlj/ynudjramb1PmZlH+jlGzn/Y
FJSFNd/uQHOfDFpywYSC7ZRI3jD66rCgU5gZBdFy4csX43yL+C4yP8+aAnuK
Z/lO9ONvMwY2NhSYmSk4W6NffPzhO4522jeRYYf+VFo6qG1LgbhF5m4ntEyM
T22GPeaPvMLHk+gYm7Y7zxwp4BFxSrjLzNe3qcoxbhSIKm436EYXPTXbfOUC
BYtlpWQCcP6bODor5iRTsH74qtEvvG88bb1oafOUAk7+ywdjaGHb+4GTaItO
wclp9EfLmj69FApMo8uT+fG+cmCz1vOiNAr0Ff/llkOfXc1lWJVFwZYNCV7G
6NShOwdbCylwLXoofg+9xPV5xPnXFFQPnN30EO3dW1WhUETBKuVFTgnoDW1/
1Q8UUzBPfnlyKrqi9uBobykF5061SpWi2zOpoOFKCkKTG08NoMV8Kx7Pa8B8
V4zq1cX7lukRpf9y0HWq1fo0+tKus8FujbjeT8ewzehhknJv+EiBeYi/ugW6
pitSM/4TBS4qzSuc0FfNDhcYfqNgR4mlQih6RpGv/uIPPF/O28YW9Fphh1Lt
fgqCL98924Z2nc7N+oG+WN8q243+/NH9zo5BCpY7XzYZQr+41mivxMH+lJCw
fY65T47Gfy8axXohzgsvZ97nO/5+8v5DAVtnB1sZ3V5jXaUyhvHzjvFWQ5sn
LUj5d5yC6w4nC9Yw9+99J7z2T1EwKWfMMUQf3Pr+oPg09ovqf/qM0fd0VltV
opPdtnw2Rc8X+7Je4y/G00Y43hINXNqq3ejy8Iyzu5n78dANmf9mcb0YqW22
6LSWvgXb5iiw+60hvg/dW2H4dw5dxDPY4Ij+H92EW20=
        "]]},
      Annotation[#, "Charting`Private`Tag$432596#2"]& ]}, {}}, {
    PointBox[{{14, 0.9960114371902633}, {14, 1.0107569150078866`}, {
      14, 0.9812659593726402}}], 
    PointBox[{{13.523659948865278`, 0.9960114371902633}, {14.360802194785057`,
      0.9960114371902633}}], 
    LineBox[{{14, 1.0107569150078866`}, {14, 0.9812659593726402}}], 
    LineBox[{{13.523659948865278`, 0.9960114371902633}, {14.360802194785057`, 
     0.9960114371902633}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12., 0.6322573522966762},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{12, 16}, {0.6322573522966762, 1.0159989084058196`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8437546791477213`*^9, 3.843754743906592*^9}, 
   3.843754834503641*^9, {3.8437552453153205`*^9, 3.843755257333786*^9}, 
   3.843755288767043*^9, 3.8437553548988295`*^9, 3.8437620109491262`*^9, 
   3.843847828668431*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"4ec83182-8e2a-4491-bbe6-350d7e483f28"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"d69ea01b-c1ef-4113-8cab-\
b11ccf013757"],

Cell[CellGroupData[{

Cell["All Pixel Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 
   3.84305360317021*^9}},ExpressionUUID->"c8124fb5-6975-4957-950c-\
1a0ca8f99e5a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"8aa49981-e1b7-40e4-b201-\
cbbe28e3204e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tes1", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
     "noteBookMode"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "0.001", ",", 
   "noteBookMode"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
   3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
   3.843054892362711*^9}, {3.843675061980145*^9, 3.843675066076097*^9}, 
   3.843675916016576*^9, {3.8437488485031247`*^9, 3.843748850201047*^9}, 
   3.843749691364495*^9, {3.8437501069007096`*^9, 3.8437501071598454`*^9}, {
   3.8437524967568636`*^9, 3.843752505823826*^9}, {3.8437527308973703`*^9, 
   3.843752736972122*^9}, 3.8437533329129972`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
sdyao9j3Pr/+6yIn1OTucP50Y56yeS26/HIpJ1xq2P4lV2yBciNE76ZOPSco
j98Q2HlxgbIgWFkV+J4T1E+C/2UXGiX/y9Ea5jlOWBjREJ95SqPsfCxyu/wf
J/DobtndwEGnTKS+uWMsyAWBrFl6C/p0SopL6r0PylxQdXKug8eVTtEk7b5/
eicX9Ad3H92Ip1OG//yq47fmAqYtIy5Xy+iU6DcNDfc8ucBes1PubQudIld+
7KHFaS54v7pbIO8dndIRqtj4JZULbrr+uvRknk4JNhl9fL6EC3o9Sxh1GBYp
AiIFT6TruCCAbaRjgmeR8mTGuvlJGxek23rurhNfpHg8YW2xf8cF1nsmh5Pl
Fiks6a2Uxe9c8OID27SVwiLlrmtUa+ZfLvgjkTLwlbBIsdXUfaEmwA1ibJwM
SGqRsv7ve9tLJW5Qvrl30EhgkXJt4OZLzx3cYLQwfrt96yLF5KZr55/93HDy
R9ZcK51O+REu/PqKBzcMl/z7JfqBTsk17evaFs4N55kmt9U/o1MMxVJ6BlK4
IVtxijH8Kp0yNov6jl/lBp5/9W1mp+mUxOb1N+z38fgF/0YELekUYmb9QOUL
bmj9EXUHE6dTBtyChna/5QYdpjIt31c0SqS2AnV0lhvCGz2Za2xpFBnGT2+j
/nBD1FJBqcjgAqV9KP+9MD8P+D4rbYk3XaAEVR4YqVfkAR+xYWLD/XnKY3Ns
dNaKB7YXmjHWus9R3CQix5PcecDrBawJVf2gMM1pTxLCeMAhZ9L63MR3ik32
jWnnYh6QU8o1uq49S1n1OPJ15R4PmCwfPULf941Sqiv07dJzHuiPsPh5znqG
8p2a9OP1Nx7oq1oru2r4hZJTTZ733eSBIteI3W3i05TtUWsLW/h4Ifptxknf
+SnKBanApR0GvMCj8uui3bEJipT3/l+3kniBy1OrZDWSSnmmQ1pfLeSFZ61P
6BezBilHGbjW9t7mBbF3/OF9gm8o10q7l0f7eCFE/4JgvOcLCl+w0jobFx8s
FV+JklN6QPY4fPmMljAf/OwXMt4p+pxct5N5zV6GDzJq0re69b0i27B/Wbmh
zQe6nQ4/zX2HyZeqKn7usueDOoG3rOy1U+SpTKEwbzc+uL77jkvS52my7unE
pYv+fODAOFE2LjdDHtzrs/g2ig+OqNq+6q37QRaYVKCFXOMDgum4z5m0JXK+
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
LZGGj2dngRAnbui3s/DO0IYcU1LliRs0dO0vn8ndLG0oc36z63M5DW2Qeskr
OdrwYP77gUDcTkcu7iDnaYNB7HfLLbgbL+7TT7msDZcTdlTdKaMhoaYtWv2F
2rAz8r+KrDwcq6+LSiokZUgqpEJmXu883btlyjyWKWMylCkKiTKTMiTzlKhI
KpmidK8KRRJS0SgJmaufEsV3vz/Xc96z9z5rrX3Ovs+r0+dN4KDRB0pb8wn9
B4K1mQTuEQ+Xcy/UBD4Zmqc0gdV1aDtuFGsC7+P5ms0EPn/sx9b/SjTht7ZM
/i4CT1y6Jc4t0wSTzdtTdQm8r/vIxoSrmnD0ru2qCAJf+6sg+KJcE9pLUc8O
AvOpfOGTrNSEx5aIhhpRn5v9pRXXKk3oRfDucgJjiY6L128RfhtRu8skzivV
sGX+RzWxv3ne4QuBw0dezrJrCT33xqheJfgZEE2fiKsn9JlDis8QfNK0Tb4+
v6sJ99CcXcEE35kB/EMS94h6b/xSiSL0+FHU+talWRM4t5+qlhN6WXRFvarA
NGHmcVjOOKHnrUVOz/cWTQjxCPqoS+gvpPSnk/VYE/TW7zzeTPjjiG19W2wb
Ub/WXKc54Z8n8cdaup5ogtN+4/0rhL/k6tTub+7UhDPTRfHPCP/FDH+rd+7S
hMwT1t11NbMogrrfmOvRBEM0K2ioYRYt9JO5xnypCS0nFmp2N82iiwVvS2Je
acJAvO+r+PvEfLNglS3+VhOKpajJFUR/iO7ZeMHpPdEPua6rjhD9FLj/2blr
HzVh6bWRnEn7LKpaoxPN+KIJRkkC9ONdxLw2tHIq+qsm5M/Wrb9P9Oe4cHNI
55gmjK9+vl+O6OeyoxTfg1OaQJX+Lub6dhbdJi9vGzWvCWYhnfeTiPtA7k2k
/eJvTZD6sXHGfHYWVTv72vH4oibUlP4Y0CHmPZhOdPVe0YQHdpwddcS841k/
4WMhQAKbVjP1PuK+DfTS8e1cT4IXzD65T8T7cXJrob+uMAne6RgULW0i3s9I
02CGGAneRvWcO7hlDq3Vq46QlSZB8Pnxq+lyxHvzm/9M/g4SFGZG/5jcM4e2
X3eLFt9FgvJ1l6sNVYj7dINYAv8eEpzN4/5Zo0V8n74+kTanSSL6P4TXBiW+
b5O6Lxwhk+Bx+bOdWXvnUDHWnswRKgm0aJzSZ3pzqELxQO4AiwRt0Uzk///f
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
es/6+13Ijkq1giPFLOivKnnlFf8MSTiluEuvgugXU+TpmZmniI2MjObifRY8
s5Tb91n7MXKr731vIMYCymXTqAtxjxD+xILgsRaiH7KyotD2h8j9Wcm7/W2E
Xz1uLPobtCC7Hooht1+wIClfMVw+9R4ScaLvk3wfC4QWqzkWG5uQ10oXogv7
WfD3pIz4pwt3kbMZwm1nB1nQ1v5X50NhHTJ3SMDE4wsLEpd2z2VU3USMJJ9O
v/3Kgn0F0h5rPlQiV7oS0izHCb/tIa0X2VKB2FL5XiLTxH3w0TT04I1SBFu7
Yr/1NwumlL+9QAbTEcn7D5bS/rDA+5Xl/vdrk5CggIiitX9ZcCVgduEJMxKR
H/gz9JOHDe7CpUde7nbEzl//z6tbkA2HGlyvffl7AYvn2ilt38CGCKNHlOnQ
LOx07/0Jr41s4DMK23q+PxcL/BPjt0qcDX+upl5cIV/CfFJG1c0k2PDfk+Ez
T7Zfxtx3Gs3lS7Lh38ryXfG0UszGUCSYIs2GGv1N8YtGVzHTD8cp0TvYsKEw
MH7u4jVM/9jA/POdbPisXfFR4UU5xsi7FOalwAZLoeNBG6UrMZLaaladIhtK
Q4Mld2jewJQfei7xqLChq0V2RolWhUl9Uzudr8EGgXDHlcntt7DNkRfQMRIb
ejVtrvH8vYUJi8zzUChseGPVa/3sxW1s3VW7R1E0NtzVbnV+YFyN8TCbY58z
2LBUk9NVfL0a+9O1Q28bmw0fu7lml1fdwX64xq714rJB1OsC8t76DjaSZHSW
Zy8bxKyrXtuN3cE+SN0yMtVlA8tIidKhWIO9rhYRytcn+OXDj77wqMFe6J54
PrqPDTTrfQMxBTXY04GBVLIxG1z5S/oXu2qwh74ciyhTNqTPl9w3+1OD3eMp
EXluzgb/KfnxLNlarDZz9cutVmwoxwTqx/bWYlWKXpmeNmyY4e6JdHStxa42
d+6vPcCGb2z7Av6TtVixhfoWHns2aCeHH1mbUovljFwYMHFkQ+XiYT3fwlos
PWw+L8+JDc+dfyVYltdiZ4XsHUdd2GCVtDb5+c1aLKakWYrszoaJfceu/75d
i52iyH4840HECxKBMWL9+NPYS12ebOB9/bCiltjvd3DMdasPG97pOSHHi2ox
zzmjXZ5H2RB6EXOEtFrMJe7Wlxo/NkSltzhqRNZidpKiV1cCiPMII3l2XrWY
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
hQsC6vrT+P7jD/4HOwkNeg==
           "]]}, Annotation[#, "Charting`Private`Tag$432645#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4J/lZSLflJaO//8//D9XQw3F
           "]]}, Annotation[#, "Charting`Private`Tag$432645#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{1, 0.}, {1, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{1, 0.}, {1, 0.}}]}}, {
      PointSize[0.01], 
      LineBox[{{2, 8.470329472543003*^-22}, {2, 5.293955920339377*^-22}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{2, 6.88214269644119*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{2, 6.88214269644119*^-22}, {2, 6.88214269644119*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{3, 0.}, {3, 8.470329472543003*^-22}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{3, 4.235164736271502*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{3, 4.235164736271502*^-22}, {
         3, 4.235164736271502*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{4, -1.1118200889661575`*^-50}, {
        4, 1.6940658945086007`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{4, 8.470329472543003*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{4, 8.470329472543003*^-22}, {
         4, 8.470329472543003*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5, -1.3552527156068805`*^-20}, {
         5, -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6, -5.421010862427522*^-20}, {
         6, -5.421010862427522*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{7, -8.131516293641283*^-20}, {
         7, -8.131516293641283*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8, -7.589415207398531*^-19}, {
         8, -7.589415207398531*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.549711240968172, 1.734723475976807*^-18}, {
        9.623843859139727, 1.734723475976807*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.566149632846022, 0.04969024160430335}, {
        10.521013118863342`, 0.04969024160430335}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5000000000000001}, {
        11.500004349860205`, 0.5000000000000001}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.412907475425941`, 0.9503097583956966}, {
        12.457079265546586`, 0.9503097583956966}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.407894038615542`, 1.}, {13.323800057738442`, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{13.523659948865278`, 1.}, {14.360802194785057`, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15, 1.}, {15, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{16, 1.}, {16, 1.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{16, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16, 1.}, {16, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{17, 1.}, {17, 1.0000000000000002`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{17, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{16.540066376403512`, 1.}, {17.634939126585284`, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{18, 0.9006195167913935}, {18, 1.0000000000000002`}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{18, 0.9503097583956969}], {Arrowheads -> Small, 
       ArrowBox[{{17.56360818403128, 0.9503097583956969}, {
        18.519887510778826`, 0.9503097583956969}}]}}, {
      PointSize[0.01], 
      LineBox[{{19, 0.09938048320860672}, {19, 0.9006195167913934}}], 
      GrayLevel[0], 
      PointBox[{19, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{18.49999565013773, 0.5000000000000001}, {
        19.499995650139795`, 0.5000000000000001}}]}}, {
      PointSize[0.01], 
      LineBox[{{20, 1.5178830414797062`*^-18}, {20, 0.09938048320860672}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{20, 0.04969024160430336}], {Arrowheads -> Small, 
       ArrowBox[{{19.41639739548742, 0.04969024160430336}, {
        20.461654698359514`, 0.04969024160430336}}]}}, {
      PointSize[0.01], 
      LineBox[{{21, -6.505213034913027*^-19}, {
        21, -2.6020852139652106`*^-18}}], 
      RGBColor[1, 0, 0], 
      PointBox[{21, -1.6263032587282567`*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{20.395555352161878`, -1.6263032587282567`*^-18}, {
        21.33180934914219, -1.6263032587282567`*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{22, 2.710505431213761*^-20}, {22, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{22, 1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{21.48102658293616, 1.3552527156068805`*^-20}, {
        22.243423453319668`, 1.3552527156068805`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{23, 9.486769009248164*^-20}, {
        23, -1.3552527156068805`*^-19}}], 
      RGBColor[1, 0, 0], 
      PointBox[{23, -2.0328790734103208`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{23, -2.0328790734103208`*^-20}, {
         23, -2.0328790734103208`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{24, 1.6940658945086007`*^-21}, {
        24, 1.3552527156068805`*^-20}}], 
      RGBColor[1, 0, 0], 
      PointBox[{24, 7.623296525288703*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{24, 7.623296525288703*^-21}, {
         24, 7.623296525288703*^-21}}]}}, {
      PointSize[0.01], 
      LineBox[{{25, 2.117582368135751*^-21}, {
        25, -3.3881317890172014`*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{25, -6.352747104407253*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{24.983495241391953`, -6.352747104407253*^-22}, {
        25.015358307599648`, -6.352747104407253*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{26, 2.117582368135751*^-22}, {26, 2.117582368135751*^-21}}], 
      RGBColor[1, 0, 0], 
      PointBox[{26, 1.164670302474663*^-21}], {Arrowheads -> Small, 
       ArrowBox[{{26, 1.164670302474663*^-21}, {
         26, 1.164670302474663*^-21}}]}}, {
      PointSize[0.01], 
      LineBox[{{27, -1.5881867761018131`*^-22}, {
        27, 8.470329472543003*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{27, 3.441071348220595*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{27, 3.441071348220595*^-22}, {
         27, 3.441071348220595*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{28, -2.6469779601696886`*^-23}, {
        28, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{28, 1.9852334701272664`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{28, 1.9852334701272664`*^-22}, {
         28, 1.9852334701272664`*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
      RGBColor[1, 0, 0], 
      PointBox[{29, 2.6469779601696886`*^-22}], {Arrowheads -> Small, 
       ArrowBox[{{29, 2.6469779601696886`*^-22}, {
         29, 2.6469779601696886`*^-22}}]}}, {
      PointSize[0.01], 
      LineBox[{{30, 0.}, {30, 0.}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.}], {Arrowheads -> Small, 
       ArrowBox[{{30, 0.}, {30, 0.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedSteps\"", TraditionalForm], 
     PlotRange -> {{1, 30}, {-0.028785990795792953`, 1.0288027591077828`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843754771597447*^9, 3.8437547938858976`*^9}, 
   3.8437548346158285`*^9, {3.8437552454343452`*^9, 3.843755257445368*^9}, 
   3.8437552888864574`*^9, 3.843755364804068*^9, 3.843762011058351*^9, 
   3.8438478287986937`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"ec2d52b1-1a84-4fa0-9302-dbb32dd8a6c7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for One pixel", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}, {3.843758114814825*^9, 
  3.8437581174592934`*^9}},ExpressionUUID->"4b0b75a4-b2b9-438d-bf4f-\
ec9dcc58fb1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "solutions", " ", "for", " ", 
    "all", " ", "levels", " ", "of", " ", "pyramid", " ", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4", ",", "..."}], "}"}], " ", 
    "or", " ", 
    RowBox[{"{", "l1", "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "iterations"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interests"}], ",", " ", 
      "pyrfunctions", ",", "threshold"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"v1", ",", " ", "v2", ",", "status"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1DIter", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "v0_", ",", " ", "pyrfunctions_", ",", 
      "threshold_", ",", "\"\<ConstrainedSteps\>\""}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v1", ",", " ", "v2", ",", "c", ",", "status", ",", "iterTable"}], 
       "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", " ", "e"}], 
          "}"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"updateValues", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v0", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"v0", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<ok\>\"", ",", "0"}], 
          "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"updateValues", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "=", "\"\<ok\>\""}], ",", " ", 
             RowBox[{"updateValues", "=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"updateValues", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "}"}]}]}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"iterTable", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"updateValues", "=", 
               RowBox[{"PyrUpgrade1D", "[", 
                RowBox[{"updateValues", ",", "p0", ",", " ", 
                 RowBox[{"pyrfunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                 RowBox[{"threshold", "*", 
                  RowBox[{"2", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}], ",", 
                 "\"\<ConstrainedSteps\>\""}], "]"}]}], "\[IndentingNewLine]",
               "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"i", "*", "2"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "iterTable"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405779593968954`*^9, 
   3.8405779632643437`*^9}, {3.841320470752817*^9, 3.8413204988403115`*^9}, 
   3.843047234386615*^9, 3.8430472681286163`*^9, {3.84304837339767*^9, 
   3.8430484122480726`*^9}, {3.8430489408235273`*^9, 
   3.8430489753452682`*^9}, {3.8431533802072535`*^9, 3.843153400508676*^9}, {
   3.843154934308928*^9, 3.8431552055729947`*^9}, {3.843673779979858*^9, 
   3.843673789025011*^9}, 3.843673852135035*^9, {3.843674526555189*^9, 
   3.843674537257772*^9}, {3.843674794777981*^9, 3.8436747954682493`*^9}, {
   3.843675843849382*^9, 3.843675846572392*^9}, {3.843676285948403*^9, 
   3.843676311895507*^9}, {3.8437483660430927`*^9, 3.843748369909861*^9}, {
   3.843748466865801*^9, 3.843748496811301*^9}, {3.8437485324572587`*^9, 
   3.843748532728025*^9}, {3.8437524869653664`*^9, 3.8437524904354153`*^9}, {
   3.84375262295919*^9, 3.8437526282741756`*^9}, {3.8437534026858854`*^9, 
   3.8437534055344925`*^9}, {3.8437581420635324`*^9, 3.843758143053544*^9}, {
   3.843758386780986*^9, 3.8437584076658106`*^9}, {3.843758459073492*^9, 
   3.8437585931004405`*^9}, {3.84375993122773*^9, 3.843759941699638*^9}, {
   3.8437617332613707`*^9, 3.8437617485600877`*^9}, {3.8437617824128203`*^9, 
   3.843761891345723*^9}, {3.8437619961617785`*^9, 3.8437620011360035`*^9}, {
   3.843848834321315*^9, 
   3.843848836021678*^9}},ExpressionUUID->"4b426be1-0ad3-48b0-a026-\
fb52f6ce99c9"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"1e6a4012-4297-445d-b338-\
f868b76a0c80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iter", "=", 
  RowBox[{"PyrFlow1DIter", "[", 
   RowBox[{"10", ",", " ", "11", ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0."}], "}"}], ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", " ", ";;", "1"}], "]"}], "]"}], ",", "0.001", ",", 
    "\"\<ConstrainedSteps\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, {3.8437620035509853`*^9, 
   3.8437620161687794`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d77fa91b-1805-47a3-b0e0-4b0eb050864e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.7041489862430975`", ",", "0.7041880221544286`", ",", "\<\"ok\"\>", 
      ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4917386083578267`", ",", "0.49174415480340206`", ",", "\<\"ok\"\>", 
      ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4999940668188082`", ",", "0.5000027635088207`", ",", "\<\"ok\"\>", 
      ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.49999565016829184`", ",", "0.5000043498597937`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.49999565016854164`", ",", "0.5000043498602059`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.49999565016854086`", ",", "0.5000043498602059`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4999956501685401`", ",", "0.5000043498602059`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.49999565016854114`", ",", "0.5000043498602059`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.49999565016854036`", ",", "0.5000043498602059`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4999956501685414`", ",", "0.5000043498602059`", 
      ",", "\<\"converged\"\>", ",", "0"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.843762016525104*^9, 3.843847828904523*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"9db4bb23-59bf-473f-85ad-1918ed263b41"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ace5fc40-8e28-4516-825e-32a34bbbfd6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 544, 8, 97, "Title",ExpressionUUID->"c74c55b5-a7cc-4ad8-a86e-04efcb90444f"],
Cell[CellGroupData[{
Cell[1149, 34, 359, 6, 67, "Section",ExpressionUUID->"564bd16b-5ad2-477e-879c-a49b47193581"],
Cell[1511, 42, 425, 8, 28, "Input",ExpressionUUID->"9b185096-2906-4a57-92e9-557dda4598fe"],
Cell[1939, 52, 589, 16, 49, "Input",ExpressionUUID->"65983b17-d6fd-4754-a477-b5ff2b124938"],
Cell[2531, 70, 310, 5, 49, "Input",ExpressionUUID->"0a0eddb1-b848-4d3c-b05d-36e4f83d5329"],
Cell[2844, 77, 301, 6, 28, "Input",ExpressionUUID->"e7aa4d9a-36e9-46be-b5c2-ffe503fe6e21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3182, 88, 337, 5, 67, "Section",ExpressionUUID->"1cd288a4-fb0b-4c1d-b6e6-e28adb0822c9"],
Cell[3522, 95, 2388, 57, 166, "Input",ExpressionUUID->"056c4721-21ce-4de5-84cd-f8c73485e8a4"],
Cell[5913, 154, 2143, 63, 166, "Input",ExpressionUUID->"2f2f9eee-c8fe-403e-8715-13978274b59c"]
}, Closed]],
Cell[CellGroupData[{
Cell[8093, 222, 277, 4, 53, "Section",ExpressionUUID->"eef04f0f-ca13-46b7-9ae5-301a424457b1"],
Cell[CellGroupData[{
Cell[8395, 230, 162, 3, 54, "Subsection",ExpressionUUID->"86d2106e-d02d-4249-a85a-97f3df8af812"],
Cell[8560, 235, 16956, 362, 1020, "Input",ExpressionUUID->"5e20ee3c-ab1e-4b5f-88fe-05549f24bf19",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[25553, 602, 191, 3, 53, "Subsection",ExpressionUUID->"09c54b45-a793-4cfd-ad20-2e7a5f10a972"],
Cell[25747, 607, 1178, 25, 88, "Input",ExpressionUUID->"0d67409b-4d6a-48b8-b944-4bb568d4db3e"],
Cell[26928, 634, 300, 6, 49, "Input",ExpressionUUID->"0a9858d9-ce69-4f7c-8261-cdfdd07ddfde"],
Cell[CellGroupData[{
Cell[27253, 644, 2200, 41, 88, "Input",ExpressionUUID->"138e0c10-83f8-4277-9a6d-83aa60ccbc11"],
Cell[29456, 687, 680, 12, 32, "Output",ExpressionUUID->"9cc431dd-b46d-4925-9445-1214b4c0a418"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30173, 704, 943, 17, 49, "Input",ExpressionUUID->"a4eb40f2-6bad-494d-9176-eee04ab055d2"],
Cell[31119, 723, 15412, 272, 237, "Output",ExpressionUUID->"8939dee5-7b60-4104-916d-10e27e39c93c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46580, 1001, 182, 3, 54, "Subsection",ExpressionUUID->"a4c25ec2-f772-4494-87f0-6c86ae6eb27a"],
Cell[46765, 1006, 10604, 188, 533, "Input",ExpressionUUID->"d9b9e833-8770-43d6-9196-3f072660ee39",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[57394, 1198, 182, 3, 45, "Subsubsection",ExpressionUUID->"1addfeb2-5c39-4529-bb6d-d0c229ca6ab7"],
Cell[57579, 1203, 240, 6, 35, "Text",ExpressionUUID->"880a687b-6dd2-4828-9358-0c01b407a3f7"],
Cell[CellGroupData[{
Cell[57844, 1213, 3927, 80, 244, "Input",ExpressionUUID->"afc14aa7-2bb9-4d9b-b7f5-afd1fea2872d"],
Cell[61774, 1295, 538, 10, 32, "Output",ExpressionUUID->"b16c1f52-6988-4b32-8a0e-530d5eee0ebd"],
Cell[62315, 1307, 501, 8, 32, "Output",ExpressionUUID->"8b6fd0cf-7a9c-448d-8c08-3df4fcd4ddba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62853, 1320, 1526, 25, 49, "Input",ExpressionUUID->"53f7faf6-a305-4fa8-ae79-0e1ed081f6fc"],
Cell[64382, 1347, 15294, 271, 237, "Output",ExpressionUUID->"4ec83182-8e2a-4491-bbe6-350d7e483f28"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79749, 1626, 275, 4, 67, "Section",ExpressionUUID->"d69ea01b-c1ef-4113-8cab-b11ccf013757"],
Cell[CellGroupData[{
Cell[80049, 1634, 292, 5, 54, "Subsection",ExpressionUUID->"c8124fb5-6975-4957-950c-1a0ca8f99e5a"],
Cell[CellGroupData[{
Cell[80366, 1643, 182, 3, 45, "Subsubsection",ExpressionUUID->"8aa49981-e1b7-40e4-b201-cbbe28e3204e"],
Cell[CellGroupData[{
Cell[80573, 1650, 1216, 27, 49, "Input",ExpressionUUID->"a088f1dc-28e3-40d6-a93b-5301bc0a6bd5"],
Cell[81792, 1679, 103631, 1803, 338, "Output",ExpressionUUID->"ec2d52b1-1a84-4fa0-9302-dbb32dd8a6c7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185496, 3490, 325, 5, 67, "Section",ExpressionUUID->"4b0b75a4-b2b9-438d-bf4f-ec9dcc58fb1f"],
Cell[185824, 3497, 10703, 193, 474, "Input",ExpressionUUID->"4b426be1-0ad3-48b0-a026-fb52f6ce99c9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[196552, 3694, 182, 3, 45, "Subsubsection",ExpressionUUID->"1e6a4012-4297-445d-b338-f868b76a0c80"],
Cell[CellGroupData[{
Cell[196759, 3701, 931, 18, 28, "Input",ExpressionUUID->"d77fa91b-1805-47a3-b0e0-4b0eb050864e"],
Cell[197693, 3721, 1665, 45, 72, "Output",ExpressionUUID->"9db4bb23-59bf-473f-85ad-1918ed263b41"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

