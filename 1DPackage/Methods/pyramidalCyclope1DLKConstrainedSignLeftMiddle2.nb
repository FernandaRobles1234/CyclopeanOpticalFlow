(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2936142,      52735]
NotebookOptionsPosition[   2926535,      52562]
NotebookOutlinePosition[   2927157,      52584]
CellTagsIndexPosition[   2927114,      52581]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pyramidal Cyclope 1D (Constrainted)", "Title",
 CellChangeTimes->{{3.832408884851491*^9, 3.83240890773357*^9}, {
   3.8328619391991744`*^9, 3.8328619410067196`*^9}, {3.8363940054558916`*^9, 
   3.8363940275291505`*^9}, {3.840280041419174*^9, 3.840280042503207*^9}, {
   3.8405480171717796`*^9, 3.8405480257182446`*^9}, 
   3.8431562390465775`*^9},ExpressionUUID->"76329b2f-faa1-4991-b7bc-\
3f37e4fd90db"],

Cell["\<\
Model where we don\[CloseCurlyQuote]t reject solutions after one fail through \
scale iteration.
The undefined value will be last \[OpenCurlyDoubleQuote]ok\
\[CloseCurlyDoubleQuote] estimated value.\
\>", "Text",
 CellChangeTimes->{{3.840547707465996*^9, 3.8405477559767013`*^9}, {
  3.840548923268324*^9, 3.8405489243477573`*^9}, {3.8405489729205017`*^9, 
  3.840548984338951*^9}},ExpressionUUID->"e540e878-50f7-487d-9812-\
829d0d84e570"],

Cell["Needs to import pyramid1D", "Text",
 CellChangeTimes->{{3.8431434393052764`*^9, 
  3.843143455381954*^9}},ExpressionUUID->"b433364a-7f48-4bfa-b8ee-\
e4b00243845c"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.832189670547576*^9, {3.8372610411417527`*^9, 3.837261053402938*^9}, 
   3.8372611225950527`*^9, {3.8431434791889243`*^9, 3.843143480644304*^9}, {
   3.843151614814394*^9, 3.8431516186171865`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"d6613b5f-169d-4924-a7bf-e1328c874886"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<*\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"ParentDirectory", "[", "]"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8431516160201325`*^9, 3.843151637488711*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"01813ad3-70df-409c-b457-3805a8a47ac4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Package", " ", "to", " ", "obtain", " ", "the", " ", "pyramidal", " ", 
    "representation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"<<", "\"\<pyramid1d`\>\""}]}]], "Input",
 CellChangeTimes->{{3.836396430700433*^9, 3.836396440553816*^9}, {
   3.836396483243249*^9, 3.836396483782277*^9}, {3.8363965197501154`*^9, 
   3.8363965208316736`*^9}, 3.8363965992226734`*^9, {3.843049966234662*^9, 
   3.8430499668751907`*^9}, {3.8431516435129576`*^9, 3.843151644468534*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"8671407a-4f01-418c-b8d5-eb14191aec4b"],

Cell[CellGroupData[{

Cell["Test Points {line1, line2, pyrf12}", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431530928617816`*^9, 
  3.8431531095074196`*^9}, {3.8431536160653305`*^9, 
  3.843153621995445*^9}},ExpressionUUID->"abe4cac0-cd4b-41cf-b2c5-\
ecd47a7e40c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "create", " ", "test", " ", "points", " ", "for", " ", 
    "compilation", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"line1", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"line2", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"11", "<=", " ", "p", "<=", "18"}], ",", "1", ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "1"}], ",", 
           RowBox[{"30", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"line1", ",", " ", "line2"}], "}"}], ",", 
     RowBox[{"Joined", "->", "True"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Test Points\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.832269136912603*^9, 3.8322691462380075`*^9}, {
   3.8324089382989807`*^9, 3.832408951506154*^9}, {3.8324104077397842`*^9, 
   3.832410511519393*^9}, 3.832410602016293*^9, {3.832410661166127*^9, 
   3.832410748366403*^9}, {3.832411297859131*^9, 3.832411301951344*^9}, {
   3.836395098441699*^9, 3.836395118010255*^9}, {3.836396148580798*^9, 
   3.836396159588914*^9}, {3.836396194334372*^9, 3.8363962079578047`*^9}, {
   3.836398891705703*^9, 3.836398893325742*^9}, {3.8365003825221486`*^9, 
   3.83650041642003*^9}, {3.8402800509000998`*^9, 3.840280051642571*^9}, {
   3.8430474630811205`*^9, 3.843047543816728*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"d44d9db4-afa4-41ed-86b5-14b9e69a97da"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BlQgQMqlwONL4DGF0HjS6DxZdD4Cmh8JTS+
ikPgHdur/wt2Qt2l5lDmEsH64OIbKF8Dqh7mbi00vg4aXw+Nb4DGN0TjG6HZ
Z4zmHhM095qi8c3Q+OZofAs0viUa3wqNb43Gt0Hj26Lx7eB8AKKSJ1g=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BlQgQMqlwONL4DGF0HjS6DxZdD4Cmh8JTS+
ChpfzSHwju3V/wU7oe7UcChziWB9cPENlK8FVQ/zhw4aXw+Nb4DGN0TjG6Hx
jdHsM0Fzjymae83Q+OZofAs0viUa3wqNb43Gt0Hj26Lx7eB8AB3DJ1g=
         "]]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGZigIEP9gyowAGVy4HGF0Dji6DxJdD4Mmh8BTS+
EhpfxSHwju3V/wU7oe5ScyhziWB9cPENlK8BVQ9ztxYaXweNr4fGN0DjG6Lx
jdDsM0Zzjwmae03R+GZofHM0vgUa3xKNb4XGt0bj26DxbdH4dnA+AK2SJ1o=

         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.72]], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGZigIEP9gyowAGVy4HGF0Dji6DxJdD4Mmh8BTS+
EhpfBY2v5hB4x/bq/4KdUHdqOJS5RLA+uPgGyteCqof5QweNr4fGN0DjG6Lx
jdD4xmj2maC5xxTNvWZofHM0vgUa3xKNb4XGt0bj26DxbdH4dnA+ACjDJ1o=

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39583333333333337`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Test Points\"", TraditionalForm], 
     PlotRange -> {{0.39583333333333337`, 30.}, {0, 1.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.272}, {20, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.72}, {20, 6.72}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.72}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.051309523809523805`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "6.72`", "]"}]}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.832269146662279*^9, 3.832269163127944*^9}, {
   3.832408926157102*^9, 3.832408972846965*^9}, 3.832409650961007*^9, {
   3.832410414017667*^9, 3.8324104434079323`*^9}, {3.8324104886917667`*^9, 
   3.8324106024768133`*^9}, {3.832410648975778*^9, 3.832410754841696*^9}, {
   3.832411218649428*^9, 3.832411238299346*^9}, {3.832411302959738*^9, 
   3.832411320647498*^9}, 3.832852327353812*^9, 3.832852979479656*^9, {
   3.83639509675741*^9, 3.836395118439088*^9}, 3.836396160130501*^9, 
   3.836396631282093*^9, 3.8363988944373326`*^9, 3.8364089954452257`*^9, 
   3.8364876211134768`*^9, 3.8364877718192015`*^9, 3.836488233886442*^9, 
   3.836488797088379*^9, {3.836500387099044*^9, 3.836500418598503*^9}, 
   3.836647381306472*^9, 3.836669007045142*^9, 3.8369945051001472`*^9, 
   3.8372610083399706`*^9, 3.837261056047318*^9, 3.8378749384098234`*^9, 
   3.83807929832229*^9, 3.838079566844268*^9, 3.8380799558211975`*^9, 
   3.838080649783202*^9, {3.8387409344392653`*^9, 3.8387409548907146`*^9}, 
   3.8387454317971425`*^9, 3.838745578736766*^9, 3.8388325231208243`*^9, 
   3.8388326656029625`*^9, 3.8400444363865795`*^9, 3.8400456432310905`*^9, 
   3.8400462274679575`*^9, 3.8400625547715745`*^9, 3.8400639368804235`*^9, 
   3.8400662611761127`*^9, 3.8400720692897577`*^9, 3.8400725341267157`*^9, 
   3.840188609901781*^9, 3.8402120429983826`*^9, 3.84021389694829*^9, 
   3.84021403241002*^9, 3.8402143293963895`*^9, {3.840280046967742*^9, 
   3.840280052323562*^9}, 3.840285051262255*^9, 3.8402852911251144`*^9, 
   3.840288220767514*^9, 3.8402918703245373`*^9, 3.8405353189824915`*^9, 
   3.8405353779062243`*^9, 3.840547765523657*^9, 3.8405480281059284`*^9, 
   3.8405498091768513`*^9, 3.840549852726755*^9, 3.8405499914710484`*^9, 
   3.840551031439875*^9, 3.8405511092178373`*^9, 3.8405511445360203`*^9, 
   3.8413191851732492`*^9, 3.8413205219919047`*^9, 3.841320973700383*^9, 
   3.841414387839264*^9, 3.8427011763081903`*^9, 3.8427021143700066`*^9, {
   3.843047526317483*^9, 3.843047544503813*^9}, 3.8430542193351636`*^9, 
   3.843054258498734*^9, 3.8430572405600147`*^9, 3.843057618297758*^9, 
   3.8431524670049295`*^9, 3.843154109658682*^9, 3.8431561931632214`*^9, 
   3.8431565146077023`*^9, 3.843237142579833*^9, 3.843238063684092*^9, 
   3.8433181900855207`*^9, 3.843321816983467*^9, 3.8433228978516445`*^9, 
   3.8433254765488377`*^9, 3.84332701648905*^9, 3.8433279847881527`*^9, 
   3.8435850589708176`*^9, 3.843585136974642*^9, 3.843585592800311*^9, 
   3.843589437885786*^9, 3.8435897387800703`*^9, 3.843590421014674*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"f11734bc-f3d3-4ea1-820c-c48c5980c7e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "functions", " ", "of", " ", "pyramid", " ", "with", " ", 
    "pyrFuncGen"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"original", " ", "points"}], ",", " ", 
      RowBox[{"number", " ", "of", " ", "levels"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "functions", " ", "f", " ", "and", " ", "df", " ", "for", " ", "n"}], 
      "+", 
      RowBox[{"1", " ", "levels"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pyrf1", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf2", "=", 
     RowBox[{"pyrFuncGen", "[", 
      RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrf12", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
        ",", 
        RowBox[{
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{3.8431536109231205`*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"c2e35f5f-202f-40eb-9a89-9e7ff1cddd7b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pyramidal Flow 1D", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 
  3.8363952460112877`*^9}},ExpressionUUID->"18e1ac0b-2e67-4ae4-85a8-\
851f071e6799"],

Cell[CellGroupData[{

Cell["See Plot", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, {
  3.836399424224338*^9, 
  3.8363994265333576`*^9}},ExpressionUUID->"2cdbf668-8d21-4060-b40c-\
6cfd253436b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Function", " ", "to", " ", "plot", " ", "flow", " ", "solution"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"range", " ", "of", " ", "plot", " ", "from", " ", "p"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "value", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"initial", " ", "value", " ", "for", " ", "v2"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "a"}], ",", " ", "da", ",", " ", "b", ",", 
        " ", "db"}], "}"}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"Plot", " ", "with", " ", "graphics", " ", "solutions"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"seeplot", "[", 
      RowBox[{"p_", ",", "q_", ",", 
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a_", ",", "da_"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b_", ",", "db_"}], "}"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "c", "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", "[", "p", "]"}], "+", 
             RowBox[{"b", "[", "p", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "[", "x", "]"}], ",", 
               RowBox[{"b", "[", "x", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"p", "-", "q"}], ",", 
               RowBox[{"p", "+", "q"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"p", ",", "c"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"a", "[", "p", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"b", "[", "p", "]"}]}], "}"}]}], "}"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "-", "v1"}], ",", "c"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "+", "v2"}], ",", "c"}], "}"}]}], "}"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"a", "[", "p", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", 
                   RowBox[{"b", "[", "p", "]"}]}], "}"}]}], "}"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "-", "v1"}], ",", "c"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"p", "+", "v2"}], ",", "c"}], "}"}]}], "}"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"seePlot", "::", "usage"}], "=", 
     "\"\<\nFunction to plot flow solution\nInput\[Rule] {p, q, {v1, v2}, \
{{a,da},{b,db}}}\nOutput-> a and b plot with v1 and v2 solutions\np= Pixel of \
interest\nq= Range to plot from pixel of interest\nv1= Solution for a\nv2= \
Solution for b\n{a, da}= {function of a, derivative of function of a}\n{b, \
db}= {function of b, derivative of function of b}\n\>\""}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836399435798623*^9, 3.8363994374943686`*^9}, {
  3.8430499734360714`*^9, 3.843049974232765*^9}, {3.843156258720828*^9, 
  3.843156259081457*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"1a1c9eee-72d7-44cf-95e5-c69d858841fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyrUpgrade1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 
  3.8363959796401834`*^9}},ExpressionUUID->"4d85132e-f9aa-4886-993d-\
13ba7706c410"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pyrf1", "=", 
   RowBox[{"pyrFuncGen", "[", 
    RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrf2", "=", 
   RowBox[{"pyrFuncGen", "[", 
    RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrf12", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
      ",", 
      RowBox[{
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.841855545656147*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"e59780ed-4960-4a38-9205-eb67bc3dd13f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"findPrevNext", "[", 
    RowBox[{"p0_", ",", 
     RowBox[{"{", 
      RowBox[{"v1_", ",", "v2_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dfline1_", ",", "dfline2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "continue", ",", "notcontinue", ",", " ", "resFunc", ",", " ", 
       "sumFunc", ",", "r1left", ",", "rleft", ",", "r2left", ",", "r1right", 
       ",", "r2right", ",", "rright"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"continue", "[", "p_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Sign", "[", 
          RowBox[{
           RowBox[{"dfline1", "[", "p", "]"}], "*", 
           RowBox[{"dfline2", "[", 
            RowBox[{"p0", "+", "v2"}], "]"}]}], "]"}], "==", 
         RowBox[{"-", "1"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"notcontinue", "[", "p_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Sign", "[", 
          RowBox[{
           RowBox[{"dfline1", "[", "p", "]"}], "*", 
           RowBox[{"dfline2", "[", 
            RowBox[{"p0", "+", "v2"}], "]"}]}], "]"}], "==", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resFunc", "[", "p_", "]"}], ":=", 
        RowBox[{"p", "-", "0.1"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"r1left", "=", 
        RowBox[{"NestWhile", "[", 
         RowBox[{"resFunc", ",", 
          RowBox[{"p0", "-", "v1"}], ",", "continue", ",", "1", ",", "100"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r2left", "=", 
        RowBox[{"NestWhile", "[", 
         RowBox[{
         "resFunc", ",", "r1left", ",", "notcontinue", ",", "1", ",", "100"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rleft", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r2left", "+", "r1left"}], ")"}], "/", "2"}]}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8418550577534895`*^9, 3.8418551633074665`*^9}, {
   3.8418552296916857`*^9, 3.8418552321510563`*^9}, {3.8418553822092457`*^9, 
   3.841855505156005*^9}, {3.841855608940446*^9, 3.841855625343037*^9}, {
   3.841855687403384*^9, 3.8418558329445343`*^9}, {3.841855891084114*^9, 
   3.8418559617449117`*^9}, 3.8418560692008085`*^9, {3.841856103747064*^9, 
   3.841856162876746*^9}, {3.8418561967281885`*^9, 3.84185624974376*^9}, {
   3.841856673564426*^9, 3.841856782677149*^9}, {3.8418570135844183`*^9, 
   3.8418570142092695`*^9}, {3.841857545423205*^9, 3.841857550343926*^9}, {
   3.841858789437207*^9, 3.841858792233508*^9}, {3.841919992154702*^9, 
   3.8419199925247107`*^9}, {3.8427060249922333`*^9, 3.842706031841439*^9}, {
   3.8433181806827345`*^9, 3.843318206008958*^9}, {3.8433182643532453`*^9, 
   3.843318273754682*^9}, {3.8433205058455276`*^9, 3.843320506032976*^9}, {
   3.843320699867055*^9, 3.843320703147775*^9}, {3.8433209152727566`*^9, 
   3.843320916678907*^9}, {3.8433210185610437`*^9, 3.8433210209977245`*^9}, {
   3.8433212407771587`*^9, 3.8433212419177833`*^9}, {3.8433213152526674`*^9, 
   3.8433213171895485`*^9}, {3.8433217046298285`*^9, 3.843321706707475*^9}, {
   3.8433221125636187`*^9, 3.843322113735216*^9}, {3.8433225051113405`*^9, 
   3.8433225103288717`*^9}, {3.843322722056714*^9, 3.8433227292766523`*^9}, {
   3.843322811272118*^9, 3.843322812334353*^9}, {3.843323189306155*^9, 
   3.843323221089739*^9}, {3.8433233895009995`*^9, 3.843323393937191*^9}, {
   3.8433234696768274`*^9, 3.843323475175539*^9}, {3.843589363470784*^9, 
   3.8435893949788623`*^9}, {3.8435895443882313`*^9, 3.843589620873374*^9}, {
   3.8435897063266244`*^9, 3.843589720498686*^9}, {3.8435898296958785`*^9, 
   3.843589835421671*^9}, {3.843590163828067*^9, 3.8435901678400717`*^9}, {
   3.8435902548476725`*^9, 3.8435902596401143`*^9}, {3.8435904155436745`*^9, 
   3.8435904167437415`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"d9ca9fe5-da34-4ce8-b433-13188ed942e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findPrevNext", "[", 
  RowBox[{"15", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8418555103737564`*^9, 3.841855602645122*^9}, 
   3.8418557429216337`*^9, {3.841856073637493*^9, 3.84185609818589*^9}, {
   3.8418569894809027`*^9, 3.8418569896212797`*^9}, {3.8435894173543315`*^9, 
   3.843589423656521*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"688147c1-2d42-46d6-a4e5-687cef78a8ac"],

Cell[BoxData["4.0000000000000355`"], "Output",
 CellChangeTimes->{3.8435904212529573`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"934a5bda-b1c2-4e51-9744-f7dee5096b0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1", ",", "2"}], "]"}], "]"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"pyrf12", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "2", ",", "2"}], "]"}], "]"}], "[", "x", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8418551661193447`*^9, 3.8418551688217998`*^9}, {
  3.8418569364966984`*^9, 3.8418569865751204`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"5fa38a88-c8f2-4743-8a55-1ac2ae3fceb4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
m55v
       "]]},
     Annotation[#, "Charting`Private`Tag$227841#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
kA0=
       "]]},
     Annotation[#, "Charting`Private`Tag$227841#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 30}, {-0.13528565560064854`, 0.13528551576125813`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8418569712662354`*^9, 3.8418569869344406`*^9}, {
   3.8418576697271814`*^9, 3.841857690597312*^9}, 3.8419200044796915`*^9, 
   3.842705941058996*^9, 3.842706036503332*^9, 3.8433181904137926`*^9, 
   3.843318278253352*^9, 3.843321817249032*^9, 3.843322898085965*^9, 
   3.8433254767987747`*^9, 3.8433270169733086`*^9, 3.8433279850849576`*^9, 
   3.8435850591623955`*^9, 3.843585137217992*^9, 3.843585593022149*^9, 
   3.843589438146162*^9, 3.8435897389943905`*^9, 3.8435904213625154`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"b866bb6d-77b9-445b-96f4-e32bddfdd2a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Input", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
        RowBox[{"v2", " ", "and", " ", "status"}]}], "}"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"functions", " ", "f1"}], ",", " ", "df1", ",", " ", "f2", 
        ",", " ", "df2"}], "}"}], ",", " ", 
      RowBox[{"threshold", " ", "for", " ", "magnitude", " ", "error"}]}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Output", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"new", " ", "values", " ", "for", " ", "v1"}], ",", " ", 
      RowBox[{"v2", " ", "and", " ", "status"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "e_"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "p1", ",", " ", "p2", ",", " ", "c", ",", "d1", ",", "d2", ",", "dv1",
          ",", "dv2"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"p0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"p0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "p0", "]"}], "+", 
             RowBox[{"fline2", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign", " ", "in", " ", "every", " ", 
           "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"PyrUpgrade1D", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "\"\<oksign\>\"", ",", "e"}], 
                 "}"}], ",", "p0", ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"fline1", ",", "dfline1"}], "}"}], " ", ",", 
                  RowBox[{"{", 
                   RowBox[{"fline2", ",", "dfline2"}], "}"}]}], "}"}], ",", 
                " ", "threshold"}], "]"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"dfline1", "[", "p0", "]"}], "*", "d1"}], "<", "0"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"dfline2", "[", "p0", "]"}], "*", "d2"}], "<", "0"}]}],
             ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             "d1"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", "d2"}]}], 
           "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<ok\>\""}], "]"}], ",", "e"}],
           "}"}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"status", ":", " ", "\"\<OK\>\""}], " ", "->", " ", 
      RowBox[{"solution", " ", "respects", " ", "constraints"}]}], ",", "  ", 
     RowBox[{"errors", ":", " ", "\"\<sign\>\""}], ",", " ", "\"\<mag\>\"", 
     ",", " ", "\"\<flip\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"status", ":", " ", "\"\<converged\>\""}], " ", "->", " ", 
     RowBox[{"we", " ", 
      RowBox[{"converged", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<oksign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "p1", ",", "p2", ",", "c", ",", "d1", ",", "d2", ",", "dv1", ",", 
         "dv2", ",", "r0"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"r0", "=", 
          RowBox[{"findPrevNext", "[", 
           RowBox[{"p0", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], 
             RowBox[{"{", 
              RowBox[{"dfline1", ",", "dfline2"}], "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "r0", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"p1", "=", 
          RowBox[{"r0", "-", "v1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"r0", "+", "v2"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fline1", "[", "r0", "]"}], "+", 
             RowBox[{"fline2", "[", "r0", "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d1", "=", 
          RowBox[{"dfline1", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"d2", "=", 
          RowBox[{"dfline2", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "d1", " ", "and", " ", "d2", " ", "have", " ", "to", " ", "be", " ",
            "the", " ", "same", " ", "sign"}], " ", "*)"}], 
         "\[IndentingNewLine]", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d1", "*", "d2"}], " ", "<", "0"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
              "]"}]}], "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "magnitude", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "d1", "]"}], "<", "threshold"}], "||", 
             RowBox[{
              RowBox[{"Abs", "[", "d2", "]"}], "<", "threshold"}]}], " ", 
            ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"v1", ",", "v2"}], "}"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "of", " ", "sign", " ", "during", " ", "iteration"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"dfline1", "[", "r0", "]"}], "*", "d1"}], "<", "0"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"dfline2", "[", "r0", "]"}], "*", "d2"}], "<", "0"}]}],
             ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", 
                RowBox[{"e", "+", "1"}]}], "}"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dv1", ",", 
           RowBox[{"dv2", " ", ":", " ", 
            RowBox[{"step", " ", "from", " ", "last", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}], " ", "to", " ", "new", " ", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dv1", ",", "dv2"}], "}"}], "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"fline1", "[", "p1", "]"}], "-", "c"}], ")"}], "/", 
             "d1"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "-", 
               RowBox[{"fline2", "[", "p2", "]"}]}], ")"}], "/", "d2"}]}], 
           "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v1", "+", "dv1"}], ",", 
           RowBox[{"v2", "+", "dv2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"{", 
                RowBox[{"dv1", ",", "dv2"}], "}"}], "]"}], "<", "0.001"}], 
             ",", "\"\<converged\>\"", ",", "\"\<oksign\>\""}], "]"}], ",", 
           "e"}], "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "status_", ",", "2"}], "}"}], ",", 
       "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_"}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "status", ",", "2"}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<sign\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_"}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<sign\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<mag\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_"}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<mag\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1_", ",", "v2_", ",", "\"\<flip\>\"", ",", "e_"}], "}"}], 
       ",", "p0_", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fline1_", ",", "dfline1_"}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"fline2_", ",", "dfline2_"}], "}"}]}], "}"}], ",", " ", 
       "threshold_"}], "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "\"\<flip\>\"", ",", "e"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrUpgrade1D", "::", "usage"}], "=", 
     "\"\<\nFunction to update values of v1 and v2 with Constrained standards\
\nInput\[Rule] [{v1,v2,status,e},p0,{{f1,df1},{f2,df2},threshold}\nOutput-> \
{v1,v2,status}\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status of the \
solution (ok, sign, mag, flip, converged)\ne= counts the amount of \
constraints not met\np0= point of interest\n{f1,df1}={function 1, derivative \
of function 1}\n{f2,df2}={function 2, derivative of function 2}\nthreshold= \
threshold to respect magnitude constraint\n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8363952713646383`*^9, 3.836395285622998*^9}, {
   3.836395339420894*^9, 3.836395340499365*^9}, {3.8363960314026394`*^9, 
   3.83639606263406*^9}, {3.836488222237672*^9, 3.8364882261367626`*^9}, 
   3.836488794120328*^9, 3.8366473739266353`*^9, {3.8370817604645205`*^9, 
   3.837081837795313*^9}, {3.8370818949284244`*^9, 3.83708194197997*^9}, {
   3.8370842312798247`*^9, 3.8370843044170694`*^9}, 3.837084651677993*^9, {
   3.8370847210046616`*^9, 3.837084725007778*^9}, {3.8377956666920443`*^9, 
   3.8377956995724106`*^9}, {3.8377957498926754`*^9, 3.83779581642708*^9}, {
   3.8378749336691175`*^9, 3.837874935107934*^9}, {3.837875154862604*^9, 
   3.8378751613696737`*^9}, {3.838079285613141*^9, 3.8380792941631727`*^9}, {
   3.8380795418031816`*^9, 3.838079563444045*^9}, {3.8380797346993732`*^9, 
   3.8380797393432436`*^9}, {3.83807982197386*^9, 3.8380798582862535`*^9}, {
   3.8380805890530586`*^9, 3.838080591503376*^9}, {3.8380809576132145`*^9, 
   3.8380809678530693`*^9}, {3.838740908992169*^9, 3.838740950609075*^9}, {
   3.838832496708708*^9, 3.838832519171462*^9}, {3.8400446630563745`*^9, 
   3.840044714150585*^9}, 3.8400449264576254`*^9, {3.8400453571541862`*^9, 
   3.8400453654985714`*^9}, {3.8400456962038565`*^9, 3.840045715342576*^9}, {
   3.8400459309942083`*^9, 3.8400459656201653`*^9}, {3.8400668389960976`*^9, 
   3.840066846494582*^9}, {3.8401886870003967`*^9, 3.840188820046699*^9}, {
   3.840188896296138*^9, 3.840188925231366*^9}, {3.840188999652712*^9, 
   3.840189013444944*^9}, {3.840189096038698*^9, 3.8401891974523277`*^9}, {
   3.840189624170314*^9, 3.840189800290779*^9}, {3.840189958389654*^9, 
   3.8401900137831907`*^9}, 3.8402120639745617`*^9, {3.8402121216067257`*^9, 
   3.84021212708329*^9}, {3.8402122805477524`*^9, 3.840212286917535*^9}, 
   3.8402132864409337`*^9, {3.840213485572333*^9, 3.840213490367629*^9}, {
   3.840214015425631*^9, 3.8402140182491136`*^9}, 3.8402801476209807`*^9, 
   3.84028020940808*^9, {3.840281347776226*^9, 3.8402813646606426`*^9}, 
   3.8402849362643695`*^9, {3.840285277474245*^9, 3.8402852834041367`*^9}, {
   3.8402881918413506`*^9, 3.8402881935364695`*^9}, {3.8402918630085573`*^9, 
   3.8402918666426845`*^9}, {3.840535302919426*^9, 3.8405353122265525`*^9}, {
   3.840535355695983*^9, 3.8405353675596466`*^9}, {3.8405478262244816`*^9, 
   3.8405478282532935`*^9}, {3.84054786170028*^9, 3.8405479597319727`*^9}, {
   3.8405487500943556`*^9, 3.8405487530817695`*^9}, {3.840548890802074*^9, 
   3.840548895672971*^9}, {3.8405489566370993`*^9, 3.8405489677693124`*^9}, {
   3.840558898944503*^9, 3.840558919673791*^9}, {3.8405590751929426`*^9, 
   3.8405590905799665`*^9}, {3.8405786182601976`*^9, 
   3.8405786202723913`*^9}, {3.8414190328513837`*^9, 3.841419038459272*^9}, {
   3.8414202168521104`*^9, 3.841420329531598*^9}, {3.841420439013297*^9, 
   3.8414205133814917`*^9}, {3.8414205831457896`*^9, 
   3.8414205862091703`*^9}, {3.8414212543379865`*^9, 
   3.8414212550688157`*^9}, {3.8414217649166536`*^9, 3.841421771344642*^9}, {
   3.8414218060941353`*^9, 3.841421831565406*^9}, {3.8414223452355947`*^9, 
   3.8414223582096825`*^9}, {3.8414865132710576`*^9, 
   3.8414865464466257`*^9}, {3.841495145124576*^9, 3.8414952155814676`*^9}, {
   3.8414953307795877`*^9, 3.8414953942366886`*^9}, {3.841508125479186*^9, 
   3.8415081301234617`*^9}, {3.842637401140934*^9, 3.8426374123839664`*^9}, {
   3.8426374548457556`*^9, 3.842637457843338*^9}, 3.843049982100257*^9, {
   3.843050021340685*^9, 3.8430500999008293`*^9}, {3.8430501434061136`*^9, 
   3.8430501534972377`*^9}, {3.843050317710548*^9, 3.843050374728256*^9}, {
   3.843050532771618*^9, 3.8430505426132917`*^9}, {3.8430505912578697`*^9, 
   3.843050629003641*^9}, {3.843050769213539*^9, 3.8430508007053356`*^9}, {
   3.843050857941908*^9, 3.843050893728114*^9}, {3.8431562683776445`*^9, 
   3.843156300047364*^9}, {3.8432380519579687`*^9, 3.8432380595109124`*^9}, {
   3.8432383702531567`*^9, 3.843238373254682*^9}, {3.8432386407608576`*^9, 
   3.8432387147264*^9}, {3.8432387609363174`*^9, 3.8432388099733896`*^9}, {
   3.843318401941639*^9, 3.8433184420460978`*^9}, {3.843320006904053*^9, 
   3.8433200112934194`*^9}, {3.8433202677981052`*^9, 
   3.8433202867001824`*^9}, {3.843320823628084*^9, 3.8433208263772078`*^9}, {
   3.843321370194274*^9, 3.843321371975088*^9}, {3.843321438098985*^9, 
   3.84332144108267*^9}, {3.8433215405595207`*^9, 3.8433215452146764`*^9}, {
   3.8433238994156475`*^9, 3.843323908020013*^9}, {3.843324426639652*^9, 
   3.843324427655038*^9}, {3.8433245969655886`*^9, 3.8433246284943953`*^9}, {
   3.84332472235494*^9, 3.843324751813099*^9}, {3.8433251453789067`*^9, 
   3.843325244881585*^9}, {3.8433254327524137`*^9, 3.8433254396671004`*^9}, {
   3.8435886977439137`*^9, 3.8435887006809373`*^9}, {3.843588734341316*^9, 
   3.843588736964617*^9}, {3.8435897959377103`*^9, 3.843589800399109*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"a13d90b2-dea1-4b19-a655-f82fe55fa81b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 
  3.832269218824854*^9}},ExpressionUUID->"057490d3-59e3-4979-8857-\
b71daab20425"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pyrf1", "=", 
   RowBox[{"pyrFuncGen", "[", 
    RowBox[{"line1", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrf2", "=", 
   RowBox[{"pyrFuncGen", "[", 
    RowBox[{"line2", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrf12", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pyrf1", ",", " ", "pyrf2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], 
      ",", 
      RowBox[{
       RowBox[{"pyrf12", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "30"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.836396648130644*^9, 3.8363967311993866`*^9}, {
   3.8363988295079536`*^9, 3.836398880510977*^9}, 3.836399230446312*^9, {
   3.8400672559952717`*^9, 3.840067257876457*^9}, {3.8402800634269857`*^9, 
   3.8402800643649364`*^9}, {3.8414155445057583`*^9, 3.841415555839461*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"984b118d-0285-4cf5-b45c-d8a67865e6d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"e", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", " ", "v2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.", ",", "0."}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.841421704266697*^9, {3.8414957041230865`*^9, 3.841495704356286*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"3b855824-91c0-4460-87ea-30ed817997ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"status", "=", "\"\<ok\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "29"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8363961378588843`*^9, {3.8363967443857393`*^9, 3.8363967528759184`*^9}, {
   3.8363968389271307`*^9, 3.8363968394458265`*^9}, 3.8363986080928793`*^9, {
   3.8363995877529974`*^9, 3.8363995880494523`*^9}, {3.8401892506832857`*^9, 
   3.840189256145101*^9}, {3.8414205530587683`*^9, 3.841420555537114*^9}, {
   3.841421701151369*^9, 3.8414217062989163`*^9}, {3.841494914608543*^9, 
   3.8414949148711205`*^9}, {3.8414949974106092`*^9, 3.841495003280137*^9}, {
   3.8414950360073423`*^9, 3.841495052139716*^9}, {3.841495648272976*^9, 
   3.841495648780391*^9}, {3.8414957021201134`*^9, 3.84149570790444*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"e8a19c3b-7ce4-41c9-9e2b-b6be0c488e6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
  RowBox[{"PyrUpgrade1D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", "p", ",",
     " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}], ",", 
    RowBox[{"0.0001", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8363967651550703`*^9, 3.8363968130279603`*^9}, {
   3.836396853335551*^9, 3.8363968558471217`*^9}, {3.836398527992988*^9, 
   3.836398541330168*^9}, {3.836399044228342*^9, 3.8363990495392766`*^9}, {
   3.836399208159257*^9, 3.8363992132916665`*^9}, {3.8400458463150663`*^9, 
   3.8400458889085207`*^9}, 3.8400459372136974`*^9, {3.8400459743200526`*^9, 
   3.840045979480372*^9}, {3.840189232799335*^9, 3.840189243506825*^9}, 
   3.8402145895445347`*^9, 3.8402800323364515`*^9, 3.840280121570874*^9, 
   3.840280181640683*^9, {3.840280221138157*^9, 3.8402802307424874`*^9}, {
   3.840280262614027*^9, 3.840280329574231*^9}, 3.840548072388741*^9, {
   3.841415635193651*^9, 3.84141565117542*^9}, {3.841420558779669*^9, 
   3.8414205625977297`*^9}, 3.841421713825859*^9, {3.841422551816333*^9, 
   3.841422562029774*^9}, {3.84142260001057*^9, 3.8414226182912865`*^9}, {
   3.841494943662859*^9, 3.8414949763558655`*^9}, {3.841495012247484*^9, 
   3.8414951272061305`*^9}, 3.841495404467531*^9, {3.8414956530223475`*^9, 
   3.8414957571064687`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"8e2e9166-e587-42d9-a494-f7bdc0bc8ffa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        InterpretationBox[
         RowBox[{
          TagBox["InterpolatingFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {
           BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., -0.000018135344647783838`, 
             0.00003627068929556768, -0.00005440603394335153, 
             0.00020402262728756815`, -0.0007616844752069206, 
             0.0028427152735401133`, -0.010609176618953532`, 
             0.039593991202274005`, -0.14776678819014247`, 
             1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
             0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
             0.9604596456912967, 1.1477560608377504`, -0.14776678829393702`, 
             0.03959399158963809, -0.010609178064615322`, 
             0.002842720668823196, -0.0007617046106774622, 
             0.00020409777388665336`, -0.00005468648486915114, 
             0.00001464816558995113, -3.906177490653622*^-6, 
             2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1., 
            1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11.,
             12., 12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
            18., 19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
            28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
            "Unevaluated"], {}}, {Automatic}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"findPrevNext", "[", 
          RowBox[{"29", ",", 
           RowBox[{"{", 
            RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            InterpretationBox[
             RowBox[{
              TagBox["InterpolatingFunction",
               "SummaryHead"], "[", 
              
              DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ =
                "Ready"}, 
               TemplateBox[{
                 PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                  Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                "SummaryPanel"],
               DynamicModuleValues:>{}], "]"}],
             
             InterpolatingFunction[{{1., 30.}}, {
              5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{
              1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 
              15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27.,
               28., 29., 30.}}, {
               BSplineFunction[
               1, {{1., 30.}}, {3}, {
                False}, {{0., -0.000018135344647783838`, 
                 0.00003627068929556768, -0.00005440603394335153, 
                 0.00020402262728756815`, -0.0007616844752069206, 
                 0.0028427152735401133`, -0.010609176618953532`, 
                 0.039593991202274005`, -0.14776678819014247`, 
                 1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
                 0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                 0.9604596456912967, 
                 1.1477560608377504`, -0.14776678829393702`, 
                 0.03959399158963809, -0.010609178064615322`, 
                 0.002842720668823196, -0.0007617046106774622, 
                 0.00020409777388665336`, -0.00005468648486915114, 
                 0.00001464816558995113, -3.906177490653622*^-6, 
                 2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{
                1., 1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 
                10., 11., 12., 12.999999999999998`, 14., 15., 
                15.999999999999998`, 17., 18., 19., 20., 21., 22., 23., 24., 
                25., 26., 26.999999999999996`, 28., 30., 30., 30., 30.}}, {0},
                 MachinePrecision, "Unevaluated"], {}}, {Automatic}],
             Editable->False,
             SelectWithContents->True,
             Selectable->False], "[", 
            RowBox[{"findPrevNext", "[", 
             RowBox[{"29", ",", 
              RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}]}], "-", 
          RowBox[{
           InterpretationBox[
            RowBox[{
             TagBox["InterpolatingFunction",
              "SummaryHead"], "[", 
             
             DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
              "Ready"}, 
              TemplateBox[{
                PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`open$$], ImageSize -> Automatic]},
               "SummaryPanel"],
              DynamicModuleValues:>{}], "]"}],
            
            InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
              BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
                0.000014578052858501286`, -0.00005466769821937979, 
                0.00020409274001901775`, -0.0007617032618566911, 
                0.002842720307407746, -0.01060917796777429, 
                0.03959399156368942, -0.14776678828698334`, 
                1.1477560608358834`, 0.9604596456918059, 1.0104053563968929`, 
                0.9979189287206217, 0.9979189287206212, 1.0104053563968936`, 
                0.9604596456918056, 1.1477560608358846`, -0.1477667882869834, 
                0.03959399156368942, -0.01060917796777429, 
                0.002842720307407745, -0.0007617032618566907, 
                0.00020409274001901762`, -0.00005466769821937946, 
                0.00001457805285850114, -9.718701905667422*^-6, 
                4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
               3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
               12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 
               19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
               28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
               "Unevaluated"], {}}, {Automatic}],
            Editable->False,
            SelectWithContents->True,
            Selectable->False], "[", 
           RowBox[{"findPrevNext", "[", 
            RowBox[{"29", ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}]}], ")"}]}]}],
       ")"}], "/", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{1., 30.}}, {
        5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 2., 
        3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 17., 
        18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.}}, {
         BSplineFunction[
         1, {{1., 30.}}, {3}, {
          False}, {{0., -0.000018135344647783838`, 
           0.00003627068929556768, -0.00005440603394335153, 
           0.00020402262728756815`, -0.0007616844752069206, 
           0.0028427152735401133`, -0.010609176618953532`, 
           0.039593991202274005`, -0.14776678819014247`, 1.1477560608099362`, 
           0.960459645698759, 1.0104053563950277`, 0.99791892872113, 
           0.997918928720452, 1.0104053563970625`, 0.9604596456912967, 
           1.1477560608377504`, -0.14776678829393702`, 
           0.03959399158963809, -0.010609178064615322`, 
           0.002842720668823196, -0.0007617046106774622, 
           0.00020409777388665336`, -0.00005468648486915114, 
           0.00001464816558995113, -3.906177490653622*^-6, 
           2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1., 1., 
          1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
          12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19., 
          20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30., 
          30., 30., 30.}}, {1}, MachinePrecision, "Unevaluated"], {}}, {
        Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"findPrevNext", "[", 
        RowBox[{"29", ",", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}]}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           InterpretationBox[
            RowBox[{
             TagBox["InterpolatingFunction",
              "SummaryHead"], "[", 
             
             DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
              "Ready"}, 
              TemplateBox[{
                PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`open$$], ImageSize -> Automatic]},
               "SummaryPanel"],
              DynamicModuleValues:>{}], "]"}],
            
            InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
              BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., -0.000018135344647783838`, 
                0.00003627068929556768, -0.00005440603394335153, 
                0.00020402262728756815`, -0.0007616844752069206, 
                0.0028427152735401133`, -0.010609176618953532`, 
                0.039593991202274005`, -0.14776678819014247`, 
                1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
                0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                0.9604596456912967, 
                1.1477560608377504`, -0.14776678829393702`, 
                0.03959399158963809, -0.010609178064615322`, 
                0.002842720668823196, -0.0007617046106774622, 
                0.00020409777388665336`, -0.00005468648486915114, 
                0.00001464816558995113, -3.906177490653622*^-6, 
                2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1.,
                1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 
               11., 12., 12.999999999999998`, 14., 15., 15.999999999999998`, 
               17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
               MachinePrecision, "Unevaluated"], {}}, {Automatic}],
            Editable->False,
            SelectWithContents->True,
            Selectable->False], "[", 
           RowBox[{"findPrevNext", "[", 
            RowBox[{"29", ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}], "+", 
          RowBox[{
           InterpretationBox[
            RowBox[{
             TagBox["InterpolatingFunction",
              "SummaryHead"], "[", 
             
             DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
              "Ready"}, 
              TemplateBox[{
                PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`open$$], ImageSize -> Automatic]},
               "SummaryPanel"],
              DynamicModuleValues:>{}], "]"}],
            
            InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
              BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
                0.000014578052858501286`, -0.00005466769821937979, 
                0.00020409274001901775`, -0.0007617032618566911, 
                0.002842720307407746, -0.01060917796777429, 
                0.03959399156368942, -0.14776678828698334`, 
                1.1477560608358834`, 0.9604596456918059, 1.0104053563968929`, 
                0.9979189287206217, 0.9979189287206212, 1.0104053563968936`, 
                0.9604596456918056, 1.1477560608358846`, -0.1477667882869834, 
                0.03959399156368942, -0.01060917796777429, 
                0.002842720307407745, -0.0007617032618566907, 
                0.00020409274001901762`, -0.00005466769821937946, 
                0.00001457805285850114, -9.718701905667422*^-6, 
                4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
               3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
               12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 
               19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
               28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
               "Unevaluated"], {}}, {Automatic}],
            Editable->False,
            SelectWithContents->True,
            Selectable->False], "[", 
           RowBox[{"findPrevNext", "[", 
            RowBox[{"29", ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
       "-", 
       RowBox[{
        InterpretationBox[
         RowBox[{
          TagBox["InterpolatingFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {
           BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
             0.000014578052858501286`, -0.00005466769821937979, 
             0.00020409274001901775`, -0.0007617032618566911, 
             0.002842720307407746, -0.01060917796777429, 
             0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`, 
             0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
             0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
             1.1477560608358846`, -0.1477667882869834, 
             0.03959399156368942, -0.01060917796777429, 
             0.002842720307407745, -0.0007617032618566907, 
             0.00020409274001901762`, -0.00005466769821937946, 
             0.00001457805285850114, -9.718701905667422*^-6, 
             4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
            3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
            12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19.,
             20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30.,
             30., 30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
          Automatic}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"findPrevNext", "[", 
          RowBox[{"29", ",", 
           RowBox[{"{", 
            RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}]}], ")"}], 
     "/", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], "SummaryItem"]
                    }]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{1., 30.}}, {
        5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 2., 
        3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 17., 
        18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.}}, {
         BSplineFunction[
         1, {{1., 30.}}, {3}, {
          False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
           0.000014578052858501286`, -0.00005466769821937979, 
           0.00020409274001901775`, -0.0007617032618566911, 
           0.002842720307407746, -0.01060917796777429, 
           0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`, 
           0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
           0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
           1.1477560608358846`, -0.1477667882869834, 
           0.03959399156368942, -0.01060917796777429, 
           0.002842720307407745, -0.0007617032618566907, 
           0.00020409274001901762`, -0.00005466769821937946, 
           0.00001457805285850114, -9.718701905667422*^-6, 
           4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
          3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
          12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19., 
          20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30., 
          30., 30., 30.}}, {1}, MachinePrecision, "Unevaluated"], {}}, {
        Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"findPrevNext", "[", 
        RowBox[{"29", ",", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}]}]}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                RowBox[{
                 TagBox["InterpolatingFunction",
                  "SummaryHead"], "[", 
                 
                 DynamicModuleBox[{Typeset`open$$ = False, 
                  Typeset`embedState$$ = "Ready"}, 
                  TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                   "SummaryPanel"],
                  DynamicModuleValues:>{}], "]"}],
                
                InterpolatingFunction[{{1., 30.}}, {
                 5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12.,
                  13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 
                 25., 26., 27., 28., 29., 30.}}, {
                  BSplineFunction[
                  1, {{1., 30.}}, {3}, {
                   False}, {{0., -0.000018135344647783838`, 
                    0.00003627068929556768, -0.00005440603394335153, 
                    0.00020402262728756815`, -0.0007616844752069206, 
                    0.0028427152735401133`, -0.010609176618953532`, 
                    0.039593991202274005`, -0.14776678819014247`, 
                    1.1477560608099362`, 0.960459645698759, 
                    1.0104053563950277`, 0.99791892872113, 0.997918928720452, 
                    1.0104053563970625`, 0.9604596456912967, 
                    1.1477560608377504`, -0.14776678829393702`, 
                    0.03959399158963809, -0.010609178064615322`, 
                    0.002842720668823196, -0.0007617046106774622, 
                    0.00020409777388665336`, -0.00005468648486915114, 
                    0.00001464816558995113, -3.906177490653622*^-6, 
                    2.604118327102413*^-6, -1.302059163551204*^-6, 
                    0.}, {}}, {{1., 1., 1., 1., 3., 3.9999999999999996`, 5., 
                   6., 7., 8., 9., 10., 11., 12., 12.999999999999998`, 14., 
                   15., 15.999999999999998`, 17., 18., 19., 20., 21., 22., 
                   23., 24., 25., 26., 26.999999999999996`, 28., 30., 30., 
                   30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
                 Automatic}],
                Editable->False,
                SelectWithContents->True,
                Selectable->False], "[", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"findPrevNext", "[", 
                 RowBox[{"29", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                    
                    InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., -0.000018135344647783838`, 
                    0.00003627068929556768, -0.00005440603394335153, 
                    0.00020402262728756815`, -0.0007616844752069206, 
                    0.0028427152735401133`, -0.010609176618953532`, 
                    0.039593991202274005`, -0.14776678819014247`, 
                    1.1477560608099362`, 0.960459645698759, 
                    1.0104053563950277`, 0.99791892872113, 0.997918928720452, 
                    1.0104053563970625`, 0.9604596456912967, 
                    1.1477560608377504`, -0.14776678829393702`, 
                    0.03959399158963809, -0.010609178064615322`, 
                    0.002842720668823196, -0.0007617046106774622, 
                    0.00020409777388665336`, -0.00005468648486915114, 
                    0.00001464816558995113, -3.906177490653622*^-6, 
                    2.604118327102413*^-6, -1.302059163551204*^-6, 
                    0.}, {}}, {{1., 1., 1., 1., 3., 3.9999999999999996`, 5., 
                    6., 7., 8., 9., 10., 11., 12., 12.999999999999998`, 14., 
                    15., 15.999999999999998`, 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 26.999999999999996`, 28., 30., 30., 
                    30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
                    Automatic}],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], "[", 
                   RowBox[{"findPrevNext", "[", 
                    RowBox[{"29", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}]}], "-", 
                 RowBox[{
                  InterpretationBox[
                   RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                   
                   InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., 
                    4.859350952833761*^-6, -9.718701905667522*^-6, 
                    0.000014578052858501286`, -0.00005466769821937979, 
                    0.00020409274001901775`, -0.0007617032618566911, 
                    0.002842720307407746, -0.01060917796777429, 
                    0.03959399156368942, -0.14776678828698334`, 
                    1.1477560608358834`, 0.9604596456918059, 
                    1.0104053563968929`, 0.9979189287206217, 
                    0.9979189287206212, 1.0104053563968936`, 
                    0.9604596456918056, 
                    1.1477560608358846`, -0.1477667882869834, 
                    0.03959399156368942, -0.01060917796777429, 
                    0.002842720307407745, -0.0007617032618566907, 
                    0.00020409274001901762`, -0.00005466769821937946, 
                    0.00001457805285850114, -9.718701905667422*^-6, 
                    4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
                    3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
                    12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
                    18., 19., 20., 21., 22., 23., 24., 25., 26., 
                    26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                   Editable->False,
                   SelectWithContents->True,
                   Selectable->False], "[", 
                  RowBox[{"findPrevNext", "[", 
                   RowBox[{"29", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}]}], 
                ")"}]}]}], ")"}], "/", 
            RowBox[{
             InterpretationBox[
              RowBox[{
               TagBox["InterpolatingFunction",
                "SummaryHead"], "[", 
               
               DynamicModuleBox[{Typeset`open$$ = False, 
                Typeset`embedState$$ = "Ready"}, 
                TemplateBox[{
                  PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                   Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                 "SummaryPanel"],
                DynamicModuleValues:>{}], "]"}],
              
              InterpolatingFunction[{{1., 30.}}, {
               5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{
               1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 
               15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               27., 28., 29., 30.}}, {
                BSplineFunction[
                1, {{1., 30.}}, {3}, {
                 False}, {{0., -0.000018135344647783838`, 
                  0.00003627068929556768, -0.00005440603394335153, 
                  0.00020402262728756815`, -0.0007616844752069206, 
                  0.0028427152735401133`, -0.010609176618953532`, 
                  0.039593991202274005`, -0.14776678819014247`, 
                  1.1477560608099362`, 0.960459645698759, 1.0104053563950277`,
                   0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                  0.9604596456912967, 
                  1.1477560608377504`, -0.14776678829393702`, 
                  0.03959399158963809, -0.010609178064615322`, 
                  0.002842720668823196, -0.0007617046106774622, 
                  0.00020409777388665336`, -0.00005468648486915114, 
                  0.00001464816558995113, -3.906177490653622*^-6, 
                  2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{
                 1., 1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 
                 10., 11., 12., 12.999999999999998`, 14., 15., 
                 15.999999999999998`, 17., 18., 19., 20., 21., 22., 23., 24., 
                 25., 26., 26.999999999999996`, 28., 30., 30., 30., 30.}}, {
                 1}, MachinePrecision, "Unevaluated"], {}}, {Automatic}],
              Editable->False,
              SelectWithContents->True,
              Selectable->False], "[", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{"findPrevNext", "[", 
               RowBox[{"29", ",", 
                RowBox[{"{", 
                 RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}]}], 
           "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  InterpretationBox[
                   RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                   
                   InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., -0.000018135344647783838`, 
                    0.00003627068929556768, -0.00005440603394335153, 
                    0.00020402262728756815`, -0.0007616844752069206, 
                    0.0028427152735401133`, -0.010609176618953532`, 
                    0.039593991202274005`, -0.14776678819014247`, 
                    1.1477560608099362`, 0.960459645698759, 
                    1.0104053563950277`, 0.99791892872113, 0.997918928720452, 
                    1.0104053563970625`, 0.9604596456912967, 
                    1.1477560608377504`, -0.14776678829393702`, 
                    0.03959399158963809, -0.010609178064615322`, 
                    0.002842720668823196, -0.0007617046106774622, 
                    0.00020409777388665336`, -0.00005468648486915114, 
                    0.00001464816558995113, -3.906177490653622*^-6, 
                    2.604118327102413*^-6, -1.302059163551204*^-6, 
                    0.}, {}}, {{1., 1., 1., 1., 3., 3.9999999999999996`, 5., 
                    6., 7., 8., 9., 10., 11., 12., 12.999999999999998`, 14., 
                    15., 15.999999999999998`, 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 26.999999999999996`, 28., 30., 30., 
                    30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
                    Automatic}],
                   Editable->False,
                   SelectWithContents->True,
                   Selectable->False], "[", 
                  RowBox[{"findPrevNext", "[", 
                   RowBox[{"29", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}], "+", 
                 RowBox[{
                  InterpretationBox[
                   RowBox[{
                    TagBox["InterpolatingFunction",
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                    "SummaryPanel"],
                    DynamicModuleValues:>{}], "]"}],
                   
                   InterpolatingFunction[{{1., 30.}}, {
                    5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                    False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 
                    12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 
                    23., 24., 25., 26., 27., 28., 29., 30.}}, {
                    BSplineFunction[
                    1, {{1., 30.}}, {3}, {
                    False}, {{0., 
                    4.859350952833761*^-6, -9.718701905667522*^-6, 
                    0.000014578052858501286`, -0.00005466769821937979, 
                    0.00020409274001901775`, -0.0007617032618566911, 
                    0.002842720307407746, -0.01060917796777429, 
                    0.03959399156368942, -0.14776678828698334`, 
                    1.1477560608358834`, 0.9604596456918059, 
                    1.0104053563968929`, 0.9979189287206217, 
                    0.9979189287206212, 1.0104053563968936`, 
                    0.9604596456918056, 
                    1.1477560608358846`, -0.1477667882869834, 
                    0.03959399156368942, -0.01060917796777429, 
                    0.002842720307407745, -0.0007617032618566907, 
                    0.00020409274001901762`, -0.00005466769821937946, 
                    0.00001457805285850114, -9.718701905667422*^-6, 
                    4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
                    3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
                    12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
                    18., 19., 20., 21., 22., 23., 24., 25., 26., 
                    26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
                    MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                   Editable->False,
                   SelectWithContents->True,
                   Selectable->False], "[", 
                  RowBox[{"findPrevNext", "[", 
                   RowBox[{"29", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}], "]"}]}], 
                ")"}]}], "-", 
              RowBox[{
               InterpretationBox[
                RowBox[{
                 TagBox["InterpolatingFunction",
                  "SummaryHead"], "[", 
                 
                 DynamicModuleBox[{Typeset`open$$ = False, 
                  Typeset`embedState$$ = "Ready"}, 
                  TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                   "SummaryPanel"],
                  DynamicModuleValues:>{}], "]"}],
                
                InterpolatingFunction[{{1., 30.}}, {
                 5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, {{1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12.,
                  13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 
                 25., 26., 27., 28., 29., 30.}}, {
                  BSplineFunction[
                  1, {{1., 30.}}, {3}, {
                   False}, {{0., 
                    4.859350952833761*^-6, -9.718701905667522*^-6, 
                    0.000014578052858501286`, -0.00005466769821937979, 
                    0.00020409274001901775`, -0.0007617032618566911, 
                    0.002842720307407746, -0.01060917796777429, 
                    0.03959399156368942, -0.14776678828698334`, 
                    1.1477560608358834`, 0.9604596456918059, 
                    1.0104053563968929`, 0.9979189287206217, 
                    0.9979189287206212, 1.0104053563968936`, 
                    0.9604596456918056, 
                    1.1477560608358846`, -0.1477667882869834, 
                    0.03959399156368942, -0.01060917796777429, 
                    0.002842720307407745, -0.0007617032618566907, 
                    0.00020409274001901762`, -0.00005466769821937946, 
                    0.00001457805285850114, -9.718701905667422*^-6, 
                    4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
                   3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
                   12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
                   18., 19., 20., 21., 22., 23., 24., 25., 26., 
                   26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
                   MachinePrecision, "Unevaluated"], {}}, {Automatic}],
                Editable->False,
                SelectWithContents->True,
                Selectable->False], "[", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"findPrevNext", "[", 
                 RowBox[{"29", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}]}], 
             ")"}], "/", 
            RowBox[{
             InterpretationBox[
              RowBox[{
               TagBox["InterpolatingFunction",
                "SummaryHead"], "[", 
               
               DynamicModuleBox[{Typeset`open$$ = False, 
                Typeset`embedState$$ = "Ready"}, 
                TemplateBox[{
                  PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                    GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                   Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                 "SummaryPanel"],
                DynamicModuleValues:>{}], "]"}],
              
              InterpolatingFunction[{{1., 30.}}, {
               5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{
               1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 
               15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               27., 28., 29., 30.}}, {
                BSplineFunction[
                1, {{1., 30.}}, {3}, {
                 False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
                  0.000014578052858501286`, -0.00005466769821937979, 
                  0.00020409274001901775`, -0.0007617032618566911, 
                  0.002842720307407746, -0.01060917796777429, 
                  0.03959399156368942, -0.14776678828698334`, 
                  1.1477560608358834`, 0.9604596456918059, 
                  1.0104053563968929`, 0.9979189287206217, 0.9979189287206212,
                   1.0104053563968936`, 0.9604596456918056, 
                  1.1477560608358846`, -0.1477667882869834, 
                  0.03959399156368942, -0.01060917796777429, 
                  0.002842720307407745, -0.0007617032618566907, 
                  0.00020409274001901762`, -0.00005466769821937946, 
                  0.00001457805285850114, -9.718701905667422*^-6, 
                  4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
                 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
                 12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18.,
                  19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`,
                  28., 30., 30., 30., 30.}}, {1}, MachinePrecision, 
                 "Unevaluated"], {}}, {Automatic}],
              Editable->False,
              SelectWithContents->True,
              Selectable->False], "[", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{"findPrevNext", "[", 
               RowBox[{"29", ",", 
                RowBox[{"{", 
                 RowBox[{"0.`", ",", "0.`"}], "}"}]}], "]"}]}], "]"}]}], 
           "]"}], "2"]}], ")"}]}], "<", "0.001`"}], ",", "\<\"converged\"\>", 
     ",", "\<\"oksign\"\>"}], "]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8414156554939027`*^9, 3.84142053345161*^9, {3.841420566126131*^9, 
   3.841420592642033*^9}, {3.8414217101769457`*^9, 3.8414217208260126`*^9}, {
   3.8414217886787863`*^9, 3.8414217908745065`*^9}, {3.8414218374216456`*^9, 
   3.8414218404737806`*^9}, 3.841422193549958*^9, 3.841422369423221*^9, {
   3.841422555598628*^9, 3.841422600550825*^9}, 3.841486551512663*^9, {
   3.841494731431017*^9, 3.8414947400689754`*^9}, {3.8414949026674156`*^9, 
   3.8414951293511095`*^9}, {3.8414952012623777`*^9, 
   3.8414952364649267`*^9}, {3.841495279715594*^9, 3.841495299313695*^9}, {
   3.8414953442970905`*^9, 3.841495367530304*^9}, {3.8414953994687734`*^9, 
   3.8414954174916353`*^9}, {3.8414956536799145`*^9, 3.8414957618058414`*^9}, 
   3.841508135435054*^9, 3.8427053372457*^9, 3.843050633112073*^9, 
   3.8430508036420884`*^9, 3.8430508962116547`*^9, 3.843059839113789*^9, 
   3.8430717849199924`*^9, 3.843142386467298*^9, 3.8431517374156237`*^9, 
   3.8431565147275352`*^9, 3.843237142829774*^9, 3.843238064090246*^9, 
   3.8433181906885557`*^9, 3.843321817389622*^9, 3.8433228982109346`*^9, 
   3.843325476923749*^9, 3.843327017129518*^9, 3.843327985241172*^9, 
   3.843585059236164*^9, 3.8435851373426647`*^9, 3.843585593103587*^9, 
   3.84358943883317*^9, 3.8435897397034187`*^9, 3.843590421734008*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"1d0f1e37-8905-4b81-82cc-eced704d0412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"seeplot", "[", 
   RowBox[{"p", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", "n", "]"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8363983430106754`*^9, 3.8363983604496603`*^9}, {
   3.8363989657393045`*^9, 3.8363989940990686`*^9}, {3.836399252495593*^9, 
   3.836399458153307*^9}, 3.840214598251926*^9, 3.8402801272137938`*^9, {
   3.8402801885832624`*^9, 3.840280253201376*^9}, {3.840280283420054*^9, 
   3.8402803342978687`*^9}, 3.84054808258837*^9, 3.841415643451585*^9, 
   3.841495732138626*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"98c7f0d8-9bb8-43a4-9b19-323d9cc80ddb"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$228083#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
vMA9LxJsZP77YFKdgT4/8Eg+50uClL2Z5RW7cb8UWVxrxV5x35OYu52BOF+f
VVT3I0EfoQ5x9824/qs8n7Vuk+ArsvmQ2fQyCtGmyhr6k2Dcwa4c/sxlJLT1
e7/NXRLcv6465cm6jGQPjj+bxu56eejruVWcp6ff3HYIxvmm9zZ6eHQJudok
C18LIcHYU3uOq1UtoVf1ch6uYfh+f9fjZGy5hKy8vbkDI0nwPT06MvvpInKN
vTS7KQrniezH6O7YRRSap/YyGPtPnPnpN16LqKRvj214NL4vvcxJPKqLaEPq
RWVsLL7vOXIj5KcWUNrcT72MRBKEmfLV/3YuoEEz3/jaNPz54eTNF4Wa84hb
0bpWJp0E1T6PiM5KzSM9ofPTxdjjlQnJzDzzqOsLr0LWIxLkMrmy0PEB32d+
FRPBmSTIIqkd2u04h8oy5k5o5+B+5h3U6Q+YReGTxl0TBSRYyu85cTV5Bik4
ymxnrSHBGM5C8YWgSZQtmVg3/J4E7XJn+dsC6MjxP72nZiMkmDxQ02+rQEcy
DK74EWyZ1zSDA6u9qLU8xnb0Awkejzov8MWmFy3JRGz/OEaCu8ZcKbvO9yAS
EWg6O4nPy+zevMcyHYiuev3b+jwJPmx9vfdCXRNKPyo57vWFBN1Juy2MFJqQ
Hdti6w/s2opTXV3VjehHm2P6rwVcvyPckoJlr9BBbfszf5fwfaxvJvTFoB45
GljEb/mK80fp5JMJFxradFlDgvs3fl7hDQWV31noGyebcxR2OlmgjOtxBpp9
2VLE8gf3nwkTL0UvDXXvURb/hp2+yyKotOE+Su+RFxv4S4KX+szLRy76Izko
cixlEwG/MEfMje+IB04CzML87ATU0hOnH4gpBVadyPY+tsBDi9tr7mVAz9cv
d8d2Asoisc1PD5UDhcHvQhvYu993jHh4VQDW2KXDYxwErBCRi+rmrgZZf0cE
s3YScGeznvJevhrQP0rlP7KXgBw1zrbpma9A+mHjwDzsIkbNm4G5V8DW4fv0
0X0EJIn8yHOUbgSrDLlSif0E9Pi5A2W9bgRcLC+U5A4QME/1WJz+eBPQPF5r
r36IgEHR7j2U9WbAfd28vQM7IcanUU22BYxU/j6hc5iArmdTm6o8WoAjhfxT
XwiPp7IyWL7aAsJ06yIthAnoHR4aoTX9BjR61pfdOEbAHtkkIY/ityCi1orn
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
MmUEFGFei8t5Y/c/6H/VBEFM
        "]]},
      Annotation[#, "Charting`Private`Tag$228083#2"]& ]}, {}}, {
    PointBox[{{29, 2.6469779601696886`*^-22}, {
      29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
    PointBox[{{
      29. - InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., -0.000018135344647783838`, 
             0.00003627068929556768, -0.00005440603394335153, 
             0.00020402262728756815`, -0.0007616844752069206, 
             0.0028427152735401133`, -0.010609176618953532`, 
             0.039593991202274005`, -0.14776678819014247`, 
             1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
             0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
             0.9604596456912967, 1.1477560608377504`, -0.14776678829393702`, 
             0.03959399158963809, -0.010609178064615322`, 
             0.002842720668823196, -0.0007617046106774622, 
             0.00020409777388665336`, -0.00005468648486915114, 
             0.00001464816558995113, -3.906177490653622*^-6, 
             2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1., 
            1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11.,
             12., 12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
            18., 19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
            28., 30., 30., 30., 30.}}, {1}, MachinePrecision, 
            "Unevaluated"], {}}, {Automatic}][
         0. + $CellContext`findPrevNext[29, {0., 0.}]]^(-1) (
        InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., -0.000018135344647783838`, 
             0.00003627068929556768, -0.00005440603394335153, 
             0.00020402262728756815`, -0.0007616844752069206, 
             0.0028427152735401133`, -0.010609176618953532`, 
             0.039593991202274005`, -0.14776678819014247`, 
             1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
             0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
             0.9604596456912967, 1.1477560608377504`, -0.14776678829393702`, 
             0.03959399158963809, -0.010609178064615322`, 
             0.002842720668823196, -0.0007617046106774622, 
             0.00020409777388665336`, -0.00005468648486915114, 
             0.00001464816558995113, -3.906177490653622*^-6, 
             2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1., 
            1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11.,
             12., 12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
            18., 19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
            28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
            "Unevaluated"], {}}, {Automatic}][
         0. + $CellContext`findPrevNext[29, {0., 0.}]] + 
        Rational[
          1, 2] (-InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
             BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., -0.000018135344647783838`, 
                0.00003627068929556768, -0.00005440603394335153, 
                0.00020402262728756815`, -0.0007616844752069206, 
                0.0028427152735401133`, -0.010609176618953532`, 
                0.039593991202274005`, -0.14776678819014247`, 
                1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
                0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                0.9604596456912967, 
                1.1477560608377504`, -0.14776678829393702`, 
                0.03959399158963809, -0.010609178064615322`, 
                0.002842720668823196, -0.0007617046106774622, 
                0.00020409777388665336`, -0.00005468648486915114, 
                0.00001464816558995113, -3.906177490653622*^-6, 
                2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1.,
                1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 
               11., 12., 12.999999999999998`, 14., 15., 15.999999999999998`, 
               17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
               MachinePrecision, "Unevaluated"], {}}, {
             Automatic}][$CellContext`findPrevNext[29, {0., 0.}]] - 
          InterpolatingFunction[{{1., 30.}}, {
           5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
           2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
           17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
           30.}}, {BSplineFunction[
            1, {{1., 30.}}, {3}, {
             False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
              0.000014578052858501286`, -0.00005466769821937979, 
              0.00020409274001901775`, -0.0007617032618566911, 
              0.002842720307407746, -0.01060917796777429, 
              0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`,
               0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
              0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
              1.1477560608358846`, -0.1477667882869834, 
              0.03959399156368942, -0.01060917796777429, 
              0.002842720307407745, -0.0007617032618566907, 
              0.00020409274001901762`, -0.00005466769821937946, 
              0.00001457805285850114, -9.718701905667422*^-6, 
              4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
             3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
             12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 
             19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28.,
              30., 30., 30., 30.}}, {0}, MachinePrecision, 
             "Unevaluated"], {}}, {Automatic}][$CellContext`findPrevNext[
           29, {0., 0.}]])), 2.6469779601696886`*^-22}, {
      29. + (Rational[1, 2] (
           InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
             BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., -0.000018135344647783838`, 
                0.00003627068929556768, -0.00005440603394335153, 
                0.00020402262728756815`, -0.0007616844752069206, 
                0.0028427152735401133`, -0.010609176618953532`, 
                0.039593991202274005`, -0.14776678819014247`, 
                1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
                0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                0.9604596456912967, 
                1.1477560608377504`, -0.14776678829393702`, 
                0.03959399158963809, -0.010609178064615322`, 
                0.002842720668823196, -0.0007617046106774622, 
                0.00020409777388665336`, -0.00005468648486915114, 
                0.00001464816558995113, -3.906177490653622*^-6, 
                2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1.,
                1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 
               11., 12., 12.999999999999998`, 14., 15., 15.999999999999998`, 
               17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
               MachinePrecision, "Unevaluated"], {}}, {
             Automatic}][$CellContext`findPrevNext[29, {0., 0.}]] + 
           InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
             BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
                0.000014578052858501286`, -0.00005466769821937979, 
                0.00020409274001901775`, -0.0007617032618566911, 
                0.002842720307407746, -0.01060917796777429, 
                0.03959399156368942, -0.14776678828698334`, 
                1.1477560608358834`, 0.9604596456918059, 1.0104053563968929`, 
                0.9979189287206217, 0.9979189287206212, 1.0104053563968936`, 
                0.9604596456918056, 1.1477560608358846`, -0.1477667882869834, 
                0.03959399156368942, -0.01060917796777429, 
                0.002842720307407745, -0.0007617032618566907, 
                0.00020409274001901762`, -0.00005466769821937946, 
                0.00001457805285850114, -9.718701905667422*^-6, 
                4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
               3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
               12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 
               19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
               28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
               "Unevaluated"], {}}, {Automatic}][$CellContext`findPrevNext[
             29, {0., 0.}]]) - 
         InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
             0.000014578052858501286`, -0.00005466769821937979, 
             0.00020409274001901775`, -0.0007617032618566911, 
             0.002842720307407746, -0.01060917796777429, 
             0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`, 
             0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
             0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
             1.1477560608358846`, -0.1477667882869834, 
             0.03959399156368942, -0.01060917796777429, 
             0.002842720307407745, -0.0007617032618566907, 
             0.00020409274001901762`, -0.00005466769821937946, 
             0.00001457805285850114, -9.718701905667422*^-6, 
             4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
            3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
            12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19.,
             20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30.,
             30., 30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
          Automatic}][0. + $CellContext`findPrevNext[29, {0., 0.}]])/
        InterpolatingFunction[{{1., 30.}}, {
         5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 2.,
          3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 17., 
         18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.}}, {
         BSplineFunction[
          1, {{1., 30.}}, {3}, {
           False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
            0.000014578052858501286`, -0.00005466769821937979, 
            0.00020409274001901775`, -0.0007617032618566911, 
            0.002842720307407746, -0.01060917796777429, 
            0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`, 
            0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
            0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
            1.1477560608358846`, -0.1477667882869834, 
            0.03959399156368942, -0.01060917796777429, 
            0.002842720307407745, -0.0007617032618566907, 
            0.00020409274001901762`, -0.00005466769821937946, 
            0.00001457805285850114, -9.718701905667422*^-6, 
            4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
           3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
           12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19., 
           20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30., 
           30., 30., 30.}}, {1}, MachinePrecision, "Unevaluated"], {}}, {
         Automatic}][0. + $CellContext`findPrevNext[29, {0., 0.}]], 
       2.6469779601696886`*^-22}}], 
    LineBox[{{29, 1.0587911840678754`*^-22}, {29, 4.235164736271502*^-22}}], 
    LineBox[{{
      29. - InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., -0.000018135344647783838`, 
             0.00003627068929556768, -0.00005440603394335153, 
             0.00020402262728756815`, -0.0007616844752069206, 
             0.0028427152735401133`, -0.010609176618953532`, 
             0.039593991202274005`, -0.14776678819014247`, 
             1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
             0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
             0.9604596456912967, 1.1477560608377504`, -0.14776678829393702`, 
             0.03959399158963809, -0.010609178064615322`, 
             0.002842720668823196, -0.0007617046106774622, 
             0.00020409777388665336`, -0.00005468648486915114, 
             0.00001464816558995113, -3.906177490653622*^-6, 
             2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1., 
            1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11.,
             12., 12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
            18., 19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
            28., 30., 30., 30., 30.}}, {1}, MachinePrecision, 
            "Unevaluated"], {}}, {Automatic}][
         0. + $CellContext`findPrevNext[29, {0., 0.}]]^(-1) (
        InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., -0.000018135344647783838`, 
             0.00003627068929556768, -0.00005440603394335153, 
             0.00020402262728756815`, -0.0007616844752069206, 
             0.0028427152735401133`, -0.010609176618953532`, 
             0.039593991202274005`, -0.14776678819014247`, 
             1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
             0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
             0.9604596456912967, 1.1477560608377504`, -0.14776678829393702`, 
             0.03959399158963809, -0.010609178064615322`, 
             0.002842720668823196, -0.0007617046106774622, 
             0.00020409777388665336`, -0.00005468648486915114, 
             0.00001464816558995113, -3.906177490653622*^-6, 
             2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1., 
            1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11.,
             12., 12.999999999999998`, 14., 15., 15.999999999999998`, 17., 
            18., 19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
            28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
            "Unevaluated"], {}}, {Automatic}][
         0. + $CellContext`findPrevNext[29, {0., 0.}]] + 
        Rational[
          1, 2] (-InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
             BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., -0.000018135344647783838`, 
                0.00003627068929556768, -0.00005440603394335153, 
                0.00020402262728756815`, -0.0007616844752069206, 
                0.0028427152735401133`, -0.010609176618953532`, 
                0.039593991202274005`, -0.14776678819014247`, 
                1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
                0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                0.9604596456912967, 
                1.1477560608377504`, -0.14776678829393702`, 
                0.03959399158963809, -0.010609178064615322`, 
                0.002842720668823196, -0.0007617046106774622, 
                0.00020409777388665336`, -0.00005468648486915114, 
                0.00001464816558995113, -3.906177490653622*^-6, 
                2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1.,
                1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 
               11., 12., 12.999999999999998`, 14., 15., 15.999999999999998`, 
               17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
               MachinePrecision, "Unevaluated"], {}}, {
             Automatic}][$CellContext`findPrevNext[29, {0., 0.}]] - 
          InterpolatingFunction[{{1., 30.}}, {
           5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
           2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
           17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
           30.}}, {BSplineFunction[
            1, {{1., 30.}}, {3}, {
             False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
              0.000014578052858501286`, -0.00005466769821937979, 
              0.00020409274001901775`, -0.0007617032618566911, 
              0.002842720307407746, -0.01060917796777429, 
              0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`,
               0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
              0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
              1.1477560608358846`, -0.1477667882869834, 
              0.03959399156368942, -0.01060917796777429, 
              0.002842720307407745, -0.0007617032618566907, 
              0.00020409274001901762`, -0.00005466769821937946, 
              0.00001457805285850114, -9.718701905667422*^-6, 
              4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
             3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
             12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 
             19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28.,
              30., 30., 30., 30.}}, {0}, MachinePrecision, 
             "Unevaluated"], {}}, {Automatic}][$CellContext`findPrevNext[
           29, {0., 0.}]])), 2.6469779601696886`*^-22}, {
      29. + (Rational[1, 2] (
           InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
             BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., -0.000018135344647783838`, 
                0.00003627068929556768, -0.00005440603394335153, 
                0.00020402262728756815`, -0.0007616844752069206, 
                0.0028427152735401133`, -0.010609176618953532`, 
                0.039593991202274005`, -0.14776678819014247`, 
                1.1477560608099362`, 0.960459645698759, 1.0104053563950277`, 
                0.99791892872113, 0.997918928720452, 1.0104053563970625`, 
                0.9604596456912967, 
                1.1477560608377504`, -0.14776678829393702`, 
                0.03959399158963809, -0.010609178064615322`, 
                0.002842720668823196, -0.0007617046106774622, 
                0.00020409777388665336`, -0.00005468648486915114, 
                0.00001464816558995113, -3.906177490653622*^-6, 
                2.604118327102413*^-6, -1.302059163551204*^-6, 0.}, {}}, {{1.,
                1., 1., 1., 3., 3.9999999999999996`, 5., 6., 7., 8., 9., 10., 
               11., 12., 12.999999999999998`, 14., 15., 15.999999999999998`, 
               17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 
               26.999999999999996`, 28., 30., 30., 30., 30.}}, {0}, 
               MachinePrecision, "Unevaluated"], {}}, {
             Automatic}][$CellContext`findPrevNext[29, {0., 0.}]] + 
           InterpolatingFunction[{{1., 30.}}, {
             5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1.,
              2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 
             16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 
             29., 30.}}, {
             BSplineFunction[
              1, {{1., 30.}}, {3}, {
               False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
                0.000014578052858501286`, -0.00005466769821937979, 
                0.00020409274001901775`, -0.0007617032618566911, 
                0.002842720307407746, -0.01060917796777429, 
                0.03959399156368942, -0.14776678828698334`, 
                1.1477560608358834`, 0.9604596456918059, 1.0104053563968929`, 
                0.9979189287206217, 0.9979189287206212, 1.0104053563968936`, 
                0.9604596456918056, 1.1477560608358846`, -0.1477667882869834, 
                0.03959399156368942, -0.01060917796777429, 
                0.002842720307407745, -0.0007617032618566907, 
                0.00020409274001901762`, -0.00005466769821937946, 
                0.00001457805285850114, -9.718701905667422*^-6, 
                4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
               3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
               12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 
               19., 20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 
               28., 30., 30., 30., 30.}}, {0}, MachinePrecision, 
               "Unevaluated"], {}}, {Automatic}][$CellContext`findPrevNext[
             29, {0., 0.}]]) - 
         InterpolatingFunction[{{1., 30.}}, {
          5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
          2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 
          17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 
          30.}}, {BSplineFunction[
           1, {{1., 30.}}, {3}, {
            False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
             0.000014578052858501286`, -0.00005466769821937979, 
             0.00020409274001901775`, -0.0007617032618566911, 
             0.002842720307407746, -0.01060917796777429, 
             0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`, 
             0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
             0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
             1.1477560608358846`, -0.1477667882869834, 
             0.03959399156368942, -0.01060917796777429, 
             0.002842720307407745, -0.0007617032618566907, 
             0.00020409274001901762`, -0.00005466769821937946, 
             0.00001457805285850114, -9.718701905667422*^-6, 
             4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
            3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
            12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19.,
             20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30.,
             30., 30., 30.}}, {0}, MachinePrecision, "Unevaluated"], {}}, {
          Automatic}][0. + $CellContext`findPrevNext[29, {0., 0.}]])/
        InterpolatingFunction[{{1., 30.}}, {
         5, 39, 0, {30}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 2.,
          3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 17., 
         18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.}}, {
         BSplineFunction[
          1, {{1., 30.}}, {3}, {
           False}, {{0., 4.859350952833761*^-6, -9.718701905667522*^-6, 
            0.000014578052858501286`, -0.00005466769821937979, 
            0.00020409274001901775`, -0.0007617032618566911, 
            0.002842720307407746, -0.01060917796777429, 
            0.03959399156368942, -0.14776678828698334`, 1.1477560608358834`, 
            0.9604596456918059, 1.0104053563968929`, 0.9979189287206217, 
            0.9979189287206212, 1.0104053563968936`, 0.9604596456918056, 
            1.1477560608358846`, -0.1477667882869834, 
            0.03959399156368942, -0.01060917796777429, 
            0.002842720307407745, -0.0007617032618566907, 
            0.00020409274001901762`, -0.00005466769821937946, 
            0.00001457805285850114, -9.718701905667422*^-6, 
            4.859350952833703*^-6, 0.}, {}}, {{1., 1., 1., 1., 3., 
           3.9999999999999996`, 5., 6., 7., 8., 9., 10., 11., 12., 
           12.999999999999998`, 14., 15., 15.999999999999998`, 17., 18., 19., 
           20., 21., 22., 23., 24., 25., 26., 26.999999999999996`, 28., 30., 
           30., 30., 30.}}, {1}, MachinePrecision, "Unevaluated"], {}}, {
         Automatic}][0. + $CellContext`findPrevNext[29, {0., 0.}]], 
       2.6469779601696886`*^-22}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{26., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{26, 32}, {-0.000027136284724788233`, 0.000023437061834923364`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8363994047061715`*^9, 3.836399459724824*^9, 3.836408996218149*^9, 
   3.8364876213943233`*^9, 3.83648777209863*^9, 3.8364882341786413`*^9, 
   3.8364887973835387`*^9, {3.8365003914044*^9, 3.8365004188987722`*^9}, 
   3.8366473816767335`*^9, 3.8366690074042096`*^9, 3.8369945055768995`*^9, 
   3.83726100986666*^9, 3.8372610569480944`*^9, 3.8378749390868626`*^9, 
   3.8378775119015665`*^9, 3.8380792988840218`*^9, 3.838079567243162*^9, 
   3.838079956099575*^9, {3.8380804886323404`*^9, 3.838080511253854*^9}, 
   3.838080604284112*^9, 3.83808065008212*^9, 3.838080742917406*^9, 
   3.838080976753101*^9, {3.838740935059939*^9, 3.838740955215637*^9}, 
   3.8387454321141877`*^9, 3.8387455790769596`*^9, 3.838832523436221*^9, 
   3.8388326658831735`*^9, 3.8400444366502047`*^9, 3.8400456435206227`*^9, {
   3.840045894019026*^9, 3.8400459090803604`*^9}, 3.84004594282172*^9, 
   3.840045982188531*^9, 3.8400462278293095`*^9, 3.8400625551589503`*^9, 
   3.8400639372786865`*^9, 3.8400662625623627`*^9, 3.840067266145193*^9, 
   3.840072069709105*^9, 3.840072534489213*^9, 3.840188625508408*^9, 
   3.840189269226495*^9, 3.840189368055908*^9, 3.8401898220088663`*^9, 
   3.8401900403679333`*^9, 3.8402123218486757`*^9, 3.8402138972654905`*^9, 
   3.8402140327176256`*^9, 3.840214329627232*^9, {3.840214593591268*^9, 
   3.8402145988559494`*^9}, {3.8402801106273766`*^9, 
   3.8402801278177643`*^9}, {3.84028016909367*^9, 3.840280253687027*^9}, {
   3.840280284015159*^9, 3.84028034553421*^9}, {3.8402848564283686`*^9, 
   3.84028486593707*^9}, 3.8402850519015665`*^9, 3.840285291400151*^9, 
   3.8402882209896984`*^9, 3.8402918706791353`*^9, 3.8405353198094745`*^9, 
   3.840535378223343*^9, 3.840548028728449*^9, {3.840548066883626*^9, 
   3.840548083213242*^9}, 3.840548934470175*^9, 3.8405490281892023`*^9, 
   3.8405496551427693`*^9, 3.840558927939394*^9, 3.8405590996724405`*^9, 
   3.8405786653003206`*^9, 3.840578974776901*^9, {3.8414156288658667`*^9, 
   3.8414156569026766`*^9}, 3.8414205344869823`*^9, 3.8414205977198954`*^9, 
   3.8414221936050377`*^9, 3.8414225851424303`*^9, 3.8414865515595284`*^9, {
   3.84149490631004*^9, 3.841495085191819*^9}, 3.841495417547021*^9, {
   3.8414956719406624`*^9, 3.841495685199608*^9}, {3.841495724853681*^9, 
   3.841495763154798*^9}, 3.841508135532795*^9, 3.842705337355257*^9, 
   3.8430506332058*^9, 3.843050803735815*^9, 3.843050896321006*^9, 
   3.84305983922314*^9, 3.8430717850293427`*^9, 3.8431423865160093`*^9, 
   3.843151737452515*^9, 3.843156514784943*^9, 3.843237142939123*^9, 
   3.843238064183975*^9, 3.843318190785522*^9, 3.8433218174833508`*^9, 
   3.8433228983046656`*^9, 3.843325477017482*^9, 3.843327017254489*^9, 
   3.843327985350521*^9, 3.8435850592803354`*^9, 3.8435851373935184`*^9, 
   3.8435855931624293`*^9, 3.843589439700591*^9, 3.8435897404847136`*^9, 
   3.8435904220633326`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"a956389d-cec5-42b0-9f19-aefff152afdf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PyrFlow1D", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9},ExpressionUUID->"9476c611-cedb-4e14-b4f1-\
a7f3e4e663c4"],

Cell["\<\
pyrfunctions : all levels of pyramid. {l1,l2,l3,l4,...} or {l1}\
\>", "Text",
 CellChangeTimes->{{3.840190264918742*^9, 
  3.84019029066455*^9}},ExpressionUUID->"dc51e695-7873-4d23-8fd3-\
56cf6235c000"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", " ", "pyrfunctions_", ",", "threshold_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v1", ",", " ", "v2", ",", "c", ",", "d", ",", "dd", ",", "cc", ",", 
        "status", ",", "e"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Length", "[", "pyrfunctions", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v1", ",", " ", "v2", ",", "status", ",", " ", "e"}], "}"}],
          "=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0"}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
           " ", 
           RowBox[{
           "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"e", "<", "2"}], ",", 
             RowBox[{"status", "=", "\"\<ok\>\""}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"iterTable", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], 
               "=", 
               RowBox[{"PyrUpgrade1D", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], 
                 ",", "p0", ",", " ", 
                 RowBox[{"pyrfunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                 RowBox[{"threshold", "*", 
                  RowBox[{"2", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "c"}], "+", "1"}], ")"}]}]}]}], "]"}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
           "iterTable"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", 
            RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}]}], 
       "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PyrFlow1D", "::", "usage"}], "=", 
   "\"\<\nFunction to update values of v1 and v2 over all levels of a \
pyramidal function representation\nwith OverConstrained standards.\nInput\
\[Rule] [i, p0, pyrfunctions, threshold]\nOutput-> {v1, v2, status,e}\ni= \
number of iterations\np0= point of interest\npyrfunctions= list with the \
dimensions of {pyrlvl, number of image(1 or 2), kind of function(f or df)}\n\
where pyrlvl is the pyramidal level\nthreshold= threshold to respect \
magnitude constraint\nv1= Solution of f1\nv2= Solution of f2\nstatus= Status \
of the solution (ok, sign, mag, flip, converged)\ne= Counts the amount of \
times the constraints were not met\n\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.836395257636574*^9, 3.836395272859167*^9}, {
   3.83708196322594*^9, 3.8370820062598658`*^9}, {3.837083182655498*^9, 
   3.8370832734823055`*^9}, {3.8370843532979484`*^9, 
   3.8370843675088606`*^9}, {3.838080701244558*^9, 3.8380807259152684`*^9}, {
   3.838080793823208*^9, 3.8380808755938196`*^9}, {3.8380809401222954`*^9, 
   3.838080942274747*^9}, 3.8380810086446276`*^9, {3.8380816063631763`*^9, 
   3.8380816393331475`*^9}, {3.8380820470151634`*^9, 
   3.8380820558435106`*^9}, {3.8380823886542034`*^9, 
   3.8380824062240515`*^9}, {3.8380824773647776`*^9, 
   3.8380825736331425`*^9}, {3.8380826279050765`*^9, 3.838082713503049*^9}, {
   3.8380828471635237`*^9, 3.8380828901935434`*^9}, {3.83848262336782*^9, 
   3.8384826483396864`*^9}, {3.838483209637656*^9, 3.838483252891429*^9}, {
   3.83848337672888*^9, 3.838483389713195*^9}, 3.8384834622891912`*^9, {
   3.838483925470047*^9, 3.838483959825934*^9}, 3.8384839932092*^9, {
   3.8384840245223246`*^9, 3.83848406745443*^9}, {3.8384841090878415`*^9, 
   3.838484119135103*^9}, {3.8384842940787163`*^9, 3.8384842965189843`*^9}, {
   3.838484331536871*^9, 3.838484376855281*^9}, {3.8384844316993575`*^9, 
   3.8384844364710684`*^9}, {3.838484472533862*^9, 3.838484496768239*^9}, {
   3.838484653516262*^9, 3.8384846980991325`*^9}, 3.8384847407136316`*^9, {
   3.838484789836351*^9, 3.838484836358838*^9}, {3.838485707284088*^9, 
   3.838485708317006*^9}, {3.838745304433283*^9, 3.838745304748513*^9}, 
   3.8387454287233124`*^9, {3.838745566958905*^9, 3.838745572968202*^9}, {
   3.838832480835082*^9, 3.8388324858883576`*^9}, 3.838832662601839*^9, 
   3.8400444674100447`*^9, {3.840044657898258*^9, 3.840044675080756*^9}, {
   3.840044792234081*^9, 3.8400448028818226`*^9}, {3.840045382891678*^9, 
   3.8400454107116804`*^9}, {3.8400457742282677`*^9, 3.840045782682536*^9}, {
   3.840046004923623*^9, 3.840046009099416*^9}, 3.8400460619888587`*^9, {
   3.8400460949919004`*^9, 3.84004610011978*^9}, {3.8400461438186865`*^9, 
   3.8400461690448275`*^9}, {3.8400536215227985`*^9, 
   3.8400536593035183`*^9}, {3.840053705946847*^9, 3.840053723757249*^9}, {
   3.8400537835503826`*^9, 3.8400538050647817`*^9}, {3.8400538490526533`*^9, 
   3.840053877267029*^9}, {3.840054015361252*^9, 3.840054050881156*^9}, 
   3.8400541211876483`*^9, {3.840054841363824*^9, 3.840054842590229*^9}, {
   3.8400548774584274`*^9, 3.8400548954699373`*^9}, 3.840062489108899*^9, {
   3.8400625230755796`*^9, 3.8400625357077594`*^9}, {3.840062608567613*^9, 
   3.840062609225909*^9}, 3.840064282796586*^9, {3.840064347610565*^9, 
   3.8400643514241934`*^9}, {3.840064435863537*^9, 3.840064436038506*^9}, {
   3.840066248372734*^9, 3.8400662514900155`*^9}, {3.8400664641163483`*^9, 
   3.8400664688160753`*^9}, 3.8400666848661065`*^9, {3.8400668057053223`*^9, 
   3.8400668205868874`*^9}, {3.8400669375243015`*^9, 3.840067029056565*^9}, {
   3.8400670665699735`*^9, 3.8400670668913956`*^9}, {3.8400673521968985`*^9, 
   3.840067373037039*^9}, {3.8400674925370984`*^9, 3.840067499815276*^9}, {
   3.8400676885764246`*^9, 3.8400676914667573`*^9}, {3.840067767866358*^9, 
   3.840067799215399*^9}, {3.8400678334141483`*^9, 3.840067834605913*^9}, {
   3.8400678737948313`*^9, 3.840067881587015*^9}, {3.840067987954644*^9, 
   3.840067988566532*^9}, {3.8400687429367623`*^9, 3.8400688146563964`*^9}, 
   3.8400688885471363`*^9, {3.8400690624252715`*^9, 3.8400690763966675`*^9}, {
   3.840069180186268*^9, 3.84006918878432*^9}, {3.8400699684665527`*^9, 
   3.840070030673232*^9}, {3.840070069194943*^9, 3.840070130021838*^9}, {
   3.8400702050033846`*^9, 3.840070295059636*^9}, {3.8400703424521255`*^9, 
   3.8400703701890373`*^9}, {3.840070536126915*^9, 3.840070543162916*^9}, {
   3.8400707194066267`*^9, 3.840070723381528*^9}, {3.840071016027475*^9, 
   3.840071035148421*^9}, 3.840071082957506*^9, {3.8400711294374886`*^9, 
   3.8400712078568583`*^9}, {3.8400720622403393`*^9, 3.840072062449636*^9}, {
   3.8400725161957693`*^9, 3.8400725194734535`*^9}, {3.840190301254188*^9, 
   3.840190369112875*^9}, {3.840190421163118*^9, 3.840190483558923*^9}, {
   3.8401905169341288`*^9, 3.8401905686044073`*^9}, {3.840190665069972*^9, 
   3.840190691093354*^9}, {3.840190764716844*^9, 3.840190909552351*^9}, {
   3.840190952571726*^9, 3.840190994597392*^9}, 3.840191052489993*^9, {
   3.84019109858766*^9, 3.840191106858177*^9}, {3.840212643647187*^9, 
   3.8402126587042575`*^9}, {3.840212948316355*^9, 3.840213092874155*^9}, {
   3.8402131666079383`*^9, 3.8402131696129346`*^9}, {3.8402143027437525`*^9, 
   3.8402143267459517`*^9}, {3.8402804561573114`*^9, 3.840280523225045*^9}, {
   3.8402809376168385`*^9, 3.840280971021533*^9}, {3.8402849953143473`*^9, 
   3.840284995539066*^9}, {3.840285203246116*^9, 3.8402852211954503`*^9}, {
   3.8405484745807753`*^9, 3.840548502614027*^9}, {3.840548682116254*^9, 
   3.8405486958534555`*^9}, {3.8405786523932867`*^9, 3.840578657988408*^9}, {
   3.8414189828506317`*^9, 3.8414190153348923`*^9}, {3.8414201999561043`*^9, 
   3.8414202059767733`*^9}, {3.841422235821972*^9, 3.8414222386898837`*^9}, {
   3.842637171335677*^9, 3.842637171767519*^9}, {3.8430502619890904`*^9, 
   3.843050270518544*^9}, {3.843050460398434*^9, 3.8430504611482496`*^9}, {
   3.8430511064726257`*^9, 3.843051108768953*^9}, {3.843059830007685*^9, 
   3.8430598306316833`*^9}, {3.8431563089552684`*^9, 
   3.8431563349852266`*^9}, {3.8435877450299177`*^9, 3.843587927732647*^9}, 
   3.8435879648494453`*^9, {3.8435882518247757`*^9, 3.8435882583050823`*^9}, {
   3.8435884431319437`*^9, 3.843588446792751*^9}, {3.843588502609065*^9, 
   3.8435885039545493`*^9}, {3.84358854311246*^9, 3.84358855472566*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"645692a6-b206-4825-b365-8647c0a7978a"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"bd0e4e5e-07ac-4d81-8d42-\
091704d955dc"],

Cell["Test for scale reduction ratio during downscaling", "Text",
 CellChangeTimes->{{3.84006719879638*^9, 
  3.8400672414768887`*^9}},ExpressionUUID->"72690261-41c4-44e8-894e-\
424c3aadbc63"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"2.", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]",
   "*)"}]], "Input",
 CellChangeTimes->{{3.838481480296423*^9, 3.838481501447732*^9}, {
  3.841415676486165*^9, 3.8414156825441313`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"4a2d9cdc-af0c-4209-87b2-b87eb70ed9b6"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x", "=", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"x", "*", "2"}]}], ",", "6"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"x", "=", "1"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "/", "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", "y", "]"}]}]}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8384821585723815`*^9, 3.8384822114444637`*^9}, {
   3.838482458593239*^9, 3.838482468762911*^9}, {3.838482501888792*^9, 
   3.838482578038643*^9}, 3.8384826095327625`*^9, {3.8384826811927257`*^9, 
   3.838482691735092*^9}, {3.841415687509756*^9, 3.8414156924341836`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"c762d551-3cb1-49bc-a28a-ed51f8e2b718"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"0.001", "^", "i"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"64", "*", 
       RowBox[{"2", "^", 
        RowBox[{"-", "i"}]}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.84004722081765*^9, 3.8400472511938562`*^9}, {
   3.840053530250901*^9, 3.840053534144755*^9}, 3.8400724971509066`*^9, {
   3.8402124536219654`*^9, 3.840212479952806*^9}, {3.8402125984668093`*^9, 
   3.8402126023267517`*^9}, {3.841415696485509*^9, 3.8414157012070227`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"ce477a78-ea2e-4373-a69b-a57aecd4adf6"],

Cell["Test for Pyrflow1D and scale tracking", "Text",
 CellChangeTimes->{{3.84006719879638*^9, 
  3.8400672133345633`*^9}},ExpressionUUID->"33afa66a-7a5a-4c28-a638-\
4e16bc8e59fc"],

Cell["\<\
0.01*2^(-m) depends on m to update the error depending on the highest \
resolution scale\
\>", "Text",
 CellChangeTimes->{{3.840548374592219*^9, 
  3.8405484003331394`*^9}},ExpressionUUID->"6b52b0d8-024c-41a6-a4fa-\
ff4f0506ee33"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v1", ",", " ", "v2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.", ",", "0."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
  RowBox[{"PyrFlow1D", "[", 
   RowBox[{"i", ",", " ", "p", ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"m", ";;", "n"}], "]"}], "]"}], ",", 
    RowBox[{"0.01", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "m"}], "+", "1"}], ")"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2"}], "}"}], "]"}], ",", "status"}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.83639948364995*^9, 3.836399519806125*^9}, {
   3.8363995590245132`*^9, 3.83639960757861*^9}, {3.838080084756638*^9, 
   3.8380800851141353`*^9}, {3.8380804424545712`*^9, 
   3.8380804457646008`*^9}, {3.8380805343644238`*^9, 
   3.8380805622628913`*^9}, {3.8380806157132387`*^9, 3.8380806315133705`*^9}, 
   3.838080662503994*^9, {3.838080878494111*^9, 3.838080920662928*^9}, 
   3.838082457493312*^9, {3.840045753265614*^9, 3.8400457539577885`*^9}, 
   3.84004579390691*^9, {3.840046163537953*^9, 3.840046164081414*^9}, {
   3.840064234698558*^9, 3.8400642457064667`*^9}, 3.8400643170265927`*^9, {
   3.8400670995057793`*^9, 3.8400671416366897`*^9}, {3.840067276996817*^9, 
   3.840067280625373*^9}, 3.8400676368053093`*^9, 3.8400679985153937`*^9, {
   3.840191148333891*^9, 3.840191262607202*^9}, {3.8402805474678636`*^9, 
   3.8402805841324234`*^9}, 3.8402806423025513`*^9, {3.8402806786126747`*^9, 
   3.840280914219866*^9}, 3.8402810301816626`*^9, 3.840281335289158*^9, 
   3.8402847673221245`*^9, {3.8402849473165145`*^9, 3.840284950986496*^9}, 
   3.8402850025598235`*^9, {3.8405484097849054`*^9, 3.8405484111283555`*^9}, {
   3.8405485354254704`*^9, 3.8405485555772915`*^9}, {3.8405486541284895`*^9, 
   3.8405486554873114`*^9}, {3.840548721600456*^9, 3.840548733226588*^9}, {
   3.8405488364992127`*^9, 3.840548857907818*^9}, {3.8414206219366446`*^9, 
   3.8414206411481857`*^9}, 3.841421344268916*^9, {3.8414222138933043`*^9, 
   3.8414222624040847`*^9}, {3.841422377394811*^9, 3.8414223914862375`*^9}, {
   3.843070585396902*^9, 3.8430705864164004`*^9}, {3.843071802337734*^9, 
   3.843071802587674*^9}, {3.8430718550071297`*^9, 3.843071855741331*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"2609a419-770e-40a0-824d-e1ef4cdb0071"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4338503671539783`", ",", "0.5210131188633426`", ",", "\<\"converged\"\>",
    ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.838832666226753*^9, 3.8400444369470167`*^9, 3.840045643905463*^9, 
   3.8400457560481744`*^9, {3.8400457908352985`*^9, 3.8400457944180875`*^9}, 
   3.8400460188784523`*^9, 3.8400460672285147`*^9, {3.840046104969198*^9, 
   3.840046131300187*^9}, 3.840046174974115*^9, 3.8400462282120495`*^9, 
   3.8400537332050085`*^9, 3.8400537923914433`*^9, 3.840053881070217*^9, 
   3.8400540906279416`*^9, 3.8400541275601616`*^9, 3.8400548480008917`*^9, {
   3.8400548820491157`*^9, 3.840054900166012*^9}, 3.840062501213006*^9, 
   3.840062555687708*^9, 3.840062620182003*^9, 3.8400639378109818`*^9, 
   3.8400641604562297`*^9, {3.8400642354874725`*^9, 3.8400642462198744`*^9}, 
   3.840064318404097*^9, 3.840064361316574*^9, {3.840064453176154*^9, 
   3.8400645223891783`*^9}, 3.840066262829137*^9, 3.8400671054253025`*^9, {
   3.840067142874855*^9, 3.8400671742460938`*^9}, 3.840067282946029*^9, 
   3.8400673861258163`*^9, 3.8400674439051805`*^9, 3.8400675126953344`*^9, 
   3.840067597396134*^9, 3.84006763740595*^9, {3.840067702795176*^9, 
   3.8400677069259787`*^9}, {3.8400677744665346`*^9, 3.840067804606138*^9}, 
   3.8400678384964004`*^9, 3.8400678888558807`*^9, {3.8400679940362406`*^9, 
   3.8400679991462045`*^9}, {3.840068100425063*^9, 3.8400681329352674`*^9}, {
   3.8400681857592473`*^9, 3.8400682579661045`*^9}, {3.84006883498502*^9, 
   3.840068863805187*^9}, 3.8400690851350155`*^9, 3.8400691921859007`*^9, 
   3.8400703051754723`*^9, 3.84007037822251*^9, 3.8400705487575426`*^9, 
   3.8400707297322426`*^9, 3.84007121640366*^9, 3.8400720703242383`*^9, 
   3.840072534896658*^9, 3.840188645062529*^9, 3.840191021903605*^9, 
   3.8401910644685907`*^9, {3.840191119938846*^9, 3.8401912634483757`*^9}, 
   3.8402131044132624`*^9, 3.840213508213372*^9, 3.840213605207506*^9, 
   3.840213897665723*^9, 3.8402140331149874`*^9, 3.8402143299639215`*^9, {
   3.8402805360665035`*^9, 3.840280584697722*^9}, 3.840280642736854*^9, {
   3.8402806804006357`*^9, 3.8402809150359335`*^9}, 3.840281030750596*^9, 
   3.8402813358503556`*^9, 3.840284769967775*^9, 3.8402848026099405`*^9, 
   3.840284876528264*^9, {3.8402849440528584`*^9, 3.840284952060709*^9}, {
   3.840284999283988*^9, 3.8402850051148567`*^9}, 3.8402850524102077`*^9, 
   3.84028522759853*^9, 3.840285291773322*^9, 3.84028822153397*^9, 
   3.8402918714044013`*^9, 3.8405353206207504`*^9, 3.8405353790673847`*^9, 
   3.840548029427908*^9, {3.8405484048349705`*^9, 3.8405484115123158`*^9}, {
   3.840548520804982*^9, 3.8405485564697895`*^9}, 3.840548656490405*^9, {
   3.8405487139272037`*^9, 3.840548734024404*^9}, {3.8405488370994353`*^9, 
   3.8405488652758646`*^9}, 3.8405489546035156`*^9, 3.84054902880049*^9, 
   3.8405496557255325`*^9, 3.8405589284945917`*^9, 3.840559100192362*^9, 
   3.840578665832595*^9, 3.840578975314039*^9, {3.84141573931607*^9, 
   3.8414157406989083`*^9}, 3.841420538144863*^9, {3.841420614048499*^9, 
   3.841420623723338*^9}, 3.841421186066452*^9, 3.8414212720069075`*^9, 
   3.8414213447946815`*^9, {3.8414221971686573`*^9, 3.841422263064726*^9}, {
   3.841422373101813*^9, 3.841422392128319*^9}, 3.8414865549776287`*^9, 
   3.841495420987688*^9, 3.841508142618327*^9, 3.8427053440376205`*^9, 
   3.843050639635309*^9, 3.84305081017179*^9, 3.843050902756977*^9, 
   3.843059845830947*^9, {3.8430717821394033`*^9, 3.843071809361453*^9}, {
   3.8430718475242724`*^9, 3.843071855944148*^9}, 3.8431423874961524`*^9, 
   3.8431517411299725`*^9, 3.8431565148568354`*^9, 3.8432371432046843`*^9, 
   3.8432380643089447`*^9, 3.8433181909155083`*^9, 3.8433218175926695`*^9, 
   3.843322898414012*^9, 3.8433254771580706`*^9, 3.8433270174888115`*^9, 
   3.843327985491116*^9, 3.8435850593122153`*^9, 3.8435851374962125`*^9, 
   3.843585593202353*^9, 3.843589439827193*^9, 3.843589740602109*^9, 
   3.8435904222141542`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"ae4f85d2-10eb-4a26-a5e2-d36c55d09def"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9548634860173209`", ",", "\<\"converged\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.838832666226753*^9, 3.8400444369470167`*^9, 3.840045643905463*^9, 
   3.8400457560481744`*^9, {3.8400457908352985`*^9, 3.8400457944180875`*^9}, 
   3.8400460188784523`*^9, 3.8400460672285147`*^9, {3.840046104969198*^9, 
   3.840046131300187*^9}, 3.840046174974115*^9, 3.8400462282120495`*^9, 
   3.8400537332050085`*^9, 3.8400537923914433`*^9, 3.840053881070217*^9, 
   3.8400540906279416`*^9, 3.8400541275601616`*^9, 3.8400548480008917`*^9, {
   3.8400548820491157`*^9, 3.840054900166012*^9}, 3.840062501213006*^9, 
   3.840062555687708*^9, 3.840062620182003*^9, 3.8400639378109818`*^9, 
   3.8400641604562297`*^9, {3.8400642354874725`*^9, 3.8400642462198744`*^9}, 
   3.840064318404097*^9, 3.840064361316574*^9, {3.840064453176154*^9, 
   3.8400645223891783`*^9}, 3.840066262829137*^9, 3.8400671054253025`*^9, {
   3.840067142874855*^9, 3.8400671742460938`*^9}, 3.840067282946029*^9, 
   3.8400673861258163`*^9, 3.8400674439051805`*^9, 3.8400675126953344`*^9, 
   3.840067597396134*^9, 3.84006763740595*^9, {3.840067702795176*^9, 
   3.8400677069259787`*^9}, {3.8400677744665346`*^9, 3.840067804606138*^9}, 
   3.8400678384964004`*^9, 3.8400678888558807`*^9, {3.8400679940362406`*^9, 
   3.8400679991462045`*^9}, {3.840068100425063*^9, 3.8400681329352674`*^9}, {
   3.8400681857592473`*^9, 3.8400682579661045`*^9}, {3.84006883498502*^9, 
   3.840068863805187*^9}, 3.8400690851350155`*^9, 3.8400691921859007`*^9, 
   3.8400703051754723`*^9, 3.84007037822251*^9, 3.8400705487575426`*^9, 
   3.8400707297322426`*^9, 3.84007121640366*^9, 3.8400720703242383`*^9, 
   3.840072534896658*^9, 3.840188645062529*^9, 3.840191021903605*^9, 
   3.8401910644685907`*^9, {3.840191119938846*^9, 3.8401912634483757`*^9}, 
   3.8402131044132624`*^9, 3.840213508213372*^9, 3.840213605207506*^9, 
   3.840213897665723*^9, 3.8402140331149874`*^9, 3.8402143299639215`*^9, {
   3.8402805360665035`*^9, 3.840280584697722*^9}, 3.840280642736854*^9, {
   3.8402806804006357`*^9, 3.8402809150359335`*^9}, 3.840281030750596*^9, 
   3.8402813358503556`*^9, 3.840284769967775*^9, 3.8402848026099405`*^9, 
   3.840284876528264*^9, {3.8402849440528584`*^9, 3.840284952060709*^9}, {
   3.840284999283988*^9, 3.8402850051148567`*^9}, 3.8402850524102077`*^9, 
   3.84028522759853*^9, 3.840285291773322*^9, 3.84028822153397*^9, 
   3.8402918714044013`*^9, 3.8405353206207504`*^9, 3.8405353790673847`*^9, 
   3.840548029427908*^9, {3.8405484048349705`*^9, 3.8405484115123158`*^9}, {
   3.840548520804982*^9, 3.8405485564697895`*^9}, 3.840548656490405*^9, {
   3.8405487139272037`*^9, 3.840548734024404*^9}, {3.8405488370994353`*^9, 
   3.8405488652758646`*^9}, 3.8405489546035156`*^9, 3.84054902880049*^9, 
   3.8405496557255325`*^9, 3.8405589284945917`*^9, 3.840559100192362*^9, 
   3.840578665832595*^9, 3.840578975314039*^9, {3.84141573931607*^9, 
   3.8414157406989083`*^9}, 3.841420538144863*^9, {3.841420614048499*^9, 
   3.841420623723338*^9}, 3.841421186066452*^9, 3.8414212720069075`*^9, 
   3.8414213447946815`*^9, {3.8414221971686573`*^9, 3.841422263064726*^9}, {
   3.841422373101813*^9, 3.841422392128319*^9}, 3.8414865549776287`*^9, 
   3.841495420987688*^9, 3.841508142618327*^9, 3.8427053440376205`*^9, 
   3.843050639635309*^9, 3.84305081017179*^9, 3.843050902756977*^9, 
   3.843059845830947*^9, {3.8430717821394033`*^9, 3.843071809361453*^9}, {
   3.8430718475242724`*^9, 3.843071855944148*^9}, 3.8431423874961524`*^9, 
   3.8431517411299725`*^9, 3.8431565148568354`*^9, 3.8432371432046843`*^9, 
   3.8432380643089447`*^9, 3.8433181909155083`*^9, 3.8433218175926695`*^9, 
   3.843322898414012*^9, 3.8433254771580706`*^9, 3.8433270174888115`*^9, 
   3.843327985491116*^9, 3.8435850593122153`*^9, 3.8435851374962125`*^9, 
   3.843585593202353*^9, 3.843589439827193*^9, 3.843589740602109*^9, 
   3.843590422237125*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"91a1b60e-86bb-4dbc-bafb-d7129031f6d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeplot", "[", 
  RowBox[{"p", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"v1", ",", "v2"}], "}"}], ",", 
   RowBox[{"pyrf12", "[", 
    RowBox[{"[", "m", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8363995323142886`*^9, 3.8363995497959876`*^9}, {
   3.836399619173401*^9, 3.836399627315104*^9}, {3.8384848657173834`*^9, 
   3.8384848695138836`*^9}, {3.8400640901794996`*^9, 3.840064096563566*^9}, 
   3.8400642190695267`*^9, 3.840064254160406*^9, 3.8400643231875253`*^9, 
   3.8400671534853387`*^9, 3.840067289625275*^9, 3.840067719035468*^9, 
   3.8400678437352333`*^9, 3.840067979214921*^9, 3.840068024446211*^9, 
   3.8400681171252265`*^9, {3.8400681524745507`*^9, 3.840068183426964*^9}, {
   3.8400682390152364`*^9, 3.8400682603653374`*^9}, 3.8400703249464455`*^9, {
   3.840070381556637*^9, 3.8400703854466133`*^9}, 3.8400705520194263`*^9, {
   3.84019115414285*^9, 3.840191221424403*^9}, 3.840280708155969*^9, 
   3.8402807658886623`*^9, {3.840280821326911*^9, 3.8402808379807625`*^9}, 
   3.8402809199145455`*^9, {3.8405485709314113`*^9, 3.8405485739471397`*^9}, 
   3.841422220304305*^9},
 CellLabel->
  "In[187]:=",ExpressionUUID->"10603e1f-ab0f-41e3-a7a6-b4cd1ded3daf"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVx3k4lAkcwHGxQ6ZQUU3F9s752unisT2J+P2ywhJKh5JINTpY7VARbY4U
6+iRpVRjqEnPlGapPIZSuTaaSuUY1xYaDePdsLuOcmRn//g+3+fD3H/MR6Cr
o6Pjqe3/L7V9rB2B9o2GRyRpYmiMm2zI13ouQ71w3g0xpDxff23jLAJLvQPs
E+VimPArtTmrS+DrVIvRhA9iaP+l6KA+jcANEw9cOmzzIKfm+rO5dAI7FLxT
f6vzYKH3+ZQlZgRePsc/IriZD/OCvRfYWBLo5CpLks+/AQfPPamu20ZguGp1
vzSwACYMwi1OnSbwffFt/t6HUkgKd10ecJPARZ31izxc74Kw4UvVzdcE2g5O
GV9ZVwzi9GHj2Z8J3DrQyRn3vA+WjrVTL9lMnPk8s73vUQlIleUX//BiYn3f
aJefhxxCGv9903GSiUT8yqP8tnJIfUq/t/UGE2fvKhYVKSpg0CTY/qOCic0m
w6m2ZU/B1U0VevcfJiYnT1psDqqCr0IHaLFgoYvwyQUZUQPjXzsfLXVh4W+C
tt1+HbXg9Ytve5WQhdtz08ddmp/BNdVIrkjEQvy9Ktqqpx74MuXcrFoW3nL0
MxD1KmDx4WzzT0MsXGV3Jueq1StwOZ+j3M9gY4R1o8BK+BqasqOs7ZzZuJb2
zDh55g3sTI+22XSMjbkBZkMjno2wrL+yK/QyG/UjfOgvMprA8fvelWPVbJQM
98Yf+NIMEpUHR0SxMSGuNqXFRwkz0S3VJ0w5uGDjIur63VYo09uge8+Rg4z+
Febp/HYoGVJTsw9xMM4ta8uarA4wehV2sjqTgz8rl51JJ/4E/0yGtOgxB4Mv
WqZ1Sd/B4EP9xPKPHKwYpFfHMrrgXfNbHe58LlYUzzqr2tYNJj49pGw9F80e
6rqPGvXAOvmCscNBXCwcaohMr+mBx0ZMwfk0LoZOr8penPQBztVFnKks4WJd
HEW/YK+CwnCJrX83F/lh9mGCKRWYxi/ONTPk4YuIN4wfZL0gjJRJdax5GPPT
lQRz34+wKpDY4eXPw5ff7MmtoathxZ3WwrJEHn7JktMyZGpIUodIEot5aO0w
vs9gVx+001lOiZ083PljjVj+uQ/CMs1T8/VIlOxXdJsm98O+OSPHv11D4uAt
k4LRZRrI7jMxLPclMeqa9w6DPA1UFno6J8WS2OTgmUwuGQC3oMOE/A6JTwYK
sOLSAJhG193SayIxVunxTkyjwP0QM0eutV7U8lNxBhQkbI/5NaSZxESLK3lB
hhQMr14T2tRContrZRrLiIIG1SVrSRuJLeX3NWIzCpI9gyuc3pMoaC+oiGdT
MEXQGuM1JMZEjtkNIwU2xoE1awdILI+871HjRMHRybISjdaiTFKT7UxBe0vo
5a1/kUjGxCrWu1FQmtLszxwikfOi1PK0NwXCEUlf5QiJW2jPg6i9FEh7ptuO
j5KodH6/SR5IQXeDr8JyjMQ9/FJ5QhAFXrfnyDLGSVzuPuzMEFCwMiAifN8E
iSkZAQaOoRQc8Hh1wGySxJIHu/foh1Fw1ZbcUa91rJPIoeEYBYamneuspkns
oNnJ/CMoQJ213/Vq/Tak1I59goKoTxeW5nwl0Tm/YqfmJAVFHf1zNs+QqLLf
O6soigJ1ndP0jNYHW6V2x6Mp+A9gVkNg
        "]]},
      Annotation[#, "Charting`Private`Tag$228133#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$228133#2"]& ]}, {}}, {
    PointBox[{{10, 0.2498821262788859}, {10, 0.3595551722773202}, {
      10, 0.14020908028045162`}}], 
    PointBox[{{9.566149632846022, 0.2498821262788859}, {10.521013118863342`, 
     0.2498821262788859}}], 
    LineBox[{{10, 0.3595551722773202}, {10, 0.14020908028045162`}}], 
    LineBox[{{9.566149632846022, 0.2498821262788859}, {10.521013118863342`, 
     0.2498821262788859}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{8., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{8, 12}, {-0.004286804693850102, 0.8586980004972529}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8400681739599295`*^9, 3.8400682609059052`*^9}, {
   3.840068839915927*^9, 3.8400688649160986`*^9}, {3.840070323036626*^9, 
   3.840070325662856*^9}, {3.840070382191462*^9, 3.840070385966656*^9}, {
   3.8400705501629887`*^9, 3.840070552702344*^9}, 3.8400707309003005`*^9, 
   3.8400712189406934`*^9, 3.8400720704454613`*^9, 3.8400725350016923`*^9, 
   3.8401886459056187`*^9, {3.8401911292780733`*^9, 3.84019124065838*^9}, 
   3.8402131063751965`*^9, 3.8402135099931183`*^9, 3.8402136066035986`*^9, 
   3.840213897728365*^9, 3.8402140331784515`*^9, 3.8402143300143213`*^9, {
   3.8402805388912153`*^9, 3.8402805794192696`*^9}, 3.8402806445272026`*^9, {
   3.8402807119106197`*^9, 3.8402807820218897`*^9}, {3.8402808222939453`*^9, 
   3.8402808385598497`*^9}, 3.840280920445552*^9, 3.8402848778809357`*^9, 
   3.8402850524969735`*^9, 3.8402852311080027`*^9, 3.840285291825181*^9, 
   3.840288221650073*^9, 3.840291871511876*^9, 3.8405353207634068`*^9, 
   3.84053537919212*^9, 3.840548029525218*^9, {3.840548568300643*^9, 
   3.8405485745797644`*^9}, 3.840549029012874*^9, 3.840549655893992*^9, 
   3.840559100276037*^9, 3.840578665913876*^9, 3.8405789754018917`*^9, 
   3.841415744143109*^9, 3.8414205382027073`*^9, 3.8414212798769274`*^9, {
   3.8414221972213955`*^9, 3.8414222538050737`*^9}, 3.8414865550262284`*^9, 
   3.8414954210414467`*^9, 3.841508142717757*^9, 3.842705344162706*^9, 
   3.843050639744658*^9, 3.843050810281133*^9, 3.843050902866358*^9, 
   3.8430598459715385`*^9, {3.8430717922151365`*^9, 3.8430718118765135`*^9}, {
   3.843071850070542*^9, 3.8430718585997686`*^9}, 3.8431423875350485`*^9, 
   3.8431517411940346`*^9, 3.8431565149076967`*^9, 3.843237143315864*^9, 
   3.843238064433915*^9, 3.8433181910170045`*^9, 3.8433218177176666`*^9, 
   3.843322898523362*^9, 3.843325477267419*^9, 3.84332701761375*^9, 
   3.8433279856473227`*^9, 3.8435850593559303`*^9, 3.8435851375491037`*^9, 
   3.8435855932605486`*^9, 3.8435894399643736`*^9, 3.8435897407455225`*^9, 
   3.8435904223317733`*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"f0ff8bc4-0441-42cf-a81b-929bd5e6dbfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], "=", 
      RowBox[{"PyrFlow1D", "[", 
       RowBox[{"10", ",", "p", ",", " ", 
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "5"}], "]"}], "]"}], ",", "0.01"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"v1", "+", "v2"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v1", "+", "v2"}], ")"}], "-", "1"}], ",", "status"}], 
      "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", " ", "30", ",", " ", "1"}], "]"}]}], "}"}]}], "]"}], 
  "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.836499324689963*^9, 3.836499348577834*^9}, {
   3.8364997365618815`*^9, 3.836499750430583*^9}, {3.83650004985175*^9, 
   3.8365001527098722`*^9}, {3.8400462015559807`*^9, 
   3.8400462044039545`*^9}, {3.8400640505875683`*^9, 3.840064057846557*^9}, 
   3.8400662827537003`*^9, {3.8400663206400986`*^9, 3.8400663450911584`*^9}, 
   3.8400663830449533`*^9, 3.840066447727253*^9, 3.8400665501156096`*^9, {
   3.8400672934971447`*^9, 3.8400672945063057`*^9}, 3.840068086326285*^9, {
   3.840191271303691*^9, 3.840191285728421*^9}, {3.8401913600592318`*^9, 
   3.8401914917744627`*^9}, 3.8402131368901725`*^9, {3.8402806560586977`*^9, 
   3.840280657225114*^9}, {3.843070591238387*^9, 3.8430705917873836`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"2b8fa10b-2455-437d-a597-696051382bd9"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.840066262919139*^9, 3.8400662841176004`*^9}, 
   3.840066345652806*^9, 3.8400663836868134`*^9, {3.840066448417961*^9, 
   3.8400664740579023`*^9}, 3.8400665515958424`*^9, 3.840067033955927*^9, 
   3.840067071065077*^9, 3.8400672954290676`*^9, 3.840067412175735*^9, 
   3.840067451559243*^9, 3.8400675196093845`*^9, 3.8400676445593557`*^9, 
   3.8400678494977646`*^9, 3.8400680561359615`*^9, 3.8400680869856787`*^9, 
   3.840068266939859*^9, 3.8400688435659227`*^9, 3.8400705231010895`*^9, 
   3.8400705549425764`*^9, 3.840070732657429*^9, 3.840071220762773*^9, 
   3.840072070534786*^9, 3.840072535073468*^9, 3.84019124848892*^9, 
   3.840191293234161*^9, {3.84019136405042*^9, 3.840191406044889*^9}, {
   3.840191439310257*^9, 3.840191492088842*^9}, {3.840213111926098*^9, 
   3.840213137567811*^9}, 3.8402131746426153`*^9, 3.8402135119052343`*^9, 
   3.84021389775134*^9, 3.8402140331993637`*^9, 3.8402143300389853`*^9, 
   3.840280659279598*^9, 3.8402808041042356`*^9, 3.84028484380116*^9, 
   3.8402850525987034`*^9, 3.8402852345960827`*^9, 3.8402852919869823`*^9, 
   3.8402882217783194`*^9, 3.8402918716534615`*^9, 3.840535320883994*^9, 
   3.840535379373284*^9, 3.8405480296399145`*^9, 3.840549029128437*^9, 
   3.8405496560066442`*^9, 3.8405591003709345`*^9, 3.840578666030451*^9, 
   3.8405789754983253`*^9, 3.8414205382785063`*^9, 3.8414212819578695`*^9, 
   3.8414221972742577`*^9, 3.8414865550793347`*^9, 3.8414954210653048`*^9, 
   3.841508142769623*^9, 3.8427053442524986`*^9, 3.843050639807107*^9, 
   3.843050810421736*^9, 3.8430509029288435`*^9, 3.8430598461277514`*^9, 
   3.843071792293242*^9, 3.843142387632057*^9, 3.8431517412439013`*^9, 
   3.843156514944598*^9, 3.8432371433939714`*^9, 3.843238064496401*^9, 
   3.8433181911236525`*^9, 3.8433218177957745`*^9, 3.843322898601468*^9, 
   3.8433254773455257`*^9, 3.8433270176918845`*^9, 3.843327985772264*^9, 
   3.8435850597652173`*^9, 3.8435851375969763`*^9, 3.8435855933004417`*^9, 
   3.84358972392675*^9, 3.8435897886453304`*^9, 3.843590478496955*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"a2d1b3ed-0a0b-4ca4-87f1-9d12264d438d"]
}, Open  ]],

Cell["Testing all scale for one pixel", "Text",
 CellChangeTimes->{{3.8401915462198973`*^9, 
  3.840191554613942*^9}},ExpressionUUID->"f69c735a-a188-455c-a6c5-\
2fb3cf320fa3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "8"}], ";"}]}], "Input",
 CellChangeTimes->{{3.836399597284279*^9, 3.8363996054333725`*^9}, {
   3.838080076942332*^9, 3.838080077133206*^9}, 3.838080532524396*^9, 
   3.840064157773669*^9, {3.8400644557376595`*^9, 3.840064520622788*^9}, 
   3.840067093216194*^9, 3.840067161906935*^9, {3.840067441726561*^9, 
   3.840067442126357*^9}, {3.840067594845196*^9, 3.8400675950365334`*^9}, 
   3.8400677054053097`*^9, {3.8400680796966324`*^9, 3.840068129676839*^9}, {
   3.840068180047144*^9, 3.840068256136609*^9}, {3.840068831216014*^9, 
   3.8400688611865463`*^9}, 3.8402806756476183`*^9, {3.8402853727759953`*^9, 
   3.8402853980045505`*^9}, 3.841416001759392*^9, 3.8414955224237647`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"3f4c1867-bd09-4c1e-92e8-e8d5fa88e88f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", "e"}], "}"}], 
       " ", "=", " ", 
       RowBox[{"PyrFlow1D", "[", 
        RowBox[{"i", ",", " ", "p", ",", " ", 
         RowBox[{"pyrf12", "[", 
          RowBox[{"[", 
           RowBox[{"scale", " ", ";;", " ", "5"}], "]"}], "]"}], ",", 
         RowBox[{"0.01", "*", "2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "scale"}], "-", "1"}], ")"}]}]}], "]"}]}], ";", "\n",
       "  ", 
      RowBox[{"{", 
       RowBox[{"scale", ",", "5", ",", " ", 
        RowBox[{"v1", " ", "+", " ", "v2"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"v1", " ", "+", " ", "v2"}], ")"}], " ", "-", " ", "1"}], 
        ",", " ", "status"}], "}"}]}], "\n", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"scale", ",", "1", ",", "5"}], "}"}]}], "]"}], " ", "//", " ", 
   "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\n", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", "e"}], "}"}], 
      " ", "=", " ", 
      RowBox[{"PyrFlow1D", "[", 
       RowBox[{"10", ",", " ", "p", ",", " ", 
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"scale", " ", ";;", " ", "scale"}], "]"}], "]"}], ",", 
        RowBox[{"0.01", "*", "2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "scale"}], "-", "1"}], ")"}]}]}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"scale", ",", "scale", ",", " ", 
       RowBox[{"v1", " ", "+", " ", "v2"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v1", " ", "+", " ", "v2"}], ")"}], " ", "-", " ", "1"}], 
       ",", " ", "status"}], "}"}]}], "\n", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"scale", ",", "1", ",", "5"}], "}"}]}], "]"}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\n", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", "e"}], "}"}], 
      " ", "=", " ", 
      RowBox[{"PyrFlow1D", "[", 
       RowBox[{"10", ",", " ", "p", ",", " ", 
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"1", " ", ";;", " ", "scale"}], "]"}], "]"}], ",", 
        RowBox[{"0.01", "*", "2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "scale"}], "-", "1"}], ")"}]}]}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "scale", ",", " ", 
       RowBox[{"v1", " ", "+", " ", "v2"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v1", " ", "+", " ", "v2"}], ")"}], " ", "-", " ", "1"}], 
       ",", " ", "status"}], "}"}]}], "\n", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"scale", ",", "1", ",", "5"}], "}"}]}], "]"}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\n", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", " ", "v2", ",", " ", "status", ",", "e"}], "}"}], 
      " ", "=", " ", 
      RowBox[{"PyrFlow1D", "[", 
       RowBox[{"10", ",", " ", "p", ",", " ", 
        RowBox[{"pyrf12", "[", 
         RowBox[{"[", 
          RowBox[{"scale", ";;", " ", 
           RowBox[{"scale", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"0.01", "*", "2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "scale"}], "-", "1"}], ")"}]}]}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"scale", ",", 
       RowBox[{"scale", "+", "1"}], ",", " ", 
       RowBox[{"v1", " ", "+", " ", "v2"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v1", " ", "+", " ", "v2"}], ")"}], " ", "-", " ", "1"}], 
       ",", " ", "status"}], "}"}]}], "\n", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"scale", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "//", " ", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.840191566120503*^9, 3.840191698236615*^9}, {
  3.8401917729313173`*^9, 3.840191794282414*^9}, {3.840191901316683*^9, 
  3.840191902051524*^9}, {3.840285353800062*^9, 3.84028536888945*^9}, {
  3.840285401197082*^9, 3.8402854497544556`*^9}, {3.843070596622445*^9, 
  3.843070607747197*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"5f3c7b77-566e-44ea-904f-9ee47450a3b0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "5", "0", 
      RowBox[{"-", "1"}], "\<\"flip\"\>"},
     {"2", "5", "0.9999999909316188`", 
      RowBox[{"-", "9.068381157106842`*^-9"}], "\<\"flip\"\>"},
     {"3", "5", "0.9999999909316188`", 
      RowBox[{"-", "9.068381157106842`*^-9"}], "\<\"converged\"\>"},
     {"4", "5", "0.9999999943410605`", 
      RowBox[{"-", "5.658939539188168`*^-9"}], "\<\"converged\"\>"},
     {"5", "5", "1.000000077493287`", 
      "7.749328689854451`*^-8", "\<\"converged\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.840191639695891*^9, {3.840191673830566*^9, 3.8401916992513647`*^9}, 
   3.840191794795146*^9, 3.840191902775172*^9, 3.840213188575591*^9, 
   3.8402136105486836`*^9, 3.8402138977959347`*^9, 3.84021403324627*^9, 
   3.8402143300768833`*^9, 3.840285052790346*^9, 3.840285292048783*^9, {
   3.8402854033598413`*^9, 3.840285411663666*^9}, 3.840285450423924*^9, 
   3.8402882218526487`*^9, 3.8402918717432213`*^9, 3.840535320974758*^9, 
   3.8405353795075173`*^9, 3.8405480297225757`*^9, 3.8405490292110596`*^9, 
   3.8405496560955906`*^9, 3.8405591004661407`*^9, 3.8405786660952387`*^9, 
   3.8405789755844126`*^9, 3.841415998196436*^9, 3.8414205383483477`*^9, 
   3.8414212892463894`*^9, 3.841422197315946*^9, 3.8414865551200323`*^9, 
   3.8414954211085443`*^9, 3.8414955249410686`*^9, 3.841508142863407*^9, 
   3.8427053443503447`*^9, 3.84305063988525*^9, 3.843050810515459*^9, 
   3.8430509030069513`*^9, 3.843059846346448*^9, 3.84307179238697*^9, 
   3.8431423877240405`*^9, 3.843151741314849*^9, 3.843156514991021*^9, 
   3.84323714350332*^9, 3.843238064622453*^9, 3.843318191233474*^9, 
   3.843321817936372*^9, 3.843322898679575*^9, 3.8433254774236326`*^9, 
   3.843327017801238*^9, 3.843327985866025*^9, 3.8435850599025745`*^9, 
   3.8435851376687517`*^9, 3.843585593353266*^9},
 CellLabel->
  "Out[78]//MatrixForm=",ExpressionUUID->"1b12650d-c9dc-484a-b3a3-\
4ea66d67e416"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", 
      RowBox[{"-", "7.324291896757448`"}], 
      RowBox[{"-", "8.324291896757448`"}], "\<\"sign\"\>"},
     {"2", "2", 
      RowBox[{"-", "1.1629111020216762`"}], 
      RowBox[{"-", "2.1629111020216762`"}], "\<\"sign\"\>"},
     {"3", "3", "0.9999999909316185`", 
      RowBox[{"-", "9.068381490173749`*^-9"}], "\<\"converged\"\>"},
     {"4", "4", "0.99999999434106`", 
      RowBox[{"-", "5.658939983277378`*^-9"}], "\<\"converged\"\>"},
     {"5", "5", "1.000000077493287`", 
      "7.749328689854451`*^-8", "\<\"converged\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.840191639695891*^9, {3.840191673830566*^9, 3.8401916992513647`*^9}, 
   3.840191794795146*^9, 3.840191902775172*^9, 3.840213188575591*^9, 
   3.8402136105486836`*^9, 3.8402138977959347`*^9, 3.84021403324627*^9, 
   3.8402143300768833`*^9, 3.840285052790346*^9, 3.840285292048783*^9, {
   3.8402854033598413`*^9, 3.840285411663666*^9}, 3.840285450423924*^9, 
   3.8402882218526487`*^9, 3.8402918717432213`*^9, 3.840535320974758*^9, 
   3.8405353795075173`*^9, 3.8405480297225757`*^9, 3.8405490292110596`*^9, 
   3.8405496560955906`*^9, 3.8405591004661407`*^9, 3.8405786660952387`*^9, 
   3.8405789755844126`*^9, 3.841415998196436*^9, 3.8414205383483477`*^9, 
   3.8414212892463894`*^9, 3.841422197315946*^9, 3.8414865551200323`*^9, 
   3.8414954211085443`*^9, 3.8414955249410686`*^9, 3.841508142863407*^9, 
   3.8427053443503447`*^9, 3.84305063988525*^9, 3.843050810515459*^9, 
   3.8430509030069513`*^9, 3.843059846346448*^9, 3.84307179238697*^9, 
   3.8431423877240405`*^9, 3.843151741314849*^9, 3.843156514991021*^9, 
   3.84323714350332*^9, 3.843238064622453*^9, 3.843318191233474*^9, 
   3.843321817936372*^9, 3.843322898679575*^9, 3.8433254774236326`*^9, 
   3.843327017801238*^9, 3.843327985866025*^9, 3.8435850599025745`*^9, 
   3.8435851376687517`*^9, 3.8435855933542643`*^9},
 CellLabel->
  "Out[79]//MatrixForm=",ExpressionUUID->"67fbf4bf-c655-41e5-8fbe-\
fa659643c172"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", 
      RowBox[{"-", "7.324291896757448`"}], 
      RowBox[{"-", "8.324291896757448`"}], "\<\"sign\"\>"},
     {"1", "2", "0", 
      RowBox[{"-", "1"}], "\<\"flip\"\>"},
     {"1", "3", "0", 
      RowBox[{"-", "1"}], "\<\"flip\"\>"},
     {"1", "4", "0", 
      RowBox[{"-", "1"}], "\<\"flip\"\>"},
     {"1", "5", "0", 
      RowBox[{"-", "1"}], "\<\"flip\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.840191639695891*^9, {3.840191673830566*^9, 3.8401916992513647`*^9}, 
   3.840191794795146*^9, 3.840191902775172*^9, 3.840213188575591*^9, 
   3.8402136105486836`*^9, 3.8402138977959347`*^9, 3.84021403324627*^9, 
   3.8402143300768833`*^9, 3.840285052790346*^9, 3.840285292048783*^9, {
   3.8402854033598413`*^9, 3.840285411663666*^9}, 3.840285450423924*^9, 
   3.8402882218526487`*^9, 3.8402918717432213`*^9, 3.840535320974758*^9, 
   3.8405353795075173`*^9, 3.8405480297225757`*^9, 3.8405490292110596`*^9, 
   3.8405496560955906`*^9, 3.8405591004661407`*^9, 3.8405786660952387`*^9, 
   3.8405789755844126`*^9, 3.841415998196436*^9, 3.8414205383483477`*^9, 
   3.8414212892463894`*^9, 3.841422197315946*^9, 3.8414865551200323`*^9, 
   3.8414954211085443`*^9, 3.8414955249410686`*^9, 3.841508142863407*^9, 
   3.8427053443503447`*^9, 3.84305063988525*^9, 3.843050810515459*^9, 
   3.8430509030069513`*^9, 3.843059846346448*^9, 3.84307179238697*^9, 
   3.8431423877240405`*^9, 3.843151741314849*^9, 3.843156514991021*^9, 
   3.84323714350332*^9, 3.843238064622453*^9, 3.843318191233474*^9, 
   3.843321817936372*^9, 3.843322898679575*^9, 3.8433254774236326`*^9, 
   3.843327017801238*^9, 3.843327985866025*^9, 3.8435850599025745`*^9, 
   3.8435851376687517`*^9, 3.843585593370219*^9},
 CellLabel->
  "Out[80]//MatrixForm=",ExpressionUUID->"1e9f30ed-1710-49b1-8fb2-\
42b9ba7ca327"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "0", 
      RowBox[{"-", "1"}], "\<\"flip\"\>"},
     {"2", "3", "0.9999999909316185`", 
      RowBox[{"-", "9.068381490173749`*^-9"}], "\<\"flip\"\>"},
     {"3", "4", "0.9999999909316185`", 
      RowBox[{"-", "9.068381490173749`*^-9"}], "\<\"converged\"\>"},
     {"4", "5", "0.9999999943410605`", 
      RowBox[{"-", "5.658939539188168`*^-9"}], "\<\"converged\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.840191639695891*^9, {3.840191673830566*^9, 3.8401916992513647`*^9}, 
   3.840191794795146*^9, 3.840191902775172*^9, 3.840213188575591*^9, 
   3.8402136105486836`*^9, 3.8402138977959347`*^9, 3.84021403324627*^9, 
   3.8402143300768833`*^9, 3.840285052790346*^9, 3.840285292048783*^9, {
   3.8402854033598413`*^9, 3.840285411663666*^9}, 3.840285450423924*^9, 
   3.8402882218526487`*^9, 3.8402918717432213`*^9, 3.840535320974758*^9, 
   3.8405353795075173`*^9, 3.8405480297225757`*^9, 3.8405490292110596`*^9, 
   3.8405496560955906`*^9, 3.8405591004661407`*^9, 3.8405786660952387`*^9, 
   3.8405789755844126`*^9, 3.841415998196436*^9, 3.8414205383483477`*^9, 
   3.8414212892463894`*^9, 3.841422197315946*^9, 3.8414865551200323`*^9, 
   3.8414954211085443`*^9, 3.8414955249410686`*^9, 3.841508142863407*^9, 
   3.8427053443503447`*^9, 3.84305063988525*^9, 3.843050810515459*^9, 
   3.8430509030069513`*^9, 3.843059846346448*^9, 3.84307179238697*^9, 
   3.8431423877240405`*^9, 3.843151741314849*^9, 3.843156514991021*^9, 
   3.84323714350332*^9, 3.843238064622453*^9, 3.843318191233474*^9, 
   3.843321817936372*^9, 3.843322898679575*^9, 3.8433254774236326`*^9, 
   3.843327017801238*^9, 3.843327985866025*^9, 3.8435850599025745`*^9, 
   3.8435851376687517`*^9, 3.8435855933722405`*^9},
 CellLabel->
  "Out[81]//MatrixForm=",ExpressionUUID->"95c493f9-6a6d-4a02-8f11-\
bc6261706002"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for one pixel iteration (pixelIterGraphics)", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519286434603`*^9, 
  3.843151934406221*^9}, {3.843153522326394*^9, 
  3.843153538327319*^9}},ExpressionUUID->"7b97303b-d41f-4783-b552-\
ac3ef7ca3fb1"],

Cell[CellGroupData[{

Cell["Pixel Iteration", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 
   3.8431518001584377`*^9}},ExpressionUUID->"d789d8ef-2469-4d2b-bebf-\
54c2820d12ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Makes", " ", "iterations", " ", "by", " ", "saving", " ", "all", " ", 
    "the", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"pixelIter", "[", 
      RowBox[{
      "i_", ",", " ", "p0_", ",", " ", "pyrfunctions_", ",", "threshold_"}], 
      "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1", ",", " ", "v2", ",", "c", ",", "status", ",", "iterTable", ",", 
         "e"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{
           RowBox[{"Length", "[", "pyrfunctions", "]"}], "-", "1"}]}], ";", 
         " ", 
         RowBox[{"(*", " ", 
          RowBox[{"number", " ", "of", " ", "levels"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"v1", ",", " ", "v2", ",", "status", ",", "e"}], "}"}], 
          "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0."}], "}"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"compute", " ", "at", " ", "this", " ", "scale"}], ",", 
            " ", 
            RowBox[{
            "using", " ", "current", " ", "motion", " ", "estimate"}]}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"e", "<", "2"}], ",", 
              RowBox[{"status", "=", "\"\<ok\>\""}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"iterTable", "=", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "index", " ", "of", " ", "pyrfunction", " ", "works", " ", 
                "only", " ", "if", " ", "fed", " ", "the", " ", "right", " ", 
                "range", " ", "of", " ", "pyrfunctions"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], 
                "=", 
                RowBox[{"PyrUpgrade1D", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], 
                  ",", "p0", ",", " ", 
                  RowBox[{"pyrfunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "f"}], "]"}], "]"}], ",", 
                  RowBox[{"threshold", "*", 
                   RowBox[{"2", "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "c"}], ")"}]}]}]}], "]"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"c", "=", 
             RowBox[{"c", "-", "1"}]}], ";", "\[IndentingNewLine]", 
            "iterTable"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"f", ",", "1", ",", 
             RowBox[{"Length", "[", "pyrfunctions", "]"}]}], "}"}]}], "]"}]}],
         "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pixelIter", "::", "usage"}], "=", 
     "\"\<\nMakes iterations with OverConstrained standards and saves all the \
values\nInput\[Rule] [i, p0, pyrfunctions, threshold]\nOutput-> list with the \
dimensions of: {lvls, i, {v1, v2, status,e}}\ni= number of iterations\np0= \
point of interest\npyrfunctions= list with the dimensions of {pyrlvl, number \
of image(1 or 2), kind of function(f or df)}\nwhere pyrlvl is the pyramidal \
level\nthreshold= threshold to respect magnitude constraint\nv1= Solution of \
f1\nv2= Solution of f2\nstatus= Status of the solution (ok, sign, mag, flip, \
converged)\ne= Counts the amount of times constraints were not met\n\>\""}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.842697230934749*^9, 3.8426972527368526`*^9}, {
   3.8426973082279644`*^9, 3.842697361429648*^9}, {3.842697403265497*^9, 
   3.842697432855535*^9}, 3.842701002025896*^9, {3.8427010404503565`*^9, 
   3.842701135067622*^9}, {3.8427021386829405`*^9, 3.8427021544660206`*^9}, {
   3.842702855554968*^9, 3.8427028558462524`*^9}, {3.842704183726611*^9, 
   3.842704209359651*^9}, {3.8427052628413796`*^9, 3.8427053231078467`*^9}, {
   3.8427053669498653`*^9, 3.8427053672401686`*^9}, {3.843156350954703*^9, 
   3.8431563910702105`*^9}, 3.843588841304333*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"0fc06d81-f2b1-40f6-a8cc-58223608e8b8"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"3f2a12aa-0d8a-473c-91b5-\
5c0de2130118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iter", "=", 
  RowBox[{"pixelIter", "[", 
   RowBox[{"27", ",", " ", "27", ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", " ", "5"}], "]"}], "]"}], ",", "0.001"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.8427054647104588`*^9, 
   3.84270546773275*^9}, {3.8432383297704124`*^9, 3.8432383445927367`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"11223a6b-dae0-49b9-a563-f236dd3f451a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1.`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "2.`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\<\"sign\"\>", ",", "2.`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.842701282236992*^9, 3.8427012986621785`*^9}, {
   3.8427021103821077`*^9, 3.8427021563455677`*^9}, 3.842702959185557*^9, {
   3.842704487976446*^9, 3.8427044993257265`*^9}, 3.8427053445475254`*^9, 
   3.842705416973835*^9, 3.8430506400414605`*^9, 3.84305081067165*^9, 
   3.843050903178784*^9, 3.8430598468775735`*^9, 3.8430717925431833`*^9, 
   3.8431423879969015`*^9, 3.843151741400612*^9, 3.843156515122673*^9, 
   3.843237143768882*^9, 3.8432380648411226`*^9, {3.843238321121797*^9, 
   3.843238345093401*^9}, 3.843238379478986*^9, 3.8433181914367146`*^9, 
   3.8433218181706867`*^9, 3.843322898913895*^9, 3.8433254776579533`*^9, 
   3.8433270180824213`*^9, 3.843327986100343*^9, 3.843585059973129*^9, 
   3.8435851377675204`*^9, 3.84358559346189*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"5cc99160-73ab-4afe-b24f-5cc63d6ac9ee"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One level Pixel Iteration Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 
   3.84315184249883*^9}},ExpressionUUID->"e070b4d8-71c4-4459-9bce-\
bb029e633635"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Makes", " ", "plots", " ", "only", " ", "for", " ", "one", " ", "level"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"input", ":", 
    RowBox[{"{", 
     RowBox[{"currentlvl", ",", " ", 
      RowBox[{"each", " ", "iteration", " ", "v"}], ",", " ", 
      RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
      RowBox[{"pixel", " ", "range", " ", "for", " ", "plots"}], ",", " ", 
      RowBox[{"functions", " ", "of", " ", "current", " ", "lvl"}]}], "}"}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"oneLevelPixelIterGraphics", "[", 
     RowBox[{"lvl_", ",", "iter_", ",", " ", "p0_", ",", "prange_", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"flineia_", ",", "dflineia_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"flineib_", ",", "dflineib_"}], "}"}]}], "}"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", ",", "terTable"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"c", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"flineia", "[", "p0", "]"}], "+", 
            RowBox[{"flineib", "[", "p0", "]"}]}], ")"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iterTable", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Show", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Plot", " ", "Graphic"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"flineia", "[", "x", "]"}], ",", 
                   RowBox[{"flineib", "[", "x", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"p0", "-", "prange"}], ",", 
                   RowBox[{"p0", "+", "prange"}]}], "}"}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], 
                "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"c", " ", "line"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p0", ",", 
                    RowBox[{"flineia", "[", "p0", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p0", ",", 
                    RowBox[{"flineib", "[", "p0", "]"}]}], "}"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", "2"}], 
                    ",", "Blue", ","}]}], "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<sign\>\""}], ",", "Red", ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<mag\>\""}], ",", "Purple", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<flip\>\""}], ",", "Orange", ",", "Black"}], "]"}]}], 
                    RowBox[{"(*", "]", "*)"}], "\[IndentingNewLine]", "]"}]}],
                    "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"c", " ", "point"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"p0", ",", "c"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Arrowheads", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p0", "-", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p0", "+", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.5", "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", "Label", " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{"Framed", "[", 
               RowBox[{"GraphicsColumn", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<df= \>\"", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"dflineia", "[", 
                    RowBox[{"p0", "-", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                    "3"}], "]"}], ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"dflineib", "[", 
                    RowBox[{"p0", "+", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
                    "3"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Current dv= \>\"", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"iter", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Current iteration= \>\"", ",", "i"}], "}"}], 
                   "]"}], ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Current level= \>\"", ",", "lvl"}], "}"}], 
                   "]"}]}], "}"}], "]"}], "]"}], "]"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "iter", "]"}]}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oneLevelPixelIterGraphics", "::", "usage"}], "=", 
     "\"\<\nMakes plots for the intermediate solutions of a pyramidal level\n\
Input\[Rule] [lvl, iter, p0, prange, {{flineia, dflineia},{flineib, \
dflineib}}]\nOutput-> list with the dimensions of: {i, Plot of flineia and \
flineib with solution v1 and v2}\nlvl= current pyramidal level\niter= \
solutions with the form {lvls, i, {v1, v2, status}\np0= pixel of interest\n\
prange= range for plot from p0\n{{flineia, dflineia},{flineib, dflineib}}= \
Current level functions \n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8427020954150505`*^9, 3.8427020988413153`*^9}, {
   3.842702385632077*^9, 3.842702416994393*^9}, {3.842702448651881*^9, 
   3.842702577499611*^9}, 3.842702648816579*^9, {3.8427027349891987`*^9, 
   3.8427028031012254`*^9}, {3.8427028445459523`*^9, 3.84270288526834*^9}, {
   3.8427029182413588`*^9, 3.8427029214268727`*^9}, {3.84270300558247*^9, 
   3.842703051350966*^9}, {3.842703139483245*^9, 3.8427031562282667`*^9}, {
   3.842704218707594*^9, 3.8427043018460464`*^9}, {3.842705374815054*^9, 
   3.842705408516508*^9}, {3.8430518220648627`*^9, 3.843051849680374*^9}, {
   3.8430597332866526`*^9, 3.843059734020817*^9}, {3.843156400213278*^9, 
   3.843156400551117*^9}, 3.843239390660591*^9, {3.8432394705810575`*^9, 
   3.843239516445298*^9}, {3.8432395775657816`*^9, 3.843239585057124*^9}, {
   3.843585122764623*^9, 3.8435851298126793`*^9}, {3.843585196685196*^9, 
   3.843585215031638*^9}, {3.843585317334334*^9, 3.8435853330376663`*^9}, 
   3.8435853854116073`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"ea40331c-dbbe-4cac-b15f-3b84a0b270cd"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"32383e90-bbcb-4b66-886a-\
defc6ad800ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneLevelPixelIterGraphics", "[", 
   RowBox[{"27", ",", 
    RowBox[{"iter", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", "11", ",", "3", ",", "  ", 
    RowBox[{
     RowBox[{"pyrf12", "[", 
      RowBox[{"[", 
       RowBox[{"5", " ", ";;", " ", "5"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.842702628017497*^9, 3.8427026756641293`*^9}, {
   3.8427029479441376`*^9, 3.8427029808126087`*^9}, 3.8427030934790354`*^9, 
   3.842704305418618*^9, {3.8427054725272818`*^9, 3.8427054731717443`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"829e1015-b972-48ee-82bd-17891ede8aa8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["All levels pixel iteration Graphics", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843151795867714*^9, 
   3.8431518733150144`*^9}},ExpressionUUID->"bb6904ef-b86c-4967-baca-\
670303f2d955"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Makes", " ", "graphics", " ", "for", " ", "all", " ", "levels"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{" ", 
    RowBox[{"iterations", ",", " ", 
     RowBox[{"pixel", " ", "of", " ", "interest"}], ",", " ", 
     RowBox[{"plot", " ", "range", " ", "from", " ", "pixel"}], ",", " ", 
     RowBox[{"max", " ", "lvl"}], ",", 
     RowBox[{
      RowBox[{"lvl", "'"}], "s", " ", "functions"}], ",", " ", "threshold"}], 
    "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pixelIterGraphics", "[", 
     RowBox[{
     "i_", ",", " ", "p0_", ",", "prange_", ",", " ", "lvlmax_", ",", 
      "pyrfunctions_", ",", "threshold_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Makes", " ", "iterations", " ", "by", " ", "saving", " ", "all", " ",
          "the", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"iter", "=", 
         RowBox[{"pixelIter", "[", 
          RowBox[{
          "i", ",", "p0", ",", " ", "pyrfunctions", ",", "threshold"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Makes", " ", "plots", " ", "only", " ", "for", " ", "one", " ", 
            "level"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"oneLevelPixelIterGraphics", "[", 
            RowBox[{
             RowBox[{"lvlmax", "-", "j", "+", "1"}], ",", 
             RowBox[{"iter", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", " ", "p0", ",", "prange", 
             ",", "  ", 
             RowBox[{
              RowBox[{"pyrfunctions", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "j"}], " ", ";;", 
                 RowBox[{"-", "j"}]}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "iter", "]"}]}], "}"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", ")"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pixelIterGraphics", "::", "usage"}], "=", 
     "\"\<\nMakes plots for the intermediate solutions of a pyramidal level\n\
Input\[Rule] [i, p0, prange, maxlvl, pyrfunctions threshold]\nOutput-> list \
with the dimensions of: {lvls*i, Plot of flineia and flineib with solution v1 \
and v2}\n\>\""}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8427019680489807`*^9, 3.8427020564825096`*^9}, {
  3.8427031047211*^9, 3.8427031206242104`*^9}, {3.842703170676693*^9, 
  3.8427032422755423`*^9}, {3.842703272466749*^9, 3.8427034472837543`*^9}, {
  3.842703507827428*^9, 3.8427035341712313`*^9}, {3.8427035941239185`*^9, 
  3.8427035971982145`*^9}, {3.842703945056048*^9, 3.842703951904691*^9}, {
  3.8427039828364816`*^9, 3.842703983157879*^9}, {3.8427040301235666`*^9, 
  3.8427040573850813`*^9}, {3.842704096420404*^9, 3.8427041269785533`*^9}, {
  3.8427043169363766`*^9, 3.842704400363101*^9}, {3.8431564625064917`*^9, 
  3.8431564628645983`*^9}, {3.843237879292144*^9, 3.843237886296726*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"8c4ef01a-4a11-4128-b3bc-760ad1051576"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"dffec931-627b-4cc3-a317-\
ee1353adcebf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"pixelIterGraphics", "[", 
   RowBox[{"10", ",", " ", "27", ",", "3", ",", "5", ",", " ", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", " ", "5"}], "]"}], "]"}], ",", "0.001"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.84270325045253*^9, 3.84270328052081*^9}, {
   3.842703403288223*^9, 3.8427034035937777`*^9}, {3.8427034592427025`*^9, 
   3.842703465318783*^9}, {3.842703548805395*^9, 3.8427035491911554`*^9}, {
   3.8427054768197107`*^9, 3.842705519821834*^9}, {3.843238172424226*^9, 
   3.843238196428686*^9}, 3.8432382902546587`*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"627ccfd2-c7b9-4325-a262-7ef772ed6904"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i177$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i177$$ = 1}, 
     "\"max\"" :> {$CellContext`i177$$ = 50}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i177$$], 1, ""}, 1, 50, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$8090#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8090#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV1nk8VF8bAHBZSrJm3wohKVljZu7MuccSQqIoCYWsRdaZCZVdSYVCka2E
n1IqZOuQylaEkFKiKCRrC5He8/7D5/txnXue5zzPc66i24m9HpwcHBwP8Y//
/xabEMC/KPCK4ZLACddTZE4ePYuN3ZLNyWNpfYpUO3BMbxb7aJfRVy3iFEl/
1uL5aRUFLkT/PCIjfop0z4l58YyLAhuPv+tyb40gH+xdvHJuDQUGG9lPt+tG
kDa1I5tFhSjwO7XQdFwonLyQVLtbdQMFhgaceH1hhE3yjwh29wIKPCawr0jo
Tgj5N068z9GZAseuBT+INg8kv6aFZpiGU+BQ9cTX4wPHyTeO4Sm1WRT4PD9L
N/aaFylGutXqXadAT+/w6bQEL3Lvpl2jpdjO11elPAz1Iju+SVDzsimwPa/y
2Pq9XuSziAdDsbkUmOdd1eG8zossyxnXtL5JgfkHnjeqRHqSZz8d6BgqocC6
/gMK1kEeJNVXb93qGvz8lYWsHJY7aTH69+A57B8K3Q91vdxJpyPNxfy1FDg5
1DjWs9+djNzvaCpaR4HXlKvPEfruZJNRZJQCosDsvhtNV3+6kftkX/6mNVJg
Yn2tYhLTjfR76T5yoo0CbSIT12yIciXzt19+/PYdBf5Tu/XigP9h0ldob5Hj
AAW+9D79PXnfYVJvRjhlANu1/fnZD5TDZMv9i0c/vKfAldoHU2Vch8kpvcR1
w4MUKKJxqR1kupA0Iurg2CcKHN11I2a8zZnsNjvx89cEBf7qLdMVpjmRnK6W
GmJLFMgX6vtot9VB8qfgWr8kbPYxvSY/g4PkWF3THe5lCtRyusTKUjpIvpIy
2vYTe2gkLnnjogN5vZOytW+FAt/m2hu2FjqQBlB1y1VOKrzDms+5yu1AHt+4
SkWOjwovXwoLWmrdT/Z+qJRTlqbCkyLme1GYHXld6UBUIXbU+8+TqV525FGv
36NqMlQIuo1ehNrZkXMzBvc0ZKnwdaM5zXO7HSnMXW1oIE+FFXa+OrOf9pFW
6rWeFopU6K1+f32J9T6ykVlfFrCFCvMFKjrDtfaSd4VaTB5TqfCnZpeGoZwN
mavo9U+fRoVFu9e1RgnYkMm6q2vKsC+tFvue+XcPGXzARLOAoMLI+sWv657u
ISm5DdLnGVTYuep6z0/rPeST7dVTDoZUaD+fdmPI15rs2V1y9Yc5Fe4e03rf
9sCKXDyfNLnVgQpdJS/KVUXuIm9wKRrdxJ5/ZeE56b2LtAqvyJA5SIVfBkG8
ru0uMsd30GitIxUqibKU/ijuIo12aV37cogK9+7tqPd6Zk4mru7ZmX+YCnmV
rbbW8ZuTMlGyuRJeVPjpjfK91bdNSTqzxHYVkwplMs0frZUzIatjFV9GYwtd
qBTlWmNC6l++asrNosLGLSutQnPGpFZZPLGGTYWaP5VE3VuMSZUJNxWBMCos
GV1pmA41JgVdZBelTuP81w71pPcYkUM7k/K04vF53bDZ1pRrSMaJ+08fTqfC
DV5rlRd6Ablt9nN9P7awSVW4wCNAdr88mGybQYXD3A91yKuAVIjdqW18lQpj
fiz7/3YEZN2cXLBqJhXe/fp7vmqYQf549eLXZDauj0m9Fv8fdNItccvKyVtU
KDKmeFhmO0Gu9cztmMOO45yUSFtPkGWG4rnHCqlQecPZ+1t+08iVBQ7oXESF
F+WKyLwGGpnp1R8F/6PCX5fSUhvsaGSXSQLPmlIq3Krw8XZdFJWE/0b4r5RT
4San8EDJKQOyNpDBKVlBhR/9qzqyXhuQ+iNpv69hP0ZxxUS1Abmt1fRTbiUV
jpdEHG+PNSClLhc/ul1FhQItSQH68gbkjOpxt6d1+DxKEeDdp0/mWc8/mntG
hdHfSnMXu/RI2SeWpaHPcf5fCYbV1eiR6boFNxaw9a45FWbc1COTpOwvrDRR
YX2A76X0UD2S/anSja+VCl12cgw+lNEjbZhhAkrtVGgtn22030eXXJWzyt22
lwo9LId6z0rqkHrMPfNd2E9mheRiuXRIT+vsmL19uN4X0fPL09rkyxVKwb43
VBg7Xft5ulmbvHo4YNT+LV7/ocTtqye1SS3Fj16OH6iwr/ykf8aQFulSUHfc
fZQKg+8kcZqc1CRrS1jM0J/4/Zf/GTnu2UpK2Txz+o7t8EQoSFlnKxnyU9jY
4xcV3qCsurdGfCu5HZYI2f/G8Tz5Vyk1oE7m9b4v1lukwoHI++iItzoZz2E0
ML9MhTYPpIs8E7aQtvv5YRA3Dd7nsVO26NtMfl2Vv/aEKA0m0ga73z5UJqVA
p9gsdu8EZ5V0pjJpHvZvY7AYDV7f5n0sMFKZLJlz1meJ06C1oZOA925l0v+z
jPsZSRpsaXgyEzC2ifzx7ErdJVkabMugvfyitInkOHv2RNkmGjTLLTov9J8i
qf3sUZiOMg0WDGhs1UlVJN04vsaVY4+n68odC1ckn7J3Xq9SoUFeb5WnG60V
yXgfztaGzTSYH3PyTeoPBZLfMkKpayt+v8L1srSdCqS0YEDvrC4NxvTIV4RO
y5Mhkjn6x/Ro8C5veuurVnmyQ+Flxgg25YzMVusCeTJWV83xzQ4aTNcZTnh0
UJ6cchgarDOgwZqaK4m0Jjmy8abNWAJBg5dY/E0zt2TJY1TtJXljGtw+9S8v
/Yw0vl8OO2VgN9XLvbVzkSYVrC48FjahwatvBeb1GNJkn8v4Ga6dNOg0ynPG
cUmKhLH53OOmNKjmEfGWclKKFHslIlhuQYNrNZb+0w6XJB8fnVOw2EuDzWqr
diZliJOT3FxF7dinjEyz5ljipMwtUQ3bfTRou7pz6JSDOMke1aM62NFgUrPB
G04ZcVLHk2XruZ8Gk99yNTzNESOLvZajoh2xA779WndPlEz1Xf25xo0Gs1Q+
FaydECEb+CR9gDsNdqInWoMdIuR0yebpJ9gco5JXex6KkFbfzJdajtJgnPjd
dNXTIuSa4+dF33jSoHCpxg0nMREywk/YZN6XBompPq8lU2HSK0Dm1tZgGrwz
zLx/96wAac1UaLqDre3uYmJ6SIDUi1D9qhFCg4UvO7ZLbxcgOc/qbNEKpcHp
P1/2BPTwk9dzLUr1WDRosJtRMriJn+zsCKtghNOgxeTzxdR2PpKiMfB8TwwN
6pp794la8pIbdIe/dP7frVbr65R5SR7q1zV7Y/F5Hcrtvrayhuw2md9lF0eD
fY5bVX8+WEMed1rX4ZBAgzpmmzlUN6wh888Tfa7nadDl71y12QoPyTeR9SX4
Mg3eE1uS2DnCRco8znOexC4fffTOq4mLVE++1XP0Cg3m9AtvKi/mIi317zXa
p9Gg7wGjkhY/LjIpujHHIIMGS5X2nviwyEkKyY7vX8qkwTzdq9VXpDlJMSv9
5ugbNNjq5RCmzeQglTcSYAk71ic+lnDmIHfMkRXBN2lQaEuJg68JB7n/6q6b
Rwto8Lf46eYdohxkxojTGdNCbHl+yr+j/4DMqRgDvhIavBwjyh8x/RdsvNtZ
lHIf5/fWj/U1BkuAW6rKWOwBDW5TK67+xbcExqJyP6ZjS+12qjo9+AeU2ftL
Xn9Ig9mVvPQT8X+A0d91CYUVNCiWadjZ/HYReFqZedZW4/gpZW2cFxfAnYnH
yqNPaHD3CY+l5S2/QLLdrQavRho8zW/YNs7zC4SiJKcJbCdJzc/in34CkHro
yvRTGqwuiw1Uz/oJOqmLXH+e0+CumNFgmvBPMH9W77NgGw0yiD+l+Tw/AG3z
7XxKNw1qXrL7Ni4zB8xdUi4/wNaOOEed+jcL9qex4ra9psHIEl6DjaOzIJjL
xEehhwY37ZjlWV02C+58fK/F20eDn7/VOA+azQL5q4INb97SYKZimVnomRnA
sTZokDmM4z9roKMhNQUEoUPnDHZ7FYzQnvwO5Fig0fcTPg+RtLjwhu+AOspX
6PKZBqlC+m6DPt9B0JObfqajNHhEcFGyo34SjJzsXRYfp8FPuVEyL1nfQPME
RbZihgbZIOXmb9FxcDFBrHjbLH4fZzKLNjMG7JRn9Aqw+6rPhJe+HANDzkXW
l+doUILj4lPF+DGw0CkeHfiDBj2bxlV1l74CtUdzYxoLNDip9biD9f0LSIy5
U1n4jwbtdF4Yn5oaATYKZ403cBBQ5HZ3dNGrESDx2L0zDdspuzV3umwE3Pgl
MxG7ioDZN2s2vA0eATU+5+TduQgY9Z3jhtDSZ/Btj2fsxjUE9N/63nxF8DOw
klPYe1WQgAMLNX6nrYbBlz2DXDJCBAyLeTqwuH0YRMZcr8jClhtpskwXGQYV
E1LSucIE9ExdM679ZghsqBYZurWegJdSg2Tn3IfAtD2X/0MJAl5U/TvNv+Yj
SL305VzHBrzegZ68f+UDYNvTAsJmIwEbntckzkQNgKZfbt+7sDdf1vi+Yc8A
+OP80aZXgYAVipaJuhPvgPu2fsn3SgTUmPDZStn0Dui1tt4aVyXgBmF76qW8
fvCGs/QJtyYBl971czObe0Eml2/rKeyY+RWzqpxe4MK9uesXtjDroMI2Zi/4
wpM/NKZFwCrvCJlilV7wizft30sdAmambF/8Ht8DJIROMdL08f56xuIy9r4G
+2V3V6sAAv5YGFh7WaALyMjxPcnB9pPKL++Y6ASDcs0tkiQBFb5uNKa0dALP
DYb9ayEB/6PJpl2J6QRMxR2/vxsS0Pl22M0PC69A2mb5HZU7CYj8igs3fm8H
Pbrfy0x3E7Bp8csuX8k2cPxF0odWbN7gpiju/lbA7b6Nb7c1AZdb8npXXWsF
eqnH3PftIWBv+MECZblWcGVmXPyILQHPibrf5NzcAuxLv4SdtCegVJ2k3aB1
E+hTHTK540zA35H8n3hGG4E/OhOo6UJAUfCgL/B+I1i9f2POA+xfLlNnDE43
Av04l99Vhwk4T2c87ZBqBOmf3//33JWAM2cedyvvfQL2570V/OhBQEaRSIxj
ST14I/26X8SfgKcj8iINd9QAVUnvvFTsVeIX9YdGqgFT7K+X6AkCysyI1Ein
VeP8bv4tFoDPy+PIjOPvKrCfO1xcKoiAnOvKE1Y/fQT6ppT2bmASUE1QrCOO
WQFUJx9J52JH33ufd1GzAjDHrYY3sgh46LjloS3j5UBihBmgyCbg9e25u9e7
lIP9b9suKocR8NOl2rQb1g9B79OgF+qnCfjn2i0FaHEfKD9Zc/k29rdW0/vK
/PdBCLruuO0MAbd9zzZO7SgDYtVN4xqReL88c7qr7cuA3V0ZXu1oAvr4ZrrG
dN4FPVcbTQziCTjb4ygsvuc2eO23HhlfJCBxZc2WFb5bwIpSOFCLPaUUJ7Ou
ogA0cdIWdS/h/QYPJHw9XABqMlz1lJMJ+PXfB+q6qpsg70lZCXcqAc+bvawY
CbwB/MX3ZDxPI2D7qbfD4uvywNjHT+WMdAJ+nIiMc4rJBW4lzO4K7NdRzs5C
cznAnswRKMwg4KOZtxI/XmcDus/3mPhrBDzQyqma8F8W4Ht8PsAsG/fL3m0u
ZGYGiE3YeLEe+6ph7kjVhgywYvvwtkEOAVOWTuVmFKSD2S/vvmzOJeBjKYmw
U+VpoF9Y3Zk3n4A9068NqkYug8KjLbtaCwhot5x92j4uGShoOnkZ3sL5kDp7
b9fGZJC5OB1bjV27k+nJH3oJXLgo2fBfIQHdk1V/5o9fACFVnvqJxQT8ecN5
+edMIjDk59lkeYeAJZftuaVD48BFv3CPduzG+5YwqTEWvO+YLdpTiuORHjhR
vz4WsFMGt9ndJaCpCSe5rzYalElU6TuXEbDNU/rBvW2RYIW1/eRH7MgATtJ4
4xlg9bag1vU+AS+n/bJ3njgFvmalQM8HuP9dnrsJJYeDDYrHLE6UE9D3uqWi
jxQLHI8eTprF/rnu4uq/q5mg5vOBV8EVBFw78SXi1J8QYF9oYseuJODqCTuz
jTNBIGnrBpeoKgKq2A8vtGzxB0s7ugIv1+H6UaAdbWcfAeYZZuXijwm4R6j9
fFuvM0hfePwrA7vppyBx+IUj0KktCb+OCNgxr71GecIO+MLYuFsNBKw3Ovxr
84gxqMr/07z5Cc63gDb/pVAGWM0VyFeCze70VG921wX5z50v3W0kIAeHXoB9
vi+j38Lg2qNn2MkM3kPjhkj1TukA9TkB86JW6X6RMEUhAsob6rAbA3v0jVQt
kFCn8M2GJgKOtU3XtP60QU7aCaNGzQS8u3CNS7BrLypJ/bv5OXZ751fBjmw7
ZGo/cae1hYB81xOf2vE7oCuVR6YtW/H53fgu6XH3IPok+Ua7A9uQJRwXa3QI
nX73tLK7jYCLZff/xRi6oIrD2Q0DL3E/1172Nn3lirZdXH/Qvp2A1ll26X5H
3FBBXcJsB7aSwIGNqybd0BXpIKXGDtzPos80/5tzR/zmX2uIVwScPhJZOuB3
FMUwnfZVYKvdVQyu/HwUBb02jS3uJODE48rGvHoPNLGqTk6pC69PWTbqUPFE
rlraFVnY5za1/f4Y74n6XQp3i3fjenHa9X7kkyeyuSD75SL2SP2Nb9+oXqil
Nvk072sCCm75p8Cd5IXICR7JaOyg4AQW/a0X2m42YxbaQ0DujfUhuzy8UWGo
x9AUth6lQYRe4I3kC96xvXvx/XkzuS5x0Btd6d4j8gmbST8YYCLmg/hXPf/v
UB8B44eM1Ng7fVCsJs2oF1vwGPOjXpAPWna+9876DQElquRSzmX6oJAk5eAW
7OKbLpQ45IO+1VxbZ9RPwLq1Hp36gz7IbVywoBb7ZpODXemiD3onGUvf8ZaA
hZVu9b+FfdFe08Weu9gJFbf5VZR9UVuIv5/aO/w9kOtkYKLri4xufua5gX3U
Jod2FPii6i6HHNkBAkYUXBO5stMXaXF06Kdhf2axHn0y90XF241fCb7H7y88
svkwtoJzlddZ7Pf8p52kTHxRxnkNDs4PBCyPX7CVp/siwZobV8OxuWYWOE9p
+aL4MUntn9h8KsW+poq+aEXiQqv/IAHLVmnGnhX0RcydnG5j2MCt0mLvgg+a
Cmb9cf2I41fyqn6A4/W4MZk6gE3d6Pui6okPet/putV+iIA8emPhwfk+yO5f
39MO7Co6X9PsKR/0UsPKyXyYgCfFFwuMDvggE6cnP55gl2R+EA3V8EF1ifoX
iE94veIhgascPki3+rZKBXahzNaLNZ3eSEkifX/xZwL2X6cK0ry9UabJumnF
EQK+PbqHu0LTG4kERyZkYa/ntPE79sMLcXT6Vl0cJWC3ekVsU6gXGjxHyoR+
JWDRrgTDtwc90f6q8gdT2BZtx8xe83ui9i9bLL3HCMi/Kvpa5GMPVGcsFnFo
nIDXVr4Iakt5oKy/Yx8Mv+F+3b3uUVK5O2pL2SdSjX3jctqffAd39EcFmWhN
4nhK1h398ccNOVhfvr3hO+4HlQa5czQ3JJHLOLk0RcA52eO2fwuPoFSYKlYx
h+9v08e2PdGOKDGGsFT7Q8CAQ+fdoiPMUI1k4elc7AaNP5ovru5E47eFH0gs
4fqefCAuWWGMzHtGpXiW8ffBZ/Ufuh9ItFol+cvwXwLCn5Z3Z/u0UHTTSFTW
Kjqc2eoQtVVwCwhbe7FKcC0dWp2H5PFhG3Bab0A4Gdv3eCnj8jNbEHVYzUeE
jw4jwtVWmxXuBWcrGqXF1tGhRUEOh4OHHUh3/R0mLUCHR/yHJ/S6D4CH1UcY
yiJ0KHwxWCjOywVUjpSm3cL+ca+Zs0f3MKgRWvquuh6vP3Hme+3KYdDokZaz
RZQOoRD13baWI6BTpO3fdnE6dJt4uzXQ1g1M+ug2UqXpsD1d02DcyAPMXImU
qcVujV0WX53jAebr24PoMnSoG6iaELrgAf6Ie28iZekwnodeuPu2J1jbeD3W
RJ4Ou4ylz3zn9QaqMqvN9ijSYYPnz35Y4AsOt/W/OLqFDpu+rEgOOZ8ASY3K
YR+w50nbeufcE6CmJkBtvzodLj54uGrP0Akgdps3zmwrHR7QE20z1QoAbecp
QF2DDkMGrr4wLA0Aeruvlk1r0WG/T4maVWYgcNs54uKtTYdPlDWP1FQGgksM
LYFhbOGf+oMj3YFgQqPFp1uHDnmvCVqd4AsCuYILShV6dNhJTzNyYQYBvs4D
aWEUOhwIrKE0GwYDSstN43nsx7teuPM7BgOPhunZY1S8P9LRWjgoGDSUJVg7
0+jwkoU2h31+MAhNebQG0umwSjVcvW85GAztlQzjgXSofJJi8K4oBAhauqud
xh5ejhuVrwsBhPG9vl/YE0VWL5U6Q0C6rpnumCEdvtOPHQ74HQIsxViTbcZ0
+C1+32kl41BQ2dvnkmyG8+mnsXGlIxRUHeXRETWnw5NbfG2ahkJB9bwuTzr2
Du7ThWZzoaBOJOV21i46NDZ6lsgUY4LG3ZYLhZZ0+I9/qTLRngmevT/5YosV
zteUQqqiBxM8P1accwc7YqeNSnAIE7Sc49n5YDcd7j91lGGWygTtz+tTHu+h
Q2R0+VFVGxN02E0dhTZ0OLao16fezwSdn+UoT7EpEevhwVEm6F4VNthiS4el
/DL131aYoJ+ht7VnHx0+Szz/fXI7C7x76bay344OuZqJcVMaCwwcSul6i62g
7PjUZScLDJ6cYn20p0PL42HvWxxZYKSi+NnEATqsOHJSJSmaBb6YvMnwc6BD
1662jHfnWeDra55jM9ivq+rCx66wwMSsm8ivgzgeSVk340IWmIxMGWE70qG6
sl1r8l0W+C7U8GgJO6u76VhOJQvMaMi7rHKiQxk4t3XpOQvM1Vlqx2LnXWHd
tWhngXnLMO41znT4peLVjkM9LPDL500Jvwsdzp5LkWsYZoHlWym/JY/QYXjB
+facRRZY0Wtoy8S2TXqzuLTCAv+eTmXLu9LhULoakuVmA85Pliab3OhQmwzu
vynABtyBYZKF2GFB1Mv869mAh+O/CTV3Ogycz75HkWAD3g2rU7YfpcPItQN9
A/JswFeqd/Q+tqRepOk+RTZYR3c30POgQ/s3TsMXldmA/0UK3yNsTvDm7cXN
bCDo2PCB6kmHgw/s3faps4HQ+FRZHXZmJCh9v40NhNnysaQXfn7u96S6Jhus
X2N1oBG7zXZsH9BmA9H0MPWd3jj/E6FikrpsAOaK9tVjt7SXoSw9NvC17o2g
+uD9CDhnft/BBmklnIUPsbclxXTyG7BBw2qtVxq++H3bNRIXsb+5OS8UYfe+
cZt5SGEDifpERaVjdHj6mMY2OpUNDGWrLK5jS7eneaZiH2eNBkscx+c3VNBS
iZ3xen12MrbRWffw/7AbNWETnx8dfi1+V+SLPXXebzoWO09FlPUHry89lin1
D5vjk/j6g9gmJi2GJ/3x/HryLT8e7ycg76fvPHZHUfaeGH02yFpWuuJ3gg6t
2Xome3A8TQ42j79i50tUF0/g+GfLT31xDaBDM0+9QnsdNpATuS30Hrvd4p5H
shYbmPv1U/YH4nwV6QhnbWeD4FYet07sjCPNHaE43zkquuctguhwyYHZpoDP
oy3qSPkzbM8Q823X8Xkp0GpXVwfj+r1xsolbiQ0s08c0dUPoEERM2MxtYAPm
nPjBUmzdNTdGy2TZoL0k4HZ+KJ6/iLc7X4wNFlbn9Mgy6fDqg9bwHmE2UHZ/
8TcN+87oj9f9/GwQJqtqk8iiQ42rpboHcD3eYu07yc3Gzw9aXej6xwKdryNv
nMY+N3eSumGJBTYnDfwIOkmHIiL5GpqzLNCznHztUDgd8vHLceoN4Pp2QI29
2Hfzlfx29rKAesW3b3si6FBVcSVI/RULRPmZApNTdFh+7MD8iUYW2D649Gnb
GTpMWZ9k/B3350HaFv4i7IW3Opx5uSwQm75/h2IkHZ4t+nlz81U8H6zvJ4hH
0aHm5zm9yrMscLbec9tKNB2KNzxb2+vFAp/yukJfxdPhui0XPBkbWOC52w+q
WQId/uG61RAjxgLFypIrCPteepbCTT4W8C92ir97Ft8vrK4kv19MsHTva/qF
RLw/bSnbHS+ZQKz+7yPLi3j9b10uDwKY4HekQsRTbINMQYOso0zwzsgYEpfo
UN72/ZnDDkyQ13S2RT0Z/933zd8wkgk0OkTfrk2lwyR77i+r+JnA9MOWP81p
eD4ELtIDc0LBllwrRKbj8/9xBmxKDgX8rieiH2Ebdu6SfRgVCrpHyvmKMuhQ
Tcluld/RUHB4kpSNv4bXJ5eqd6uFAvaSPd0kmw431e97OPJfCPhPOvp0QwHu
jzdaIay0YHAkKMHL6BYd8jMiRG9EBQOpF0k2z7AFL3jTSvyCQXxEhlJLIb7/
FRNH9u0MBm4f7zS9KsbfG5fqhNbPBwG5W28EP97B81CNNnPUPAgka2nk/i3H
91lKqBUaCABMs/562nM6HPnvrojEkWPggN/7lYfYAXu1Ars0jgHK5SGGRhMd
Xu+Qo3su+YI/g2O1G5txP1ZutZdP9wWnmYuPuFvp0Jz9xrGt1QfE35Ip63iJ
59t+qQkPdW+QzuWc59aD72uVl897uo+CivrhyMTPuH9DG+sYBYfAn8nkMHdu
Bow0J0+rGWkjytlr2jeVGbCsYCHzxC1X9IoVEi+rwoAUvmXZyfeuyNNrz8Bl
7IDC1uM2Ym7osilPXKwqA/IXcpm8inZDU9yB/R5qDPjy8UO9bBd3VBBlfkZt
GwPaSfOf2iHigYTDf78s1WXAOx8Grukc8UZFvt2Kqnr4fYcMZEWueCPgWMrM
wT6r4ZLT3uyNjlHdFS7tYMCC6d0BH7f7oKbfHcEBBgwYO86867zkgyJCCmV0
CQbsPPVr9syFY2jMz967yogB++Mm4vSv+KN9P9Z/ohkzoJToKnWdZn+EwjoP
PcbW2sxr/mfRH11JsNzTaMKA1jZTrlMuJxCZb6j/0pQBN7ffvKghGoDSezS4
hywYcMNA2zVWbwAyJlbnrdnHgHN5Uz+UTILQ3SdPpROx4+OSE9Y4BiEp86jL
/HYMOOxsIvnyRBCasluOF7FnwGaFUY8fmUEo03/OT/YAA572VjSvmw5CM/mD
hOYhBkztprj+TQ1GObyP3ux3x++7G/XtCwpBOk7BRZ3Yl1T+1Ri+CkHN9zRZ
FkcZUK1ASy/8Ywia2V8sATwYsL1oPvLcvxBkfOuavYoXA/5y7xUWAqFozDDi
9bwvA4rGjARkloeiiDTKTb9jDPj60dXWl42hSGT8R9BX7JpqYcOBzlBES/Zb
P3Ac/7948vj5yVB0YdDFttEf5+tFUamBEhPphBu+Sg5iQNllSZ+0eCZq6vib
wxeM17f+l8VMZaJDSjX+sdiqujVu2jlMFNuqI8gOYcC6oile3QomeiOpvPsw
kwEv9mrsdBtmouPHhuTeYm91vHBz3SQTcdRfn9zLYsAKO3ObC7+YSN1TPMmU
zYAh2WJzUutYKKJ89QuNMAa0kfz02UqHhYR5n2YWYTt/WTAsJ1jo1qEzvorh
OL+C88VzJizUwbmwVjyCATUP9U7N72chRdtx8+VTDKgQpfGV6yQLVRbckmKe
ZsD6BzTpjVEsZLHgOjaNbaHwUFD4HAuF5L5L+HyGATnyt+QHXWWhpu8vmtqi
GLChm3d2RwULrS86pW0UzYCJxAWVt7UsdPiI5vVqbO9C78S9jSy00J0aWByD
8xncZdncwUImSSbvN8bi+PdUHGrsYaGUnb9MM7DXbMzmvPyOhdSrDsrFxzGg
3nmViPJRFmIGrkv4i92dJ8fJ842Fnqo/ng2JZ0Dp68/i1GdYyClbodk9Adfv
jp7J+UUWuhj9NdDwHAMqXrrDG7GOjd4R195XYR/1H7UIEGKjzT8tzLQSGXBW
YosDRZSNGrzuym08z4ARFadoxjJsxK94JCEd21t5tDFOno0OvhOZE0hiQDdr
7lNZCmw0ZxXavIxNfy7xnVRlI7B6s07IBQbkPH9kf4caG52v77/+DfvWX0EH
za1s1M9OXON+Edf3wfYXbhpspKxDD3qHrT9get5bk40Cvn1/b3uJAQXrVQOg
Nhs9Lsg1a8VOMpSym9BhIz4X2wcwGceT2yTsqcdG+yW55KuwDcU+nHm4g41u
dJYnaKYw4JEPq8O79dlo+pznXCH2jP70QKMBG9GNpZw3pOJ4nA0jYilsdHa5
tTkNe8eF4h2SVDbqqQjXEbiM5xVn53AYtuIJjexY7OI/bo73sP3VPq5Zxta5
z3+yHLtmODko+AoDjrqxJROxV2cZfZjA1rKyFdLC3mf3w8wtDc+v/4xohfh9
eQKFD95iuzz6HTiJ9zPZdEDeNp0B1R/IJnNiUyLXnm3BPtx30H8MxxNHrZ0j
MxjQ94jzl2wcb/fccedH2A1JXV1Kumy04c6Glu1XGXAww5WPhfPl69GpU4it
hap8MnE+H22Izpa/xoCb6NGtSTjf3P26vGnYOtY+XNb4PGxSRoP4MxmwR0t6
9gM+r+sWGR9isNkKjON0fJ7jXLvMl7ATD0Za+2xio2jmHfmJLAYcuSZyTwPX
Q4emy1nX6wwoLFM59EyajWTHheb7sdm9qkNbJNio/FBwS3M2zs+09D0nQTZa
Ja6iS+YwYFPznLY6HxtZd/RlV2JXvzQZf8bDRl8hLfhWLp7ve1Y5uS6zEG9K
B+fmPNx/2c8753+xkNqwW2oxtt+qwsZdsyzkG3X+/u18BixkfTtI4v5I7Npo
qHGDAXXrvbMHB1notmJ5513s9wk6mbCfhSafvJ++f5MBj695v2TZxkL86wPP
6Bbg+2b+9coP3J8abjxCFdhtL8x/H8b968+5fXvVLdwvJW+5w2+z0IzRmeOo
CNcn/zeDhrN43lwWXSaLGdDTSD4p+AwLaX8uOv8Ee5mqYf01lIWCYjpLnv3H
gONvJByE3Fjo51PF8bbbDOhQ7a7mZMBCEmKVbKs7eN6N9iULbGMh/aMWvB3Y
3UVnP55SYCE2d/DmrlJ8vxzqP5bJy0J/TJ55vLnHgObHwkcf9zKRTJrDT4cy
BoQUfRXXFiYiRidj32FbBSY/fVLDRBFx4gUf7jPg89R9DjV4/v577vnp80Nc
36e8EmLcmUhBYinQoxzXS0aAK78dE0HPS6u+Yu+dO7ne1oSJoldXKUxU4P55
83iHgDITcZutPTzzCO/PylnVcigUKWdkTwVW4Xp2qXUu7QhFO79qn57H7o8P
G2mtC0XxCY7Zv6rx8wlWctpXQ9HaltsDy7UMuEsv9d0Dy1AkuMvaYW0Dnr/J
RJ3DrRDk4DnMiMb25LKZeJYcgm7GhGxawlYZnGucDQ9BFJQ5NfmEAce0XvQk
2YYgV92vsZ1PGfCEhIzis8VgVC4feT+jGc9T4tVFMRCMVmiiGcItDDitNNbA
VglGuxwKI85hJ/JpKGbxB6PB1Jdm4a0M6GWo1C79Lgit4ZUedHnBgBlSgif/
BAYhx7n7fKqv8PdJ07l9qmmBqEBo50wOdtXdyKeO7EA0va2/V7KTAWs1DUct
DgWiWK+VvLVdDNjlvjrXWSEQlb63MPjejfvF5WeKeVEA4mj+7F7eh++/H2ts
NtmcQEVZ4o+NBhkwCpTuKx/zRckC0g9asekJyQK3rviisDNyRTYfcf5PdMl+
JH2RlfumFJchBswTag/TuOKDZtS1PcI+MWDHrK3aZj1vRKmxEnjwhQFzK5/7
a9h6oLb+GGfFaQb81zussrLgjB5aJOwtxi4I+PElQdEZXa9LNNOcYUAzjq7C
s+ZOyD8vRZsxy4C8vf+VfktxROu9c3kOzjNgpfbmmxvXH0CHfteUJv/G9Wt4
Qmjp4h5k4oNuSC4wIM8hw5kNd3ej7QNPMnKwRwQrlcXbLPH93RJ1Z5EB5bnX
5QQumKGC+D77liUGPN+47F2zHaILC28t9izj8+Zb+hPpTUdM3w9kH7b0GRtF
CT8KMrce2TLyF98XySvJ7W5aSLvh64ZjKwyYXl7xsatIDcnofBOdw85+pzy1
EqGAuAqmeE/+Y0DbyOvP9ROF0aT43N9/2NcEpFozt2g9/h8zeLfq
                    "]]}, Annotation[#, "Charting`Private`Tag$8254#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8254#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$8418#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8418#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$8582#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8582#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$8746#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8746#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$8910#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8910#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 7->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$9074#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9074#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 8->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$9238#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9238#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 9->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$9402#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9402#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 10->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$9566#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
ANefbE4=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9566#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 9.938048320860675*^-6}, {
                    27, 0.00018944243488774607`}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 0.00009969024160430338}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 0.00009969024160430338}, {27., 
                    0.00009969024160430338}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-4.92357755459993*^-7, 
                    0.007436494259221164}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0000315\"", ShowStringCharacters -> 
                    False], -0.00003145542308971751, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.000443\"", ShowStringCharacters -> 
                    False], -0.00044273941603837225`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -8.64}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {101.85, -25.92}, {Center, Center}, {
                    194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {101.85, -43.2}, {
                    Center, Center}, {194., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "5"}, "RowDefault"], 
                    TraditionalForm]], {101.85, -60.480000000000004`}, {
                    Center, Center}, {194., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 203.7}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 11->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$9730#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9730#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 12->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$9894#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9894#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 13->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$10058#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10058#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 14->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$10222#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10222#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 15->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$10386#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10386#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 16->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$10550#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10550#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 17->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$10714#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10714#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 18->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$10878#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10878#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 19->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV13c81V8fAHBZISmzUFYyyshId557skNWwyhkhygjybxXVtlkJlRWZpm3
dYwkVJIiZeSHCkUoo0LPef7yer/uvd9zzmedL2mn85aurCwsLBfZWFj+/3fR
Vv+ZB4EAR80Pm98XNKfxTvL19QMCpDjHkr/tN6Vd35D4YkYjQBXH+ZJLm01p
u0RV/3RhTxTWWstNHKXtNzWTQZAA2y506c3kHqUZMZP9SrQJ8O2uOR0e3qO0
uITtgpf0CZCxOfJJ7i9jGvtBgeM7TQkwQN6AP2z0CC3BTOZsGvbRQrb7KugI
TchTPZTXjACf3z9qzJJ/hLanwLKIxZwAHyvyy7HZH6Fpc6f/mrIgQDcCm1/0
J0MafUQw48EJvL4aq8W5KQPaerTwgK0d3t/10Uxtfn0ahVM8ug/bJubOFfsl
PVpojJSmkT0Bcu6zXM38oEdbi9mfRnQgwL/uBzTtbuvR/sQeNt3pSIDhH4z5
qQf1aKtXvTv6XQgw1+09mXxGl7aY+KzR/BwBKgxtVmR2a9PU+V64dmI3USeu
6tRq03yTeoWgNwH+MHluOJ2jTZtPGvJT9cH7N/O+ccVDm/YjeUGF7wIBElkT
aha4tWnfU3eXvvAnwMaF795FZodpXzMuZumHEOC85WbNgSEa7U+lnVcnNkfi
/rrSKhqNr12PZhSKP0efZGsjaDStReGvR8MI0O4RQdVXlkaLNm3UOhFBgISv
vjzpFwBtz+aVfucrBHg5Xl6NJkilOQQFCTHiCXCTyLt5NgaJ5pd8Zoo1gQB9
c0325tuQaDElho+jsHmzbDu81Em06nc7XeISCbDu7qWbhZNE2vqBB3XJyQRo
yxHS7WVMpN2Y/m2Zn47zJfLqoqMMgfbeNiT10Q2839q+tuu/DtKEaE6PNPPw
55+5gsL7D9Is9xz5XIVdy+26L6XxIK3nmwix8CYBOkdMLO+7fJDWHlo7FlWA
81FucJjEcpB2L39a1fQOAcroSKsUCmvS4satesbKCTA77tHfxNPqtI4OsGpT
QYACxQlITVudxlaxV+YtNl+W3Kbf8uq0cP+fF59VEqCZFXfgwk81WgB78u7y
agIU6Rs8EJOoRjsj13HOv5YARxYFwySfH6ARPTW3cD7E8Z0kblYqUaEZfV63
uYod2iT2RDBQhXb6zPMy3kcEeKE5TltXX4VGP2mrL/iYAEuTjpmGf1WmdWjT
GVKIAL3XMzxMlJVpx8RfrpDaCJC78nQ1S8d+mvdL58nz3QT44rOr9xFFRVq4
gbLGT+zhDYcfOZsUaSlty4zAFwTYSZV6K/9RgVbPvCoZ9pIAFU1Iln/iFWh/
impsr/Xg/Yd3qFxYlKfFhv3tLeojQGbHqzNm3XK0WyrpTz58JMAjV3iLT92R
pXlusyy1HcLxq9sZRLsiS9Oc3546hB1bluJ3zFmW1nk/yWVkGNfrtXtXeGRl
aXOa17b8N0qA6Q8VCitK99BIZIbN1DgBVks3b/VpkqH1GZxfWp4hwCi2UtHM
ZSlanoLKp0vf8PcDXhLeD0nRXLlnO1exm0baqqmtUrTVbs+8P98JsJC6Te9y
ghRNwtRNZ2OOAB+05BfdkpWieR63S+X4ieePy8PlgUYJGqujsbLQX7zehaXu
La3itCU+bu8EbPXwSIFbmeK0qccdlexruF530BNczonTXu/UVlrCdlHi/uK/
U5yW10vYP7BBgMv5q31FfmK0Q1BOMZuVCM3Coz//pyJKOye5ae8uHiKc2b/t
8e1nIjSHV8jlOvYfrtTDZwpFaJYhoUW8W4jwYJszq16ICI34fmXPOraeRtXn
K2oiNM7kOZnRrUSY+ecuS3+BMK1wY0iqkJ8If7uKrdReEaL1jzTukhUlQsff
5qffuAvQ8mSsGCXYd6YGt6TrCtBc3Fc+K4gRofIH6tcIaQHa4vyhGmVxIkzZ
RHr0cYiftp39weFDu4mwjEzakmbJTzPZ98jNSJoIn74y/zxvsJ3WFth874Ii
EQaShe4E3eGlXXvkIPwTm3r15XNnd16aBQtL8MV9ROi9tjiSv5+XNnYV6gTv
J0Kn/hZ+9oYttPW81v4rykSYvzCyHvWCh0Z4+vRPphoRTj/h2aW5mZtWva1T
9wmRCAf5Mrf918RBK5B2/6dFIsK6zKHI5jgOWooG58N72NOnHPlHbTho/la6
qkVkIvwWkfzh4xo7jVDQIhpPJUJktyeuR4+d1qryYM76MBE+G0r7dnmClfbu
aHn2L0Mi7Dw8rPXEhIX2zOHIMZ8jRMiYTLMz3ctCa/Sd2jqFLVSm1q+59g9k
Z8hdGTIiwrXlKelnZ/4Bu5Hb3m0mRGikfmCTneoG+HLuhnaKOY7Xn58LUuN/
we/4hO/7rYnwe/pXv9obK+A2m7T2HWzdVDkh9dMrwCSkIUvMhghff3s0s3P3
Csj3HNXmtiXCX4+X1sUKl4H2kQM5X04RofTgb7mp8iVwjfOd3i0HIvxoPdnv
+PYnEGOIF4i4E2HxQz1Klfc8eLpa8ysRe8JSOjCENA/OXdA14jhLhFet6oRL
N88D5OC99BP7o9nW7H36P4ATaDZ+40mE7ydC/119PAsq/jqtxvsQoYOMXKXN
ixlACSy32BRIhMFepSUL5z6DB1HSLyOxo8M9qbPCn4FWerY++yUiXLBpSq1q
ngQH7sWQNwcR4cj9L+aXhSfB3hmnvVuDibBp2JUs3z0O+OzFf+8Mx/U8ctBM
2WoMxJ9L88/FnpioahXhHQNcIdxz4hFECIql31648gmwZq+MS9CJ0OqM5Hlt
+1Gw8ubtS9lIIpxrD3z8WXYYjOklFB6IIcJt7Zpdr369B3bH2cRrsanVtY7f
At6Dj07BGRqxRDhc2nn8zPIAeBdx9ppWHBEa2FRxGq33g64HugGUa0Q4dHv2
8bzYO1CrvG5gmESE9ibTyUrXe4EqJaCtC3ucS3SQTbEXVBp9oxgnE+EJBf1+
9fDXoNT9g5ppChF6mnifWBx5BfJuNYgfTyPCVyc+BaCH3SBa2OeHQyYRyp1M
9Xj1pR0oLUw0D2K3OabPMLTbQd9LmxSLLCK+fyPUDxY+BVJRemo62USYpzsw
lejYBh4v7vKXyyXCvY1NVoyVZvDr9Yvl7zeJ8HDt8tD4jiZwo+Lwc9d8Ivzq
tTjZytsItGObskax3bOGuI9yNIAUcIfQW4D7bWDN6NimOrC/Kji47hYRJi5a
6MscqQZO1xQ3LhfjefJA9b9HcoWA262gZxGbJ7457jzrTXDvsHCBVwkRKmXg
0LfngI1VFmhXSoQeXXW20b7pINd9kAHv4nnyrTvo3q0wcFjH1PIBdkAVt/Sa
qB+YkmiXUS8nwu1Ktp43hE8BrYGap3sqiPDxpdV46ywf9EY3lmNzFe7nrsvF
KvEJKEhqvT8C++6itTP9aQqSWPMrWcUW+nQuXfdgOjpXZ28wU02ECnvGn9b8
ykJcMlpXX90jwp0Cxa3FfoWoZr3CRv8+EQrfCRzYE3kLnfwgva8Z22Fo+vtY
/G1UlLL1xb1aPI92lb2HSUUI/pvkvV5PhHFD8nX1ZmXokS+VdUcDEZ7+sHST
T+8u0prMWMnBPlp1L4JTsxwpdemPFzQSoakTnYP9XwUqJRe8l2kiwlIuh+w9
Q5VIpnrlZTF27jb0T+h+FdqZXtZUwcT13J2ieMuoBqVzbKpSeUCEMdLus/s2
30N8QTa372NHvt0myeV2D7Hb8SQ2PSTC1BHDtUmx+2he7pzT08e4HuZG9o46
1iKvnHYr/Se4nx+b90RV1qIvW3Yf7cKO53FUdvpVi4bnXx16jYhQ5fuejY8h
dcjKWU7ZspkIXZzI7lce1aG+/nCZfuxvux9eDF2tQ50PVbcOtRCh8b4m32DP
eqSjHMdq30qE7Xa5JxMK6hEqGFsZw+69Uf2aq68e1Ueljn9pw/fTmob3KdUG
pLoy/d7jKRHWsvJcBbYNqNxD+9V3bOPBj/IlkQ2o0PRn02I7EWowtUZ2vWxA
4q3GVRefEaFasdw3wmwDytQour2KDeSHPH9uaUT8JWtZIR34fqnhHLRUaEQJ
O08kbmD/qzlVbafdiDbHV0UynhOhZk6Ch5htI4pc5whi7yTC7mHj6OTzjWj9
vL13LLbgd+Owp5GNKGi80YmnC9+3BNqrx+mN6OfxbdaJ2N3qg/OM243I57n7
0e3dOB4mXc6iNY1omtiinY79Y6X91tUHjcilcidB5AWut+IwuQ+tjeiThK9y
Dva3Z8XefJ2NyDa1S2bXS1w/L34sqr5sRP1sMjsLsI/J86nr9jQi88DgrTKv
iDDZqK7EAvvFVB9rMXZOSepLe/x9/VP7V+V7iPBJ5SlJP/y81ldXZsuxDXue
iqW1NSIKHB5Xfo3rJTSU9OxhI2qq1Ry8hz2oQPjDf78Rqe9NfKXRi/tN925/
eHEjqsr63NaI3Q4jDQWyG5ECD2AS3xDhluSLPX1xjehOaGbVY+zswoMTHZca
kcSPudu0Pnw/fglgXXJpRDmOBtlt2N19n0udzRuR0LuCRL23RLhjgGQmSmpE
yfqrkZ3Y045yAbtkGhHPA/Mg43dEeP2rbZo/VyPalL/J2aIfvw8Un717qLcB
aQaa/XyDvdD2dLdubQNyM715xXIAz39LoR8v0xrQyw1C0bH3RHi++JXaObMG
9G8gRvMd9n82fV+T9jcg9Zp37ccH8fw6wx6lz9mAsh0ufD7xgQj5dRVWE5rq
0YtD6OIANp2/UUghqR5tbOPltPpIhFH8dwsvONcjl5ZSOeshIrx/dTlZhqce
HZD+5G47gudneGNCg2Edcv6ttPoRu4JtadJduA5lvgmOOzVKhCWhXM2rY7Vo
jSFy9/QnIuxS/MLoCahFz8ePztj/R4QvrrOxLSffR/ZFj885f8bvA0n/Zvdq
1KDUUJ71CexPdzVYxaurUftx60SXL0Q4WdPrnCpfjfZx/Kpy/YrvD9AgrSFS
hZZc9/9wnybCgUot7tsT5ShBPtf33CzuV7bE5OkjJehR+aXAi0t4vtWrB//T
yEE7zdtPz2K3N4syfvJlo4Cl7Tquy0S4kfFVf2U6E6nA8m0nVoiQcl+yIqzw
OirsHy7T/E2Eq+G2onX8KSiGRXvo5xoRnvm4qaDcOhRZnOSFfuwkOLCHzBCp
vQKq/1rLzWCb8C4yjeuiAc+tYl4nDhI8veCxKnE/FrR/Ax8sOElQS6+rs/R2
PNBi+PqpcZHgeB3Yg6pTwa7KgaL5LSRI6X/UtCGaA75uusV9XpAEQ964pN4/
fQfsBL1CC9jGN1mPxr+4AwyD/0n6C5Hg6meD9svEIlC+aKd1SZgEs4g50VkC
xcBnQsw5YgcJxnzgqp16UAJ+tV9/nCxOglvKK0oDRu6CvZvan/PvIsHrTYqD
U9RycJL6sy8dO8UxRSf0ZjloarCYztpNgstvvnqy2VaA4BI+kUJJ/HsJX9vi
zkrAEhd3/t4eEqzfFlbbHVoD1NqbgtVlSXCTyawx43UNcGL5Gl2P/frW09f3
tt8DT4P08ph7SfDbiSgeC8d7IMaDtatFngRzKn8b567fA7zGoTJv9pOg9UzI
5RyZWkCNrVA+pkSC50Uaf3no1QKfpx8J/dg3aooT3rnXgtdkotkHZRKsMEl0
ulxRC9KUlkP+UyVBVZX3/TwqdUCU70L/ggYJurnuPpEpVQ8CduRreWmSoCan
qYoxuR70SL3MmsS2/lbxpuJEPYjSULB9f5AEH78WjPO9Wg/mrMdGHx/CzxNM
2y8yWw8MnfigFoEEGd/39RzA7wd3vCi3arDv3iba/d7VAKzDs51vE0nw6fyw
RYZxA2i7Yz4VS8brKRK3shQ3gF1V4Uc2UUjw39/w+NSHDeBSY2V5MPZDnSs7
375uAEpdXN7eVBLUC/t23v13A8ica1mwpJEgs4qQMGzYCLyIan9365DgQkkj
SfNDI+jQdjidhS1bI1v6ZboRSJkkPtmuS4KSp8fdjv5pBAP20xFseiSosXBh
gSDWBGDULfZpfRJsE/tQnnyyCeQmvnZ1MsD5t29T/O7SBJYy1zuGsOM/6Uj8
82sC5XdtrvYYkuDlSY3LR5KagNBrfr56I7zetg6fS61NwGeQdl7ZmARDzc4L
JL9qAl3/efeWYPO5/j7q8KEJhP/qSssxIcGIU+9u7ptvAlOikTsiTHH9Xruz
M0CMCbT33Ataxf4Wa/HTSpYJbiqNfvA1I8HBRYW4ZWUmwGfPczEnwaOngxZc
IBM8cVmUMrIkwVNpWSQ+Jyb4zs5W+go7QnCR5OfJBGLFgsoWx0iQ81ayd6wf
EwR91iRaHydB52vCzzoYTFASrdc8hB3/EGUtxDFB/96Teg4nSHBzodJqTzIT
qLtdsnA7SYKNGoNPbucxgSNn3PtpbLvGgd6c20yQUpJt521FgvuyxF/pljEB
0r87MY9tCGO5i6qYYPbLA48Aa1z/u/4MN9Uywa7Y7h8r2FHXj+fTm5jASH7o
YogNCW4IXiraeMQEZe5rjEhbEvzQm/FRvJ0JBjZv5eI8hfth3JL56DkTcJTt
TrqKTSiy0RJ4wQSahipCW0+T4OeIaxWSPUzgNAVyU7D7Pj3zmexlgtQ4Mykh
OxLUVfk+cOYtE7QonCnJwnbrHyFl9DPBXOcFJXF7EjxHC1lgvGeC3R6M2nzs
GwNFFvIfmMCEO40g40CC4hzk2uiPTBB89zYqxpY/KOF5c4gJ7h6p01U8g+dB
r0qvzzATDE4/7a7EbtE+Sv6DzXntnfkBR1yvv2xY4QgTHNz3eaAOW8ziYOj/
7dK9dPqQEwnuaGv+9xd/P82Tc+Ih9tf7Hyb8sFt4dngAZxJsveYcUYzX+1Eu
/6MVe6iRqngd70fCmHBRz4UEvQoNCbT/7/eb4d9O7Ir7Lmyl+Dwh8TYME1cS
7D7u998LfN7y/Z6be7HZf1koVuN4DL4ITjzmRoKpvyfUTN8wweZz8YLvsW+/
5rKsxPHU4s3LsXUnQe+xwrFOHG+XykrJUeyDmQmaRZ1MkG7ypNjxLAnKnKos
As+YoO37q/2fsX1zxmKzW5lgPmH0/lkPPE8ecR+sfcIEkso/Dn3H5tnPxZbw
gAlCvbfr/vTE8zKP045xjwkqtkp3B3qRoKD/88ybFUzwsUrN/A+2KPxkElLC
BIfmLE9v8sb14pZxNfQGE7glOY9HYWtn/HpSmMEE11UCznL5kKCAs1J3LK7f
RZ+MgG3nSXApuvRZQSQTSG0r+ZOGnVJT4fQmhAnMahrpIhdI8KI0j8bzACao
/PE+YbcvCdJirbpY3JjA/YJY8X5/EnRcbTZp0GMC00Cpjkrs44TFbhIV11+o
3FflABJMXDpy+KomE7DGqSseuEiC24ChQ6QME+QVGFVpXiJBZbfr9nN/m0Bk
sXlPA/b6LGde+0IT8Kg4+UMrCJ+v8JSz29cmoNXkpEa8TIIHPl4d3NrXBHp7
ghuoISRYxsZ3aqmoCTS+ow8g7JeUks8HcprAzY8xK7RQnP+jI/GkxCbg+SWN
qB1GgtImnAEPApoA+0b5E/0IEtyz2/q+z+EmQFAeemZ2Ba+/cbN3400jkND4
70svttd7tQLtp42Ag/h1s2UUrtf/Ript6htBn+7PI8ejSfD7+Oke1sxGcO70
lh7rWBLMXOJRMLJqBLfiyQOO8SSoeLRbbulNA+CZufHFPx3Hz2J24O/deiD2
pNDuO/bU/m6P3Kx6sC+l+J3LdRLMm7+6LBZdD4y1atpOZOD5n9XA9dShHiRE
tuUfyiLB8n/vTjcK1oNt4tMn/+bi/GgsKLkE1gEhE63nkbdJsJIUW1ujUAsk
q3tLU+/j943T79gPF1QDknzFLUIfCZ49u89GXPEWMLRPTa/FJpSvSPksF4KT
GZeild7ifvjwsrz7aSHwZ9P1kHpHgmm1kSp37AtB5afhA1wD+L7TTTjUplgA
dmfztbz/gPNtunRRkCsPsHD7jQb+h98vTkvOVv+XAfigde88NiGn8/YIPQPs
ugTaPMdJcP7J4xBtqQxA/MxTYj9BgsnS3t9qHa4Dv9Y73vqfSXCYRXvr0f/S
wOTl/jXhaRyPuVrP+2PJ4PkMQbxhHt8/mscHW65FgaRYoTKlBRIMcpXcMBq9
Ao7LzmsWYdd2KDdFqF8BY3alpumLeJ6MTfIsDDPAaq9wpO8vEmz4MZFvHRAO
FJoWp5RXSbCZ6yxHnmoAuHalsrHkHwmyxF3s+UHfD8yl4nQkWMhws2PdzYOZ
AkjkiXNvBna1eYGAxpwWur0sNhO1iQz5WgbpXelH0UOPq7ud2chwbZTQkmJw
Bn0zc4uS3EyGLH7EqYmaC8hkl5RlNh8ZDl77YtRFoqMvZqNsYtvI8ISDdtnd
R3REv5LXcAM7h/XIlatkBmqY2SlasJ0Mo9PfnjciRCKJB/xjxQJkKDBpYDG5
Nwr9OMHmUydChhPX18v4+2LRtautkgd3kKEoqUyYohOHZJ9EvGnEHpBaWLpQ
F4esZdc0H+4kQ6e0jz1rKVdRy+Kvvy1iZPhyW+D2ezAepSV/udojQYauzyX1
JfyTkNLTIrK5JBmGB5hLa/cnoY5lp9k32KnvBdxCtJLRH7tP5v1SZHgyr2v6
wHIyclYa3DEsQ4b9GZpRdg0pSLOrq3hajgzjrMau+QmloZ61WCsveTKcNLX6
ZA3S0NkD+tyz2OsfU5xfu6ehm1lt5+YVyFBBisfW50Ea4nR7pLGyjwxXHI0y
w6zS0XvWqlZ2Vbze7F0OlYjrKJfNsysMW4MiuPKt4DqyZ5d/s4ydrpl35GjL
dfSF49bY1AEy/D2+Q/Xvv+tomSvj30t1MtwVten5lpAMJLItjJqhRYZX9Faj
wJlM9HEbSY/vEF5/Iv/HsZBMlL99xSQWe1ItRZU/MxPJCfievkwgw/giO5Oo
7kykJewaYkciQyOlH+3HVbPQSfGjD/YCMrykYcA7MpWFxHbxtOZj7705pJ66
kYVGdz3v3EEjw5bmz7cXBLORm8ThQW5IhqULrqFMajYKlD64MnuYDEVOOo65
JmYjkszihps2Gb57N7c7qjAbbcjUcI5hn0/Z/Mm8LhvFyCqK9OmQoST9M9fK
+2yUIb/7YKMeGfIk53eE7c5B1gofKar6ZCim/ebbDpUctEsxS7cMe0djUY8T
yEFF+/iP5xqQodltwswW+xxUr8zhH36EDOkfHHTrcnJQkEpb8Ap2wtiE9FBp
DqKoRkReMPr/eSVWGhpyUPuB36lOxmTYc6ylOLo3B73TmL2nf5QMCw9wfrrO
movOvUgY6cI+z6jJPbEtF7E7K/EcNSVDh3F6OBLPRZppXs7HzMhwySVC8ZpG
LnqpuCVlALvYVKJkFuQil9byxzbmZFgy2Nnw50guuj4/LXzGAsfPTva3gEMu
Uoq7qj2B/UPKYFzCIxe1Syqed7Mkw0whm65+v1z0y/Rs57ljZOi/W2VNLzoX
naj6Enz5BBkml/SPEUty0ZxuTOkadsFoeXFpVS6KGd77LuIkGZ511wJP63NR
4xZX5RgrMvT5e+wER1suMr3DbsttTYZPe6yuKnXmoi+kopgE7M1Xlv6y9uQi
Ec+JT2k2ZBgqMb65eTAXVW+6witiS4ZPXt0+WTySi/RzZIg52GJzY6aU8Vw0
eqDNddcp3E/OJ4yjvuSiwE7HtALsAwIPSsJmchHfmU3NMqfJkGO0/ZHCXC4q
WSn8VowtUKH2OXohF4FkuFPRjgzP2DHDMn7logG5Md1KbLYP/GNWK7nIB0X4
qtqT4SbWFbdXv3MR50nJ/Fps68dS3st/c1H+LOo+6ECG0t8Njr5dz0Va0fYr
TOwzF/c6ufzLRT27NvZQzpChBMWPs5zlBnKrv2nejO0u+/V60aYbaMOYGqbt
SIa6AtSzx1lvoMyJ4bvPsB9MKw09wFYJCR0wdCLDj0nnDfuxOwR2sb3Ervz8
hKcU2778kaqZMxke6usNVcVePnzqdB/2FYLjbx/8/KQPf+JOuJDhrTX5IVe8
vpxvbsMgdibraKgQ3h/iIo2fciVDTxUKMQTv/2ThB75P2Ioufz1z8fnmDl0m
O7mR4Vjsu3N++Pwxr3ee/YydEUbPYcPxkXBnXj/rToaWikxjUxy/xg2r1m/Y
e85rjlri+Jpmrsz6nMX9pFFdwY/j/0U5S2wRW8xmlC8e50fEbsB/1QP35ym9
TTU4n9W/LhaGeJJhCsucnu0ozneC8KsN7JysA/GtH3B+Hx2X4ziH46PkHvns
Nc7vsV+WcdgTiy+nnbpxfmfSI7Z4k2EE+d7jJ+256L3o20F+HzJUm+zbVsXM
RXI7zhamYac+Gxg8U4ufJ7TuLnieDHsj5Pr6K/B+tsmvCF3Az2NwV7Hn43iw
hwjv9CPDst4w94gI/PxN20eysb0S6SL6l3LR8kZRkag/jo9CclGvTy7K/N2j
IR5AhjUbqg3qdrie5mQsJQL/f59I8Woewut/bxItwA5ikdmxRxmvP23yn+Ql
MtSp+FEzKIPXnwy8IB1Ehlvvm45nb8Xrf+hOkg3G/Zv6qCpwLAf1P/V7sS8c
94ehxdpiSA6Sbd2cXoEdVmkh7e+TgwJQnq1SBL5/WPLVms/kIKEHHdPKdDL8
Exzs9Vg3Bx2vFuNSi8Tz6PV46XEePG+y23QPxZDh6yzfMwYJ2Ug204qXif3W
wvdSdUg2Ckj//pYQi++LzdT3XzyzkVCSiDMpjgzb3bM7Xxpmo+NXPBnUa2To
K/CvP5A1G731FkA6Sbje7iUwk7yzkAmhZOgRdqWZhhXjVBbqYCX91kgmw9Wd
mStmR7LQwyxHTdkUMjy4dOB4pGwWKmy9V86ehuv9tLS4zodM5CNslvUsgwz1
94m+9aVkIp4n8RcMbpIh4X1HlNe36+gwL8ce40oyjCTvf8j7NxUleYe4vsJm
18xb5RpLRcM9C6VmVbjf94a4/GhPRUGpo0rHq8lw++1h+dCkVHRPhKlldw/f
r0O3hAqkUpGEtJfR+XoyXP7+9rD14RT09+Ab3/THZDjDn5W8ZS4BNTjcbBl6
SYatpx3fBiVGI6UkAZsTr8jQtkjn288T0ajocexCD/bvYr/i8xLR6Lqon0xb
Dxlenu3T9qqJQn5v9aPKesnwgpTjfOSbK0jFYN7g4jsyvH1rMKFWJBKVqei8
5hsmQy2h+6u8lmHoxvrUyOFvZLgvMSKMKnYBdace43+AnZdZeOvtufPoz16k
e+A7zn/I4dQHxT7I2jS9QmIWvw+Vbbw6KOqNRAqol//O4fnp2me6f7MnSoNp
Qg2LuJ4bwO8vLC7o2hWyscIfMmT9apjNs2SOHu4oCS/Alh2i7M6RMUPTFdtr
Rf7i+6jpapiTvQkyfPd5J8carvej67e/ftJHnHtTvvy3ToZSlJXEYzsIKLJj
knFjEwVau4t1J3xWA8HcSUw+bgqMKTzEH7jbGoRrDm1PwaYEuM4sO9oAhoOC
Bz8PBQasRAa6FtmCuIY2UaEtFKhSMM6yfY8dyHRcCRbdSoFVmc9Kh9kcQd2D
M1RZfgr8WHlDtazJFTROVmUUY3eq153POuIGHm77OysnQIFFxbPkmI9uoM01
I19RkALnBAOLXX67g17+7n8qwhR42pe+pLHfE3z30GgjilLgQ+0B00wHHzB/
nS72CLs8UzKx+T8f8LP5lR9FjAKdprR4FpzOgz/CZ/fQxCkQyj8JPKR2AXC3
5UXp7qZA19aIzsV9vkBOjNPATJoCvxjUcOVt9gcO3YMvXBQpsPr5Hv5C90CQ
0CYbPIKthErj3DMDwcOHFxRO7qPA/NsCzO72QCBUwRVtsB+ft7FKylXqEuiO
J4B9yhRoVXzOYL7vEtA8mn3vxwEKFDUpt0/dexk46U3an1WjwLshCX0qppdB
MvXA1v+wicVZMV6Bl8GMcqdHnzoFjnkSU58+uwwK+FZlGjQp+P91CYdfDsGA
p9cqI5hAgSeteCyuRYYAQucdnZ/YT+K99LSKQ4Bry48FLyKOX8ch1ujnIaDl
XqypHYkC//VLN23ZEgoupjZthhQKXPhWQ2lPDAVjljuCOSCOZ7n5PsHIMMBn
7KwQji10z2IPZ0EYIOvUDCxjr3b+O1fwKAxkahhoTB2mwNoH/u+e/QwDxkKX
vnfrUOA2JRWZKYdw0Ng/YJ9iQIFbuK4p1ctHAKYLh7qgIQXOM0xNxQ9HgAc/
NTgysaUV1rV220aAx/ypFTeOUKDi6Z1hi9ciQNtR49USYwrcul378czXCNA+
fPmFogkF1t04tqS6EQGeeZXlV2J3bykV4+ahg86rHHq1RynQ/dZGgJUkHbx6
1pz6xIwC33BLXSkzoIOe43Mu0JwCRc4a7dexoIPeiV2Ep9iZhVOBVbZ00Lcp
eLTTAuffnB63cI4OBqma+98dw/UTIxZNTqaDjy+dNk4ep8B3Cf8RrLLoYOhU
6psP2Lavxe/pFNDB6OW5S59OUGDLg+mg5Go6mGwoa5+xwvXxZ8p5uZsOvui+
z/K2psBepsGevDd08PUth9c89h8h0Q7BQTqYWXDiX7bB+7EW1L88SQff6amT
QbYUSN9J8XKfoYPZbS1Nf7Gd5d+zKczTwbzybvtNpynQeMJZUvovHSw+NlaL
wn539sSMDQsD/DQOZt9sR4Gmc0ymKwcDLHu8L+e1x/VS3v9jmY8B1opTV3ac
oUD9J85NbFIMsKHZ0p2L/VB0InFwDwP8ezp3c7cjBUoNvo1lyDMA67ix7h4n
3K/7uQPNVRiA3Td4Rwl2Ys7R2kA1BuBguTuj4EyBZDG2276aDMAlwZmq4kKB
Phyt+78QGYCnStPl/v9t2LX1DIUBtlCcD2m6UqCJmbZGDWAA3hepPE3YpziV
Wt5CBuCzbRkhuuHz2MQMvtJmgG3Tc/ceY88etCi8qcsA24N2R9HccX3HJJB1
9BlAYLOJVRv2diKhBxkwgGBm8D69sxSYRjgeuv0IA4DF0mPN2KGG4WJyRgzg
adofSvTA9XtR22eHMQNklLOW1GGr4Ukyid3CeeC1sicFzki+r0g0YYBvTnar
pdgvs/V7BY4ygEjzNWkZLwr8IJckGYB9WJxplIe9YbDeeB/73KXP/iLnKFA5
eKLuBXbWW4GbKdjO5BSNNuw2VdjB402BydzHjmVgz8V7/4jCLnYKOaCHLTqV
u/Mf9q1266k3eH1d3c7Dl30o0LeKlE3GvlC45PkTe/uNC3aReL831mSue5+n
QO8tRidK8Pk6rM2ffMWOChW5WYrPv1Af9sXxAgVqn9trGWPIALv4K7YNY9+2
7kjVxvEy9B4knPSlwNRmw8vDegzg38Xh1IvNL7m29ziOd/5ejXgjP9zPS6oN
d3E+uhln6tuxI5o1dEdwvqRIjzgf+FNgiuL0wCjOr3HmlKpGAJ53z4jCVSQG
CFwUtqnCnjXJ7rQhMMCr8gsVty5SIEn0CZuZBgOscua/Ew/E57eR6cg6wACy
zi/WM7Clw9/6NSszQLC4nPm1SxR43MuKpRLXY/GlY5fZg/DzVLvEfWUZoPct
/XY4tl9ve6awNAPIJwz98rtMgZI3s6TWRRng3VpKzqkQCny73455hAfXtzVq
68duzHzNvpWTAfY1fPtmFkqBB14Z3Li3iQEY3vpAN4wC0fVY8ZxVOlAZ/Tuu
FEGBgieWby7i/rQhKfKWYtMnDM8/+kQHUZknD0rT8e+Vd190/Yjng+n9WGEG
BQrPxKXbvaaDuGY3pY1ICuR4I2H+XxMdjBe+ufg6Bvfb1T5v8yt08MzpF9Eg
Ftd7+oS4fSgdlMnu2EDY7XrMRbOLdOBTdjqmOo4CwRf5q2NudPC35mtm4jUc
r/Vwe6YhHQg1rzcZJ1FgaQnbgO1mOlihS4U+xS5JieS4sB4BPmrrQHIyrl8T
B9nlbxGgsCOuc18K9gONZLfOCKDcI/iBOw3PHxVO2dHwCKA/ovjneQaul3Za
ofV4OFAsMEG0TOyuRs3pV+GA1/F8ZBM24YIH65EH4aBvsp6nNAvPS5UguUvJ
4cDhO008Jge/T2j8vpFODAdBf09QdG9SIMutS2nrUWHgrmhkeEsRno+8g6d3
/gkBZ/xi3bWLcbzbdFbaRkLAzhcJ5u3Y5s8vHKO0hoCY0CyZzhJ8vwfyeeXF
hgCnT5Udr8twvhknX4kKhIBdxe/5PlXifpjj5jOQCAYpB5QL1uvx8xyu/LMW
DgKBBoPNpGcU2HdpJr8j0R9YeQ9v1GHbE1PQqIc/IKSPUZU7cL8bRpoN6fmD
P6NTjySf4/jNJZRHrvuB8MDfTexdFJh9c/O1FC8/EFMsdq/nJQUye74LDWn7
gkw2u0Knd3heWqWKXW72Bg3N/9GvTVDg9cAa6kXkDP58Twl2ZqdCuKszubSU
gAhxOWp3ZKnwrLrzSPBBD/T6UkCM+F4qvM57lq05ygO5uZsNpWMPa3rcGHvr
gdL1OaKj5KgwqkPR8aGvJ5pj9x10VaBCqZN7WR9XeKEihmGEghIVWuvzJ2Xs
9EHbQ1ZeVmlQYVwrT5Ohhy8q9eyTltOkwl0w4/SJJF8EbKsC87GrdXQeHqnz
RV5EZ6nkg1SoFD33ZGrNF3Ws9PhfOESFlsVtz34n+aHQgBIxDTIVZs64vdGq
9kdT3ifOMrWpkCn0suz6+4vo2C+BcZIOFY5vSdf+9/ciQsG9p55g94H/+PSk
AnEbGZu16VIhu6CjtOPZQES7dVjrpT4V/knhs3+7HIgy3ymzjxnheHRJNzny
BiEdMmfh5mNUmGZxYF5tZzCqbn0qeg37l2l0UNChYLTTkJHOe5wKAx1e66We
DEZzx9di+E/geF1MSSVcD0a5Pove4lY4Pulfdp/cGoLmb42SVU9RYYv/xLWk
5RCUz9X0/qQzFbotyyGWO2FI/bR/aS824kv9YvcwDD2vUb1k5EKFclNS5+Pf
hKH5k2UiwJUKb0ccYp78F4Z0inNO7HWnwtV7X3tKrcPR1OHQtz89qZB4PVlj
E2sECs0g3PH2osJNjzYkj4hEIP7pX35fsX32l3fb7YtApBRvgaFzVHjjGtnv
u0UEShy1t2jzocJttT+qs/MjkHrI4dcpflRISfq+aV2Ejjp61vN5/KnQZvaj
0WVJOjol89AnCju+YVH6ozwdRXWp8wUFUOGShSPnEQIdvd8he9QhkAor/ZKC
B63o6JzX2K4P2G5vxDcHOtARS3Ped8tLVKhJtiauuNHRPjfhBP0gKvTfdEus
6CIdhdZzvlAOpkKrbR23i1LpaDvX09xS7Lvhkqqns+mo+FSEp3QIro8bVUHL
+XTUw7rKLRxKhbFV+173VdCRtMW04VoYFR6Y/XtKvp2OGouKdwaG4/oMNy1a
6KIjo1XHqR/YY/anWm++pqOAgo+xExFU6PTJjePGR3ze2Rcd3QwqVM/IjpX7
QUcCpWFq2pFUyDPmQpv8SUcOZ1TzHmBHXWSKRq3S0Wpfmm/ZFbxfLt9Oj00M
pJugOywZRYVPuwTdajgYKFVvWT8L+5fdA+YANwPtY9rsiommwrKYuG3d/AwU
6Lsldh2b8unHcIYwAz3d92QhIAbXd1r/grYoA52+KfXcOZYKz6dlRUEpBkqK
/Op7+Cqu5+qTZh1KDPSRnDPMxL6TyW+bo8pA8ktGBgeuUWHAzOE3JuoM1OJe
vUsyngprT4VnHT/EQLzSZ2IzsbWonTVlRAay+ci/uDWBCvkE2J4Pkxlo0eTi
8zXsnt3PoyZpDAQ45dUDEqmwe2fSr6bDDBTfPJj3DZua3LrkqcNAg0HXNjsn
UaGqM4v3ui4DyapT/D5iFwVOg/P6DHTh2+ywRTKuhwpx8xYDBnpSVGDQhW0+
eTB63pCBeOwtamEKFWawvm/7d4SBTu5g283Ejpm6OTtrxEC3e+tjVVNxPoMU
Zx4aM9CPq26LJdiZ6TtvupkwEEVnp51EGhU+38XzbR47bq3reQZ251Ie0+Yo
A71rCFHfmk6Ft1guzBRiS59XvhmF7SQp49qB7aPwafMa9nZNy63d2A//S/Hz
v06FdVIFzyuwOW9oj8xgn3xeGuSFfez4LwOnDCpk5dnCwY1duLWk9gN2S7e7
RRRe/3uH1W6LTNxf305rj+D9EujccZ3YeaZXHwtiRxMfLdKy8P7644vk8fn6
Fs/ZNWErObN92onPL1Ep0amSTYVvB5PMv+J4ebr2qpdgt+98NZKG49kkEXlz
dw4VcnDYeYnrMRD7oAZXBvatiJEROs6HeepnP95cXF+es6JPcb7yjLJGrmDv
LtvPPo7zOc12xPAvNofYIcYIlYEiAyt3z9ygQs89ah0euB56VO3jHPPwfAm3
s/qjxUDi09t+DmJLZPVtdddkoPpT/p3Pb1LhuWiBsHcqDLRJeK8GLZ8KCyXF
/73bz0CmPQM3G7EzN74S7isw0FdI8i8uwPNBwMhtTZqBuFJ7WOULqdBwk+6o
uAQDKfznlFaGXf7PYvd2MXxeRvz9iltU+K71pUsg7o9rbyQPK9+mQrteI/kp
XgaqkK7vrcbWjfonq8KF4906/OP+HSqs8lXV19qgI14B3wiNIiocWXq0ZxX3
p7ITx7YG7Jf1t+4l4v71YVVRYRZToUPQDRONKTqa1444h0qp8ON+0kMXPA+2
pwuu0cqo8M2NSFpLJx2pTZTGt2JTfT1Oz7XSkd+V3vL2u1S4ZVzzTWsdHS09
lZ7urqDCF/P1bw9n0JGIUGOQSSWur9vj2iqJdKTlYsTVg204+VPtexQdBbH7
y7+pokKR6gm2YX86+qPb7vq+hgqnz8/ciTWjI7EM6yXre1So/ECOtqZHR+TP
36M+Yp96Eq99mILnY7Rw0ch9KpRJWFwiK9DRv2du4xN1uD/uGwWN/Y1AUiJ/
fV3rqTBXQiO+83MEgm7Jm75i37VaAWavI1AkJ1NqpoEKE05a+x66FYHYDbgd
5puo0KP+zCkvGIFks27O+TKpcKZsy2soH4H0vqqF/8RWQrvqa7dGoJhY25vL
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$11042#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11042#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 20->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
D6jQL7DxoeeHcMTdWTG09ogKjxhWCsqeC0d8R0ytuVuoMOlF29Pw8DBk7fYf
NRIbXnhkKuoYhu5cCdjzF/uSSJGDjU4YIqDcue+tVGh8f121izMMOWp8jep9
iufN7uFjjldDUf1u+v2s57i+WjLmD4eFoA2SYNb2TryfLfIEMdsQdMS6JPQq
dn7w1aDrWiFoNO2lQUgXFSoKBLP4zAWjzVyio/YvcL6khZarbYKR7eJ9HrnX
uB8qQ1q0JC6jom168/nYvG+bFgWXgtAPpcH+Hb34PtUuSUl+EYSi3DcKud/g
ea9jqeR4KQhVDRsdmu3D9dEzX+HefQmxPJ9wrh/A8285S6jXLhCV3hB+oj2K
z8/J10Mn+KOUraK1Xdi/hCU+X1zzQ8ERu0rNP+H9ZmUwppr9kInznlT7MXw/
X0rj09PzQ/P71FyDx/E8p5a97TviiwgPTbbWfqHCAuM3bSv+Pqh78Iqd9A8q
NB17Ftdw1hXVGcValmFXclzr6ulxQXmPrxmozlNhs0GG5WsNF+RTmKpGXaDC
nwoHnl3544QEzhZw2Pykwm/JcLws+Aw6tfKwKmUFf39i3/G6ayeRrge6vWOV
Cqec8ypIGieQylBrVj62lqXQm9APx/D93cmo/E2Fn9IvZihJWqCimIETnX9x
fH5IflKRMECJqx+MzNbw+93jJL1iI10U6DlCG8BOuB0ZHeZ3GBmaTipOrlOh
eJmXY/rZQ0it5auE1wYVcp4qOembp4bE1L8JLmIfne0I2kiUR2xFc1yX/1Gh
/B72uLHCHei78OL6P+zNs/qSIyKHnvwPUMzJOQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$11206#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
853ODpft0ATTggt//yHrJ3AdmoqyoP4PrCEezA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11206#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.3234889800848443`*^-23}, {
                    27, 2.6469779601696886`*^-22}}], 
                    RGBColor[0.5, 0, 0.5], 
                    PointBox[{27, 1.257314531080602*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27., 1.257314531080602*^-22}, {27., 
                    1.257314531080602*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-1.3650222577858177`*^-6, 
                    0.0009812575890651358}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-2.34\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -2.3446830387648223`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"8.75\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], 8.750476228314849*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 21->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$11370#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$11370#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 22->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$11534#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$11534#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 23->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$11698#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1:eJwV13k8VF8bAHAVokRkKRRKqCyJijtzT8eSJFkqQpHsEWX5SZIla6jsSnbm
jiRJpM1hkK1CkX2ZomRNKhTpPe8/9fl+Zubc8yznOZeM3YVjjis5ODiS8D//
/1/ia+rgzbua8J+FcvrRNQvgZ+vruckMTbgRpOymxcwDu+gdy5cZmlBRIcy5
YugXgP9G+JLKNGHoEkoS0J4FKzJX2Jt+0ITxjB27Rh8OA3Vf4x/vsA/enoj/
4T4MnIwyQo914s+zWouFFIfBm2WN/ONdeL34w2qxBZ/A7TMXP5v1aMLpu6Ih
13I/gt0yQ85WA5rwr5DuCqt9Q8Am/+V5+8+a0GxHozyHQReID1jzdxg7oUIi
8sPbTlB3wuKGwxdNqDTp3rXyWCfYyfXzgeOoJjS4zbjrduoD+OW465vzmCYM
3BX+JcerHcTKp3men9KEvy1JI26XVvCi8JLvf780Yefldc8MJFhgo0nd6Sls
i/ZNiYNHq4HPr/U6jnOacL//5d31K6uAMiwUMJvXhB2pZXVxnS9A9of+AvXf
mtBuYIVFanI5iODQ7vuxpAmlUYjI64lcYGrOB704Cah07+XFy7AQFS9ayI1j
K3su7w+bLEJrchh8dlwE3Kx9qY4v6SGqmwA9ptwENKftEHrnWor2hXh6qfIQ
0AjpnU2Or0CSRZ35M2sJuDdrpUPE82o0uiKH98IGAjqmlVxntjShjaBN+Du2
huHhMGe7ZqTv/0/KW5iAxsdWjk/9bEaFs9b7LokQMOW3nq+p6BvkMSxuHyRG
QPeevfyxBi3oZ13Sy1sSBBzJ17rZRH+Htq+oaxCUJOBkusZpwavvkDn5430i
Nvk916b25TtUUW46lrqZgCz/6Gpn4j3yp/hFs6UIGFBYug8ptyOOqKgLJdsI
+FC1o3/VUgdSravw3yNLwPFPBee2qX1Adhyj4WXY/Fs7dpSd+4Bq/Q6mP91O
QHXR0VW7PnxAEedWNlXLE/CRB5+1P6MT8R0J2PpuFwHLklmJKxS7ERl5X+m4
Iv6+OPOti1U38qjt1fiAbWpTr6kf1Y1aaZrGPUoEhN9dXTw/daMExbkrH1UI
+KXX0vpyXA/axH/xw3c1AtZ70VJY7b3IRyxzn5s6AQfevYFW872oRfpN6gi2
jIv/g2vifShMTcGqay8B0+4QmmFn+tC0BXvw5X4Cemez+E+M9CF9O364T4OA
kUeZyIezH+W50XMeYsdON/EoyPYji8Db9rmaBLQ919l1yK4f1eSZfI2kEVCq
M9DMt6cfST4IPLyCTkDVx+j13rl+dOlJUaE/tgc8XRYtNIAUm3jc3UkCWjdW
688dHkAp09Xfjx0g4LBMrtfg4wHkpqm6uFkHxxdv5aHtM4jqtc+cTsW+4GNb
Fho9iKQNb1Su1yXgxiCuzbbZg6jTZixo1UECtrqRNRPNgwiG5XCO6RHwlVqX
iYXEEEq70epod4iApyb0swOUh9CvlL/1fdh5kf7jQGsIFd6zvN6iT8Di10p9
mY5DSLhVkL/MgIAGIoe2dt4bQh7dBy4oHSFgZ+hO+s9nQ6jpo3sbha2dOK3w
uGkIBf5sSrhjiPt7VmFU+OsQ+rrpmliQEQFB7vlfGuvZSHtbid8C9tB2cf02
UTbKUBzs8TQmII+F/kXNzWyEY093MCFg85zyfMgONqp0mJU2OEbAx842PTMH
2GiScxXzLXbHZOGpqINsJM7YoGR6HNcj1d1ywoCN/D6ra1qcICBH3WSxsBkb
UeEHq/qwKxZ8/Pss2ejDdvODZ8wIuPvZmnseNmy0x+mSqZM5Ac/ozIkuOrHR
We6orjHs7dVizT9d2SiOum3tfpKASHmw4YUHGyG9e8Mz2IUuKgYmXmw09eXZ
OR8LAl4+9D269D82koxs/jaPXZzPW/fJj40M5Pv+u2KJ47G0Ufl4hY0KnJdC
rlkRcEz1RNjhEDbqXL2Oh/sUAadWsz4+DmUjroLNN69j/727wnIqnI3U9ZWF
150mYGrD4ra5SDay+wrS4rC1HJIDWq6zUXyUsbSwNe7PI2XpvjFsVK1gS6Vi
T5kDNB3LRtONFxUlbAj468wmif032WjzuZDSTGwluGvK+BYbGfImaGw9Q0CR
d5YemnFs5H8vFzGw1Seju39g3zv8WHeHLQHF3PIdg+LZqHustrkIG8jHGvdj
c0d3mOw+i/P5R75tTQIb7d35ufMx9qVKa5m12A7Nv07vtyNgssGGqwP4+wmu
3MPPsUWvKG++hl29RuwcsMfzRSGZ9hs/71uh/DcWtqGikpAO9pYjGv8ddCDg
etv+3jP/3++E/mIjtnFGVKsxjudKjGWIoSOuf6XYzg032Khwl+vqNmyTtAuy
hTgf3a/9bxx3IuDWdb4LwtFstPp8zIYu7PBv69nHo9hoH1/6HStnAq6QkBNx
jsD7LSqSGsSWPnf3nVEYGyUaVjLOuuB5/NjceO01NqqZfLvrM/bJdrIxPYiN
ZmIHH7mcI2Bg7j7fVVfZSErp2/5J7FN/5BIP+LNRgPt63R+uBLQrDF+h6cNG
99fJNPu6ETCxvKp+7iIb9T5QNfmDffth1KdodzbaP33s9Ap3AtI7bbj24350
umn/KQx7uHx/sLEdGyUp+7jweBAweHyf5gHcv7MeyT4CFwgY8fTAUQbud2kB
6k8CthCXiKSkKRsZP3wSLHoRzze+gvVuhmxU9K0rdrMnnielmccStNnI+aI4
Y5c3AUflZm/yKbGRka90fRH2qal/fE7yuP8C5EaVfAiYcc92ME2GjVZG7dmx
+z8ClmbpmaeKsFF6lsED9Uu4v+Pvq9bOD6FrDJOWcuyO1ZZn9o8PoXP3zb/t
88Pzpdcq27F/CO2rsFPVvEzAytZSodmqIdTW4l9OXsHzOEy0vDN0CD3pCO5E
2IIeTZflfYZQRm/E/IEAAm6RC0J7HYaQ65cETe2rBHytaRAYqzOEOJcLK/WC
cHxXWO3K/waRhlLfK+NQPA9b9Z9RroNoi9rHL23YLlpn+1eeHERcmqOrj4Xh
8+LQY7FNZxC91/1x+EQ4AUPmDgg/Fh9E50+vbbGIJOCVD/rxmxoGUE4MrfNs
DAEvfraOtBMZQGvG737xTsT3UaBGwHB0HxKvzLaexO64Il1p79WHdsYxOhyS
cP/POf1+YdmHjux7WGOWTMD8xJ8Nv+T7UOy1msz9qQRMrzX3u13TiwQkxswX
0/A8z7Hk+DrTg4QN9zVcyyUg5x2PwC3q3UiquI0Z/4iA7XFBL864dCBC/n6O
xnsC/tFaW+g7VI/0beITS7HLjq5aHL9bj8yTL4UrtuN5dD/m6HmLeuS9Svec
dAcB3xVQPbffvUJFQ/27eTrxPKv1RQ/q6tDm2/zVXT34+Tt5gEtxDeLg9Rr0
/YjXj3K1s9hZifihRdsMtrHA92LDey+R5CVQ4/qJgC+WFWWvK7xEmp/XUDbD
BNQruXSULf8CebHy3PU+E7DmFrGksvMZGrn8YUlkDN93WZHvUkE5ahjXkCif
wfN+b5K8ztn76GakcIHidwL6bjny1eFKITohO6Oej534kYvTNeUeYlszjRJn
8TzbdXzXjlYmWmgTueb5k4CbAj6ZNBzJRwoVs1+VFgi4zFp5rmE0DUWHFj2h
/hGw+pe1o8WJY8hEOkpnCwcNion/iN5UrwFEK+3bkrGLzpm4gzgbkDsnPh62
ggY3j+W/lHriDZ6fu77ZfhUNyhaHmXSXhoMJY6cwqdU0SN8VnvWZTAGGktLH
bvPT4KEs68HWHAb4Yjy4SlyABg9bXUtMOUqB4ND08rvYKzsy7VcvUKB8fOOm
rPU0uHa8cnFcvwBseSbIZgjR4On+2PT23kLwzWyVx2NRGmT9UFGYr3oIoq+z
pPaK0aDZ05O3nHaVANnKoHdPsMOkBL8o+ZYAC9kl9ecbaZA8ffFyO+8jUD37
c7FanAa9S05zRO4oBQm3vlxv2UKDGa1v3/8yKAOKtfk0EykaDIhNNbKOLQP1
c3ZT77ATX3Z7K7wtA3+sh0w+SNPgm6/w5oRhObBX7Bbr34rXS5R9rXrwCVBv
amKMyeH1NMXvyW56ClqWIk+6yeN4kgzC/5o8BS679XinsG/vmrHQinoKMlJr
zs8o0OBYmPjztb+eAm6nF2rzO2nw8T9nxacNz0DXygcsThUa5NjaINxp+gKk
rXJtuor9uMZ3p//VF8CGU/7dHLa9zrU3uQUvwBeuHPbX3TQo0HpHNfTvCzDH
k/zvzR78/aCDw9E5L4GowFUyeR8NOtbbcfC2V4JeAeIg/34avLSQeHbrfCXI
XD9vGIk9XtEB6sURkBPyPH1ZgwaPNXuOFdsisE/E8Yo1QYN7HyTZ8Y8iYC5x
9Nl2QIMPJkw4LAergLjkGlYmdkw0KNBbrAKDkg2NYgdoULt03vrT2mrgtEWr
mxfSYEKvzrtn8tXAV2bv/JQW7q90bpf209WA2Dq77KRNgyFxDZLx56rB8taH
3Gxsk3UnQzf6VoMI2R2i73Vo8K5Y97bwm9UgWX7z3icHabCOkhrpfVkNLBR6
6Sp6NGgjLmQ50VANJHek6hZgX11ZvVj/vhrk7xQ8kXYI54OhG8UerQZlSlze
gYdpcOlC8bccARbwU67xn8fmqdLkFNzEAnSVoGsXDWhw2t29xnArC9Tt/h1v
dwR/37bu9051FuhQmyrRO0qDyh1T4ZFmLHD+dexAE7acQbbOahsW4LRXXHPU
iAZ9xhN9DZ1YQD3Bzf64Mf6+h6iygi8LvNmxNq4Tm6kWv6vqKgs4sApfWprQ
4PVR2TjJcBZImhkTsTWlwdJBj+BdiSygGHVdexibi1MwfOAO3o/UjgtOx2iw
uy/vk3k2C/w0cmk8f5wGFZ2907KLWMDswRf/y2Y0KHo4+05KDQtM60Ywl7A1
zhSvjG5ggYj+7R1B5jS4uuR0gd4bFniy1lEp4iQNvn/leVfyAwsY5XFa8VrQ
4MD5urP7eljgC5EfEYv9UOiWufgAC4i6Dg8lWNJg2xaHSq0RFiheEconaoXn
gbNVQfgoC+jd2ap5B9vGK/tx0jgLDO6ucZQ8RYOBqkUSF6ZYwLfxbEIW9vXk
H5IiMyzAb7uiautpGoy+NfkjYpYFqPnsCQZ20Pp1A3U/WQDcght3WNOgL+9r
4dY5FuiUY+sWYbu7pXcxFljAAwV5qtjg8yg/f/bwHxbgNpfKLMWOUDadebbI
AplTqHnvGdyvntJV80sssC/cZv4p9o+PvWtWLbNAi+TyNrotDVpcnBPox3Yq
yzCpwh5ZN7Ym9B8LLB8hr2qfxef7voLGAnbKcP+9V9hRxK4OGkcNUL4S0Klv
R4OF950kjLDrhSRXvcFeN2NioIJtU/hCxdge52/hTMYQ/v2c1qnT77Gzn/Ca
nsG+2fMnysyBBvvF63KK8fPlPNPKu7EviHK9efuXBRAP8emUI56Hadp8lXj/
5tk9/EPY91JnMwNwfNP7L9PsnGjQ+l90NR+OP6J1o8tn7Ks1IQ/ccX62OD9N
cnGmQcH3hrlZOH9Plk+yJrDFpez6cnF+jVLmpzxc8H7S9idfwvn/opQqPotd
uFeHbwuuj6h1p/fCORq0vdmx7SOuZ/HP/7KvuNKgiLIeufz/eseKvF3Gdnr0
imsa94PvixNyXOfx+ZGrT9YbxPU9/vNYFPbuxT2dD3txfccTg9a64365FF4x
2ckCXZvauwU98PnY+djoUwuOX8wlOwE7IOjLwMNmvJ7wX+cNF2hQYvti3PF6
vB8B+XnhizSoMpl5aEslzgfnFZGNXjRotLdYo6EAr79i/cBt7O/dTQqGeTjf
y/n5m7xxf33y5r6Xgev3u0VNwgfHU3r4wkQ87qfprce2+NKg/PpejTt++PmT
FZuysH8V63UNe+Lnjxl+lLqE51HTtCKPG37+iO9FGT/cb4sNnwZP4+f3NN+U
9cf3mUzA82bAAh9qvV7vDMTxtPQotCxWA1nW6sT72E/ObeVrna0GPijdSjGI
BifvcxAPxqqB8LP6MaVgGjR/eMJqZVc1OFEszqN6jQY7rmp8EympBh23a3T3
R9CgVMqAnzCel7IpJ/meYtt+zO/kNMXrJU62a0TS4M3lU0KdB/F6N0XtiSh8
3jQv8kiq4PVCXUPIaHxfXOVXpXNUg3Z3IaRzkwaH1GS4/2lWAUMNqu8FdtGP
z4bfZKpA/Urit9otGsw8q5b2kLcKPE89qy4bR4OnChtf5HQjkM0qKeRMoEGX
9CBtcx8EPESMU18l0+ArR/W7pnmVYE1lzMVDGXj+PXOwk/j0AmjxcW07UkSD
8eWaNwzmK8BN9yuOb7EPvhd5ot9eAfpbvjONH+DzbYQadzysAH7xg4onivH5
pcTCU5wqQIno033WJbgeqXZH5TuegC0ybgYXyvD5TxZ4eqOwHCzufeeZ+JIG
kzN92wsPPQblZzKq+97Q4D/akpT48yKgeFPI0uwtDdZK1IqJXywC+S8jv7dg
D8OBUXG5IpC0yWtrTQsN/ixO3bA14T7watcLK2ijQX+LxcJTroVA+dDMof86
cLy1Ki6ykgWgQFmnlb+fBuGe/niT6Dxw9+/XAa0JGjxx1z/DwzcZNMcfF3yG
fSAqRtT2exL4sx3p7p7E+ZRbrnh4PglYGCXe3zKF35dU+qUuOCQC0Szy8uI0
fn/RPrgvxSIeJMAE4fJZGux5q64QcS8aRIfSjij8ocGC3dKbBNN8wXMxKjAL
O2zScePXKh8wdn99qegiDVaXFahNjXoB/Y7PG7mWaJCt+7V391UPwL097svH
vzR4cTrRaxu/LbhWPxJydwUdzoSqXs3tPYn8eW8+5eelw8DSwo2EUDAKVO9b
H4f9fAYsBIwHo5AzCucE19Dh+rV7PWxYISiqvGaT8Fo6XJkGVnG4haKUs/P+
m9bRocbpGxLvH0Sgx89sSVlBOuTwPXL8xGwsejLyIJmB7cXPHdtVdgM9F1ic
khOiQxCx4gen701U45icuWMDHVq1lqqe/XkLtQk2/1MWocOua58G7lyMR5Pn
1Go0N9EhxeNe8J1MQjNJweIvsI+Fm+0uSUpCP6reetHF6VB75ujdpvEk9EfE
ZdsBCTpU9HG9wZ+cjHhr0sN0N9NhgOne1RMfU5CcOPchYxk63GG7y++A9R10
prn7tcMOOnwyYBs11J+BYmtk/Qewm113mGtKZKLnzy8qmO+kwz0hpP86y0wk
fJ8n/NAuOtwvdWd2e3smao7RADuV6PAbz4mPUqwspH70dsm33XTY0a3TRq/J
RnYHR2xcVOnwDbeWoNFANrpF7l73EXuJydW9ZSEbjSs1nnu/B+e/5MaNf4o5
KIt/YWu5Oh2avVarYCXmoDVtJ5P9Neiw7PnD3+fMcpFGY57OD2zbKjYIP5+L
HKu/fXfTpEPyi7+DXWguqi6JNLIm6HCZO3HUriQX/RdfsRrS6XAifGoieHUe
Yh8T8+eCdPhx7bZPpoV5iP+IvUIgdmVn7of0yjxE03nYOYdd66XEWdSWh1LU
Dql91aLD8ui198Tm8tAR4UuTzTp0eH9XxG4FkI+efOi0iTtEh3J1hruMa/PR
UweuPRv06dBJcXAT2ZGPnv1Q40rBNvj9J2F0JB+9FIy/f/cwHV7579WIFxcD
1Rw9skAdocPjw7J6LjoMVNd/+fUOQzpssb7deOAYA71yK8gswl7M9zH7YMtA
jde5DpYepcPBo+ZGtKsM9PZVVXylMR2e+aW7NF/KQC0nph2gCR3q1YQLvqpi
oLZhSY1abMk6vkembxjo/Qr/wUZTOpQQ7zcqHGGgblJ9V8dx3B9L3AdthCjU
+8Zu2fwEHWqd5phU3EyhvlPx73qw2yw2Z7yUp9Dg5elLQ2Z0mNZfMiBFp9BI
eUHd+Ek6rPpTJ7Z4lkJfdLtS3S3o8IaSnXGXK4VG27ncZrDlHDkEfb0pNP7d
TnDOkg6VUpVnF0MpNBkcP+JnRYcpE+WewzEUmhKorljE7lpQpN1MpNCM0mab
Fafx72e73ZRzKTT78ohqGPZ+DS412XsU+nHEn3O1Nf58QoBz8CGF5s51FfLZ
0OGXIw9DM19SaIkRPy9mS4f3RtI1LNoptKxe3ZyGrROoc9O7m0L/aqczNp/F
/TnJcD8xQKGVn47obrOjw1dLsdedv1CI09NfjMImFnjk0sYpxMVxb1zBng6z
A1T4EqcpxLOFO17ZAde7w/W/7l8UWvNA3eERduOKSxbbf1NoLd1+v7ojHUqf
lzyouUQhvtfxayqwA6rN3YT/UYjfqnpA04kO++7LLD5ZwUQCY9MlL7FV+vxk
ZTiZaL3f5rADznQYv3hS7Dg3EwmtNjxZg/3t2fNVR3mYaEOK/86DLnR4sjZ9
k8AaJgKzzONV2MWqh2RC1jKRq9GHAM1zdJgRxNFcw8dEyYUrqcfYtM89RMc6
Jqrm3t2q5EqHuWkjaeX8TDRhZ73AxO7vUhV0FmAi0apoma1udLjmw/u6r9ha
Ek8N0rG1m7v7ifVMdP7SZ2/R83SY9O1EsDV2artQRhy25FWLThPsGhVYv8ad
DqcKf3KJYE/HuH8Lw5Z8ROwrxOtt+pq28R92bQPt5npsXd1GrcseOD453r36
eD8Xs3+5/sBu5i4zNcX7vbu0Ncn9Ah1aZB1dq4jjqbcwqRzFfqEwGtWN4/9e
dvXL2Yt0uKIv/rs5LxNJCt4X6Mc+OG1znrmaifTduzXMPekwLu2MdDMXE3k3
cdm1Ya/fyFCvWsVEmdvVYgy8cP0yYVsErkdziG1ZHXafk464DK6XNPGC+5k3
Hd93tWYtuL5HUr6qqPnQ4fgl++SPcxTynRWxfIC92/ehVOMPCr0tvHg/5z86
FHsaVyIwRaEF7swOCV+cDzd9Ls8xCsnav/6bjF0l8x1SnynkLyFnEn0Jf+5t
xXsD9yPj0vHLnH506BZMjoAeCrW1B+cGYutcMNd+1UEh+di+n16X6dClw0PW
5DWFOpbi7py6QocCQxL1dk9wf1ugmg/Yy9JxHJUlFNpZPjFhHIDNVTc3WUih
EHc9oHuVDiPvPCxtyaSQ8uDiJ8UgfL/w+hVnhFHIktjBx8TWjnjNV3iVQmEp
5ntlgvH95uxy5oYvng9GjyJFQuiQS732ao8zhaKqnBSXr+H4pYZGYvQp9Cn7
3X+tEXi/R1kxV1ZS6JXdT81DkXRo52Sjq/mbgQpkxZYR9jMJ3Y/vvjGQR8Hp
iOIoPN/dd51K6megxYejKTei8e+VNMztyhhIuOpvxZGbdFgni7K0rRloPlg6
oBY7TCFvsMqUgXq1dSDtFo5PsMdIXI+BsuujGnfG0eHlgsvmzsoMpNSyoYc3
gQ43Opzmdfqbj/QGdvxpSKbDQglJddHkfLQjyxAdSKFDzdy3TZci8xHf2QvX
KrA5LboHnl7OR+9HytYwU+nwgT1NuNc6H52ZPCARcYcOG65ws9Jl85Hfohld
NwPPrzJZU52iPHRv07XA6nw6NPGW+SfKyEW2XpHO2gw6nHt6UmBvQi7a+DrW
pA6bZXjIaE9QLooISN3aSNGhTIGW8GuLXGQ3VFTfWkCHNjuUR/zX5CJJRhf/
UBHuT01QsuScg+J2K2X9LcP3c/nvvnd82cj3UHcV8YoOHQyKVTasT0Mn3fuX
H2NLWzy5tZ99B2kkskmlejoseFymvr/kDvoz+PWFVAMdjmjLBTUZ30GBvr8r
OJvwfo/0XtS+cRtFMMRLWt7Q4W0Dr6zGFakoZZV1tl0Hft+h1X2ltyei8qqP
wdHD2EarjOZMotGfyTh/e04SSpPX/x7zsAUaUXdU82RJqHgFxnS9iQOtl3wi
JLZjtw0tF66IB07Oxn2J2EtLSm7O++JBoh5XeJgcCUd4t65Ky4oH05ye3Y4K
JLy44xLX4MUEkB+iH6SgSEJblUNLWfxJYP2V+TcP1EhY+mXtHMfeVMB0fS8j
p05CiwffWu2cUgGweuCbie1S3GeYn5oK3DTtpW/tJWFYjBjXq9+poH6+xfvi
fhLuHFfU/e/lbRDgQ4mr0UgYN3aAYUxLA1/dzVyeapPQJjhp30fJDHD8p9An
QoeERgebNrgdzQDIv+1UJba4p8Vw7dUMkBR5xLhGl4Tcb571swcywIEcrX1v
9EjIue9HS+XdTJDSocTJNiDhrrVH9nRzZwMdGnf26uMkbB/PnZ+2zwHFrNpN
0dh2by+8r/fLARv1QxL5TpCQ2KKpFnwjB0yfWIoQNCNh96xVY8qTHJDmMesu
cZKEus/X8xmtzgUzOYM0lVMk9Lb5duxFbi7I5KnoMrcnodnnt/d1qvPAntPe
zDbspa0ulR9a80DDQ5VLBg4kVLL6Iqg/lAdmzAtEgSN+vlj21zd/84AO447Z
dmcSTgdfW39cMx981Qpo/+FKQoN7bY4qhfkgIFkjz92NhHcFyq4+rsgHgmM/
vUaxz/2pPi/yKh8Qce5CfedJWF3lstdrKB/cGLQxrfEg4fLLc+oxQgyw54pW
a5wXCUvE/3Fu8mKA+pa/mWu8SbjCMszZ5SoDnNr63CMM+wXltzcxigHCmvbw
+/mQ8O37Kj//TAboEpM9esaXhL+ltW1jGhngvBtbsgdb/Mazj4/eMwBHVfrk
sUsk/Pm25nZpPwPsdBKJ1fMj4ezudD7tGQYIKON+reRPwkvKIy1JIhRYz1Ob
xsQW/mlfHbWFAoxTQa4yV0i4+sTtR2byFGhZucArEoD78eDuhcsaFJAxHdNf
ukrCxpyUnlELCjzJZ2z0DSRh16R6bJYtBQwWzn79hp2SWsij4kIBn6zeyOEg
Eu67oFTX4UuB+qnX9c0hJAzvWcO7P4ECQsyrqtrXcHz3tryKuk2BM7Yq6c+w
5x+/LC3NpMDC+wTPglAS7rXIjLtZSAHdWN1+qTASBth/3g9LKBB/cE4vFZs/
pjKwqZwCO59aSkaEk9BUUMHSrpoCvp5rI/9iq3+szPN8RYHanZXffSJI2PBw
YvFkMwVOZ0g32EeSEOwS1bnXToGb10Y9ta6T0PdNp7LVCAV6aXf6n2Lb1Zz+
uvkrBeR/GRzaHU3CN1eiYiomKFDtXCwpFUNCK4nuJbdZCvDJ2EamYFd4/QuJ
+EUBy17B2XWxuB4X2m18Fygwa/hfwxK2A4i68eEvBQC3/B6fGzifwedTdDmY
IKaqO30C2+cIp2PUSibo9otebX+ThH/N33VkczKB7B66Vy/23Ckz1g1uJrg4
MdVvegv3l5AQtzEPE1TmZx1qwn6ifj1whJcJ1tiYlsI4EhZfpnMbrWUCc7FV
m59iB6c98IvhY4LctrJIlXgSthjbPEpfxwTfrjvNUtgKx9piQviZgK6z0XpL
AgmVrcKHNQWYIGqpqSEZ21f6X+Ir7I7yK3vWJZIwzbrKT3Y9E8hcUMoIw9Zo
PuRuju2hMLR6CfvLFvGjp7Cff4zz8k7C+RZ++mMPNvdd7YFx7F67PPoAXu/4
iZ+H7JJJeKLWepUVdvY6qrQHW3faZds9vJ/J+pObTVNIqJ+u59eM96sRzBvV
iL0Q7jdQieMJ13wxeyCVhF/tg5VDcbzvZ89bV2A/mR7SE1/DBFuKtjQq3ybh
yqGNK0Nxvlwd2/ZQ2DZTRbRKnM+KLdcyNt/B9X6/ubUR55uzW40nGfu+3lQq
A9fDJP6zF18aCTtXZngex/VKN0gdCMUOrCre/x7Xc2zVYf1FbOW9+a9kFilw
zbdo8/hd3P/KWsw9uB9aVGyizqbj+bB18tGP7xSQGBP40Y39sjRkNmyaAmWn
vBsbMkgYG+kdKjZKgRUi29UOZJLwBtkevXGYAkYtnRlPsN09ZfeNDVJgFBLe
jCwSkntzvyx8oABPfMtK+WwS5lou/XnbRgGFj3YJBdg2tkre515TwDUk5tH9
HBJyTDE7ZqsoEP1OSkspF8/nMy9s2c8ocF+mrK0YezZGMyXxMQUmWf3fHuXh
+kzx6hhQuL+FPIPU8nF/CMhZH82igJIdl0A59vla6CSCz6/HSmXlpwz8vEqu
mB9RFJjRDjqPmP8/f91cw8543iRuWDpQgO+L8J+BPGcooDrMjGFhXz2/z+u7
GQW8QtsK6+6R8M9gNd86HQr8qpUZa75P4j9pFxccxSkgKvzEz7CIhDJfj+/M
FaDAPgcDnhbskKg/ttmcFPDj9JZ/94CEZYGvtn2aYoA/unWOXQ/xfFO0/vJf
JQOIJ1v8sigh4QfH3TsqSxiA9nkyrBc7TffyUl0eno/hIvkDj0j4renfHZHr
DPDvldOn4cckfD0wnlpuwgDSoouejmV43u30PbikxQDQ6daKUez3bzP5V6ox
wDXup9Lj5f/vp1OaBsIMwHmI98xMBQk9AuO6GtrzgWxqxrTnUxLmOQgeXlmb
Dw6Oqgb+wAamJ8/+eZQPIiKtMuae4fMpWv966618wNt4v2/pBQmFaMQFY718
wH/YyIK3moR1sEPhGzMPWDh9JK9hO4ycGjuZlAfyQn22LWJfCH9nHRacBzRQ
2vQki4QT0/yv5S3ywFm10bC2Wjz/8mMSkjjzQNnm4EepDfj8NJo/HjHNBcvE
htT1jfi8PHs860vkgsMWVMB17LmzUlHNW3PBYMKbQ1ea8Hnkub+5fDYHrObZ
NGjzGr8ffDdsTbyVA6xmH62Ra8Xz8Wz4TvPKbJAvcHAmE5upVbtmMicbfFPs
/iDWRsKNibuHYUQ2CHNezuZ9h+fFc5nPckbZ4EG/wf6p9yRsfaksVF2eBTga
hu3LOvH7gLm6zevWDMC8K1KpPYj793pmrWvmHRC3blNpE3bATVFte6M7wD9I
kmkyRMKh7wJdD/7eBob22+Jt2CSUS5XO2m91G8zsVHX0/4TzkTclI7Q2FWg8
N1xX+gXf50o9tRFHkkBzd6i1zDcSrvMV4hO/HgseG0QeK8DeO37UY+FFDEh/
GX1IZYaEAxoKTNupaOCRHa9Kfsf1HZs0fX3kOhByyeKy/IHvH1Wp4Nm5cHBq
/vmDuHn8Pnasuy5rbSDQPYdyxRbw81zID++0AoByHys1E/v70QD6Xx9/fH83
hhT9JqFf5vRlzfe+ID+i06xxkYQ9g5N71No8wI2FHgPjJRJeuTuX0LbWDfi6
DhzoxK4VNzHQ03IG+kYjO0b+4n5hB8ufUjsDVKtHt7gtk/BdWoC06uWTQHzP
xIZZ7PoZ52HC0Risyp/mufwP9z+HhqhT4AEwKTL79x/2SPS1Z571NuT/AI57
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$11698#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 24->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$11862#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$11862#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 25->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$12026#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1:eJwV13k8VF8bAHAVokRkKRRKqCyJijtzT8eSJFkqQpHsEWX5SZIla6jsSnbm
jiRJpM1hkK1CkX2ZomRNKhTpPe8/9fl+Zubc8yznOZeM3YVjjis5ODiS8D//
/1/ia+rgzbua8J+FcvrRNQvgZ+vruckMTbgRpOymxcwDu+gdy5cZmlBRIcy5
YugXgP9G+JLKNGHoEkoS0J4FKzJX2Jt+0ITxjB27Rh8OA3Vf4x/vsA/enoj/
4T4MnIwyQo914s+zWouFFIfBm2WN/ONdeL34w2qxBZ/A7TMXP5v1aMLpu6Ih
13I/gt0yQ85WA5rwr5DuCqt9Q8Am/+V5+8+a0GxHozyHQReID1jzdxg7oUIi
8sPbTlB3wuKGwxdNqDTp3rXyWCfYyfXzgeOoJjS4zbjrduoD+OW465vzmCYM
3BX+JcerHcTKp3men9KEvy1JI26XVvCi8JLvf780Yefldc8MJFhgo0nd6Sls
i/ZNiYNHq4HPr/U6jnOacL//5d31K6uAMiwUMJvXhB2pZXVxnS9A9of+AvXf
mtBuYIVFanI5iODQ7vuxpAmlUYjI64lcYGrOB704Cah07+XFy7AQFS9ayI1j
K3su7w+bLEJrchh8dlwE3Kx9qY4v6SGqmwA9ptwENKftEHrnWor2hXh6qfIQ
0AjpnU2Or0CSRZ35M2sJuDdrpUPE82o0uiKH98IGAjqmlVxntjShjaBN+Du2
huHhMGe7ZqTv/0/KW5iAxsdWjk/9bEaFs9b7LokQMOW3nq+p6BvkMSxuHyRG
QPeevfyxBi3oZ13Sy1sSBBzJ17rZRH+Htq+oaxCUJOBkusZpwavvkDn5430i
Nvk916b25TtUUW46lrqZgCz/6Gpn4j3yp/hFs6UIGFBYug8ptyOOqKgLJdsI
+FC1o3/VUgdSravw3yNLwPFPBee2qX1Adhyj4WXY/Fs7dpSd+4Bq/Q6mP91O
QHXR0VW7PnxAEedWNlXLE/CRB5+1P6MT8R0J2PpuFwHLklmJKxS7ERl5X+m4
Iv6+OPOti1U38qjt1fiAbWpTr6kf1Y1aaZrGPUoEhN9dXTw/daMExbkrH1UI
+KXX0vpyXA/axH/xw3c1AtZ70VJY7b3IRyxzn5s6AQfevYFW872oRfpN6gi2
jIv/g2vifShMTcGqay8B0+4QmmFn+tC0BXvw5X4Cemez+E+M9CF9O364T4OA
kUeZyIezH+W50XMeYsdON/EoyPYji8Db9rmaBLQ919l1yK4f1eSZfI2kEVCq
M9DMt6cfST4IPLyCTkDVx+j13rl+dOlJUaE/tgc8XRYtNIAUm3jc3UkCWjdW
688dHkAp09Xfjx0g4LBMrtfg4wHkpqm6uFkHxxdv5aHtM4jqtc+cTsW+4GNb
Fho9iKQNb1Su1yXgxiCuzbbZg6jTZixo1UECtrqRNRPNgwiG5XCO6RHwlVqX
iYXEEEq70epod4iApyb0swOUh9CvlL/1fdh5kf7jQGsIFd6zvN6iT8Di10p9
mY5DSLhVkL/MgIAGIoe2dt4bQh7dBy4oHSFgZ+hO+s9nQ6jpo3sbha2dOK3w
uGkIBf5sSrhjiPt7VmFU+OsQ+rrpmliQEQFB7vlfGuvZSHtbid8C9tB2cf02
UTbKUBzs8TQmII+F/kXNzWyEY093MCFg85zyfMgONqp0mJU2OEbAx842PTMH
2GiScxXzLXbHZOGpqINsJM7YoGR6HNcj1d1ywoCN/D6ra1qcICBH3WSxsBkb
UeEHq/qwKxZ8/Pss2ejDdvODZ8wIuPvZmnseNmy0x+mSqZM5Ac/ozIkuOrHR
We6orjHs7dVizT9d2SiOum3tfpKASHmw4YUHGyG9e8Mz2IUuKgYmXmw09eXZ
OR8LAl4+9D269D82koxs/jaPXZzPW/fJj40M5Pv+u2KJ47G0Ufl4hY0KnJdC
rlkRcEz1RNjhEDbqXL2Oh/sUAadWsz4+DmUjroLNN69j/727wnIqnI3U9ZWF
150mYGrD4ra5SDay+wrS4rC1HJIDWq6zUXyUsbSwNe7PI2XpvjFsVK1gS6Vi
T5kDNB3LRtONFxUlbAj468wmif032WjzuZDSTGwluGvK+BYbGfImaGw9Q0CR
d5YemnFs5H8vFzGw1Seju39g3zv8WHeHLQHF3PIdg+LZqHustrkIG8jHGvdj
c0d3mOw+i/P5R75tTQIb7d35ufMx9qVKa5m12A7Nv07vtyNgssGGqwP4+wmu
3MPPsUWvKG++hl29RuwcsMfzRSGZ9hs/71uh/DcWtqGikpAO9pYjGv8ddCDg
etv+3jP/3++E/mIjtnFGVKsxjudKjGWIoSOuf6XYzg032Khwl+vqNmyTtAuy
hTgf3a/9bxx3IuDWdb4LwtFstPp8zIYu7PBv69nHo9hoH1/6HStnAq6QkBNx
jsD7LSqSGsSWPnf3nVEYGyUaVjLOuuB5/NjceO01NqqZfLvrM/bJdrIxPYiN
ZmIHH7mcI2Bg7j7fVVfZSErp2/5J7FN/5BIP+LNRgPt63R+uBLQrDF+h6cNG
99fJNPu6ETCxvKp+7iIb9T5QNfmDffth1KdodzbaP33s9Ap3AtI7bbj24350
umn/KQx7uHx/sLEdGyUp+7jweBAweHyf5gHcv7MeyT4CFwgY8fTAUQbud2kB
6k8CthCXiKSkKRsZP3wSLHoRzze+gvVuhmxU9K0rdrMnnielmccStNnI+aI4
Y5c3AUflZm/yKbGRka90fRH2qal/fE7yuP8C5EaVfAiYcc92ME2GjVZG7dmx
+z8ClmbpmaeKsFF6lsED9Uu4v+Pvq9bOD6FrDJOWcuyO1ZZn9o8PoXP3zb/t
88Pzpdcq27F/CO2rsFPVvEzAytZSodmqIdTW4l9OXsHzOEy0vDN0CD3pCO5E
2IIeTZflfYZQRm/E/IEAAm6RC0J7HYaQ65cETe2rBHytaRAYqzOEOJcLK/WC
cHxXWO3K/waRhlLfK+NQPA9b9Z9RroNoi9rHL23YLlpn+1eeHERcmqOrj4Xh
8+LQY7FNZxC91/1x+EQ4AUPmDgg/Fh9E50+vbbGIJOCVD/rxmxoGUE4MrfNs
DAEvfraOtBMZQGvG737xTsT3UaBGwHB0HxKvzLaexO64Il1p79WHdsYxOhyS
cP/POf1+YdmHjux7WGOWTMD8xJ8Nv+T7UOy1msz9qQRMrzX3u13TiwQkxswX
0/A8z7Hk+DrTg4QN9zVcyyUg5x2PwC3q3UiquI0Z/4iA7XFBL864dCBC/n6O
xnsC/tFaW+g7VI/0beITS7HLjq5aHL9bj8yTL4UrtuN5dD/m6HmLeuS9Svec
dAcB3xVQPbffvUJFQ/27eTrxPKv1RQ/q6tDm2/zVXT34+Tt5gEtxDeLg9Rr0
/YjXj3K1s9hZifihRdsMtrHA92LDey+R5CVQ4/qJgC+WFWWvK7xEmp/XUDbD
BNQruXSULf8CebHy3PU+E7DmFrGksvMZGrn8YUlkDN93WZHvUkE5ahjXkCif
wfN+b5K8ztn76GakcIHidwL6bjny1eFKITohO6Oej534kYvTNeUeYlszjRJn
8TzbdXzXjlYmWmgTueb5k4CbAj6ZNBzJRwoVs1+VFgi4zFp5rmE0DUWHFj2h
/hGw+pe1o8WJY8hEOkpnCwcNion/iN5UrwFEK+3bkrGLzpm4gzgbkDsnPh62
ggY3j+W/lHriDZ6fu77ZfhUNyhaHmXSXhoMJY6cwqdU0SN8VnvWZTAGGktLH
bvPT4KEs68HWHAb4Yjy4SlyABg9bXUtMOUqB4ND08rvYKzsy7VcvUKB8fOOm
rPU0uHa8cnFcvwBseSbIZgjR4On+2PT23kLwzWyVx2NRGmT9UFGYr3oIoq+z
pPaK0aDZ05O3nHaVANnKoHdPsMOkBL8o+ZYAC9kl9ecbaZA8ffFyO+8jUD37
c7FanAa9S05zRO4oBQm3vlxv2UKDGa1v3/8yKAOKtfk0EykaDIhNNbKOLQP1
c3ZT77ATX3Z7K7wtA3+sh0w+SNPgm6/w5oRhObBX7Bbr34rXS5R9rXrwCVBv
amKMyeH1NMXvyW56ClqWIk+6yeN4kgzC/5o8BS679XinsG/vmrHQinoKMlJr
zs8o0OBYmPjztb+eAm6nF2rzO2nw8T9nxacNz0DXygcsThUa5NjaINxp+gKk
rXJtuor9uMZ3p//VF8CGU/7dHLa9zrU3uQUvwBeuHPbX3TQo0HpHNfTvCzDH
k/zvzR78/aCDw9E5L4GowFUyeR8NOtbbcfC2V4JeAeIg/34avLSQeHbrfCXI
XD9vGIk9XtEB6sURkBPyPH1ZgwaPNXuOFdsisE/E8Yo1QYN7HyTZ8Y8iYC5x
9Nl2QIMPJkw4LAergLjkGlYmdkw0KNBbrAKDkg2NYgdoULt03vrT2mrgtEWr
mxfSYEKvzrtn8tXAV2bv/JQW7q90bpf209WA2Dq77KRNgyFxDZLx56rB8taH
3Gxsk3UnQzf6VoMI2R2i73Vo8K5Y97bwm9UgWX7z3icHabCOkhrpfVkNLBR6
6Sp6NGgjLmQ50VANJHek6hZgX11ZvVj/vhrk7xQ8kXYI54OhG8UerQZlSlze
gYdpcOlC8bccARbwU67xn8fmqdLkFNzEAnSVoGsXDWhw2t29xnArC9Tt/h1v
dwR/37bu9051FuhQmyrRO0qDyh1T4ZFmLHD+dexAE7acQbbOahsW4LRXXHPU
iAZ9xhN9DZ1YQD3Bzf64Mf6+h6iygi8LvNmxNq4Tm6kWv6vqKgs4sApfWprQ
4PVR2TjJcBZImhkTsTWlwdJBj+BdiSygGHVdexibi1MwfOAO3o/UjgtOx2iw
uy/vk3k2C/w0cmk8f5wGFZ2907KLWMDswRf/y2Y0KHo4+05KDQtM60Ywl7A1
zhSvjG5ggYj+7R1B5jS4uuR0gd4bFniy1lEp4iQNvn/leVfyAwsY5XFa8VrQ
4MD5urP7eljgC5EfEYv9UOiWufgAC4i6Dg8lWNJg2xaHSq0RFiheEconaoXn
gbNVQfgoC+jd2ap5B9vGK/tx0jgLDO6ucZQ8RYOBqkUSF6ZYwLfxbEIW9vXk
H5IiMyzAb7uiautpGoy+NfkjYpYFqPnsCQZ20Pp1A3U/WQDcght3WNOgL+9r
4dY5FuiUY+sWYbu7pXcxFljAAwV5qtjg8yg/f/bwHxbgNpfKLMWOUDadebbI
AplTqHnvGdyvntJV80sssC/cZv4p9o+PvWtWLbNAi+TyNrotDVpcnBPox3Yq
yzCpwh5ZN7Ym9B8LLB8hr2qfxef7voLGAnbKcP+9V9hRxK4OGkcNUL4S0Klv
R4OF950kjLDrhSRXvcFeN2NioIJtU/hCxdge52/hTMYQ/v2c1qnT77Gzn/Ca
nsG+2fMnysyBBvvF63KK8fPlPNPKu7EviHK9efuXBRAP8emUI56Hadp8lXj/
5tk9/EPY91JnMwNwfNP7L9PsnGjQ+l90NR+OP6J1o8tn7Ks1IQ/ccX62OD9N
cnGmQcH3hrlZOH9Plk+yJrDFpez6cnF+jVLmpzxc8H7S9idfwvn/opQqPotd
uFeHbwuuj6h1p/fCORq0vdmx7SOuZ/HP/7KvuNKgiLIeufz/eseKvF3Gdnr0
imsa94PvixNyXOfx+ZGrT9YbxPU9/vNYFPbuxT2dD3txfccTg9a64365FF4x
2ckCXZvauwU98PnY+djoUwuOX8wlOwE7IOjLwMNmvJ7wX+cNF2hQYvti3PF6
vB8B+XnhizSoMpl5aEslzgfnFZGNXjRotLdYo6EAr79i/cBt7O/dTQqGeTjf
y/n5m7xxf33y5r6Xgev3u0VNwgfHU3r4wkQ87qfprce2+NKg/PpejTt++PmT
FZuysH8V63UNe+Lnjxl+lLqE51HTtCKPG37+iO9FGT/cb4sNnwZP4+f3NN+U
9cf3mUzA82bAAh9qvV7vDMTxtPQotCxWA1nW6sT72E/ObeVrna0GPijdSjGI
BifvcxAPxqqB8LP6MaVgGjR/eMJqZVc1OFEszqN6jQY7rmp8EympBh23a3T3
R9CgVMqAnzCel7IpJ/meYtt+zO/kNMXrJU62a0TS4M3lU0KdB/F6N0XtiSh8
3jQv8kiq4PVCXUPIaHxfXOVXpXNUg3Z3IaRzkwaH1GS4/2lWAUMNqu8FdtGP
z4bfZKpA/Urit9otGsw8q5b2kLcKPE89qy4bR4OnChtf5HQjkM0qKeRMoEGX
9CBtcx8EPESMU18l0+ArR/W7pnmVYE1lzMVDGXj+PXOwk/j0AmjxcW07UkSD
8eWaNwzmK8BN9yuOb7EPvhd5ot9eAfpbvjONH+DzbYQadzysAH7xg4onivH5
pcTCU5wqQIno033WJbgeqXZH5TuegC0ybgYXyvD5TxZ4eqOwHCzufeeZ+JIG
kzN92wsPPQblZzKq+97Q4D/akpT48yKgeFPI0uwtDdZK1IqJXywC+S8jv7dg
D8OBUXG5IpC0yWtrTQsN/ixO3bA14T7watcLK2ijQX+LxcJTroVA+dDMof86
cLy1Ki6ykgWgQFmnlb+fBuGe/niT6Dxw9+/XAa0JGjxx1z/DwzcZNMcfF3yG
fSAqRtT2exL4sx3p7p7E+ZRbrnh4PglYGCXe3zKF35dU+qUuOCQC0Szy8uI0
fn/RPrgvxSIeJMAE4fJZGux5q64QcS8aRIfSjij8ocGC3dKbBNN8wXMxKjAL
O2zScePXKh8wdn99qegiDVaXFahNjXoB/Y7PG7mWaJCt+7V391UPwL097svH
vzR4cTrRaxu/LbhWPxJydwUdzoSqXs3tPYn8eW8+5eelw8DSwo2EUDAKVO9b
H4f9fAYsBIwHo5AzCucE19Dh+rV7PWxYISiqvGaT8Fo6XJkGVnG4haKUs/P+
m9bRocbpGxLvH0Sgx89sSVlBOuTwPXL8xGwsejLyIJmB7cXPHdtVdgM9F1ic
khOiQxCx4gen701U45icuWMDHVq1lqqe/XkLtQk2/1MWocOua58G7lyMR5Pn
1Go0N9EhxeNe8J1MQjNJweIvsI+Fm+0uSUpCP6reetHF6VB75ujdpvEk9EfE
ZdsBCTpU9HG9wZ+cjHhr0sN0N9NhgOne1RMfU5CcOPchYxk63GG7y++A9R10
prn7tcMOOnwyYBs11J+BYmtk/Qewm113mGtKZKLnzy8qmO+kwz0hpP86y0wk
fJ8n/NAuOtwvdWd2e3smao7RADuV6PAbz4mPUqwspH70dsm33XTY0a3TRq/J
RnYHR2xcVOnwDbeWoNFANrpF7l73EXuJydW9ZSEbjSs1nnu/B+e/5MaNf4o5
KIt/YWu5Oh2avVarYCXmoDVtJ5P9Neiw7PnD3+fMcpFGY57OD2zbKjYIP5+L
HKu/fXfTpEPyi7+DXWguqi6JNLIm6HCZO3HUriQX/RdfsRrS6XAifGoieHUe
Yh8T8+eCdPhx7bZPpoV5iP+IvUIgdmVn7of0yjxE03nYOYdd66XEWdSWh1LU
Dql91aLD8ui198Tm8tAR4UuTzTp0eH9XxG4FkI+efOi0iTtEh3J1hruMa/PR
UweuPRv06dBJcXAT2ZGPnv1Q40rBNvj9J2F0JB+9FIy/f/cwHV7579WIFxcD
1Rw9skAdocPjw7J6LjoMVNd/+fUOQzpssb7deOAYA71yK8gswl7M9zH7YMtA
jde5DpYepcPBo+ZGtKsM9PZVVXylMR2e+aW7NF/KQC0nph2gCR3q1YQLvqpi
oLZhSY1abMk6vkembxjo/Qr/wUZTOpQQ7zcqHGGgblJ9V8dx3B9L3AdthCjU
+8Zu2fwEHWqd5phU3EyhvlPx73qw2yw2Z7yUp9Dg5elLQ2Z0mNZfMiBFp9BI
eUHd+Ek6rPpTJ7Z4lkJfdLtS3S3o8IaSnXGXK4VG27ncZrDlHDkEfb0pNP7d
TnDOkg6VUpVnF0MpNBkcP+JnRYcpE+WewzEUmhKorljE7lpQpN1MpNCM0mab
Fafx72e73ZRzKTT78ohqGPZ+DS412XsU+nHEn3O1Nf58QoBz8CGF5s51FfLZ
0OGXIw9DM19SaIkRPy9mS4f3RtI1LNoptKxe3ZyGrROoc9O7m0L/aqczNp/F
/TnJcD8xQKGVn47obrOjw1dLsdedv1CI09NfjMImFnjk0sYpxMVxb1zBng6z
A1T4EqcpxLOFO17ZAde7w/W/7l8UWvNA3eERduOKSxbbf1NoLd1+v7ojHUqf
lzyouUQhvtfxayqwA6rN3YT/UYjfqnpA04kO++7LLD5ZwUQCY9MlL7FV+vxk
ZTiZaL3f5rADznQYv3hS7Dg3EwmtNjxZg/3t2fNVR3mYaEOK/86DLnR4sjZ9
k8AaJgKzzONV2MWqh2RC1jKRq9GHAM1zdJgRxNFcw8dEyYUrqcfYtM89RMc6
Jqrm3t2q5EqHuWkjaeX8TDRhZ73AxO7vUhV0FmAi0apoma1udLjmw/u6r9ha
Ek8N0rG1m7v7ifVMdP7SZ2/R83SY9O1EsDV2artQRhy25FWLThPsGhVYv8ad
DqcKf3KJYE/HuH8Lw5Z8ROwrxOtt+pq28R92bQPt5npsXd1GrcseOD453r36
eD8Xs3+5/sBu5i4zNcX7vbu0Ncn9Ah1aZB1dq4jjqbcwqRzFfqEwGtWN4/9e
dvXL2Yt0uKIv/rs5LxNJCt4X6Mc+OG1znrmaifTduzXMPekwLu2MdDMXE3k3
cdm1Ya/fyFCvWsVEmdvVYgy8cP0yYVsErkdziG1ZHXafk464DK6XNPGC+5k3
Hd93tWYtuL5HUr6qqPnQ4fgl++SPcxTynRWxfIC92/ehVOMPCr0tvHg/5z86
FHsaVyIwRaEF7swOCV+cDzd9Ls8xCsnav/6bjF0l8x1SnynkLyFnEn0Jf+5t
xXsD9yPj0vHLnH506BZMjoAeCrW1B+cGYutcMNd+1UEh+di+n16X6dClw0PW
5DWFOpbi7py6QocCQxL1dk9wf1ugmg/Yy9JxHJUlFNpZPjFhHIDNVTc3WUih
EHc9oHuVDiPvPCxtyaSQ8uDiJ8UgfL/w+hVnhFHIktjBx8TWjnjNV3iVQmEp
5ntlgvH95uxy5oYvng9GjyJFQuiQS732ao8zhaKqnBSXr+H4pYZGYvQp9Cn7
3X+tEXi/R1kxV1ZS6JXdT81DkXRo52Sjq/mbgQpkxZYR9jMJ3Y/vvjGQR8Hp
iOIoPN/dd51K6megxYejKTei8e+VNMztyhhIuOpvxZGbdFgni7K0rRloPlg6
oBY7TCFvsMqUgXq1dSDtFo5PsMdIXI+BsuujGnfG0eHlgsvmzsoMpNSyoYc3
gQ43Opzmdfqbj/QGdvxpSKbDQglJddHkfLQjyxAdSKFDzdy3TZci8xHf2QvX
KrA5LboHnl7OR+9HytYwU+nwgT1NuNc6H52ZPCARcYcOG65ws9Jl85Hfohld
NwPPrzJZU52iPHRv07XA6nw6NPGW+SfKyEW2XpHO2gw6nHt6UmBvQi7a+DrW
pA6bZXjIaE9QLooISN3aSNGhTIGW8GuLXGQ3VFTfWkCHNjuUR/zX5CJJRhf/
UBHuT01QsuScg+J2K2X9LcP3c/nvvnd82cj3UHcV8YoOHQyKVTasT0Mn3fuX
H2NLWzy5tZ99B2kkskmlejoseFymvr/kDvoz+PWFVAMdjmjLBTUZ30GBvr8r
OJvwfo/0XtS+cRtFMMRLWt7Q4W0Dr6zGFakoZZV1tl0Hft+h1X2ltyei8qqP
wdHD2EarjOZMotGfyTh/e04SSpPX/x7zsAUaUXdU82RJqHgFxnS9iQOtl3wi
JLZjtw0tF66IB07Oxn2J2EtLSm7O++JBoh5XeJgcCUd4t65Ky4oH05ye3Y4K
JLy44xLX4MUEkB+iH6SgSEJblUNLWfxJYP2V+TcP1EhY+mXtHMfeVMB0fS8j
p05CiwffWu2cUgGweuCbie1S3GeYn5oK3DTtpW/tJWFYjBjXq9+poH6+xfvi
fhLuHFfU/e/lbRDgQ4mr0UgYN3aAYUxLA1/dzVyeapPQJjhp30fJDHD8p9An
QoeERgebNrgdzQDIv+1UJba4p8Vw7dUMkBR5xLhGl4Tcb571swcywIEcrX1v
9EjIue9HS+XdTJDSocTJNiDhrrVH9nRzZwMdGnf26uMkbB/PnZ+2zwHFrNpN
0dh2by+8r/fLARv1QxL5TpCQ2KKpFnwjB0yfWIoQNCNh96xVY8qTHJDmMesu
cZKEus/X8xmtzgUzOYM0lVMk9Lb5duxFbi7I5KnoMrcnodnnt/d1qvPAntPe
zDbspa0ulR9a80DDQ5VLBg4kVLL6Iqg/lAdmzAtEgSN+vlj21zd/84AO447Z
dmcSTgdfW39cMx981Qpo/+FKQoN7bY4qhfkgIFkjz92NhHcFyq4+rsgHgmM/
vUaxz/2pPi/yKh8Qce5CfedJWF3lstdrKB/cGLQxrfEg4fLLc+oxQgyw54pW
a5wXCUvE/3Fu8mKA+pa/mWu8SbjCMszZ5SoDnNr63CMM+wXltzcxigHCmvbw
+/mQ8O37Kj//TAboEpM9esaXhL+ltW1jGhngvBtbsgdb/Mazj4/eMwBHVfrk
sUsk/Pm25nZpPwPsdBKJ1fMj4ezudD7tGQYIKON+reRPwkvKIy1JIhRYz1Ob
xsQW/mlfHbWFAoxTQa4yV0i4+sTtR2byFGhZucArEoD78eDuhcsaFJAxHdNf
ukrCxpyUnlELCjzJZ2z0DSRh16R6bJYtBQwWzn79hp2SWsij4kIBn6zeyOEg
Eu67oFTX4UuB+qnX9c0hJAzvWcO7P4ECQsyrqtrXcHz3tryKuk2BM7Yq6c+w
5x+/LC3NpMDC+wTPglAS7rXIjLtZSAHdWN1+qTASBth/3g9LKBB/cE4vFZs/
pjKwqZwCO59aSkaEk9BUUMHSrpoCvp5rI/9iq3+szPN8RYHanZXffSJI2PBw
YvFkMwVOZ0g32EeSEOwS1bnXToGb10Y9ta6T0PdNp7LVCAV6aXf6n2Lb1Zz+
uvkrBeR/GRzaHU3CN1eiYiomKFDtXCwpFUNCK4nuJbdZCvDJ2EamYFd4/QuJ
+EUBy17B2XWxuB4X2m18Fygwa/hfwxK2A4i68eEvBQC3/B6fGzifwedTdDmY
IKaqO30C2+cIp2PUSibo9otebX+ThH/N33VkczKB7B66Vy/23Ckz1g1uJrg4
MdVvegv3l5AQtzEPE1TmZx1qwn6ifj1whJcJ1tiYlsI4EhZfpnMbrWUCc7FV
m59iB6c98IvhY4LctrJIlXgSthjbPEpfxwTfrjvNUtgKx9piQviZgK6z0XpL
AgmVrcKHNQWYIGqpqSEZ21f6X+Ir7I7yK3vWJZIwzbrKT3Y9E8hcUMoIw9Zo
PuRuju2hMLR6CfvLFvGjp7Cff4zz8k7C+RZ++mMPNvdd7YFx7F67PPoAXu/4
iZ+H7JJJeKLWepUVdvY6qrQHW3faZds9vJ/J+pObTVNIqJ+u59eM96sRzBvV
iL0Q7jdQieMJ13wxeyCVhF/tg5VDcbzvZ89bV2A/mR7SE1/DBFuKtjQq3ybh
yqGNK0Nxvlwd2/ZQ2DZTRbRKnM+KLdcyNt/B9X6/ubUR55uzW40nGfu+3lQq
A9fDJP6zF18aCTtXZngex/VKN0gdCMUOrCre/x7Xc2zVYf1FbOW9+a9kFilw
zbdo8/hd3P/KWsw9uB9aVGyizqbj+bB18tGP7xSQGBP40Y39sjRkNmyaAmWn
vBsbMkgYG+kdKjZKgRUi29UOZJLwBtkevXGYAkYtnRlPsN09ZfeNDVJgFBLe
jCwSkntzvyx8oABPfMtK+WwS5lou/XnbRgGFj3YJBdg2tkre515TwDUk5tH9
HBJyTDE7ZqsoEP1OSkspF8/nMy9s2c8ocF+mrK0YezZGMyXxMQUmWf3fHuXh
+kzx6hhQuL+FPIPU8nF/CMhZH82igJIdl0A59vla6CSCz6/HSmXlpwz8vEqu
mB9RFJjRDjqPmP8/f91cw8543iRuWDpQgO+L8J+BPGcooDrMjGFhXz2/z+u7
GQW8QtsK6+6R8M9gNd86HQr8qpUZa75P4j9pFxccxSkgKvzEz7CIhDJfj+/M
FaDAPgcDnhbskKg/ttmcFPDj9JZ/94CEZYGvtn2aYoA/unWOXQ/xfFO0/vJf
JQOIJ1v8sigh4QfH3TsqSxiA9nkyrBc7TffyUl0eno/hIvkDj0j4renfHZHr
DPDvldOn4cckfD0wnlpuwgDSoouejmV43u30PbikxQDQ6daKUez3bzP5V6ox
wDXup9Lj5f/vp1OaBsIMwHmI98xMBQk9AuO6GtrzgWxqxrTnUxLmOQgeXlmb
Dw6Oqgb+wAamJ8/+eZQPIiKtMuae4fMpWv966618wNt4v2/pBQmFaMQFY718
wH/YyIK3moR1sEPhGzMPWDh9JK9hO4ycGjuZlAfyQn22LWJfCH9nHRacBzRQ
2vQki4QT0/yv5S3ywFm10bC2Wjz/8mMSkjjzQNnm4EepDfj8NJo/HjHNBcvE
htT1jfi8PHs860vkgsMWVMB17LmzUlHNW3PBYMKbQ1ea8Hnkub+5fDYHrObZ
NGjzGr8ffDdsTbyVA6xmH62Ra8Xz8Wz4TvPKbJAvcHAmE5upVbtmMicbfFPs
/iDWRsKNibuHYUQ2CHNezuZ9h+fFc5nPckbZ4EG/wf6p9yRsfaksVF2eBTga
hu3LOvH7gLm6zevWDMC8K1KpPYj793pmrWvmHRC3blNpE3bATVFte6M7wD9I
kmkyRMKh7wJdD/7eBob22+Jt2CSUS5XO2m91G8zsVHX0/4TzkTclI7Q2FWg8
N1xX+gXf50o9tRFHkkBzd6i1zDcSrvMV4hO/HgseG0QeK8DeO37UY+FFDEh/
GX1IZYaEAxoKTNupaOCRHa9Kfsf1HZs0fX3kOhByyeKy/IHvH1Wp4Nm5cHBq
/vmDuHn8Pnasuy5rbSDQPYdyxRbw81zID++0AoByHys1E/v70QD6Xx9/fH83
hhT9JqFf5vRlzfe+ID+i06xxkYQ9g5N71No8wI2FHgPjJRJeuTuX0LbWDfi6
DhzoxK4VNzHQ03IG+kYjO0b+4n5hB8ufUjsDVKtHt7gtk/BdWoC06uWTQHzP
xIZZ7PoZ52HC0Risyp/mufwP9z+HhqhT4AEwKTL79x/2SPS1Z571NuT/AI57
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$12026#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 26->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$12190#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$12190#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 27->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$12354#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$12354#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 28->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$12518#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$12518#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 29->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$12682#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$12682#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 30->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAFOoNAgAAOEABAHhxPFK3PZ6gPJt4
ADhADqfY3hpTlT4oV2s08QA4QO/W9GSCQaU+PMTIZuIBOEDD8sVBrB61PmOe
g8vEAzhAOWpQXnbZxD6yUvmUiQc4QMcqSbNpUNQ+PAkoLgIIOECXQ/tDXoPV
Psa/Vsd6CDhAvmXjczq01j7aLLT5awk4QBugzueuD9k+AQdvXk4LOEDA3l6d
rK3dPlC75CcTDzhANBnrlI9D4z7acRPBiw84QFQzCQiVzOM+ZChCWgQQOECi
BbS3mFTkPniVn4z1EDhA3D/sZ51h5T6fb1rx1xI4QJUDjkqub+c+7iPQupwW
OEA5n84NgFzrPo2Mu00mHjhA9VYBm7k+8T7q2cwLqR44QPJ+AUEyePE+SCfe
ySsfOEC/4ma2H7HxPgTCAEYxIDhAFvF2uFoh8j5890U+PCI4QIY6Q7lc+/I+
bGLQLlImOEDkDEWq7ZX0Psqv4ezUJjhAhlogF+XG9D4o/fKqVyc4QKo2t/dX
9/Q+5JcVJ10oOEBQLy29sVb1PlzNWh9oKjhAlzPR+EAP9j5MOOUPfi44QJEU
si8raPc+qoX2zQAvOEBjus2oC5H3PgjTB4yDLzhA5kH7OW659z7EbSoIiTA4
QNKKoU27CPg+5ulYaY4wOED/WC6cTQr4Pv6I28o=
                    "]], 
                    LineBox[CompressedData["
1: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
XBnK
                    "]]}, Annotation[#, "Charting`Private`Tag$12846#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAbW9co+/oOECZMlrXA8XxvtJHb/X2
6jhAJR4pzhcy8L6cKC7fd+s4QPFE2HlxmO++ZQntyPjrOEB8OVsCe8zuvvjK
apz67DhAmoEf6Qk07b4eTmZD/u44QBwAF98YAuq+alRdkQXzOEDsFG34CaLj
vgJhSy0U+zhABEZC+LTGzL71DgltjPs4QIwBJ3av9sm+6LzGrAT8OEBKcxQ9
5SnHvs8YQiz1/DhAsJVuOHqawb6c0Dgr1v44QDCWj5c7nqq+N0AmKZgCOUBA
5Nu6CfC8PmwfASUcCjlAjjFHjWDD2j5fzb5klAo5QHZ+gOsb6ts+Unt8pAwL
OUDfi4cYyQ7dPjnX9yP9CzlAzQ/ICf5R3z4Gj+4i3g05QORZSTr73+E+oP7b
IKAROUANTKdjoR3mPtXdthwkGTlA3O+wICrc7T6cIleBphk5QC6HoU2dWe4+
ZGf35SgaOUAER/p889XuPvLwN68tGzlA710vLkzL7z4QBLlBNx05QFjx2vRi
1PA+TCq7ZkohOUAR49GeyZfyPhRvW8vMITlAg2/ysczN8j7bs/svTyI5QB5U
3dxHA/M+aj08+VMjOUCWuLcfqGzzPodQvYtdJTlA+uQF4Rs59D7Cdr+wcCk5
QFOQP44sufU+irtfFfMpOUB7qWyH4ub1PlEAAHp1KjlAnF/6LhcU9j7giUBD
eis5QG013S7+bPY+/ZzB1YMtOUDXfUd5zhj3Pg7OwAOXMDlA/1gunE0K+D7o
RgoU
                    "]], 
                    LineBox[CompressedData["
1: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
fgE=
                    "]], 
                    
                    LineBox[{{24.498193137897236`, 0.00002292656587207179}, {
                    24.513242123422184`, 0.000013791144034569821`}, {
                    24.51522313782899, 0.000012654364866552912`}, {
                    24.5172041522358, 0.000011531976947009628`}, {
                    24.521166181049416`, 9.330101126410564*^-6}, {
                    24.52909023867665, 5.096033470588825*^-6}, {
                    24.544938353931112`, -2.708694608162089*^-6}, {
                    24.546919368337917`, -3.6234256087505568`*^-6}, {
                    24.548900382744726`, -4.524860268622517*^-6}, {
                    24.552862411558344`, -6.288114293151421*^-6}, {
                    24.560786469185576`, -9.65807724992335*^-6}, {
                    24.56276748359238, -0.000010468353613342614`}, {
                    24.56474849799919, -0.000011265881089924009`}, {
                    24.568710526812808`, -0.000012822963109507987`}, {
                    24.57663458444004, -0.000015787151502935336`}, {
                    24.578615598846845`, -0.00001649735286021547}, {
                    24.579890057086835`, -0.000016946401464811888`}}]}, 
                    Annotation[#, "Charting`Private`Tag$12846#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -1.0587911840678754`*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 0.}], {Arrowheads -> Small, 
                    ArrowBox[{{27, 0.}, {27, 0.}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000016946401464811888`, 
                    0.00002292656587207179}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-3.35\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -3.3495471982354766`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000125\"", ShowStringCharacters -> False], 
                    0.000012500680326164684`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 31->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13010#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13010#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 32->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13174#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13174#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 33->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13338#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13338#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 34->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13502#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13502#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 35->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13666#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13666#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 36->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13830#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13830#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 37->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$13994#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13994#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 38->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$14158#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
vP4WHDWK98Eet1zB9nj0ZybW35qJBrOyvvey+NkDlcj7hx+J0eCl20dMd25K
AZ0+XuF7D9BgtEdpbLhOCrCz1x9IwI6sODYymJQCEjS2hIWK06AI+3bJAzL3
wRyTe5+tBA1uX+JJ5TVJBTk3tIIkpGmQPB71WCY/DewKWG0vVaTBudnRX/EJ
WSD/8gdRcSX8ukLxUF91FgBmpd4Z2NpTaTnMn7OAk6q1yN3/aDCE/xGjsMhD
0LTa4el2BH+fRYW8XPFDEOiVx69IocGyCw9S815mg+8uRg41ajTYnROjE/g2
B5xd2T1CHKfBtoa7kwfncgDy7zJ/hW129f01clcuuBeho1+vToMe/7j9zhnl
gqMPjym3a9DgYE2p9o/BXJDULcP0VZsGl3bu+6w0ngeOU7ZmMZ+lQalX34vo
vQWgrK6BLwq7Z5PC6bIfBYBX60bCdkMaRPqvXU7uKQRzhuvhHEY0GBiU93vt
VCFIdV1y2XuOBotki2a06wrBwsNhipw5DSrzZb42zCwCGSxPe42tabAuloGf
eqQEKJz3zO/CrsjUCfQ/VQKay+V8tG1oUGDPyYjb1iVgwbiAG9jS4NoJ1udi
d0vA8dz7RgfsaVCuRjdMZqwEfD8W+HH5Ms5vgZ6WQ1gpCExUeeTiRIMJBYMn
nqaUAo7JFQ86tm5Um/en4lJAxLrsHnCmwRkO98Tr70vBnWGL0/WuNPh3R3LN
Nf4yoBBwrDPWA5834cmhf9lloKnjbwabJ36emf6Vg5VlwHzfc9dQbL/gH257
G8pAaKsCu68XDcaz7H5vO1IGennETl30psGVcdXVa0LlwNnpq0A/tkvwmOCG
dDnY9Dpt5owPDQbXLGpqUcqBlB1XtIYvDZqKfmlRPVcOAqu2vpXxp0FestLt
dnQ52MXSkJqPHblHNNfofjnINQ+6LBpAg75nNfd9zy0HHZt/sXIF0mBjhCOf
LSoHoqcntdav0eBqesVszUw5qM7Be+g6DbLX3jN7vVoOtH9Zfp/HvrtRL6XB
QAKvzM8Ro0E0uNlLJPrlNhI0zb5tartBgwUyo990hEmwO//aYbUQGtT0Ixw6
95Pg4iW5tGfYv82Lg5QlSPDrQ7x7wU0arClJ/F0mTwL1aPVB4VAanPo7c7BW
iQRxJ35qJGP7lPAFVamQQKrGVCA8jAbf0suOakASeLtvi/iLXX3uh9focRI0
SL1a9AqnQfXp9svWmiQ4ny7SbB1Bg97Hp+W26ZEgJoTufuwWDZ4VY9ZYNSXB
Z8r9wRpsUcHfufnnSXDwh7amfBQNijUt/1C9SIJa+zIB4ds4H3PoL6MNCbaL
XopIwp4/7XKDYkcC088cSzuiadD20NdoQwcSLOlebV7H/svc+UHKmQRg60EF
rzs4njmJfroLCW6/7kubxj7Dwfgv7AoJ+nyjmK1jaLDSSldqizsJxBSoHp+x
Vz8uQ1sPErhNzw6evovPZ/xdIs+TBK9yMjVbsW8M8rY0e5GAzeJ0BYylwUlj
L6a2qyQw5mEUrMEOfjrZUOJNguyuqgi5OBr8PG8/c8WHBPO37JbysKMWh6z3
+JKAepz3glA8nhdlxK5k7Mj11uZEbHkel94/2N1PAhR2JNDgSSGbTOBHAtEr
Mumh2IxP2PWssF0lvjCvY8+2m7faYj//FuvheY8GU88Rq1rYWx+oDU1hp2nc
f7UN+6zhiqZVIg2G3rbfXIafn7Ujr6Ifm85zr1gOe6bpnODpJBo0HtqRGYvj
VQlmjWzBtn/XUN+FzxOm+mLpaDIN5vTnrM/j835Ycr7wFDtvOVNhDudDqESo
RTaFBjftyNF+i/N12bZLIQ9bjSdLKgLn86lQSLrgfRpcZ7xZI4rzzdSnyJKI
Xf+G8jkV18MgbtxjeyoNSus8u7qE65WmnTx0E7s5cspNAtdzkvGk1hq2yBX0
mHqZBCHeJYJTD2jwyjpr2j9bEnTIWURapuH7Fn6Ro8yaBHsndy73YRcF7bEh
LElQZe7Z0pxOgzZhZ1RnzEnAwHVA8WgGDe69+iKCA/ejXkdPejW2RCrQ4TQm
AR0SnrmZNJiird/6WJ8ELHEdmw9m0aD+h77eTbokkPhmFV+ALdS79lpcC5/3
xu3HxQ9pUKtwPPnnURJEvRc+JpNNgw7CvCeyKCQoFq3qKsP+Yf1CQ+QIznfd
4PzjRzQ4VnioPlsG9/du9yDFHNx/Z21+5+D7KWO1ZecT7C+C4/8C8f113Swr
W5NLg4+tkn6U8pJgQS3IGeXjfE+lftmJ58GuhD3rRwvwfbs/3+/3oxwcHs2/
XYctPJZ0/dr3cuBxs6voTSENgpLz5sHvysGPBtHJtmIazPC/ze+SUA64Oat9
dUtwPEM+1O2h5UDZRpulA1t8e/nHM17lwJfJ8+D7UtzPTiXnPp0tB3/U39j2
ltNgaUmhSwF7OeBPNPlhQtJg+ueKxYD1MkAZnwn9jP2Z16ZnZbIMBIZx5Qw9
xq87ujz9hOfvv0a7kdFKHF/nt7u6nmVAhHvN3bYK7+eVxa7jFmUA2t1loGNL
XWG2GNYqAyFba0SmnuD5zLp4el2gDDBpsl5ceIrj1Qgz6a4tBWLJ6XPuNTT4
5m744+GCUnCCfvj6Mja719SxqNhSEB5hlv7zGQ06V0RuNFiUAtaW4oH1F/h5
vuMZz3+WAPaTeiastTRIbTtL+HOWABO7b7QQ7BMaN5Ou/SoGj2567V/DnjA4
1Ck1WAxUUOrcTB2Ob/vNvzeyi4GlIj20qwH313S2teChYlAlGPw4uRk//5PC
pv5DRWCD2JO8qwXfXx/XlktsReCkSV7gLeyF26nb7n4vBMPx7ZoBrTT4bpuV
1PCjQsDMwjds8RbnX2nTF8hdCMyWHrOJd+J5TjJ3fp/MBzk7TyxkYAe/fTeF
6vPBvHTfJ54uGuw/ui6s8iAfhNpvZLG+p8FkWfmN3Tr5oHRQ+8jsB7wPV05k
2uTlgU3No9ZVPTR4qvipkJZOLsh/wPVKbZgGn/BK2CfqZoPYHXwVrdhKx0x9
nfZkA/8ggXyDLzToz+9n0Nj/EOha74+z+Ir7aSNUgtH2IViQOmzrP4J/Dxl0
UDOvZgGV57o7Kibw/fxoRpXdSANtfTcviM7jevlmssxZ3gOV2hFnCrBdF1r1
HDoTQNrLKE25BRo0TPp4ppeSAFyz4g7TFmnwRV4oEccRD3Y7ZG4xXabBl31I
rOXSXWC++rw0dhX/HiJYHJi8w4C6I8rm+YXn5RWDFEa5UCA7UJecgb3SauLV
Px6C93fLjZLfNHjYvSiA6VQwyAnvMWpZo8GrhwurXTZ7gzu/+rX113G/XFFb
u3faE3hfHjrag/2r9UKzcZob0NIbkxz7i88fcETg2Ek7cLiWLuS0QYMHE64V
ar65BPgVpvcsYX+ySpj+6mwMGHPmWPz+4ft5wF1p4LoGmOFa+vsPW8k6793V
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14158#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 39->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$14322#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14322#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 40->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 3.0300770679925616`*^-11}, {
                    24.00184030752336, 4.539453293849282*^-7}, {
                    24.003680492597738`, 9.049643750722426*^-7}, {
                    24.007360862746495`, 1.7983416090785541`*^-6}, {
                    24.014721603044006`, 3.550642287504493*^-6}, {
                    24.02944308363903, 6.918945605113995*^-6}, {
                    24.03128326871341, 7.327337649272151*^-6}, {
                    24.033123453787788`, 7.732942076153348*^-6}, {
                    24.036803823936545`, 8.535815169497381*^-6}, {
                    24.044164564234055`, 0.000010108407954398751`}, {
                    24.05888604482908, 0.000013122497036158302`}, {
                    24.06072622990346, 0.000013487099946260145`}, {
                    24.062566414977837`, 0.000013849023604735}, {
                    24.066246785126594`, 0.000014564860258216353`}, {
                    24.073607525424105`, 0.000015964680551192218`}, {
                    24.085190809808704`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1:eJwV13c81d8bAHAyShkpKxRKSlGK5K7TsUfKSEJRZvYOUXYIcT9miYxs6iuh
xTHDjaQSyWgYl5JdlNHv/P7yer/uvZ/Pc57nOc85pGw8jO03sLCw7GNjYfn/
Xwl+1t0i7Sqwkkdv3/H5eZB7KLmu/5MKvHX4RwmX8ARw5jMushhQgUbdq21/
njGB0uxWYgD7W13kKX5LJmh/lGA3NKgCt1apiL24Pw6mlWK3fB1WgTKef9J2
KI4BMiXMfOKbChQ5IoVYzn8D77Q9fv3+rgJPlGoEfnrYDzL3H/rs/0MF2mlL
+6xu6Af2XD/bl7E3lbL9qz73ESy/cs78O6UC9SQ0JpY39IFdpx3U16dVYHzy
hfK1Sz3A2cSS4FhQgYORIw9ZArvABuuT8gIrKtB+KOCKyfYa8IuXyy0em75T
zlxo8jGYqG0tZ19VgcVdT0NGGx+BNyJqcr+wW8wfkqL+lILMbpWDvesqEFa/
k7e2TgHHoYzs7Q0kOJh6KtByXyFylWDdK76ZBHm7ZyYVr7egi6+RXQp2mEu9
TJ/VS2QcdC2fewsJng13ucUErYjUt7RnDRuqbHp95m8b4kyc3j3MQ4Kb9Xa2
XrHqQDnrA5I5/CQYf4I12Wq6G30YqhGX3kGCeZcSmLsHe1Hm7nNhhdinoxP0
5Kl9yO7y0th+URIcEggMsbzbh+Znj/8nL0aCx/vKR4+c+4i2sj9TPb6TBMfI
j9VrW/qR/oEXDnpSJGhr8OHWqP8gEvA439GJbfko+kn6q0E08HjlsMFuErQ3
imMEig8hZxr1z5k9JKjeIiH3vm4IRRvWxVnuJUHuB/8lDf8eRk1+9RWesiR4
uTI40S/3C4p9cVFwAbu+5TP5SssXZMTCEnjlAAk622SObWV+QV9uQvXAgyQ4
urIYJHnwK1rLbPwQIU+CHs21ISUPvyKV5ua/aUdI8CXhEVpy/xti2WR3ccdR
EozRjf6V1fANtemzt9zFngqQv6I09A2Z9mrcylEkwcS/c706giPIZ/KlROkx
EgwvWFwSDhtBD/naNepIJNgaVaKfpj2KsqUu/1Mmk2B0++4BHctRRFfkfF6B
3cAiznzgPYp8zmkczqeQYHK9QjA9cxSpZDfsiKORIJ+1SR+aGkWyjy72sAMS
nFQFodwsY0i0eT0hGLt+euox7/YxtDpOZfc+QYK7hClNR1TGUOOhZ9NmqiS4
I2FLyZ/gMVQJzUreYW9/Ht87nziG8o2XbPXVSPBhtHBmXs4YivI71n9CnQR7
vKZ+yTSOIT30qFlGkwS13Nm3v1ofQz2nSm8v6pDgkrWvw2PXcfTyou4Zd10S
PLX/9oDS1XFU4zXBM4EtQzFg87oxjm6nykQM6JHglkc7vESzxpHlUJ5bkz4J
HmbQF1UY4+j0jOp+6ikSRMP1cunvxxFk/fqtGttBqE26cmgc7d4rYVZymgQ1
TFnOS8yNo3HXu2p0QxLUYU/kHRZgor5g8hqXEV6f4KyP7E4maqf3P4nA9tjp
Xqi4l4nKqoTl/Y1xP4XYXr2hxESZrTXMWewLvHJZrylMlPDxbJ7zGRK89+9x
ygc1JvJcTRa2MiFBwiefQ8aQiax5Fd/1YZcftNrgYcpExpLv4o3OkiCj4mp/
wAUmUtLYukHTFNc3PmBn92Um2mv6Xy3C3rzjAc8uNyYScjztr3IO9+vQ2LC8
NxP9iYufOmhGgvv8OQ+mBDFRHpuU2n3stpHDYx9CmEg/qDpd1JwEWcf4mYMR
TPRrXvcnga0YGONeEs1E95yH1bgsSLA3z+MZJY6JtL953w7FNrO6z5GSwESz
5hunl7Dlyv/RKwkmUtNVuDN+ngRDV3MvqKcz0Y+GlmnLCyQ4spYtUnOHiVJU
zDU+YJslKm+ZvctEtIqfd/QtSfBkhar3XBYTje8Ln2nGlr+UFfc8m4kSs4U0
KVY4v/f2pp7MZSIV4bKMSuwQ55rO/Dwm+ppwYlb2Igl2Nx/0bL3PRLGcPZq5
2G9LrOsq8plIMdjxrsglEpwRU5q3LWCiwV+rs4nYWTtC9L9g33AjtDZak6Be
3q7NMoVMdGhsb2YwtlP1tOMx7L4Lz+d+YdsadxTyYof2nNZ2syHBsgA6ayX+
vaz+SOYo9uN9ok8ksN81+8+ftyXBH1YaHGb4/UEUbp332HU7f8iex/FJP87J
0rPD8832u40sjv/1gWMLjdhsCrumm3KYyC+PoUOyJ0GjcBuu/Xj9EqJW9yqw
WSyS581wftqJ+YV9DiToXxPPPIvz58UVrZuNLZd+QEYC51c0TCxb6DIJpq3o
TFWlMVHz8n+Lt7CFR5r9hVOYyNVTQ4/DkQQPnPLn1Mb1Qhfdfi1gPypckubF
9b3cx3rSxQn3U+o1hUJc/60GaTnfsP9jK1XmjmQiG1B/8q0z7t+L7gfUrzHR
lpozuTouuD9P1iULBDBRlfzE73ps1hrpmSofJuLcyZ/30JUEz2144GPrjPfH
is1ynDsJNjk/9g8+y0QmPkun2DzwPDvee6zLgInWv8fdD8T+dH2uZ1qXiQw/
VZ128sT59A17cJ/GRItPOQu0vPG8WBWK/7abibIU7v6twyZH8Qg1iDGRVvFh
w2M+uD6Rgx6eeL/eTjdb2eNLgq7DPrF6HExE9Ss1YvXDn/9Kl/gxOo6eRUp1
hmPHg/fhpQPjSDn5tha7PwmWbrnIcvzdOFKoiKJsDCBBqc1+UU/RONr73WYv
TyAJNl7bYOuQOo54rcT+iASTYP/FzNBK0jiKc03yycD+cCgkyVF+HG0K4poW
CyHBE18mH85KjqMNt5e+7QolweFGO/WAjeNo6e37TulwEhSxNwpxezeGvmjG
5yhE4fwa8zgcuzSGLE3YxCqxW2N5DhwxGkOfbAJTFaNJ8Cbb6wk2NTwfQxxj
lWNI0DchPenwnjHEeKbhS40lwbjpF5TikVFUKb+mrZNAguz/dDba4fl/Q9B9
5mIanuepD+4eUh5BcnMj9R+xp0QaMuf3jKB3neZ0o3Q8fz9UBd3lH0GSkZpH
1G+T4N1dG3syp76h2nlxH5kMEtRcyVqwy/2GFt90/J7KIkE/Hp4d6pzfkE2s
7PrVAnx+7Kw0XEZfEPw3yp1SRYJXtHR25y0OINZ7rLZGH0jwX7skgyHdhZT8
DBbeYjPvR5R01b9GDqezIox7SfBBnqrCrMVr1Lmukn+mD++PRhfOBKIT3b7o
OXa2nwS3pjWWm7J0IAWpz5cthkjQRLT27oGxNmSVX+tqO0aCAsYKH4x7GhFx
bfPaCPZz+a/L6lcaUYuJ2S27cRKkL77zCBBqRAc4Fh/YM/F8WhWUrzBvQL/s
D85cnsTr52sN+NNah+L3ZXi5/sT3n19N3Ue2PEUvSv39rvzCzw/pkjx1pBSJ
GLZc+Imd5k+9/PJ3MfL9tVXd/jcJ5us3yT2sK0KHYCnf2SV8f1HKGv1iUIBy
PgwWK/0hwTkurR6VqBwUxaI2sLBKgpU3TtlFLscjI1Nu6M1OhhvfXulbFUkB
D1fMZL5j//RgNSiTTgObcwu4bTjI8MpW3t3jcrdByw/Qb8RJhkoZ705wKWYC
5TAv7yObyFDt91Y+yS15QLy8N392Cxk2LBip78kqAUzWXC6P7WTYXmjd3N/4
GIiAboE5bOQnl/f7aBXQCfwn4SNAhj02AR577leB0nlLZX9BMnSs2xHxX2g1
cB8RtQ0RJsOtGfKn8hWegMWWlNpEMRyv0IJ1mt1zsJe1pY1fnAw3ZMYEb2h7
DkxpC++SsRXHn5y4uf8FeFJtNJm+kwydZ50sJydegMBCXqEcCTJMYm9r4bxY
B1hiYjwq9pDhpX0XxQu3NoAjLU8Cj0qTYXaISWA/uQHYsDBvVP3fPPdvZNs1
gOYAzcyne8kw+jPvymhNA4hy2sBo2EeGfdN+DVamjYD75LXdbw+SocKpYxVm
YU2AFl0mf0aODBd9M3g/5zcB9+ZPKh+w98nYX1lrawJvKCSDfnkytCRNV7Lx
NIMkud9BXw+T4UqN9KkTSc1gB6/nhzlFMlzOebNcd7MF+ArfU3ZRIsOXlVvM
1/NbQJdkZ/oo9jnH0I6J+hYQqbjfou8YGT7e1rFWu9gCps2+DNceJ8Oxggll
Z4uXQMeGFyqr4PeL/Wzb4PMS3Heh5v6Hrf7p9m3tuJfALPi2bR6JDNeis/j6
nr8ETfcNJ6Ip+PvjVgsCQq1A/EGwLiuVDLWnciSF5VqBf015aSD256/Lz9tU
W4EcY5ObGw3n92fuqWOurSBtumHO+AQZunQM3NStawUupCMrO9XJUKd+k2my
YRtoVbt4IR37vfve9UzrNiCpf6tuqwYZdpsdczf3bgO9VpMhbJpkmHt4vPZH
UhuAkbnsk1pkyHYw8fH17jaQceuNvY027p95HfLez23gV9pa6wA2y127mrCf
baC0xPxmlw4ZPh0OKLDgagcCb/h5q/Rwfv1F1pNp7cD94wkP+ZNkaHtjtOu7
bjtgfHXrLsRuFwlrWj7bDoIXGUl39Mlwes/IfopbO5jYES4ccpoMG/lOE9a3
24HanoqAZey5xFzhq3ntIEtuuN/LgAzrKUrTuuXtAK89086QDMscu/JE6ttB
nd28pJ4xGTLP97d7fW0HU+xsRa+xkxadslm/twPRgu3yRmfIMFI8hlt1vh0E
jCmRzEzI8NZpTp5uVgYovKFZP4CdPV9pJMnFAB/2mmpePEuGRyyiEqW2MsBR
B38jB1MyrCsim6vsZABrzpi+SewP+xzTTu9hAHrhbUu3c2QYnn32sLAsAyCt
kpFZ7IbzJdeSDjHAz/FnTr5mON4Srr4GRQYQj341s4St1SuenqfCAHr7Bq4E
mZNh4qGbgio0Bii+vBoWbkGGfmmcFSGaDNC7kWcT53m8X6Hd9aO6DMBRvDPh
JjZdt8olQ58BlHQOCfBcIMOpf5nvnxgwgM0EyKBjH65o4YkzZgAixkBSwBLv
/6K33gJnGaBh/6XCdOzMo87nTc4xwHS7p5yYFRl23lOSPGnOADudwirvYW8l
9e34Y8EA+lxJKrsv4nqeXs6xusAAgSV5qAD7/UHAe82SAUp0H2vIXiJDp10G
z42sGODjZPOrcmw5n7drn7E5Y3sMFazJcLe/y5F9Fxng2IGx3sfYlv7ND/5v
u1e/Lhy3IcPBhpCOr/j7Sc6cI8+xy3O0Rs5iN2wWdgK2ZPjWFp2KxO+bKd03
04htfu6WrRuOZ9dJlSuadmSo325+nf88jveHzko7dhXbqwVPvJ6gOPMwfXsy
TDCNlIjH6y096LyxG3ua57C5Lc7Hx47AW2cc8Pv9PP/8xvna6Bq3vQ/bYnja
TNuQAZS5M+9YXMbzmjDsNjmF4y0vlxjGJg1RnkroMUCyfl2BtSMZlvCecyrW
YoCmqdcHx7DfeOtQZ9QYYDZ++JGjE94vpjU3FwEDSMjPHJ/Ctt6oXfqUzADX
3LZqLDiToTKbc1vwEQYo45F65edChpcndK6EyTHApwdHDP9ih3eNmGnsY4Dj
08YXWN1wv74d38MtzgAOCbbfIrFLY+7W8gsxQMohX8dN7rievgU/P/IxwLx7
qi+fBxnSJI2DHmxgAEm+wr9J2E+vqt58sdIODP6rCRXyJEM9qkRS/GI7KJ/p
i9/phdd35MRSwFg7uOwpWnDQhwxztFQbI1vawWk/ydZy7DcdxQtDL9qB0jUZ
prwvGV749Xh9vbIdbIg5KqtwhQyjnuhO38lpB5nZeg+U/MnwfnT4JerVdhBe
YNhVjZ2DhG4MubcDpzLTGeUAMjxwz19K164dKD+xOUK6Soae/Yr8YafbQXdX
YDUtCD/vTcGfa5LtoKYntBdhv/70kCtIAM+HT1FLJ66R4ULSAwWtTe3AeTyJ
pHYd5y9ecrvmTBtgXy+t0wrB/XR0ynT6eRtQkR94aRBBhrEv09RUdNvALsWv
493Ygl+tBQ+T2wAHibnROJIMd1X60pYPtIF3Ggu6JjfIUGOJY2gDdxtwvbCl
yyyaDNMyx6M2dLaC3DhKr3UcGe7vFJ9eVG8Fm7/fHfdJxudVNDw9J/gSiNbl
WE5hM5+V9B9mewkO0At67FLwvOze0WQw2wJOKv/XdDaVDLfx3niu9KoFxIc3
3TuejvPj3VKbca0F8IlNmq5kkOHXM5052wabgYC+clt4Hp6X8wdrEqKbgMTD
7iLiERnyznFL0E7UA/K+slyVdzjfMvzCzeGPgI4VkVyJzenhLM5j8AiYpvrf
kHuP15faKmQt9gj4sGk4SfaQ4Q0dhoRsVQUo/zyosKmXDKUnbs4Qnf+Bnbd5
G/r6yTBY6FdHVEY5YOHyHvb7SobeJluHWEwKAS80657FlnIkNxybKwDi/qDJ
+RsZjkhEf81NKACksc2FViN4/wpz60q/ygfejffdtMbIUOCqZeqs+n0wevXD
quAknh8WEx731HNA23cVsepZMqSuftu7/XcKSIgWKJabw/NtP1lbRCsFmEjP
KuVjl1X88+tISwZfLItOJ8+T4acLaiYa5CSw3C0Y7rWI580h6i3f7Ylg/5P5
CfllMrwjMiS97U4kiI0oryn8h/Nb3y2Wu5UKDCVj1HexUGDvX9kPhku7kVCd
bXcqdvRk4/A/e22U91v0eyQrBXqYniUbHrJCz51u7rRlo0AjHqd99zI90Q8D
h0iJjRTok/DAYtvGMKQvLml8m5cCdzrZTicn0tG4wTCbKB8F+m3iyBTcTqDQ
iMzqu9hPLynEEakEqv4usiN7KwWqs8//CUxPQrue8X8p2EaBQTcay/YlpqCZ
s2zuj4UocHRz6q/I07dR7M1GiWPCFLgnZSZrvfE2kq4LeVuDHTe/+cl1pTvI
THpV6bkIBZYuG21MFMpADfOLKw2iFEjKaqzkf3MXJSWO3+zaRYFOXw68UtyW
jeSa8ymGEhR4bk/FJTO/bNT62+bnW2xbc/n0W/3Z6K/lZ8MPkhTI+3j6XNrp
HGQr91F4cDcFDpEtiGLuXKTEYBRMyuB8seS+ZXrnoa7V6HMu+yiQc+IRT0lW
HnJU0OL6iZ13zuLIclseykpvcp3dT4GSj81SVcXuI06HF4pLByiQNfn8ndja
+6hvw4NG9sMUqNC8MqD+PR9lsDkzrmP/p/ZysHxLAbJi3/f2N7afAsPiiVwB
GufI/TKhQIHjehfmHrkVoN+bUv91HsXvP/T4muaPAiTEd52WqkyBdaqq5Xs/
FKJPfGRN3uM4X2cD0tpnC9G9rUv60djiZeY3+bmLkMw2rwtXVSjQZetSWZpq
EVIWtA+yJFOglV/OxyvFRchU7NSzvYACj2t0eLTZFyNR8c2N97BJ+93+TgUV
o2HxtnbhE/h9UrI76ohi5LBL9SMXpEAlvY5jVrXFyE/q2NJPVQrM2VP7uYyn
BJF3z687qFGgpsPRf/JSJWh993+cX7CNigOXLyiVoChpWaF36hQYLmF5t8m8
BKXu23msRpMCm+Pd0qpySpDZ/k/Uw1oUuHDNP6DgUQkSl03XKMZONt0SqNlU
gvIP8JtkaFNg/PPy9eRvJfj/ew6fYF0KFFnuZ/WRKEUBh5oCl7APjin3jMqX
IurhkHBPPVz/gg9bNlFLUYvCH8LmJAWeSKl6bXuuFPUo/qzQOoX7YXglMSC2
FLl2xA8xsCUeH5sKSi9F7LZym0+dpsAtQsUFe/NLkVKSi+0ZAwpMXA/Lc6st
RZ2yW+i92JmQL5u7vRTZNZbWmhvi9d2UdDnzvhSlzE4KXjKiwJ5i0dH+iVIk
F3NTbQS7iSKrJ7qA45GQ9XAwpsDQ0xvn2dZK0eJpx3bXMxTo63r9ag9fGTr7
YDzw6lkKZOu3jvY9UoamNaKKVrEdnq2KcZHKUNTg3p4QUwoM27LeqwvLUM0W
e/mocxS4fj3k6NtTZej0fXYLLjMKHLTYGy9iUobGyflR8dhXd18P5rEoQ0LO
I5+TzClw7PutbFb7MvSQNYJbyIIC5Ytdo1mdy5DWnd2kO9iKDJ3ACvcyNKzQ
ZC9+ngLl5Kp7eH3KkF+7dVI2tul/Ggvi/mWI9xJr/e4LuH4KsUcHAstQ4VLO
jwJsmCgyoxtchkAiFJG1pED/4vAbTmFlqFfmi0Y59rDFeWNyZBlyRyFeh60o
sCLyWGVtVBniNJW4V4ktzZ7POhdThu79RK+OXaTAG09IWX2xZUj5htXSU2yu
6ze/esaXoS7x9T3USxQ4fVTmYN2tMuRQlWVYjx3wJK+3NqEMrZ+kXVezpsBv
EwT0TCxDaSODJS+x7QuiXvZhHwq61qtjQ4G6HdubFrBbt4mzdWK/VOlMasG2
Kn1x2MCWAgU71VL0sH+rnr/wDjvMdvOeKPz8hP6/MWftcH8NVd/1x++X8cqo
/oidLPzRQgLHhzaRv523p8CqWba66zh+05x+3s/Y41qdu5Lx+qaPX6XYOOB4
lpsHL+L1R70RcRzD9h65fmY0ogztuvw0xfEyjm88/rMkzl/N+rnGH9jSnyOG
BHF+T6ct/XR3pECd8l8lzTj/4/LpovPYswev5B7A9RGy7PVZdqLAVy8mIvZ6
4HovXskJcqZAz5gN+5//v97xgq/Xse+GXnHicsD1fWEiw+GK54VrpXL/eVzf
M4vGMdje4nlBFqa4vt+TQ7a44X7zVO5ONyxDfTvef+R3x/0ZeltURwOvX9gx
Jwmbyy9z9RMNP09g7fJ2Dwrk42hplT+O4+HbtyTgSYEfmZ+9BGRxPtiDBEW8
KbArbvnJDBd+PuvWodvYh0TaPOJYcb7X8/N3+FDg8qHrnZPLpSjtT5eimC/u
r0XW9zPjpah3erfxLj8K3FwiVnKgoRTJTD3ZkY0tYtIjPlZdivwm9b9K+FNg
bKDKvF1ZKRIa9fOUCqBAoaP2kjWppci0/1WCdCAFagmv7yq+XIo+NHt3HAim
wEbBTD1h1lIk3bgxuQx7OjV6wnChBPmiTAu5EAq85FNofXasBAk8a52UD6XA
9+CLekN7CTJ5KLrpSDgFBo/MXdh3qwT13G7SOB5FgRH1K1HR3CVIOu0c91Ps
w0q3mekrxcg3eeq9SjTefxMzmQHfi5FAgpAtOYYCCzgV7crbipFJhHMYLRbn
b7L6z3hIMXrvtg2pJ1CgZbb4+CKzCOmrFA68wL6a4ah080MRat1A/qOYiN//
3a59uakIPU+3VpKmU+Bj9voh56wilNNYUcqehOddsFxknmERchc0SH+ZSoH3
7aLnsioK0ea6OE/tLAos2ywwUGNWgFS5OfacLKdAbTZVwzWzPJTgFmT/GvvX
D3sXV1oeGuyaKzJ4gM//d79UX0rloQBiWM7kIT7/3szGHfueiyqEnipbVuB5
yBV3XTQwF+2SctHzqKLAr8HcspppOWjl2Fuv5FocX6KWlcKNLFR9MathoJMC
8dX19bb1VCSXsM387Gvc3+5zH1xepqL82ui5LmxtBCNfxqeilB3eu5u68Pnf
nCVxXSwVeb/XiizuxucrLPfmIaWgQ9qz2ld6KPDUwlyK4pUkVHxI/Q3vIAXO
+/+nSv1xC91dmxhS/YH7+T0hbOUeil4RZ/ifYYfKR30O3RSK/u5FGgpTFDjA
sSOwTzMEmZ1OLtv1E3/+nS5JfXQdCWXTrq5M43mqkrUkkxiIkmCSQPU8nm/N
5O1OTr4oNoJycv9fCvw9e8I475Q1ei5cGJyNLVCo6Kr+8iKaLNtaKbRCgSyk
DnR7/gLS6RkT4VjF9wsFzwanc+cQ5176+Nc1/HnDsQqFVB0U3joadpeVCjdN
/eDmUVcDgVwJT3m5qDDjdRr0uesIgpUGttKxvdXY/ZPHnUDYxf1O/JupsJO1
51baYRcQU920Q2ALFT68Vdyp+8INpFkvBe7gocJ4+5Y3jRe8wONnl2jS/FSo
9Olewi5ZP1Az+iC1ADtUoJa2CfmB53wrP2W2UeFynQxtyghflu1T78lup8JD
bj/sCvwCQDf/q3+HBKkw74ntlx+PA8GUk2ITaQcVhs/ebddcDwazKaGiL7B7
Zex4hCNCwEL9a2+qKBV+2XSy8QpbKPgr6LjnhBgVzvFIiHXfCAVcTZmRGjup
MILmuDc/MgzIiHJqG0hRYY+0ZvVGlwhw8dXHDjtZKjzVaNb+YDAKxDdJBw5h
k7cQBU7c0eD5c8/9pgeocLGg5VA9JRoIlG26oX2QCm9bdxxUuRMNXsWpgAPy
VLiRW0jC0SAGKJ26XTGjQIW/Pt++NF98E9hojlo5HqHCB0+GOOze3QSJNAWe
r9iPj/XMea/cBN/l253eHaVCvxcRkU76sSCbd3l3tRIV/tlQPlI/GQs2d59L
DVShwi6S6D/1bfFApf2++gJ2POtb4YJj8cC+YWbOhUSFjJcz/EVm8aChIvq0
JZkK3T5tIxKy4sEV4slGSKXCVN2HXPO7b4EvxsKBHJAKHZaOWtDEEwDvSdv9
wdh1/I1EGykBUNT/6/2N3RDspvnbNAGkKWorTqhSoQmza6MaPQGcFPCfeqVO
hS6bfLTvrCeAmg+9VnRtKkSqpP1XXyWCp3YcR7fr4Hym3GS1H00EzxYUOdKw
J1x/0ifXEkEtP1F2Vxevd4C5MixMB02nTi4XnqTCQJfEpVPadNAyeLVDVh/H
1yTYWGpMBy9diu+VY6t/u7HlgyUdtN/k0Kw8RYUyodtrknzo4PXLeqLOAMev
4+tQk0kHXSbTdtAQ13v1IyWikA66R8RVmrENQzY+3VVBB+9YA4fbjagwdvHR
8aYmOvhIUzrYcwbXq7LTrH6MDj512qybmlDhhgU+J45pOhg4T7ztxx7cuKYp
9psOhq9O+38+S4Wij1uWazgIMFpd3PL9HM6PdIZW5W4CjGv0pbuZUeGQRG1D
oCwBmO85XGaxhX5flhdQIMD3ORv+3+ZU+PHYKa/nVAJMhRKjARb4+znrRJsa
AX7yNTxZwQ6flFUp1CHArPxOK9YLVLgqNFz08QwB5mtPHonE1l4bfi5nToCF
k4HsGy2p8ECL7rixFQF+O/WVclvh/vmtv0PIkQCrBcSS8CUq3M6RsRh0lQDr
Sg2vMrCtOALf2F0nwL/m6ayd1lRInbo/IRlGgA3fTmrssaHCHM+XjttjCMDu
FShciF3Md2yHXhwBOFhKvu+3pUKF28MZJgkE2LSLkzhkh/eT45v8sWQCbH6g
ZPcI27Eywc81jQBbqLbHleyp0HfCv7ztNgG4O4jNT7Drtmi7LGUQgNeiYYjk
gNcn/rRvJZMAfJPTFbXYU+LRQh/uEWBrwM7IE5ep0IjbUz8ihwDbNuqfa8Ie
/nHoHmceAbanBR7QdKTC87UhChfvEwDMF52px3beu/1qYD4BnE9/uEZywt8X
KHrmWUCA1NINhY+xUw5Ib1UrJEADp8IbeWcqvMrpkzGN/cPGcrkI20Lnmp9f
EQGE6mOldrtQoSx9f1M/tqrYU71M7OfXL90VKSaAq/+Yj5ArFS5UcEsqYqe/
35ZFx37AEHSXxW46DFs3u1Hhu8t291fw76fj3GYisZUPfh0qwd4xkSHyD7vl
sS9FCVtDo131qjsVGudu/JSB4/HM+eW8gN2dHN43hOO/u7o7xc0Dz5uDXUZr
eH2tZoZ1TOzvnO8d/uD1z1VdH7f2pEKDtqtK73B+xPnL+AaxxbjLPkbnEkDH
7aOKqRcV7rli4CWK8+nD4LDpxjbNMxCPxfm+t1cxTs8b7w/FlKVeXI9XYZeq
WrCL2jmkWO8SQJL8gvOZDxVyBm/r/YnrezJt4rCiLxVuGQ7OqkghgN+8oPkD
bL/G5weMkgjwutSzLPcKFf4g1HnlbhFgmfNej5gfFTYj6xyHWAJI23aspWK7
T895hEQTIFBMxjDWnwq5ezef0Mf9WOB/5ip7AH7/a7tAlmACdL8PzQvG/k/7
vXNyIAH2xQ8sel/F61WjfzvrQ4CeVfqd80FUWNW14m1oi/vbDDV9wB4765K5
hvfHgeofPwyu4X60UnKOtSBAmJsW0LhOhSSfK87qRgQ4NLzyTS4E53vfXnVl
GgHMybLcRdgxyu96Ro4TIDLN9JhUKBUWvNz51+soAQZOP4oWDMPn5ehRf4V9
BIipd5BbD6fCbbmtoSQ+AnzLeXvlTRTer38l1lL78TyzWSRpR1Nhrs2lSyHv
6KBYWngdYStpz1rod9CBe/GFqIcxVPjp3/MoopYOVv5jpt2KpcKK2D1dHVl0
IFC/9uRkAp7/I0EvRc7TwVKo5LVm7EyfV+918Lz8pKYOKYlUuMvFgmqlSwc5
rTHtB+j/P89W4knH6UC+a3s/VxIVXnJxUK3mpwOtIdm/bak4fn5V+DgiEchm
66MTaVQYyTzO3++eCLitPcKfYH+zSRV/bZ4I3o1WbS5Kx/eHE2vNkocTwcWp
E2JRd6hQXONNyLW+BBCwcpaqkYXPZ8r8mrJEAijZER7ckI/338OvRWrx8eCS
d/RltQJ8fyCxUsw94oFIR7xhC7bxl8wEmnE8iLqWvru9kApfxXClewrHA5vP
5a1vinF/+P7bHJMdB8QL+ng/l1Nh6ZF0rxeFsYCuIJ+9VoX7ZY9ax8HkGOCn
/bGe/BKfN69HwcxCBDjnNrj+GJuq96Dt5JsIoJL8hSbfSoU1g+1H4ksjwN/h
iRcSbVT4O3si+dmlCBDs9+cJOwPnY4/pr86OcBBVIFrR1Yn7haJpzpUVBtLY
LHNseqjwglLJ1lGLYFBd/zU0dgTnvzNYKXOvL/g7RQ+0ZafBUJ6IWr/9ukgl
5s6R+9I06FgIWQ8/u4re+PtGie2lwZZ5O23+zYHI4bLBQDJ2+f01vW6LQJSs
xXEjUoYGNT4dbvy2Eoim2b0+2u+nQTNF/gl96jWUH6YTsl+OBu1oKdvfVQej
rUFLnQ8UabAriqXhREsYKnJ+JyWjRIPdiSu/eL6HIWDxwO8edrHTCftmvnDk
QrKVTDyGn2e7sHnEIhy1LnX5eB6nQXaK7tGZmXB0zbdQVJFCg1u7k75vEoxE
E25nHZ+q0eBf0N39SDcKnVnc9o2sToMO0LX8k3sUQoHd5+uwE8R0/w4lR6GU
6JMGTRo0OB0EGN5DUehErqpypxYNijy8THntHo3SeuTZv+jR4AWZo2UcsTFI
ncKZs/EMDXp23ImPyolFDxubd8Riv1r6G+jZEItEdMKSuU1wPKP29Qe/xKJp
k9Uo/rM0qCX6TkZQIg5luM+7iZ2jwaMvz/iXZcSh2dxhyuHzNAitA80LY+LR
vU1P+kxtcT5EtX/30hLQ0Qs+Rd3YNQ0Khx+eTUBt/x3217OjQdl5jzcmbglo
1rRYCNjT4Ch7jRlfZgJSL7hzdu9lGtyt/45fcSkBTahee7/gTIPBbr0k1vxE
dC1V5b6bC66Xi6vY46eJiH9y0ZuJfV7O9z+F14mITHfbNuBKgwUcOawJvxLR
rWEroyZ3Goyi/HQck6Kjo0Gqb+jeNBhWUXmP24WOWrvW7m32wfm9U02t9qGj
87ufu0did4aE9Kteo6NIxlHeAF+8no6O25y36KhPWPrURT8abOX/N0N+QEeu
Ll/E+7FZ0uc1WarpiKU+c8rYnwZj9/k+KK6lowMOgvFaATTYMxdJzuugo2tV
nB3ygTToPpDKe2yCjrZuas4owr7oWlnJN0NHBedDnKWCaPCBkHRQ5y866tqw
zCV4jQb3A+cNUxsIJGU0qbN6nQbpN8nl9WIEqskvEPELpsH+1KdKxVIE0lu2
npjBPsMwXvTaRyDf7E/RIyE0KCZ/Iq/4KIFaf3a0vgrD+btdEZitTaBtRdeP
qIXT4KWwuKUr+gS6eOlw5jNsVo7xv/JGBFp+l+RVHIH77bj5XjULAmnEawxK
ROL+SSEE7lkRiND8rZWOXcuMER2wIdCBp+biUTdwv79e+LvkTCA/ry3Ra9iZ
PNFZfe4Eaj5QN+cbRYMKOSLMdG8CXciSbLONxv0m4vfv2VUCJYQzvVRv0uCB
3g/KYVEE+kS5M/gUm0NOmM32JoH2/dLTVoilwX9xH9Kk4wnUcPmhuEQcDQq1
birQIgjELXUpOg17/+ksZmEygcw/8c/zxNPgCep02Hgqgeb1r7StYmsVsp9m
yyAQ4Nx31PcWDcp3T2p/uUuguPqPmT+wV1+8ks3MItDHgNiNtgk0WAqf9Cln
E0j6KNX7E7bcsfpjFTkE8vzxc9AoEfeT5/y+TXkEqsvP1mZgFzIuJYH7BNps
ZVQJ6TSYKCxqfiafQKbCbDufYqscOXRJq4BAed1V0YcJGsz4WR4nXEigmZsO
84XYFXsK61uxqeoilruSaNC3VPbLmSICxawy2lKxB8203yLsnuqgozzJeP9w
8PlvLMb94SGfFYkdG0Ovlsd23/954yp285MBzyPYz7/SvX1SaDDGmeXWNmzO
u2pD37F7/Xmnu/Hzzpgsatuk4vhrBANcsXN4Civ7sWfW9vKN4XimWs/tNErD
8UkbpJOxVUK5Ytqxv7DmLrri9dwgvZg/kU6DV1wPbrmG1/tu3tXyCbYrZR1d
xvnYVb6r/dBtPI81ZRcP43w523cfLcT2tKlN6MH5fLIrPGvnHRp0cmzzPovz
zf5RcVMqdtkhi8hKXA9DYsybO4MGleIji37gemXqpQ9FYK+cM21gwfWcZNPV
WcGed/xcOZdOoHC/8p3f79Kgd41ptQPuh67DVjHWmXg9OXa3vtMJJDbJt/AR
O1zO6Y1uAoGqzvu0t2Xh34enSmXEEIhVcK/iiXs0+Gxl8E/sDQKd7urNqsG+
4WXRaRpOICYk+xRk06BohfJscBCBNhFdG/bl0OBPk6cysf4E2v/VJqkYu9//
upqTD15vWNyjslzcbwKid/Pw/oh9K6Eqn0eD74NS6av2BCqTqup+iP2Rljko
a43z3Tg48+g+DV5/kDy5Zor7e5tXiGI+7l/d/bb5eH/K23DwVWO3itHzd+L9
677h0KGnBTRorSo1Gw0JNKsW4oqKaFA9FTYfx/Nga/L21RPF+Dz7aZ/iKUmg
IyNFcY3YX5Wm+YJ2EMg7oru0pYQGI909/Nm3EOhXs9TkqzIa9Es6KDX2g46E
BGoC9MvxvHe9aFU0QkfKdnqburCPTN/YTx6gowB2n31vH+D51Drf082go78a
LfZ9/9GgWrdaEcqnI9FUs19mFTRInttgz3qXjihjU5GfsL96ayZtJ/B8vCGY
P/QI97PvnfICPH//vXT4NvIY98tV3z/XjOhIUmjFy76KBmWKgP5xLTqCDoms
TGyeadG5ejIdhXM+lfxejedPvlEeZQ8dsWtzXZx9gvebr6X/o5FEJJ2eNe31
lAbnvFk92V4lIk3mkeAF7ArBybcz/yWiqGiLrN/PaLCeZXtVWmAi4movG1h9
ged3QP0ewS2JiFf3tBlXAw3ePvfjRJpIAjJz+EoLxz7vdlw5/e8tdD/Cd88K
tmRiYz9l8BZSQRnTU400eLInH3rcu4WsFZmR3c34/uBKUg7YdQtV7Qx9lN6G
+0HkIMcX7ni0Tt6evrWdBhs6Gbksk3FI16zw2k3sl//+nGxsiUPDSZ3aQQx8
P0B7vkoFxaGNm3YMW3XgeEoOPTEfiUUW8482y7yhwSXPSlOv3Json09z9h62
3tSne/7+N9GM3McPwt24380mTERP3USRl9dzuN7SYMnX1t1KSzHowaDe8Z/v
8HxD0tOVWjGIpW3EtqqXBnd9XYgufReFiu4K1qkN06AV03rqR2YEovPsqGRg
fw/WMS66GIECQ8SLDD/TIImNmTwkFYH0bfcQVl/wfSflv8vP8sPR7IEj9oHf
aHCcTzZkb34YUnmuz1M5ToOV1bue8G8PQa8+RlhKzeD5vcPLK/HjFfRYL9q4
GLtXaeB+JOUKyqyN1T48i+ex9Jzt+Sxf5J5DHKHN4eezTGwss/RB2xyzOcwX
aHBWwo/c2O2Jzi89f0BfosFfDz1OBrBcRhpOKE94mQYPUUPl1nLt0aGBxvR7
2N2O0v8UVO3w+d0eVv6HBt+U1bjnBFij/Kjes+0ruP5efed/p51Dt5b79QxW
8TxNYy8orjJBfs5DJ3qxr/1JKcp/bYR0To/Kjq7h8/X73+jP37TRkQbmLpd1
GlwTYRT6LKsi0aM/ts9jswUq7uTlUkFs+dObrv7D88J45r2x+H40JTi/9g9b
YumuVXCidt3/AGZt4lw=
                    "]]}, Annotation[#, "Charting`Private`Tag$14486#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.1308401571313225`*^-10}, {
                    24.00184030752336, -1.6941470331231078`*^-6}, {
                    24.003680492597738`, -3.377373026809378*^-6}, {
                    24.007360862746495`, -6.711502254446343*^-6}, {
                    24.014721603044006`, -0.000013251177416469339`}, {
                    24.025130002401628`, -0.000022138914461516293`}}], 
                    
                    LineBox[{{
                    24.920181872877883`, -0.000022138914461516293`}, {
                    24.921764905805862`, -0.00002165982665559375}, {
                    24.925699020454857`, -0.000020475506696439976`}, {
                    24.933567249752848`, -0.00001813292051062061}, {
                    24.94930370834883, -0.000013558878730967414`}, {
                    24.98077662554079, -4.910642835865332*^-6}, {
                    24.98261147948411, -4.429041586665763*^-6}, {
                    24.984446333427428`, -3.950088762556209*^-6}, {
                    24.98811604131407, -3.000228619941773*^-6}, {
                    24.995455457087346`, -1.133391969483948*^-6}, {
                    25.010134288633903`, 2.4640260821379084`*^-6}, {
                    25.039491951727015`, 9.115488874769539*^-6}, {
                    25.041326805670334`, 9.507618129019565*^-6}, {
                    25.043161659613652`, 9.89701270330714*^-6}, {
                    25.046831367500292`, 0.000010667624666160903`}, {
                    25.05417078327357, 0.000012176327828136489`}, {
                    25.068849614820124`, 0.000015065154930421805`}, {
                    25.085563147299432`, 0.00001806846053621436}}], 
                    LineBox[CompressedData["
1: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
qji/x+VWAcpk/7XviRIVsmgO6qkKFCK2rnOJ/ipUqCGnfuurfBFSaXl0fBl7
T5DAzMjpImRbO7/opEqFdf+i7kZ7FKFaMkLvAkGFfGdtrvRUFKGrcU+ZIZUK
93unXdWWK0Zfz/D4b4FUuNfsDTnCU4LYdawlrmMrsr8x8lAsQZTj5T0/sXfN
wpQSvRKUpKip+P0Yjn9qul00tATpcPrMtB2nwnd8D3o5p0tQ9acei1hNKsxc
/heuW1iKamy2KOzRokKR0s6BgLpS9GxZcUsSdtf7X++1+0vRS4644gcnqdCm
PaKqhbkM1Z/S+ZWnQ4Ujd6bf61wqQ28G/d5K6lJhfFE/GXS1DDU6FWSUYB/b
FWJkFFWGWm5tOVFxigr5xRU20yvK0LvG13Gv9KmQ+6aVQ/G/MtRhOGcDDahw
ceHqygpHOeoaFVBpwB4Iy7k8sr8cfWDwH245TYV/428eLNIoR300pUPdZ3E+
1NOsViLK0ed2qw1jQyr0XxxANsnlaMA87n0/tuujZMmAvHI07Dfn88UI1z+0
kvqgoRyNPSl4M3WOCrOPdfWV/y5HE+q9yS4mVAhiRDmlGUlE/7jFaQH7g/NJ
I0NWEk0tWnH8NKVCwSfrJaJcJJoJjhvzNaPCuwQnSzM/iWZ31j5dw05yqNhy
TIRECzKCFgznqZD3Z6p7pRSJll7qHA7F1nZ3FyuRI9Gyjj8T8wXc/+0Tm/2V
SPTTsbdouwUVNpk1vU2kkWg9N26V5xIVypptPvX+FIk2lGrbUv/ffgI+p0n0
r2EuXdCSCsUKX0suG5Jo84iO+n4rKrRz+hDuak4iJnd/njxstz9Se10tSLRl
U+GUhDXu751O3uqWJGIR2hona0OFTlues3nbkYitVMnmMfYJBqPI9w4k2ka1
PqJkS4XLz+eNmJxItP1tHNtTbGPYlcjuQiJ2s9ohVTsqPJNJvbzgSqKdk3Pk
S+zKcf8fhW4k2uUrGHrUngptRd+bUjxItJtZ91w9NrgU9izHk0R7kvylTjjg
+pNDyhNeJAJL+WdfY9M3AsLmrpLost6nQFVHHP+smGa3N4kSizbnVWJvUa5N
TvYhUe1W+U6Zy1TImPBfgooviaatLvzKx65FzkZPsblfR4nuc8Lzz/PUnz1+
JDq2t0Y7DXvM6XW6Hrazz7gntzMV/rEsMrfHTv64Oz0WW3nXT30L7Ho52MTm
QoXz8lFJithzt13mQ7GDr+vp0PHz+b6n8v7DhpVSUX7Y6uotx/xcqTDs1tYr
Uzg+t6wfl5exK1+0chHYD9b33XO5gu830/lUB3yeJhODV3RsHsFcXm983sWq
axOWblT4rza6xArnQ4CjeOcgtlzRH3dZnC8tlz4VY3c8b+J7QvvdSeTZusWq
C7v2PxYGG5zvjAOKt7U9qPCTrs/mDlyPthuXqt5gP4jflsuD6yVCvNj6zJMK
QxPUaNqOJNJJ+i6n6IXnd0PVZUV7EnkvcZmWYqttmy5YtyHRuyK34odXqTCr
Xa1Z7hKJfm3N6N7rjefHc8Uv9y+QSMz67d9EbOuiCJ8xMxL57xU3iPKhwks+
qyl7jUiU63PWj8kX37/WEVOWMyTq+hicfR379NYuth49Eh2MHljx8KPCTVL6
JZxaJOpej71vHoDnob/Kmqgq7m8TVP8JWyvs9km+/0gk9WR6Wj8Q9+spIfsl
eRLdcNEA6tfwvvj3MEhbgkSyw2sj0kFU2K7vr5iI76cpIbk9H5utcD9rxi4S
hSYZ/ycaTIVP4rXv3NpGogG9xxFcN6jw3iZyFysDiSJf20lvhFChwGnrfWaf
ytFI1vurneFUaOaa16zmXo4arVZUNSOocOVfZxGLTTkqEOPZQNgGictR943L
kWvB+fCySCoMkY3gFKSUo7VyetKdKCqc++C14zFDOeJ8/fepTgwVKmXvfECE
laHVYJHABmxtrsmVFq8y9FntOKTcpUKSTznxgE0ZymqKbJGKxfNX9VaAtloZ
kunY088aj/s1piBTa70UaQxJ/mlOpMLduu7a6valSDJTFx1NwvvHP6Gi82wp
2m55JeQp9tem7CJpWIo+jFWx5SdTYYkIXeA8bym6OHN0b/h9fB+jH7QlNZUg
3zUjqno6Ps9mU/1C/hJUyBdyvTYH58fccH9ldhG65BFhr5aL+2H04c1nEUWI
9220wRvs9mqBzXHORSg8MHlfSx4Vbs3ntKv6rwhZfSlp6iygQiLUTrS7sRAJ
5PayfynB83TMRKRiqADFystk/q3C9R0u5UKzechbs+810UiFPdmNd9+kZ6Nz
LoMbldjgfZ5dYkA2Ukn4SpNposKX5nsYdE2z0Z/h7y+Em/G8lPtg5sSZja57
/37K1Ir74Xrtfd9bD1F4Lj/Z0U6FFbtkmP66ZqEkxgtZVt14v/lZMp47k4ae
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
NVva/wG1fouY
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14486#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, 1.0587911840678754`*^-22}, {
                    27, -6.352747104407253*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, -2.6469779601696886`*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, -2.6469779601696886`*^-22}, {
                    27, -2.6469779601696886`*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.000022138914461516293`, 
                    0.00001806846053621436}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-4.79\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -4.785067426050663*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000179\"", ShowStringCharacters -> False], 
                    0.000017858114751663833`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 41->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$14650#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14650#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 42->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$14814#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14814#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 43->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1:eJwV13c8ld8fAPAIIZVkZadhZ8tdxymKkBFKZWRmREZZyUp2Zd97M5OVlR2V
QxQi48oKiQYNcdPgG+l3fn/1er+e23nOZ5zPeexxvHTShXXTpk0ymzdt+v+/
kjtZpIW7teFzm1u7ZnnXwN2DaS2vJ7Shcb3APIfmd+Cx42TJ2Ult6Nb8d+zm
MhNoMHlTJrFvAOKiSjUTdNfccn4zpQ2ZfCd6+hWYYFEjYevstDYcfqaz/s9g
ERBJkWc+vdOGPH8trk1pfwFD+pd+/f6iDbvacz+ftH4HsmUPvg38qg1zTv9q
vf1mFrhwfetexQ4Obp7QdpoFqz0e2X8WtGH/93ab0UszQMLEVXdjURtKuPSJ
jIu9AR6WtinsP7Rh+PWCL5PPRgCrg5ES/5o2fCIUJ2AZ3wp+befySsLWmP11
76bvE/DpSWcF27o2rGLlnNxj1wwGhI8o/sLmWzntF61XB7IHtRVGN7RhkEzA
YVfxHHAIHpCjsRJgoiTL4R9FD9BFSZb9YtwEyEU9Rd1/tA/Z9yHndOx5hfCI
0Nh+dPJqaCHPVgK8l0FfTOsaQISxlb1/sW185TfdkGIgjtuL0tPbCPAsr51e
TtIrlL8xKZW/kwBvdbMM/VQeRyNvGsX27SbA7UcTFoUtZ1C29OnIYux4odWC
WtoMcr6w8lFWhAB3WeeHV0/NoGXmoQdKogT4nP4sbMJxFvGyNR8+JE6AOv7n
VH5eeIeM5R+7Gu4hwKylJ/Ce1QfEf+lc70vsd11C1xuSP6DJujVlU2kC3PYd
SKv3fkAeFPJ/FnsJsK9aUM8PfESxZi2JtvsJ8Lra1xoeiTnUHtBa7SNHgJ0N
0oJC7fMo4bG9wA/s1YE4ZYGf88h806aQK/IEuChxYuLG/k9oJh7qhigQYPYI
f01bzCf0N/vpyHUlAnywnPev9MhnpN3R8SdTlQCpjnmb7ud/QZs4ne13qxGg
89pBIkfPF9RlzPYsC/tVRRXhzfIXdGpU72a+OgE2vSo4/efIV+T/+blkmSYB
9oTZlv+d+oqqdnTrtRDw+9oEU2+uLqC8PRf+aREJ8Pd/HcVJQt9QsjrHo2rs
Se/NLOJa35D/aT3lQhIBmmh5/F32/Ya089p2J1IIUMZV2TrswzckV2M/zAYI
0L6kc3LnpkUk0rFxKwy7NvhkGkF0Ea3Pkdn8dAgwej1IQN9sET092LxofZgA
w4rPlDo3LKJaaH1/CFsx+9u2wr5FVHhyxcn4CAE+DRrPCPm4iGICNF/r6BKg
G++H64u7lpAhquk4cJQAO+bkRdc9l9DwiTLaTwMCZD2WvS+CjYme2x+38D6O
67u68dF7GxM1+n7a9gnby3/pgKIgE9EyDlyfNCTAb2f43vPJMJHtmwKvdmMC
DPib6JJ5jIlMlg7Lkk/g+Hni9TZOMBFkmX3XgM3Fe1REy4qJpPdLWt83IcDe
mFQXQScmmruYdSTZjADJxg+yc0OZaCyM+JfLnABFdwyeTIxiou7k1w+vY4cx
ZwKOxzFReb2QUuBJHG+h5zNiGhNldzbOM7EPPK0x8qYx0a1xqwIPC9xvqRHr
/jlM5LOeJmRnSYCzH8wyfxczkcN29aEx7Os1Em/8y5nopNRQkrkVAfp1beN6
9oCJNPR4WY+ewv3i/Kn3zUMm2n/qwROEHaaV31bymIkE3UwCtU/j8zG/89TR
Vib6LzFpQcGaABuDH0usP2eigs17jtzD3qIpHc7xgomMrzZQRc4QYNBZ1cW5
Xib6tXz8Wwq25WlhWk4/E+V6TB/hOkuACzSO+/IMJtJ/50eLwE5OUjhx6xUT
Mc9sWVzBpuU1VnePMNGR4yr0uXMEuDL+xLX9NRN9bXu2aGuD++915s6oSSZK
1z6jN4Kd+iBdcfcbJqJUf6Mb2xKgSNfH97HTON8yUUsd2DM3m5363zLR7TzB
oyQ7AtT01RlfmGEibaHyO7XYztPFXu9nmWj2lg5Tzp4Anx2RNKt9x0QJHMNH
72Lnbh0vP/OeidTD3LKEzxOgfvGmytfYU7/Wmbext0V0h6t9YKIbXinHtjjg
fuKwN3PGPvhxf3YYtnLxD8NL2GM2j77/wlbqa8iywI4YNtH3ciTAmE/D3jux
5YzfZ3/ATnSJYJbi9Yc6ApfPORFgUs28sQj2VRKPwSvsCQKx2gXvb19dfo6h
MwF2eZYcS8T775PX/PEUO7fejpyI4wsoeGFAcCHAmsjbLS44fkkRu9xqbAvo
/lsE56c7ZfmHjCueT7aiu8qnmMiXK/Z4HvZl/REdQZxfkUjRPMELuB4enaU2
OP8dqw9+3sSO15AICRtjoos+eobsbgSYzsczcxXXC9l7/fqBfbjtggg3ru+F
MRYjT3cCDPfQ0M/C9ec1zcx/h7172rKZ8yUTOYJWI4YHAeaNmkgEdzLR1kaL
uwaeuN+1Yt1DO5ioXunT71ZsS35GmU0bE3GI7yyoukiADSyn2+qb8flYc1xN
9CZAn4xzPN1lTGTpv3Ji8yW8n2nTNw9x/298SbwXgt3Dy2CPKWAis4l6E3cf
Ahz5eGg7ojPRzyaOomN+BPj1WBfjbgwT5ahk/WnBzu87qREfyUTHSpXNNP0J
cLlkztQMn1ca1Xpt72X8nOejY5gvE5EDysxZAgjwe8LFPruzTNQcvedlFPbU
lcdL7RZMpJVGO8YWiOeZueRDVjwfVKpjSFuC8P1EnxMU1MHn7Yvj/m0hBHi8
oOlY6h4m2m4n+p9wGAGyxMum7W1bQokXU/3vYF+QSHHKqFpCnFe5FkXDCfB2
vFzS8+wlxEpbeScRQYAKdp73HYOW0Arj1ct9UQT4xbPlYrbiEpo5mpSvEoPz
HbA44RO/iGwtN4vWYl/ZESn0138RTTiGZKjHEuCw3/FHJnaLaDjcLUErjgAf
8v/9pau2iF40610mJxDgUZWQ3Kixb6hW6a++wS0CJO6VDKrD8/+GgPeSfSYB
Hhqt8vnP9ytS/P6+dRw7ZuLb24XTX9HQyzPJ5lQCzJg/kNRM+Yqkoo+q6tII
8JyZBfcM51f0ZFnM/8AdAkTD8kWeOV/Qz4He3ws5BHjJJiKlr/UzckyQ2wgu
IsANtr3yYGEewX8feNLrCVAgXz1mduU9YsllcTIfIcDAY/3jf2NHkEaA6Q8G
tvgVQvuUzghyNcm5fnIU9ytHkPTgyjB6uaFdaDFGgJ/ifR+vXBhGNHufj1av
8fdEvctVx+OvkMqetxfOvsH5jRhIu7CTgewKn1x0+ojvsytSVgFBL1BKKPff
99hRCaugjNmNnlla33SeI0AD/qxTwL0bybP/rHSZx/Gu6a7cPNeFfrkoLF34
jPNvqXdqTe85SpK543vxGwG+XF01SlF8ih6XBQZc+YXzp8VCjmioRcJmz2y+
YU+qKOwfHa5Bl3/x6rr8JkCOFwl66r+q0UFYtsNqhQAZhib1Yn5VKH9kqlTj
P3zfnf6drZhVgmI2HZn8sU6AfH18e6/XpCPzUzzQj40Ip/2/h641ZIOqNesD
X7CBmpHx7oI8wH23iMeRnQhb2gMdCvXugmdfwWtzDiL0fyh78vK+QqAV6eun
ykmEhOUbAm2d94FYxWghcysR3osnBpcb1YJ5lrtcl3YR8fdqNSmC8AQIg0H+
79hm/QwVocknwCDkn6Q/PxE+dotVPX21BZQt22oFChChjvomudGHCHi/F3EK
FyLC4cnac1eS28DPZ+lPbosSYVnn76PSE+1gP8uzrp1iRHjozY+wS1Id4BTl
x1AaNu8Luw/Crh3gYYP5Z6o4EUbulpHAkx6EFG8XzJckwq2+UjWP/zwDm+Li
LlXvJcLgyApfrR+dQPXZwxC1fUQots/yVbhyF3DcNH+jHpsSuY1TybMLdAQd
zW7aT4QrTnbD9TNdIMad9UWbDBFeyBWyiX3WDXiMQqUZCkRo7T2td+9SD6DE
litZKBKhCdOb4FTQA7w7JrRHsFn5GkpuDfeAARLB9LUSEV5W2jopd6gXpCr+
vjqrTITPqNc2hf/qBbu3+4x8VyfCK099nXac7gOXhXK1PDWI8GlK172/1/pA
v9RL6gfsZJ+H0r6FfSBaXfbsmCYRFjNue3xe6gOL1jPTTw4R4Yuzxuzykf3A
wHE71NLG9XyTJX6isB/c8yTffYB9xWYiebWzH1iH0ZwKCERo024i+IV7ALTf
M/sUSyJCPy8QceTmABCrDDvOQibCq5zKFnUVAyCwsaIsBPtzolPOg94BoPiC
08uLQoS087N8B9gGQeZi2/eTOkR4OuXpzx1gEHgSVNfEdYlwiCFfrlcyCDqP
2NtQsTVMdfb61A0CKeObLbx6RKhWaejv3DoIRu0+h28+SoR3j51zLB0dBDD6
LtvnY/j9SavfClgZ4M7NARdHfSIMq7SmimxjgF+ZfzsnsfP2TxTbCDFA2f0z
8f0GRPjP6lQrVGAA/oGd2+sNcfxW3fq3zBjAe1znkpIREXL2daXZnWGAF7Ne
g8XY7Tt3Df9xYICwny9S6cZEeBwUrFL9GODT7iihcBMilGs/pOuRwgBH9lYH
rWKfOCJ/L4/GADmK0699TYlQhiPtRkEeA+DYs53NiPBH2hRtZyUDtDgvSxme
JEI91w8ed54zwALb5pI+7AAxGbamXgYQKdqlZG5BhEd7byhlMxgg6KMGwdqS
CNmW3io1TzFA8Y2jrZPYC4zw68uzDDCy/9RReysizI2Pdv0xxwBqroHmrqeI
0MiCfciYyQAOHHFjn7FtXu1/XfSTAZKLabZep4lQl+2nR9cqA6Bj998zsTeL
t3fWrDPAt7lm98vWRFhp+U7BZdMQEIvtWVrB1nlX/Hp28xAwlJm8cvUMET5Z
d9ghu2UIlF5Yj4w6S4Sl9Wy8fNuGwOiWbZwc54hQuC35TOOOIcBeKn4rHpuu
YSO7n28IaBgc5N9mQ4R7jzc/tuMfAo6fwJ1k7Kcaf046CQ6BlDhTKX5bIgw9
6KukLjwE2mTPF1OxT3v5JPTvHgKL3T6KonZEeErW8L6m6BAQd4+szcWOyTR7
4SY2BIy5UrWl7Ynw4+KInJv4EAi5X4CKsMPcFLk1JIbA/eN1enLn8fkkFt9/
iT3+uaOnAjsgK0NfTXIIcCQMm6k4EOFku/FeF2xN+Y+jddi0efHQ/9u555fN
IUciLIfnUtSxUz043j/CFmE/XTCA12vjFnIHTkT41dNpkYC9VCaz9BRbpmKo
3g/vR8JI+8pRZzzP1n9rhPx/v18N1rqx/0uXrjLD8VxNPBNp7EKEmeUl9r9x
vGUKHlsGsRsDx+M8cT7Ge0NuWrgS4XmVLe7VOF9bLibuGsOm8sToPMf51OLJ
pp+9gJ/rlhiV4Xw7V1RITmN3bW15ac87BNKMW4oc3IhwIHs36xyuV/tCn8JH
7KtKOxQoW4cAM2m6xs2dCMd/LsW4cA4BSaWlQwvYH+S2W9mzD4FQL169Hx74
fDYbHe3eYIDybXt6Ajz/Pz93zB1aY4CJSlWzP9g30878Dl5hgEOLJ21YvPD5
9n3hGLDEAK63nN5FYw+UpVFUvzJA+sHLbpzeRGjFrXSjFffvsnfG5R2XiJBf
SND69BsGkNpR/CcV20ON29FhnAFMHzRGCPoQYbWp4KjOKwaoWBpLEvclwjMX
W/8L6WaACz4iRQr+RBiuZiH2vZoBTAKkOiuwVRufinaUMYBG6IF5pctEOPuK
79/FQgZgjVOTU7lChJ4CvA7HqQyQnWdYqRGIzwvZVkrhKgNEFZn1N2CHiXS9
bPdnAPfyU0taQURoujmErHGRAbQeOqoSgvG8VfK2KrJhgMH+kAbKVSKsuxSw
1kligMbhiFGEnXdwh5m6Op4PEzErOqF4/ruf1r8qzwAec6mEI9eI8FPc/W15
wgzAtlHWciwc32//iLHkH4NAW2nyuel1IvSW1M/ZXDAIJNRn5waxhdXH1Y9R
BwE7YX7LyWgiHL33UcEtaRAM6f04bnmDCEkjsipGAYPgos3WfutYIjzIekgo
3WAQ3E0kjTok4vPeeCKnt38AcH/JmvNPw/dl0GKTtWQ/EGnJt13ALuQSirjJ
1g/kk4uGndNx/kw3Xc/83AeMtB60W2UQobmt2dMDdX0gKao99xCVCCvOxjwz
1OsDO0Q/n1q7Q4TzgQbcv+1eAn5jra6oAjw/tUQeRwX1AMmqwZKUGjxfYrO+
t5h3AqJM+V3tISKUWPwhtby5GRjYpaTVYv9UmX3E96gJnMoIvKH4ighfHoG3
Dvs0Af/Neu5Sw0R4/8IoZ9/UQ1DxdkqFc5QIfXp+OtQ0NgJx2va2sddEOHIt
weC8dz3YxOU3HTCLn8+RhJo+PgDbofUgE7vaiHsxw/oBEAsE7R7vcP9kfXzQ
3lsFCB+5i+3eE6G4dLfujrpK4Pf0ntexj0Qo//v8SP6NcvAheGRd4DPujx7W
zxzkEtD1RVu0gUmEN2oktYa+54Bbsfylit/x+SgNfOX5OxtY7mNqFGJLeTQK
baxlgRnbEpO0ZSJ812cXJMx9B6wOCkT5/sTzuo42FKiWCWQfLn9SWiVCvgnS
mV8Xb4KE6xWNxf+IsK2iuWdmqx4wk4rTldhEgnluQlbywgpIsMVpMAP7ENNF
NbXRDBX8FvkSzUKCv2IcqL23XNAj93hxp80keKro0S6Fx4Hoq6lrtOQWEkzt
reoBFnHIWEzqJG07CY49WlNOKKWiOdPpzSI7SDBl/vJmN2cairie3ZCF3Vvl
/nVAgo4avgjvzuMlwU0tZ1YO376DJJp3zhTxkaDmHdtfPXY5aMlqs3edIAmu
mO0RL7W5ixLin0pqCpHggXWHjL0P7qJ9LeGMRuzXjC0CC5sKkPW+dY1HwiRI
Gn0p51pQgNqWf661ieB4ZA4X8ry5h1Jvz8X3S5Dgzu1/6lNVi5FiRyHJTBLv
v1zjlkhwMer87fiNga0xtOa50lqM/ti+NRuRIkHp1GCNWqMS5KQ4LjQlTYJv
nx76SThXijRevCj6fIAEGZvmOFjPlaH+9djTnjIkKO6TvEuQVobcVI5xfcN2
71zcEztchnKo7ReZsjief7y6UUbliMP1sfqKPAkuxzFTvqhWoDHWyqdsyiT4
RVCX+GOmEt3Z7PHiGraKYEVfJW8VsmOTYfzGnnWXtJ3VqUJz7HdnPqmQ4C7P
0h0N2VXoN2fGv5dqJOjgOikpYvYACe64RsnQIsGpj22fREyr0cQO4tHth0jQ
ICbEc9yxGuXyrhjHYifxwHKrgGp0gM/XJlibBEODq1WTs6uRloDLVVsiCT7O
8ePcOleNTomeaN4PSPCM1YTpUa8aJCLG/TQX+94rtnXBazVoWqyrW0iHBJN/
HC4sT6pBrhKHx7kgCVp1NTRJlNeggD2aK98Ok6BW7ECe6scaRJRe3nA9QoKO
kxMTUj9q0Ib0A44ZbEnl0JrhTbUoZp+c4JAuCR6NPsKSKFqLMmTENRuPkuCT
SrnXh0xqkbXsBFn5GAlu7lLJMz9bi8TkqHql2B8o5vmqrrWoUH6n5R19/PxH
3t6j12rx3/fs/mHHSTBBt22qtbQWBR1sD1nB9t85LbezrhaRlcOjfAxJsO0O
zVy+pRY9U/kvxdGIBK/fKtrUMFiLhtW/VR87QYLkDo9E1V+16GJv0psX2P/C
Lwle26hFbE6K3CdMSPB+58c7cVvqkEaqp5OFKQly/CuizQjXoZdyW5NHsc8E
Kmcq7alDzk/Lnpwxw+cl5n4GSa4OpTM/C5w3J8HioMWCLO06pBgXf+Q99p3Z
VY1FnTr0TFLukutJElxf9GOw6tehnyZu3RctSPA8m6aav2UdsqqcCwm2IsFr
AR79gRfr0KJeTMk69md7z6VZ3zoUM7V/OPwUCepxTijwBtahxq0uSjGnSfDg
vfB/zRF1yOQe21kua9w/Yr9FtG7UoTliYUwS9qDDmbOB8XVI0OP929QzJFhj
53LCMKUOVbFc5xE8S4Kt2SduTKXXoWN0aQId27r+7mcNWh2aVml3ETuHn7tF
PrHIqkMB3Q6pedjG13ggIbcObT/P0iptQ4ImDY6NH/PrUPFK/tcibIHhew5n
7tUhcBsKy9ni+ZO9dD29qA6NHpjRq8AGr1zsqSV1yBuF+yrbkeBh4gEtx/t1
iOOUZG4ttnGGmeGvsjqU+w31aNqTYEMJ27RZRR3SumG30oTdo+GofqWyDvWL
bewlnyfBN//ikhyr6pBrfY5ZKzZ4SVPY/aAObRhRrh1xwOvb1pykY2e+n7r/
HFstYFn3PfbBq6GjBo4k6Dpx9fAKdief2OaX2AonvG6OYNuVPVY2dSLBkZQ5
9zDs34fP2Qxh13pu2b2M33fr9Z84K2cSFM5dmlLBPuB7p2Ec23IBrRDx/hAn
8d05F/z73RnlvHj/p/Jfb3+LnfQ5hViL41s8FExydCVBVcmROUkcf8yAsNtH
7OVrYctncH4kLjSlu10gQdEXlXnncf4aN04//YrN/ixKRQPn1yRz5Zu3Gwmu
qorPD+P8zylRRZaxjUaz2XVxfQRtR/1X3UnQYqAnKg7Xs+rnlfyrHiRYVtbk
cj4D1ztJoG8DO/8FdzNHKq7vY8sD7BdJsOXt2ebWBFxfi58n47CjbWlfhmJw
fb+khW/1IkFlxeb0hqg6NLb71fhObxIMfrHX5kswjl/ILT8Vu3iu6ZjFFbwe
/98Luy7h+eB7wf2WD97PDpkVfh8S1O45ZR7qivPBdlVA2A/PSye36xQzvD4L
7xsa9sHuWg4dQ5zvjcLC3f4kaH67oJFfD9fvv3510csk+BI2ZVIO4X5alD4p
EYDn59Zi5SRR/P6Fh7vzsGvOszM1+fH7PxvPSgaSoN/2TEYDD37/hwCfPUE4
XxdTlrX/1qJTr3tu7QshwQreiesWU7VopMOvVz4M/76T5R5vWi3a93RLWjm2
19/7PYT4WnQZZZ9VDCdBzsCsdXJ4LeJv7vysFEGCC4r5wUMetciySoRTNQqv
f02kGkI8b2jteodi8HyI29N//kMN2pd5mqcJ+/3xlEX98Rp0OW3hlXYs7jdt
R9ZtL2sQ/y1BJ2IcPj9Urw3Vuhpked0jkpKA49Xml1oMr0GvvPiQ7i0SpL5d
6nbZVYOMtYsnH2MLT6V5UzhqUCcr8T/127jfBQzG/6xWo0dUB419yXg/Mr/b
ZaarUf7T6jK2VBK8rbkWZVpSjbwFTKnPM0jw7F6yyGbNasTdkuijn0OCip0u
/E/CqtBhHva9RhUkGOQXKbeuWYZueV116cM2vpPy7s72MjTV/73EtJIEaVe+
9+6ev4+CUqYVLatIkEf2ruYj6n1ULdikZVtNgs75nbfSVkqRxB5Pw0v1eL2N
s6W7a0vQmibDN+0JCda5qv35K1CEGuxz2iZfkmCHS9fx3x55SPEW3xmrPhKc
V/7asUUkDxU+if3ej61dUCQv8iIXpe/2k27vx/OBROM8KpOL/F4diy4dxPet
TdzOnvfZ6KA+U//KMAne4NOsPm53B5Ue1B3YPoXnVUjnx1m7DJT199Obw1/x
PPn4s044OBb1pFjsbMbWSwiIS5uPQX/2Iz2VBXwefbVOXzkVg6xN0solvuH7
hXlE6LLmDSSYRwleWyTBP4+MkuJXo1AqTOVvWCbBxn5u+Fb2Gkq4TjKS/UOC
9V/Cr/A0uaFHQsVhedhtAcdPBNe4os/lvLWCayTIz2YQZ1DpjAyGPwqzr5Og
bLLCyoGK84hjf/Lc7F8SlBpi6ZK+bY6iOj9EZrGQ4Sbz998KBQ1BCNetpu1c
ZKi4Xz8wK80XhGlM8iZjNz71UZGK8AOR9rLuO7nJ0MfQxEXa0x/ENbTv5t9K
hqEr2V4F5Csg02ElZPc2Moy+OCBb0hcE6prPU/btJEMbG9R7uTQcNH6ozCjC
/pEvrEgDEeDRjrVvB/jI0KhCdAupNAK0u2Tkyu0iwxQ/Yop5cCQY3Nnz76AA
GV4V2NjWx3cdLLirtxN2k+HR2CaPU3tjADM9QuQxtnBVMpdmVAz40drnRxYh
w2YeaX77mRjwR8Btr44oGYrbKrJS78QCrvbsaD1xMuS+y3r2Lkc8OCDCoW+6
hwyHrg02B7UkAvue8V5nOTIcXnHaE2qZDJLa94W8wdYwH7mTHpAMHj3ykT0l
T4YHskbWnWjJgL+c84a+Ahke3GMgKTuZDHoStYG8El7/g7W9oW0K0DhBq15S
IcPN+QZjIpapwPHoBzs3VRw/s122wTcV3KaobJvFftA084vzdir4otTtPqRG
hvwDvSVvulNB3vZV6QYNMlRiffZVh5AGuAdPZ4Rok6H6zLl/W7elA+3ue7o/
sH3SZM6aH0gHLm1L3z0JZKiiV95xUicdtFXHmtgSyTC/Le9Cgk86uJLycAsk
kyEX793LjIF0MHNSKIQdkmHOhX1V7yIzwHYjJ9kw7AOf4nXXMzMASffB6G/s
iYXHIcPlGSBTXV/902EyPF5k6P90OAMY8Qcu9OiSIfNJwPbUvZmgcWTULlmf
DCc/yq6qNmSCJmd2tV0GZFg7FjPV0JUJmn+os2di68n1/7f0OhM82ZlSnnWc
DDf4WWti/2aC9hNGq8VGZDirYD9geJgKnk0F98oZk6EV0U07xpwKnnuW5lZg
y/xRDAt2oILuePajtSfIcM/DId+4CCroe96a0mJKhk66S40nHlNBv+WiMzQj
Q4E1zY4TL6hg8L2Ydgf2twZusy1jVDDEEjLdbU6Gzrb6LSXfqWCcoqEwbEGG
ayle9+7tpYGJl44bpyzJsCs82veKMg1MnkthvMaWbl9zYiXRwHTwYuBbKzIs
8PoZa2JOAx8aSp99OY378Zp3fEMIDczpjVG9rMkwVenTIddoGph/xe7JxFaJ
Tq96dZMGvnx33Pn7DBn+Mfbu/JhHAwsRKR+CzpJhukXyYEIpDXzb0fZwDVtI
rv/yt2oaYCqJ27HYkOFWjxjbhTYaWH5ipBqNPe3+izu+mwZ+GIWwbbElQy8H
930fBmjgt/tYGY8dGc6cP+41+oYG1otSVoTO435Cx/lrftPAhkZbzx1s9jvw
7bF1GvjXsZgj7kCGoHX7o2wWOmB9Z6S315EMS7eL+MZvpQM23xChYmz9PqNG
KV46YN90/4usExnybFDeBPHTAacER8pBZzL8OW1ccFGMDrgrNZxrsCP32t3n
lKKDrWSnQxouZPiPdbez61464OlN4X6IXd21whFzgA62n217Q3Alw47Hlzsv
yNHBjs+L1U+wHeS4x7Yq0gFvkHi0zgUy7D2r5uV3kA74thifbseWv3OhJUuF
DnZlhsgfdSPDJtV967FqdACWSyxasbu7fleIadCBh8lIKMGdDPdXLwaEatJB
RhlrcR12+4/n0SVadNDGoTKg5EGG1CwtltxDdPDV0Xa1BDu5+o/geW06EGxN
2CPtScb3w0vmN+zDok2G2di/j7o06xPo4GLgR3/Bi2SoOx6e5YVNfcWXk4yd
tTby1B67XRl2cnuR4femPaclsBcTvZaisQm7xWPu4/V2f7oj/A/bd39UMAu2
nl734WBvMrwxx21zAO/HJ/+Xxw/say6+1sJ4v1nr0ulel8gQll+ij+H4Oq3N
Wuaxe9pajzur08H3+mtzDj54njwQTUeqdCC2s3zHFPb2cMq9OWU6MPAa1z7l
S4Y1hLd3p5TowP8Fu+Mg9q/5R4/yFeggd796oqEfno+pCcLquB49kefrn2Hr
6XLOpeF6SREfczT7k2HF+K+Qp7i+RpmflNUvk+GtgdfUW+J0ELAscKYSe3zJ
YkBehA76ynzK714hw5jBZW0GHx2scuQOiwbg+VKQ2Da5nQ72OfX+zcB2bS/Y
1shNByGiB8wSAvH7tmncm8D9WBRoEcwWRIbehtKH9/+lgcFXEQVh2C2rAaZw
lQZkkiZ/+gWTYfhLktunbzQwvJ5MP3eVDL8aJWmxj+H+tkbtI9g827awjQ/S
gHzD16+moWTIGttEDe2hgUivY0DvGhmSX5Q8IbXQwMHptXeK4WS4M4r3fmY+
DZwhyvGUYA+x3bFcp9FAdOYpzT0ReP7EyYtppuD5YFITKxCJ75t6gzKpSBqI
a3VV3IgiQ5acIe8PdjTwLp9xZSAG368JH9Z0+WjgueNPgn4s7ockWLWXkwZK
9wltIOxCse29E3+pwLvUJqYqjgwv7tv6ceATFaw9mM+8mUCG2Xc/s0w8oQL+
1r8PjW6R4UithEiKLRWsREiFdmBHHNpj8ceMCiaO6ELSbby+aU8IRY8K8jvj
uuWTyXDwmvihk/JUoNS/6zVXKhleoe/rbf6ZCY69kfvTlYH7RTU7qzAqE8jl
GSOdTPz+oozcVv9MwONwKeohtnO9B/9D50ww9KGeu4SK5//7+v9IxzKB/YKO
aAydDA2sDvAVbMkEQWtWZL0cPD9mnRpYozPA/d1RYW2FZBh3NzRb2TkdnPeL
vXCkiAwlZjbNxpmmA+HeJLNn2I1XjQ4jYjqICaVKdxeT4VxZizTiTQeObys6
B0rJkI97covw4zQgVjS2/W0FGdpNSJs7cKWBZBWlvL/1OH8U5ZSamykgQH+8
lfgcf580/S3giUwCp72mNuqwk466uDYYJwHttBmKUifev/2fv5rCSeDP9KfH
kl34Ps2aXmmtSgRhAf89ZHuBv4+efyJsmkgAMUUi1f0vyXBf7uDOq3LxIHOz
bb7jMBnyGlrOF1TdAA2tsxEJ78nQbV9D0+buUPBnITnEiY0C80/2DliumiPt
OLrqvX0UyNN2cqrOPgoNBF6OEd1PgT6VF7eH0KOQ6wXTyTTs82YbvDKvolDa
MfYb0QcosILrNdQ4dh0tsvmOu8ji36fm2vApRKPCSINwWUUK/KSwvi1z6Qbi
vbryslKdAru50grDHeJRicfQngMaFMi/nFgaSY1H4GxlQC62gVy4/vm+eORJ
cJK6rUmBUmOFO2q1E1DnSr+/zyEKZAZJTuRuS0Shl4tF1EkU2MTmPGtVnYQ+
eVm5NR2hQNT1mH1j9Day+Mn3jqhLgW1Zbz9xcSQjFDJ4rgX74a6va8FSySg9
1si0XQ+vf+39OKdVMtK5e1jr5TEKjH3+8Mnkk2SUOazENmNIgY8qJ3JlY1OQ
Lokjf4sFBUZMeDkvs6WhqqcduxOwT+rWbUeiaUjYIDKNx5ICiZr7nN3U0tCi
5XrMTisKJC8aQ2v7NHTHe9lL9DTej64QT97DNMS8O01SPkeB9utXnbMc0lEu
58OxU04UGFr0+cE7egZSs/EvGcT+K9qw50tZBup6oBxo6EyB8r9N3/Q/zkDM
U6WCwIUCEzZHxSm/yUC6RXSr/RdwfN2PeI5LZKJPh0Nf/fCgwGo5+uOH9EwU
mqF9z8uTAiuN2ZbCSzPRzs8//eax/W8Gdko/zETEZC++yYt4P5lsTSuvMtHN
aTvzdm+c763Zmye2UpHa1cMDyX4UuKNuQuHcZSrq7P+by+1Pgdb7fJ81R1DR
OelH3tHYoV4G55hJVBT9Qm170GUKjGzQn/hQSEVjQvtO2AdQYKbjxatzQ1R0
0XNG7DX2s7EFp03TVLSpNXvhZCAFVkX2rDA/UZG8q0DSsSAKLCtQCLLaoKLQ
eo5epRAKFLFzI8jI0BAvZ8edEmzf1oaJ7yo0VHQu3GPPVQpsqQ0dTiHSUD/r
KpdAKAV6XGOXNT9BQ3vMPxusX6PAA58/VnT70FBjYZFwQBgF6kq+v0QIpiHD
VYdPS9gkvQDtsEgaupw3Efs+nALvxS+oXE+hoc5vvZ09kRRoqL8uFvCAhvhK
rqkeiaLAmaYCB/tGGrI/r5zdjH2NbiAu3kJDq0OpvqXXKfC1/LczAj00pJek
NyUZTYFQfHei6SANpRz9fYyKvcqSl2Y7SkPyTWfEYm5QoPv+XYk/Z2kowHdr
7F/s7qKD8tfmaahDvuX75RgKbM/a2PR6gYZscqS6nGIpMM1TsJFrhYZuRc37
Ho6nQBa1vBlDLjqaINGnmrD7fo29ddtGRzK/DPVVEiiwUzNkzHonHbVdqBKT
TMT9W2nFWyVMRzx7zsdmYqceeMKyS4yOzkzsXN6WRIF6eXNGxyXpaNn4Stc6
tgLfO0O5/XQEOGTULt+kQDaTmQdDMnSU2Dqe/RU7i+dvn7E8HY0HJWxxuoXP
56LJNaoiHe1TI/tNYMtmLGTUHqQjn6/fpsxv4/jyF5ZyVOiopTBP/wW2W62L
0xk1OuK2M6+FyRQ45eHd/UGdjk4JbRZvwv7uIb6io0lHBYP1scopFBhmEd/l
oUVHS/Guy8XYJ59373Q5REdkXWFbiVQKPOawXHlQm47i1l90ZWDv7xa73IU9
3HBVbVsaBXbcsSMrE+hozyWlnGjs1eD+aRdsb9m3W9axUzmuq3tiP5pN9vNP
p0Dn2VQ+HWyOrCNvvmAfKee3nMXrWVj+1HfMoMB1NslBc+z8bcW1r7Fdb3fb
JeP9LHSeFjfPxPv7KjOejferHcEV141NbbbgD8Tx3CA8XtahUuDGHcevEhp0
NLR80fYhtoOKp2Y6zodEhUT3QRoFpotE94zifHm4DKoVY7v86Yiaw/l8KBGV
I06nwGKfw1odON9s4+qcGdiyErtaLuJ6mKV89OO5g+t/z3TpHa5XtiH1zXVs
s4JtRftxPT9vPm6whp30yKlRQ5qOogIqxL9kUeCtx2rGD0XpqF/ZLs4hmwJ/
fxyPkMf9Ivp5x49xbJtKX193fjqqP+ff3ZWD/3/myNxxHjpiEdivrpNLgT//
6xP9uoWOTPpHcxqxS6/t8jq9mY7mIdG/KA/PD/eZZ8n/0RBnSj+rTD4FCs8r
LH7+QUOys46ppdjjA2MCbIs05BGZWFN+lwI5XL3TQ/D5SGBIHlYqoMAbIxdu
jE7QUPme+sEq7FH1t6XLr2ho4enUUs09CuQ+7PLY4zkN8fD5hqsXUuC7mii9
Tnw+lRzZdzRg+2eQNGYbaMib9eDBpiL8XDvnqmURDTGPhF9EJbhfkhYFFfA8
4E3bta5Tivv7YOPh0EAaUn1fkvgUm25kSUr0oiG/64Nlz+5ToF2w6sCsNQ39
6tjzuaccn0cdMOepSEOC/I1BxhUUeNs87meRFA1pORty9mPnzL0nZPPTUBCb
vwyjEs9v0W85T9ao6I/eM5exBxS410RQu6uTikQyrH9ZV+N4dzz2fNNERaSP
C9ET2BznKkBVGZ6PNwQK39RQ4FP+1N9hN6no33PXd+/rKJC1Slt0zJSKpATX
fF3qcX1seBuf6FARbkyWeexjOZeszylTURRHk9SXBgpMtH43376Nitj0ueyZ
DymQ1+JCrmZXJtpHzVn0bcL9p2T47k19Jjo6rxr2A3vk7lIGpSATxcSezfnd
jOfBVF6EdGgm4uoun1x/TIEvVJ0HQxUz0fbjJtZcbThe8L31WHgGsnadpURh
s7Nvbn7tnoHuXb+8dw17IkGsTd4yA2mjO4sLT/H6M+gkh2wGclCfjx7soMA8
NjnWvJfpqF48oobaRYF37o0Yq3Glow3iLipvNwW+aax/krqUho5bF4fGY7c0
rt2rGklD06kv9a++oMDLcbvVhe+moS2cu6ftevF5bF/vrdRIQ2eXa7gPDOD7
aUthOTJJRYU7jjJzsUVJFrIdKqloSXF8RGgQz6e4nhsRfKko+sJGPhcD93Oo
O2X/SAqqnDI89G0I388iDCG+0yloU9d7p/pR3I/58WSrE8moJEug5cg0Pu+G
F1oRWxJK3ra79gV2f/IFRe3KRBQSLlZi9pYCgVyayw/LRGTstDfFbgavL3bz
klJBAmLKq7qEvMP3a/R3/Xvq8Uj7kfG22jkKrNEuJaiqxaCe8eu2e5YoUMbL
WsNeMxzVGcaeLMV2Z2Xmc1iFoewnCfrKTAp80vlljN//GvLOT1GlfMf3g5fR
Vseyq4jPLY/9zA/8vaAUbVHMHoTOrTyqTF6hwGl1hW4ebx+k544KhFYpMDfk
eKX7vDc6OPmUmotN8t2R4rF0Ed/f3ZEV/1FgEaAGB/5yQ4Uxo1bda3jeKCq6
Jr4+j26uvjY0XadAvzFagV26LQrweKMzip1Vmaj91fsMMjD5IPfhL/7+KLlF
frbDHKm2zUt4buD3Tegu8lUcRyJqX3ctY5/Kn+TnVjiMNhcucgb/w/d79IBf
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$14978#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14978#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 44->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$15142#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15142#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 45->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$15306#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15306#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 46->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$15470#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15470#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 47->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$15634#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1:eJwV13c8ld8fAPDKDBEZWUUpJauouM99TiepRKFCRiR7VwihzJCWrRIhKyvr
3kfhZCUrK7MkGkrWjaLiq9/5/cPr/cIZn3UuWZsLp+zXrFq1KhZ/+f/3P8zV
UuzNmvDl2TsbxtYvgdVpq21P9mnC8sPbxOpFfwJ1H4P5buyVGeb05TfzwEE/
NexUvybULVIcpsfMg/YVjazTA5owZ/mOJhfPPLh37uIX4yFNmM71LCxr5QdQ
lf3gaP5eE9Ldvoa5Ds0Cq6xqN9svmrDQViS2sOEriA3k+e8TtsmtIOKP9lfQ
aGR6225cE97Xtsh81DQOFDh+Ftl/1YR/Y5ZFV7V9Ab/sd806TmjCe2/+MumD
n8At+QeX3Kbx/q2R+es4R0FVvq/P5V+aMOrnp2P53t1go2Hj2WnsqeHSCb7H
XcD71/pD9guasK1ggmjN6gTKMF/AeFETXj/+9cJqp3aQ3jecp/5HE0bGC9ZY
cDaBiFVa7+aXNeE1kQaPbP1ycNKED3qy02BVcuDV9JbnqHjJdPt37Jk6aZ6M
sBrEk5HNZ8NBgyUJQ+NhUrWocRIMneSkwRNDcolr2+rRvpBLnru5aTBkLKKJ
4mtGUoX9WSxeGhzavM5hSrAbfV2dsfbCBhoMHmuYDTB+izaCLuEf2Am+5n0H
pt4iHf9/m72E8e8XNrxoCHmH8ucs9/mK0GBR50t1gSfDyOOThG2QGA3WNdxN
ef1tBP1sTKi+K0mDrCiNTYNJY2jb6sZXglI0+M/Equ7C4BgyIed74rF/b7aM
9hD/iCjGyYlkaRr8eavO5PH9j8g/h180fTMNHoY7zyzEfUKroqIulGzF65+/
O57t/AXtbqT898jR4PNzPJe+ZHxBNqu+Xq/AvsjWoR0/9AU1+B1+WLmNBi23
88YSR8dRhPOallp5GlQ8ak1rk/yK+PQCt3TvokE33dha3fxviIwsUDqtSIP7
t511zhr6hjwa3mr0YScbfrjmxT2BOglNgyElGtQO+17pZTeB4hQXAsZUaFDn
pdhXbtHvSJz/Yt8PNRocE5yQ/H5uEnmLpe1zVcf5yQh9QQ+fRB0y7cmfsRWD
ut5K5U2icLUd5gN7aVDkNtdUxMwkmjEdHanej/d/fyaDz2cK6djww30aNLix
nntXX9IUeuxKz3iKndfiskGZmkKm1+7ZZmrS4IH8Wq+4hSlU/9jwWyRBg50p
O1JULk4jqaJrx1bTadDj6oDW9dvTyJdZmO+PXWCiruqRP40UW7jd3UkajDbz
MVj6OI2SZmp/nDpAgxI3Y5r5DGaQq+buJelDNBj2rfGb5YZZ1KR17mwydsPz
rd4bFGaRzPHbNeu1aVBWWWGDDZxF/VYTQWyHaTDJtvBfm+ssguEZ7BNHcD5Z
f58P18yiB7c77W2O0uAzJi+fffcs+pX0X9M77Im52jM3Ps+i/CdmNzp0aFD5
od6TN+wsJNwpyF+hi/PNUgvKkGchj8EDF5T0aPB0RlTOWxUWahlz78rBjlks
Ap/2s9C1ny1x94/TIHvrzgDboyz0TTxULEifBl8FyGhus2Mhra0lfr+xh16r
L424sFCq4sjQJQMa5Fe9l+F8iYXw3R/aGdLgJzNe47mrLFRjNyeje4oG1Svf
u/QnsNAUO1vua+yGIkG5mw9YSCJ7g9LJ0zQIZ8yP8KSzkN8XdU1TIxzfvGtl
TvkslHP98It32K0dIZ46T1mob5vJ4XPGNOh6bzJyvpyF9jj4nnQwocG7HtqP
CqtZ6Dxn1MAEtpn8WbGqWhaKybln6X6GBmWGd3UnNrIQOvLkEwv778dXXGQz
C02PP3P2NqVB0TjthZI2FpKKbJ1dxI49wBz40cFCuvLvLgeY0WD4wd1f/3Wz
UJ7jckioOQ1eSEkIDB9goX6uddycFjSY9ijbb2mIhTjypO/cwO41FLwLh1lI
XUdZeN1ZGpTnmPp7eoSFbL6BBzHYVUK6i3tHWSg2ykBG2JIGGZ0HXoyPsVDt
DuucZGyVuLHbDp9YaKb5oqKkFQ0eLzmUxvjMQtLOIWVp2GrB/rt6v7DQ8bVx
GlvO0eDSmQcX68dZyP9JJsrGbr5N5QV/ZaEnx8q1d1rTIPId5xf4xkKDEw2t
hdhLrsSIOzZndK+h6nl8/trWk6nYexW+9Jdjv27Ly/q/7Vp/nd1vQ4OPP00I
XsCOc+H89Bxb2yqzVxC7lkfMGdjSYHfsuHwE3m82X362Dtuxt/VIOz7PJj2N
y4ftaFAh0Nbt8//PO6mz1IxNfmh804HvE3DTLOS4PQ1WnmarvInvm7/LhasL
u0FFzUjyIz5vm//t0w54nrY4fbqK48XldnPDADavb2V6OY7nPr6H980dcX/d
2feqGsfbrrBw8wi2oMNi7P23LBR/vCb7vBPu59MCdN1BFqqfer3rC/ZoUdyq
zj4WYt0aKXVypkH71kSJHW9YaLPS7P4p7Kv/FF8ad7FQoPt67XkXGpzida5U
aWWhgnWyrT6ueP7f3ec73MRCb4t2G/7FVg6fKLNqYKH9M6fOrnanwZPiJ29/
rmIhhzu2H8OxOR2UM79RLJSg7O3E7UGDZwO1ZBpw/c55JHoLXMDz2cpaexnX
u4xAzt84bKX+OGuLHBYyeMoMFr1Ig1svnuiJzWChwtmBW9KXaPCPTWHm9WQW
crwokb3LiwZvP9V1vxvCQvo+Mk2F2B96hB3aAnD9BW7/quRNgyZjSXNjl1lo
TdSenaqXcTydHXMeObPQw0e6Req+NLjm9fMkWwMWCs027GBgS8026vrrsJBz
gcnsPj8a1DTsOul+EMebstmteYUGi6/c1ZjYw0JdHf4MMoAGVQVUI4AwCzF7
g/sR9tPOxlmSD8+HtxGLBwJpcMvWLFdJPI9cxuM0ta7i+5t3zH8cn0XsK/k1
R4JoMHt8RVImYxZpKL17aRBGgwHTS6ti1s6iTWpj413Ya3MEoq7/mkEcml+5
ToXj+/S+VwVjM6hHe/6Y0XUaLByfy/lLzSC3s7wdppE06KO02rrQZgZl3CT6
z9/E8yyj8r1R0TTi+Z4y7hVPgyvrxl81S0whiZp0yyns2G2yPC2rp5BCTHav
XQKeZ/W5PunfJpHevqf1xok0qCdeq9nPmES3QuvT9ifToLSqpomj/iQSkJww
WXqA6++iotkFv+9I+Pi+V6GZNOjSJcQfV/YNbS7uyo0txfd5XOW60vMZ0eQL
MjR6cP/91L6yYDKAdKxi48uwl63YxtcKDSCTRN/rim9wP1ofvqfwuh95sWk7
y/TiefcLoaRD/ajww7Aqdz/u7wWvIuXdfUj6Hn/twBDux9cHx1avf4NWrfUc
8RnD7+nPdFpl/WvED027WNghyX5GPAdeIylfUO/yEc+7Tezrc6rakeYXnhyr
TzRY7cJnUMtoQ551j92PfMH1sO2ZzJOiFvT5St+yyAQNLnDQSxOLXqJX3zUk
GSw8nxos/+izqtCdSOE8xR/4PfL0aX7BUYWM5FjqWdj1PHZJG6Weo1HLXP34
ORr0HTE6cluvEv3uEgm99JMGNR4XpXQxKtAOau6b0m+cP7XgaFPvAhQdVsjM
+Yffgy93QiQrbJChTNShTasI+Hv/wVeRR48B0RrbrkTsAfafklMqF0DmgsT3
8NUEtB9Z2iEpHQ6eO9+QtmUjICM04+ZeuSQwaeAQvpmLgES0k5F4WQ44LiVz
6h4/AZ2jzkn1CjHBuMEIm4QAASuDp7Wk6pkgOOwhIwXbO0EzmusiBRjfN4o/
Wk/Aqt7Ne9teVYJNzwRHs4UIKCfyVEjWsQrMGrN5lIsS0O1tYtfknloQfaNu
814xAtaAha7RoFogVxPUzcQ2pL3vU26vBaZyy+rPNxIw6p1O64BNHaid+7lU
K0HAlcV3Ti5R9SDu7viNjk0EDJCXHPhb0QgUG7IIw80ETElYx1W52AiaFmym
u7ErtxY/7dN8Cf5afjDskyHgyWg2HfXql8BWcVBseAsB7Qq0028+awLqLS3Z
E9sJOPbq2DHe5GbQsRx5xlWegHD0yCRXVzNwUj2ydhq7OEvc3427BaQm17ux
dhDwubAuccG3BXA6VKktKhCQr07yjJN+KxhYU1THrkLAB0MF+rGjbeABm0vL
VezypnY78XXtwIpdvnsBW7fIMHSrZjsY58gY/aZKwA5C5cyLu+1ggTvxX/se
Aqprcq+R2f8aiApcJRP3EbDtpqrCW48O8FaAdph/PwHlt4zKlcR3gLT1i8cj
sTfw5O/lr+wA24Uunb2iQcCyLJq03b8OsE/EPsCSRsD2DwJpIVGdwETyxLNt
gIDrM3Uk3LS6gIQUT10attP1zCDlk11gROpVs9gBAtaS9ovUuS7gsOng4FpI
wOsblz/IBHYBH9m9i9MHCdj5yeCjQVkXoG2ZW3HQIuDD4S55wxddYGXLU85R
7FvBTmzi7V0gQm6naM8hAg5WlAGOL10gUV56L/MwAf3p8UInhLuB6Y63dJUj
BExYemKcvLkbSO1M1s7D5qFfLytQ6AZZCoJGD44SkLnLOkANdoMKJQ6va8cI
eE8tKqnRqRv4Kdf7L2LLuTz+aefZDegqQaEXdQnI9VuV1RXQDRpV/8Ta6BHw
J7t/CN+dbtCrNl1y5AQBSw2zzMRKuoFb2633LdjvGq5ca6jsBuy2ijwn9Ako
pMMcV6vrBupxrranDQio3bLLz6a7G7Tv5I3px/7j1CwlO9QN7Oryq80Mcf+c
i1/KGu0GCawJEeuTBBxPCLD6b6YbKEbd0PqELeC7bNnzC59n884LDqcIqPXL
8477cjf4qe/U7HaagId4ua8scvcA46Jx/yvGOJ/hh9WtN/eAGe2I3GXsOcVx
f3e5HhAxvK03yISALcs8o1o7ewCT114p4gz+uUne8pE9PUD/Mbv5WlMCrg4P
V/HZ1wPGaVkRt7CjpQt9PWg9QNTl04c4MwLefpcFqg72gOLVYXyi5rgfM4c0
1h/uAUfub9G8j/1dUvaAik4PGFGtt5eywPWxUenuRr0e4NN8Pu4RdrLzU4f2
Ez2A33r1iy1ncfxGzdj0DHtAzmL6ZDb2HYORzIRTPQDchRt3WhKQP3Im9IlR
D+jfPqpdiF1nSh+7YdIDPFDQJRUrAv5LvLK017QHcJpsTivDll9vKlBs1gPS
plHr3nM43/dumM+Z94B9160WK7ErVtVKsJ3tAR1SK1vp1njeiRfdHsV2qEg1
fIFtw1jzI9qyB6zokVe1zuP+y/IMXWPVA5I+DT95iS33rDjoKLZyQGC/jg0B
xRudtptjNwlJsbVjs5JOVdCwrfKrVAxsCcjGtslxAq+3cNDibA82NRQY6IB9
Z+hvlLEdAV2nZPaU4f23X3rAGMT246t+2W7RAxA37aOFPQEB76rLTHx+k/Qh
/g/Yss/Trl7A95vZf4WwccD98P2Y9O8zOL+dG52+YBe4l8ca4vhscqxMcHLE
/Spye+MVHD/mypm6SWzesqjZSzi++kmL0x5OuB5FTI0IHP9xpWSJOex9QkXh
fTg/opb9Xr+d8X3Fn4KrOJ/FPy+nB7jg/DS9OHTz//m+JfJ6Bbv5pDSvqxbO
b5XRdg43Am48GjGQTuD8nv55Kgp79vSvM4v7cX6/xwfxuuP9w/1iZdR7wID4
m0FBD7xefOj2qV34/mJO6XHYeb76zY/l8XrC/zluuEDA187HylW34vMIyC8K
XyTgUpy+fps4jgd7gMhGTzxPyuWW1nLg9Vevf38P+0jDoo7nv26wsJKVJe5F
wP2iK2Wlf7pB0p8ONUlvAm7P2P6SOd0N+me2nNrkg/uL00d79E032D5FiT/C
5p661M/1uhv4TBwf2+xLwH7d7DPcTd1A9LPPRVk/AubfVhdMpLqByVDrHTl/
Aq75FNbw6V436GvwbFO4RkDbxxaaN4y6gVwdV3wBdvZ+fikLvW7gjR6aKwYR
8NLTVQlrtbqB8LOmCaVgAsbbySv9p9wNjIoluHeHErDxEY/jYS48b+7Va++P
wO+Ratq626VdQC7pDF8ltt/mOxmHcrqAd/zUG41IAiaebbr49kEXEL4jakuL
ImDOcGz+k7AuYBTmEkJG4/eveOtM7+ku8MZdCB26g/th3DB+6/tOcFwj510V
tv98gVxSYydoWkP7o3YXz+tjk3UDBZ3gefJ5dbkYArp486a0XOkE6XUl+exx
BNy6P1TOc0Mn8BAxSH6ZSEClv+1XdoIOwFNz8+LRVAI6DMybNXu1g4N8HFv1
Cglo/M35ZLB3M7jjHmD/Gru1sN6i3qAZDHf8yDUowvW39wc1rtAM/GJHFI2K
CZhkIX1scPQVKBGt3GdZQsD5kz0cbnqvwCZZV90LFbhfhkszXkg2gaW93Zfi
q/H9vlvtsi9sAIxzqbXv2gnYtcf8jophDVC8I2Rm/BrHi4s2UcheA7KqI390
YM+cHJDZ9awaJIh7bqnvIOANoxgNpS3VwPPNkfC8LgKeMh+/YfnzOVA+yjp6
uRf3d553ucSDSpCnfKiTfxjvd6lQypFVDlL++/b+4CQBjRbVNGLGs0Fr7GnB
Z9j7sn/caLXKBn+3IW3VKQIuSK3M2g1kAVP9+IJN0wRUU/Wrf9HyGIg+Iq8s
zeD1Jbaw7SvPAHEwTpgxh+uBt3htj3oKiA4j9Hb8xe+bmLHp9vWR4LlYzrVH
2EZ2XzYaKl4HEwXry0SXCKj4UcesXDcM6PR+2cixTMDghsoVf6kgwLktZnzs
PwKqrvzsYbe5CEKbPoekrKbD0Yg90VpnnJD/2juV/Gvp8Jov7FN1iEHX1N+t
j8GO47l/971WLAo5t8NZkIcOHyxNPZHdFIeiGPXiwrx0uCz3eN6zKx4lnV/0
F19Hh3yZ6+7qyyWj8mfWpJwgHZa8Ywu/eyMVMT8XJWZjb/lntchjmIaeCyxN
bxeiw0CZ7Y92ijxC9faJaTs30OFaGF375EQ66hJs/acsQoe/rSVlqbYMNOWs
Vq8pToc7/wwXlOVmIVZCsEQV9onqGPt9q7LR/IvXnnQJOnRtK3ssaJqN/oo4
bT0gSYc6nzvluzhy0Nr6h+Ha0nToHGn4xNcsF22X4DxqIEuHRm+DrBvGnqBz
rYNtdjvpcB2f5sbPfsXoVr2c/3tsjofHcsIqi9Hz5xd3mCjQoWfe6a4Hi8VI
uID7+tFddOit3bZrt/dT1HpTAygo0aH5P231MLUSpH7iXsmsKh1qBOVJt4mX
IpvDn62cdtMhvO/T7Ly3FN0lVdeNYR+PVclrMixF35WanXv24PWzpNOrIkrR
I/7fWxjqdKjMz5uTNFuKeLrOJPpr0KFwhWrBHkYZ0mh+fGgee/5xTl5Texmy
r5394apJh1vjfh2U/FyGaksi9S1peL+5oTFOoXJ0OZbignQ6XPF7zzPlUo5G
T4n5c0A6/GPXlykgWIH49Wx3XMN+odx3/oVcBSIOPe1fwBYWe7h1j0YFSlI7
qvbtIB1qtdOOnbeqQHrCvlOth+hwV/Cw4ffcCsTs67eKOUqHqT3MuWYVBqq0
49izQYcOywLenxY4yEDP5tU4krCNL23+sP4UA1ULxhakHMP1xOzYf8SLgepP
6P3O0aNDkTftx4PKGKhx+ErbzuM433y1Zll1DPTSNS+tENv8SsjGiC4Gar7B
cbjsBB3a2ulcCJ5moNcvX8TWGNBhZ87gsLEcE3UYzdhBQzqUK1R5Y7+bibo+
SWk0YFu95mJTB0zUs9p/pPkkHdb0C7/hPcNEg6T6rt7TdFismnC3+DoTvW23
WTExwuuB8UJGDBO9s4jtHsLeY+h2MzCFiUauzPh+MMY/Z00b6JYw0WdGXuP3
M3R49fSzk5P9TDSuPZDsbkqHT3JS3/z6wERf33C4srAff3ZKq/vGRN9/2Agu
mNGhQOLtntQ/TDQVHPvZz5wOHevepBavptC0QC21hK1//O3lkLUUYilJW60+
S4eff6xe77GRQnPVervDsX2aBNSjNlNoXs+fncuSDq3dqR322ym04DyQz2dF
h3o5RUed1Ci0nB27KGZNh/Ez8tQ9XQqtqNe2PsD+ELzwvMOAQv8aZlKlz+P4
vxYUazGi0JqPetpbbehQiYv7Ia8Vhdgv+YvlYM8Xd243sqEQx6on33fY4n4L
r3l93oFC3Js4Y5Xt6NBC8Yvaa3cK8RSp25ViMyp5jXddohAv3Xa/uj0dRozv
NjHwphBfWywPhd0upO+k6UshfvPa95oOeB48MKmeuEIhgYmZkmpsv7cHw6wD
KbTeTzr8gCMdIhXOmdRrFBLiOn6mHptYvK+UGUyhDUn+Coed8H1uz3u6h1II
zOWefoFtzOjj+hpGIRf9vkBNZzrMUV5/UOU6hRLz1+SUY+89EXzkSASFajlV
O5Vc6PCsHRtUjKTQpI3l71xsx1c+xmPYoi+iZbe40mFtC1VsH0Whg5KVug+x
q9Fjr2fYbr5fvETd6JD5R6x9GDv5jVBqDLZAx48Pndj1KrCJx50ORe/yD8Rh
z9x0nw3HVo7RG9qGLf7twcZ/2IVyEfw38H7a2s0Hr3jQ4dSjlLRqfL6L6b9c
5rFPGTuX1uLzpyxvSXC/gP/+XrtHYjiFmkwNa75ij1ZlrtDwfX9UXB0/f5EO
qza0RJWGUEhKsEBgGFt+XmrvnyAK6bgPaphcokOXooBdQjieXi0cNl3YC4n1
8csBFErbpnZT1xP3/6rOxEqcj9YQ64pGbJUD18yO4HzJ0Ko4n3nRYeYN2ssB
nF+9pG8qat64f4g1Ne88KOQzJ2JWhL1p/UeRMlcKvc6/WJBxmQ5D3c9F99tR
6DdnWq+kD14vlfold55CcrZt/yViJ9BTzx+xpJC/5HbDaF88vzdGvF1jTKFs
39NX2P3wPF06tD/NkEJdb4Izr2FbpLCrrztOIflb7356XqHD+9ZsRQ5aFOpd
jrlvEUCHEtKKf3iVcH2bovo+7Dtce8t05CmkwJicNAjE+dHdpWsuS6EQ9yNA
+yodRsoZM5eFKaQ8svRRMQjP9xNv3mn9ZSIz2k6+XOyNooHfFOaZKDzJZK9s
MN6ve1loYhLPB/3SSJEQ/F56LFl/G2aiqBcOiiuhdBhttYVcrGaij+ndlzsj
cD9w1A74XWailzY/NY9G0uEI870qpxsT5cmJrSBsh0G7QncbJvLIOxtRHEWH
mwfn0tv0mWjp6dek29F0eLjqS8qrbUwk/OI/Su8OHfreG6dG2xloMVgmsAG7
8HvIG1k8L99qHYLEXXwfiwSXAwwGSm+KalaIocM6dpuM9akMpNSxYWhtHK4H
B78TAq4MdOT9zr+vEnE/TRteS1vFQDsfHUcHkuhwolF7unKuAvGdvxBKYYc6
16iWfa5APZ8reHKTcX1cD2472FyBzk0dkIy4j/t3YZvb0O0K5LdkTNdOpcNe
3SIN3g0V6Il46LXaLPze/X7yM4izHFl7RjpqZdNh8ySHFTFfhja23TJsxH7e
lqPb96EMRQQmb2nOoUMT30D37MoyZPOhsKkzjw75w96JVTuVIansAf4PhTg/
j6PmpupLUYyq0qP/KvB8b0g3LbQuQT5HB1/QXtJh1KPCc+S9fHTGfXilHFvY
ez/l6JiPNOJHSaUmnM+wnni3ffno78i3qs2v6JC9jEuYq/cJuubzh2JvocPg
FSEqct0TFJEtUdLRToc78nuql67koiQ2y3SbXjp0Wid7sYuWhRgvxoKjP9Hh
Pcn0a15vH6C/UzH+tuwkXMVh+Umh8SLQiLq/+7EcCYd/PTuQKpcBOn29IyS3
kVDmc0BJuHkGcHA0eBf/f2c9zDCKyQDxRziuh28nYYmyUm/hUgaYYb80aL+D
hKZRU3L7ujNBVohO0A5FEnbx/nrl7JsF1gcsthepkXDqdHnhgeJckOvSI7td
nYTH/3VefzyaC4B5kU8atpzCqOm4UB5w1bSVubuXhA/j11Vz+eaBpsUOr4v7
SZjVuSJTSj4Bgd45EmoECS/m61VaNOaDb+7GTpVaJAyeFGb8rSgCp38KfaQd
IqHPddGdoeNFAPl3WdRgL2juujsgVgwSIvUM6rVJ6KCzXPj9SjE4kHFwX/sR
EuqcPHg3l3gKknqV2Ed1STg4TveNNy8BhwjOdK7TJPQQt+RrRaWguK5BPBq7
4ZhOO39vKdioExLPZ0TCGMsFT/WJUjBjtBwhaExCMYtTZbIbysADjzl3yTMk
3D/I++SafRlgZYwQKhYkTNmXtCDGXg7SuKkBE1sSujnGC3nLV4A9Z71yu7AL
ksyvntlfAV49VfHVtSMh2KN+XeJoBWCZ5IkCexI+f8TZARwqwKHs+8bbHEmo
/yPox1JmBfh2MPDNvAsJf50O+b5NlAECEzUeu7uSkD019RFrKwMITvz0/Ipd
KO525d5uBqDFuAu9cyPhpkdc/107zgC3R6xO1nuQsMY35kdmMAPsCTjYGeNJ
Qv7DOX+3fmSApo7/0ni8SLhDSti7eJoBLLY89wjHFpl5c3/DHwYIb9nD7+dN
wvdeu4+7CzDBgJjciXM+JNTNqvpjRmMCN9dRqSFsvpn1YQxtJlj14uHUKV8S
SohGBX7XZwIFB5FbR/xIeHS+QXbUhgkCKzjblPxJ2Hm15eOvKCZYz93wIBdb
5sz1BxvjmCDbIshFNoCEoXN7IjakMEHHmt9rRQJJyHZezyK2kAlkT07oLF8l
4ZrnzU/yXjMBMyt7o881EgpBl+KoPibQ/X3+2yx2ievr/APvmcD70dvIT0Ek
rMuundo9xQRN021NrSEk1DpYprWVmwJCuVd3a4Xi+xQ9XJPET4Fz1ioPn2G/
tRKXGxWmwO+euEt5YSRU7+lb+CNDAe1b2sObw0n4vTzFsmU7BWIPLxxJxl6W
WBV7QZECCpVmUhHXSfixsqT5wH4K+FzijfwPO10gLNSZToEGhZof3hG4vnat
8nY+SIGzqTKvbCPxeec4nSd1KXAn9OulgzdIuP7qw6h5Cwq8Je4PV2LPVElM
t56jgPwv3aOq0STMO3D2nK8tBWodi6U23yShi/HeQX0XCvDJWkcmYVtxnU64
4k4Bs7eCc+tukZATwBa/ixSYO3751TL2jiuJ3D8vUwBwyu/xvo3PkxrWfMGP
AjdfDD6cxL4accLthT8FBv2iuWzvkPDzIWbHx0AKyO2he77FLv8S3Dp0jQIX
J6eHT94l4XjARVpWMAVqsh4dbcH2E9X5czCUAjxWJ8tgDAlNXraOlYVRwESM
TboS2+deVcdCOAUyuyoiVWJJ2Pvo/YN1ERSYveEwl4NtPTkvs4hNP7TRclMc
zu/NOqI8kgJRyy2vErFH7qxtOhhFgV5GwJ518SR8xnn3QSa27AWl1HDs9DUi
CX3YHjs+cC1jB8dZ3X6L/XwsxtMrgYSnmpTPl2Jzpmi9/47NW6zz3Qz7tNHP
ozaJJMw0u8DWi/dLX5dTNoTNM2QfuRl7qumM9MkkEv+LM2tIx+fTCF4b1Yyt
HN9BU7hOgeuaVXMHkvG8nG7aPIHv2zPnZklhS51NeeuH47GpcFOz8j283gz/
kSEcLxf7rj052LfLP9N5gihAbQpNlb5PwsTqD/d5r1KAfVCNOxF7k3jD/vc4
H4axXzz5HpBQdujkj2s4Xw91k9+HYcfxGWSwcD4n2I7pLGGbN1zdsseLAqE+
hdLfU0jI+hvAJofroUPFKur8QxLmpnRv7HWmgOSEwPwg9u1/di6nHShQYeHV
/CqVhKOGJ5VeWFFgtcg2tQNpJFSxUjUqMKeAfkd/KhP7lofZFgcTCnyFNK/s
RyQ0HEzcfPQEBbhjO9bIp+N4njRXX61DgR1jNnF52E38f4OCtfB9Q26WFmSQ
cDUR+9/rfRSI7t58UCkTvw8PXLtSVClQIFvRVYwtLftVUlkBx7tueLb0MQk5
rkdaPZLC9S10KUgtC9f76bsLV0UooGTDIcDArlBY0ZHB/euxRlm5MpuEO/v7
rZ6uMAFLK8gN5eLz6b+XmBvG8yZ+w/KBPBJqxEWcmnjDBLs/5d6sw/6buaU5
s5UJPMO68hufkNBs3Z9iC4oJfjXITrQW4PmmFrV/9DYTiAoz/Y4XkpDk273r
cygT7LPT5e7AdvMxHc3zZQI/di/57iISWnz41uVlzQR/tRvtB56SkNhzJZlH
hQkkEk1/mZbgeVQbZCuwhQmIL1Phb7GFsmK83wjj+XhdJOt9Ke4fveTce3j+
/nvp8PFTOQn7dTOkhWoZQEZ06ZJ9Bc5vse0IbykDQIe7q79ijyhUOzZkMEAo
Z6XMdwZ+/wx/ibiGMgD70bXnWBSux4AfhcmQAeSSU2cuVZLwQu/ra/4qDHD4
6+5r89jNa9sfim9igIhI89SFZyTcPT2/cvNvBVjbXPBuuYqEWxvNd9BLKgD/
MX3TtbUkbNzS4ZnOXwFMHcbIUGyNPZpDmX/LweMw761L2JG5tyodx8uBBnow
M1WHP5+kWB7VqCkH59W+hnc1kPBeWI0ry7EcVEgHlya/wvkzkFuVUloGVmgb
ktc34/78qj9Ydr8MHDPNCbyB7XRg24vokDIwEtd+NKCFhJe5j2zyNywDXNzi
I1ZtJNwy7P7t1GQpMJ8r5dneiev9Ksf7VuFSkCVwmJWGTdfZFtb9uwTMKg72
iXWRMEOp4nXicAkId1xJX9tNwhOyMQyTxyWgaFh3/3QPCbdFmyQxlErAqlef
bCv6SZhWcO/+TddikJsiUqM1gu+/krPtkFw+iFknXtaC7TdrHnm/5wnwD5LK
NfxAwnfbFjxB8BNw3HZrrNUojv/dj5qeQ3mApbDb3v8j7g+vhMbLYblA4/nx
dWXjJAz0tK+5w8gCrYNhlrKzJHxgy+2vsikVlOtGnsrDzk13lh85/hA8rI4+
qsIioeVSCreAfwrwSI/dTf7A97Xw5vnZeR8IOT3iMJvH/cy9EFnunAQsFp8X
xSzi94knLeFe3h2g7YwyxX6T0Ms/eciz7xZQfleXnIbdV7Y3Z9+/aPx+N4cU
/sGfL9TPb/I+FgmyIvqNm5dwv1X8YFe5FARu/x7SNVjG/W9M+yN9PwD4uLw/
0I8dK9Mp9fK5L9DR/7zz838kTPhTzWbZfwHsrv26yXWFhNF25aK9845AYs/k
hjls4wrtvHR2a8CWNcN95R8+j8SnVX6ChmBKZO6/f9j+S0HxNMcL5P8AX0aW
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15634#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 48->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$15798#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15798#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 49->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1:eJwV13c8ld8fAPAIIZVkZadhZ8tdxymKkBFKZWRmREZZyUp2Zd97M5OVlR2V
QxQi48oKiQYNcdPgG+l3fn/1er+e23nOZ5zPeexxvHTShXXTpk0ymzdt+v+/
kjtZpIW7teFzm1u7ZnnXwN2DaS2vJ7Shcb3APIfmd+Cx42TJ2Ult6Nb8d+zm
MhNoMHlTJrFvAOKiSjUTdNfccn4zpQ2ZfCd6+hWYYFEjYevstDYcfqaz/s9g
ERBJkWc+vdOGPH8trk1pfwFD+pd+/f6iDbvacz+ftH4HsmUPvg38qg1zTv9q
vf1mFrhwfetexQ4Obp7QdpoFqz0e2X8WtGH/93ab0UszQMLEVXdjURtKuPSJ
jIu9AR6WtinsP7Rh+PWCL5PPRgCrg5ES/5o2fCIUJ2AZ3wp+befySsLWmP11
76bvE/DpSWcF27o2rGLlnNxj1wwGhI8o/sLmWzntF61XB7IHtRVGN7RhkEzA
YVfxHHAIHpCjsRJgoiTL4R9FD9BFSZb9YtwEyEU9Rd1/tA/Z9yHndOx5hfCI
0Nh+dPJqaCHPVgK8l0FfTOsaQISxlb1/sW185TfdkGIgjtuL0tPbCPAsr51e
TtIrlL8xKZW/kwBvdbMM/VQeRyNvGsX27SbA7UcTFoUtZ1C29OnIYux4odWC
WtoMcr6w8lFWhAB3WeeHV0/NoGXmoQdKogT4nP4sbMJxFvGyNR8+JE6AOv7n
VH5eeIeM5R+7Gu4hwKylJ/Ce1QfEf+lc70vsd11C1xuSP6DJujVlU2kC3PYd
SKv3fkAeFPJ/FnsJsK9aUM8PfESxZi2JtvsJ8Lra1xoeiTnUHtBa7SNHgJ0N
0oJC7fMo4bG9wA/s1YE4ZYGf88h806aQK/IEuChxYuLG/k9oJh7qhigQYPYI
f01bzCf0N/vpyHUlAnywnPev9MhnpN3R8SdTlQCpjnmb7ud/QZs4ne13qxGg
89pBIkfPF9RlzPYsC/tVRRXhzfIXdGpU72a+OgE2vSo4/efIV+T/+blkmSYB
9oTZlv+d+oqqdnTrtRDw+9oEU2+uLqC8PRf+aREJ8Pd/HcVJQt9QsjrHo2rs
Se/NLOJa35D/aT3lQhIBmmh5/F32/Ya089p2J1IIUMZV2TrswzckV2M/zAYI
0L6kc3LnpkUk0rFxKwy7NvhkGkF0Ea3Pkdn8dAgwej1IQN9sET092LxofZgA
w4rPlDo3LKJaaH1/CFsx+9u2wr5FVHhyxcn4CAE+DRrPCPm4iGICNF/r6BKg
G++H64u7lpAhquk4cJQAO+bkRdc9l9DwiTLaTwMCZD2WvS+CjYme2x+38D6O
67u68dF7GxM1+n7a9gnby3/pgKIgE9EyDlyfNCTAb2f43vPJMJHtmwKvdmMC
DPib6JJ5jIlMlg7Lkk/g+Hni9TZOMBFkmX3XgM3Fe1REy4qJpPdLWt83IcDe
mFQXQScmmruYdSTZjADJxg+yc0OZaCyM+JfLnABFdwyeTIxiou7k1w+vY4cx
ZwKOxzFReb2QUuBJHG+h5zNiGhNldzbOM7EPPK0x8qYx0a1xqwIPC9xvqRHr
/jlM5LOeJmRnSYCzH8wyfxczkcN29aEx7Os1Em/8y5nopNRQkrkVAfp1beN6
9oCJNPR4WY+ewv3i/Kn3zUMm2n/qwROEHaaV31bymIkE3UwCtU/j8zG/89TR
Vib6LzFpQcGaABuDH0usP2eigs17jtzD3qIpHc7xgomMrzZQRc4QYNBZ1cW5
Xib6tXz8Wwq25WlhWk4/E+V6TB/hOkuACzSO+/IMJtJ/50eLwE5OUjhx6xUT
Mc9sWVzBpuU1VnePMNGR4yr0uXMEuDL+xLX9NRN9bXu2aGuD++915s6oSSZK
1z6jN4Kd+iBdcfcbJqJUf6Mb2xKgSNfH97HTON8yUUsd2DM3m5363zLR7TzB
oyQ7AtT01RlfmGEibaHyO7XYztPFXu9nmWj2lg5Tzp4Anx2RNKt9x0QJHMNH
72Lnbh0vP/OeidTD3LKEzxOgfvGmytfYU7/Wmbext0V0h6t9YKIbXinHtjjg
fuKwN3PGPvhxf3YYtnLxD8NL2GM2j77/wlbqa8iywI4YNtH3ciTAmE/D3jux
5YzfZ3/ATnSJYJbi9Yc6ApfPORFgUs28sQj2VRKPwSvsCQKx2gXvb19dfo6h
MwF2eZYcS8T775PX/PEUO7fejpyI4wsoeGFAcCHAmsjbLS44fkkRu9xqbAvo
/lsE56c7ZfmHjCueT7aiu8qnmMiXK/Z4HvZl/REdQZxfkUjRPMELuB4enaU2
OP8dqw9+3sSO15AICRtjoos+eobsbgSYzsczcxXXC9l7/fqBfbjtggg3ru+F
MRYjT3cCDPfQ0M/C9ec1zcx/h7172rKZ8yUTOYJWI4YHAeaNmkgEdzLR1kaL
uwaeuN+1Yt1DO5ioXunT71ZsS35GmU0bE3GI7yyoukiADSyn2+qb8flYc1xN
9CZAn4xzPN1lTGTpv3Ji8yW8n2nTNw9x/298SbwXgt3Dy2CPKWAis4l6E3cf
Ahz5eGg7ojPRzyaOomN+BPj1WBfjbgwT5ahk/WnBzu87qREfyUTHSpXNNP0J
cLlkztQMn1ca1Xpt72X8nOejY5gvE5EDysxZAgjwe8LFPruzTNQcvedlFPbU
lcdL7RZMpJVGO8YWiOeZueRDVjwfVKpjSFuC8P1EnxMU1MHn7Yvj/m0hBHi8
oOlY6h4m2m4n+p9wGAGyxMum7W1bQokXU/3vYF+QSHHKqFpCnFe5FkXDCfB2
vFzS8+wlxEpbeScRQYAKdp73HYOW0Arj1ct9UQT4xbPlYrbiEpo5mpSvEoPz
HbA44RO/iGwtN4vWYl/ZESn0138RTTiGZKjHEuCw3/FHJnaLaDjcLUErjgAf
8v/9pau2iF40610mJxDgUZWQ3Kixb6hW6a++wS0CJO6VDKrD8/+GgPeSfSYB
Hhqt8vnP9ytS/P6+dRw7ZuLb24XTX9HQyzPJ5lQCzJg/kNRM+Yqkoo+q6tII
8JyZBfcM51f0ZFnM/8AdAkTD8kWeOV/Qz4He3ws5BHjJJiKlr/UzckyQ2wgu
IsANtr3yYGEewX8feNLrCVAgXz1mduU9YsllcTIfIcDAY/3jf2NHkEaA6Q8G
tvgVQvuUzghyNcm5fnIU9ytHkPTgyjB6uaFdaDFGgJ/ifR+vXBhGNHufj1av
8fdEvctVx+OvkMqetxfOvsH5jRhIu7CTgewKn1x0+ojvsytSVgFBL1BKKPff
99hRCaugjNmNnlla33SeI0AD/qxTwL0bybP/rHSZx/Gu6a7cPNeFfrkoLF34
jPNvqXdqTe85SpK543vxGwG+XF01SlF8ih6XBQZc+YXzp8VCjmioRcJmz2y+
YU+qKOwfHa5Bl3/x6rr8JkCOFwl66r+q0UFYtsNqhQAZhib1Yn5VKH9kqlTj
P3zfnf6drZhVgmI2HZn8sU6AfH18e6/XpCPzUzzQj40Ip/2/h641ZIOqNesD
X7CBmpHx7oI8wH23iMeRnQhb2gMdCvXugmdfwWtzDiL0fyh78vK+QqAV6eun
ykmEhOUbAm2d94FYxWghcysR3osnBpcb1YJ5lrtcl3YR8fdqNSmC8AQIg0H+
79hm/QwVocknwCDkn6Q/PxE+dotVPX21BZQt22oFChChjvomudGHCHi/F3EK
FyLC4cnac1eS28DPZ+lPbosSYVnn76PSE+1gP8uzrp1iRHjozY+wS1Id4BTl
x1AaNu8Luw/Crh3gYYP5Z6o4EUbulpHAkx6EFG8XzJckwq2+UjWP/zwDm+Li
LlXvJcLgyApfrR+dQPXZwxC1fUQots/yVbhyF3DcNH+jHpsSuY1TybMLdAQd
zW7aT4QrTnbD9TNdIMad9UWbDBFeyBWyiX3WDXiMQqUZCkRo7T2td+9SD6DE
litZKBKhCdOb4FTQA7w7JrRHsFn5GkpuDfeAARLB9LUSEV5W2jopd6gXpCr+
vjqrTITPqNc2hf/qBbu3+4x8VyfCK099nXac7gOXhXK1PDWI8GlK172/1/pA
v9RL6gfsZJ+H0r6FfSBaXfbsmCYRFjNue3xe6gOL1jPTTw4R4Yuzxuzykf3A
wHE71NLG9XyTJX6isB/c8yTffYB9xWYiebWzH1iH0ZwKCERo024i+IV7ALTf
M/sUSyJCPy8QceTmABCrDDvOQibCq5zKFnUVAyCwsaIsBPtzolPOg94BoPiC
08uLQoS087N8B9gGQeZi2/eTOkR4OuXpzx1gEHgSVNfEdYlwiCFfrlcyCDqP
2NtQsTVMdfb61A0CKeObLbx6RKhWaejv3DoIRu0+h28+SoR3j51zLB0dBDD6
LtvnY/j9SavfClgZ4M7NARdHfSIMq7SmimxjgF+ZfzsnsfP2TxTbCDFA2f0z
8f0GRPjP6lQrVGAA/oGd2+sNcfxW3fq3zBjAe1znkpIREXL2daXZnWGAF7Ne
g8XY7Tt3Df9xYICwny9S6cZEeBwUrFL9GODT7iihcBMilGs/pOuRwgBH9lYH
rWKfOCJ/L4/GADmK0699TYlQhiPtRkEeA+DYs53NiPBH2hRtZyUDtDgvSxme
JEI91w8ed54zwALb5pI+7AAxGbamXgYQKdqlZG5BhEd7byhlMxgg6KMGwdqS
CNmW3io1TzFA8Y2jrZPYC4zw68uzDDCy/9RReysizI2Pdv0xxwBqroHmrqeI
0MiCfciYyQAOHHFjn7FtXu1/XfSTAZKLabZep4lQl+2nR9cqA6Bj998zsTeL
t3fWrDPAt7lm98vWRFhp+U7BZdMQEIvtWVrB1nlX/Hp28xAwlJm8cvUMET5Z
d9ghu2UIlF5Yj4w6S4Sl9Wy8fNuGwOiWbZwc54hQuC35TOOOIcBeKn4rHpuu
YSO7n28IaBgc5N9mQ4R7jzc/tuMfAo6fwJ1k7Kcaf046CQ6BlDhTKX5bIgw9
6KukLjwE2mTPF1OxT3v5JPTvHgKL3T6KonZEeErW8L6m6BAQd4+szcWOyTR7
4SY2BIy5UrWl7Ynw4+KInJv4EAi5X4CKsMPcFLk1JIbA/eN1enLn8fkkFt9/
iT3+uaOnAjsgK0NfTXIIcCQMm6k4EOFku/FeF2xN+Y+jddi0efHQ/9u555fN
IUciLIfnUtSxUz043j/CFmE/XTCA12vjFnIHTkT41dNpkYC9VCaz9BRbpmKo
3g/vR8JI+8pRZzzP1n9rhPx/v18N1rqx/0uXrjLD8VxNPBNp7EKEmeUl9r9x
vGUKHlsGsRsDx+M8cT7Ge0NuWrgS4XmVLe7VOF9bLibuGsOm8sToPMf51OLJ
pp+9gJ/rlhiV4Xw7V1RITmN3bW15ac87BNKMW4oc3IhwIHs36xyuV/tCn8JH
7KtKOxQoW4cAM2m6xs2dCMd/LsW4cA4BSaWlQwvYH+S2W9mzD4FQL169Hx74
fDYbHe3eYIDybXt6Ajz/Pz93zB1aY4CJSlWzP9g30878Dl5hgEOLJ21YvPD5
9n3hGLDEAK63nN5FYw+UpVFUvzJA+sHLbpzeRGjFrXSjFffvsnfG5R2XiJBf
SND69BsGkNpR/CcV20ON29FhnAFMHzRGCPoQYbWp4KjOKwaoWBpLEvclwjMX
W/8L6WaACz4iRQr+RBiuZiH2vZoBTAKkOiuwVRufinaUMYBG6IF5pctEOPuK
79/FQgZgjVOTU7lChJ4CvA7HqQyQnWdYqRGIzwvZVkrhKgNEFZn1N2CHiXS9
bPdnAPfyU0taQURoujmErHGRAbQeOqoSgvG8VfK2KrJhgMH+kAbKVSKsuxSw
1kligMbhiFGEnXdwh5m6Op4PEzErOqF4/ruf1r8qzwAec6mEI9eI8FPc/W15
wgzAtlHWciwc32//iLHkH4NAW2nyuel1IvSW1M/ZXDAIJNRn5waxhdXH1Y9R
BwE7YX7LyWgiHL33UcEtaRAM6f04bnmDCEkjsipGAYPgos3WfutYIjzIekgo
3WAQ3E0kjTok4vPeeCKnt38AcH/JmvNPw/dl0GKTtWQ/EGnJt13ALuQSirjJ
1g/kk4uGndNx/kw3Xc/83AeMtB60W2UQobmt2dMDdX0gKao99xCVCCvOxjwz
1OsDO0Q/n1q7Q4TzgQbcv+1eAn5jra6oAjw/tUQeRwX1AMmqwZKUGjxfYrO+
t5h3AqJM+V3tISKUWPwhtby5GRjYpaTVYv9UmX3E96gJnMoIvKH4ighfHoG3
Dvs0Af/Neu5Sw0R4/8IoZ9/UQ1DxdkqFc5QIfXp+OtQ0NgJx2va2sddEOHIt
weC8dz3YxOU3HTCLn8+RhJo+PgDbofUgE7vaiHsxw/oBEAsE7R7vcP9kfXzQ
3lsFCB+5i+3eE6G4dLfujrpK4Pf0ntexj0Qo//v8SP6NcvAheGRd4DPujx7W
zxzkEtD1RVu0gUmEN2oktYa+54Bbsfylit/x+SgNfOX5OxtY7mNqFGJLeTQK
baxlgRnbEpO0ZSJ812cXJMx9B6wOCkT5/sTzuo42FKiWCWQfLn9SWiVCvgnS
mV8Xb4KE6xWNxf+IsK2iuWdmqx4wk4rTldhEgnluQlbywgpIsMVpMAP7ENNF
NbXRDBX8FvkSzUKCv2IcqL23XNAj93hxp80keKro0S6Fx4Hoq6lrtOQWEkzt
reoBFnHIWEzqJG07CY49WlNOKKWiOdPpzSI7SDBl/vJmN2cairie3ZCF3Vvl
/nVAgo4avgjvzuMlwU0tZ1YO376DJJp3zhTxkaDmHdtfPXY5aMlqs3edIAmu
mO0RL7W5ixLin0pqCpHggXWHjL0P7qJ9LeGMRuzXjC0CC5sKkPW+dY1HwiRI
Gn0p51pQgNqWf661ieB4ZA4X8ry5h1Jvz8X3S5Dgzu1/6lNVi5FiRyHJTBLv
v1zjlkhwMer87fiNga0xtOa50lqM/ti+NRuRIkHp1GCNWqMS5KQ4LjQlTYJv
nx76SThXijRevCj6fIAEGZvmOFjPlaH+9djTnjIkKO6TvEuQVobcVI5xfcN2
71zcEztchnKo7ReZsjief7y6UUbliMP1sfqKPAkuxzFTvqhWoDHWyqdsyiT4
RVCX+GOmEt3Z7PHiGraKYEVfJW8VsmOTYfzGnnWXtJ3VqUJz7HdnPqmQ4C7P
0h0N2VXoN2fGv5dqJOjgOikpYvYACe64RsnQIsGpj22fREyr0cQO4tHth0jQ
ICbEc9yxGuXyrhjHYifxwHKrgGp0gM/XJlibBEODq1WTs6uRloDLVVsiCT7O
8ePcOleNTomeaN4PSPCM1YTpUa8aJCLG/TQX+94rtnXBazVoWqyrW0iHBJN/
HC4sT6pBrhKHx7kgCVp1NTRJlNeggD2aK98Ok6BW7ECe6scaRJRe3nA9QoKO
kxMTUj9q0Ib0A44ZbEnl0JrhTbUoZp+c4JAuCR6NPsKSKFqLMmTENRuPkuCT
SrnXh0xqkbXsBFn5GAlu7lLJMz9bi8TkqHql2B8o5vmqrrWoUH6n5R19/PxH
3t6j12rx3/fs/mHHSTBBt22qtbQWBR1sD1nB9t85LbezrhaRlcOjfAxJsO0O
zVy+pRY9U/kvxdGIBK/fKtrUMFiLhtW/VR87QYLkDo9E1V+16GJv0psX2P/C
Lwle26hFbE6K3CdMSPB+58c7cVvqkEaqp5OFKQly/CuizQjXoZdyW5NHsc8E
Kmcq7alDzk/Lnpwxw+cl5n4GSa4OpTM/C5w3J8HioMWCLO06pBgXf+Q99p3Z
VY1FnTr0TFLukutJElxf9GOw6tehnyZu3RctSPA8m6aav2UdsqqcCwm2IsFr
AR79gRfr0KJeTMk69md7z6VZ3zoUM7V/OPwUCepxTijwBtahxq0uSjGnSfDg
vfB/zRF1yOQe21kua9w/Yr9FtG7UoTliYUwS9qDDmbOB8XVI0OP929QzJFhj
53LCMKUOVbFc5xE8S4Kt2SduTKXXoWN0aQId27r+7mcNWh2aVml3ETuHn7tF
PrHIqkMB3Q6pedjG13ggIbcObT/P0iptQ4ImDY6NH/PrUPFK/tcibIHhew5n
7tUhcBsKy9ni+ZO9dD29qA6NHpjRq8AGr1zsqSV1yBuF+yrbkeBh4gEtx/t1
iOOUZG4ttnGGmeGvsjqU+w31aNqTYEMJ27RZRR3SumG30oTdo+GofqWyDvWL
bewlnyfBN//ikhyr6pBrfY5ZKzZ4SVPY/aAObRhRrh1xwOvb1pykY2e+n7r/
HFstYFn3PfbBq6GjBo4k6Dpx9fAKdief2OaX2AonvG6OYNuVPVY2dSLBkZQ5
9zDs34fP2Qxh13pu2b2M33fr9Z84K2cSFM5dmlLBPuB7p2Ec23IBrRDx/hAn
8d05F/z73RnlvHj/p/Jfb3+LnfQ5hViL41s8FExydCVBVcmROUkcf8yAsNtH
7OVrYctncH4kLjSlu10gQdEXlXnncf4aN04//YrN/ixKRQPn1yRz5Zu3Gwmu
qorPD+P8zylRRZaxjUaz2XVxfQRtR/1X3UnQYqAnKg7Xs+rnlfyrHiRYVtbk
cj4D1ztJoG8DO/8FdzNHKq7vY8sD7BdJsOXt2ebWBFxfi58n47CjbWlfhmJw
fb+khW/1IkFlxeb0hqg6NLb71fhObxIMfrHX5kswjl/ILT8Vu3iu6ZjFFbwe
/98Luy7h+eB7wf2WD97PDpkVfh8S1O45ZR7qivPBdlVA2A/PSye36xQzvD4L
7xsa9sHuWg4dQ5zvjcLC3f4kaH67oJFfD9fvv3510csk+BI2ZVIO4X5alD4p
EYDn59Zi5SRR/P6Fh7vzsGvOszM1+fH7PxvPSgaSoN/2TEYDD37/hwCfPUE4
XxdTlrX/1qJTr3tu7QshwQreiesWU7VopMOvVz4M/76T5R5vWi3a93RLWjm2
19/7PYT4WnQZZZ9VDCdBzsCsdXJ4LeJv7vysFEGCC4r5wUMetciySoRTNQqv
f02kGkI8b2jteodi8HyI29N//kMN2pd5mqcJ+/3xlEX98Rp0OW3hlXYs7jdt
R9ZtL2sQ/y1BJ2IcPj9Urw3Vuhpked0jkpKA49Xml1oMr0GvvPiQ7i0SpL5d
6nbZVYOMtYsnH2MLT6V5UzhqUCcr8T/127jfBQzG/6xWo0dUB419yXg/Mr/b
ZaarUf7T6jK2VBK8rbkWZVpSjbwFTKnPM0jw7F6yyGbNasTdkuijn0OCip0u
/E/CqtBhHva9RhUkGOQXKbeuWYZueV116cM2vpPy7s72MjTV/73EtJIEaVe+
9+6ev4+CUqYVLatIkEf2ruYj6n1ULdikZVtNgs75nbfSVkqRxB5Pw0v1eL2N
s6W7a0vQmibDN+0JCda5qv35K1CEGuxz2iZfkmCHS9fx3x55SPEW3xmrPhKc
V/7asUUkDxU+if3ej61dUCQv8iIXpe/2k27vx/OBROM8KpOL/F4diy4dxPet
TdzOnvfZ6KA+U//KMAne4NOsPm53B5Ue1B3YPoXnVUjnx1m7DJT199Obw1/x
PPn4s044OBb1pFjsbMbWSwiIS5uPQX/2Iz2VBXwefbVOXzkVg6xN0solvuH7
hXlE6LLmDSSYRwleWyTBP4+MkuJXo1AqTOVvWCbBxn5u+Fb2Gkq4TjKS/UOC
9V/Cr/A0uaFHQsVhedhtAcdPBNe4os/lvLWCayTIz2YQZ1DpjAyGPwqzr5Og
bLLCyoGK84hjf/Lc7F8SlBpi6ZK+bY6iOj9EZrGQ4Sbz998KBQ1BCNetpu1c
ZKi4Xz8wK80XhGlM8iZjNz71UZGK8AOR9rLuO7nJ0MfQxEXa0x/ENbTv5t9K
hqEr2V4F5Csg02ElZPc2Moy+OCBb0hcE6prPU/btJEMbG9R7uTQcNH6ozCjC
/pEvrEgDEeDRjrVvB/jI0KhCdAupNAK0u2Tkyu0iwxQ/Yop5cCQY3Nnz76AA
GV4V2NjWx3cdLLirtxN2k+HR2CaPU3tjADM9QuQxtnBVMpdmVAz40drnRxYh
w2YeaX77mRjwR8Btr44oGYrbKrJS78QCrvbsaD1xMuS+y3r2Lkc8OCDCoW+6
hwyHrg02B7UkAvue8V5nOTIcXnHaE2qZDJLa94W8wdYwH7mTHpAMHj3ykT0l
T4YHskbWnWjJgL+c84a+Ahke3GMgKTuZDHoStYG8El7/g7W9oW0K0DhBq15S
IcPN+QZjIpapwPHoBzs3VRw/s122wTcV3KaobJvFftA084vzdir4otTtPqRG
hvwDvSVvulNB3vZV6QYNMlRiffZVh5AGuAdPZ4Rok6H6zLl/W7elA+3ue7o/
sH3SZM6aH0gHLm1L3z0JZKiiV95xUicdtFXHmtgSyTC/Le9Cgk86uJLycAsk
kyEX793LjIF0MHNSKIQdkmHOhX1V7yIzwHYjJ9kw7AOf4nXXMzMASffB6G/s
iYXHIcPlGSBTXV/902EyPF5k6P90OAMY8Qcu9OiSIfNJwPbUvZmgcWTULlmf
DCc/yq6qNmSCJmd2tV0GZFg7FjPV0JUJmn+os2di68n1/7f0OhM82ZlSnnWc
DDf4WWti/2aC9hNGq8VGZDirYD9geJgKnk0F98oZk6EV0U07xpwKnnuW5lZg
y/xRDAt2oILuePajtSfIcM/DId+4CCroe96a0mJKhk66S40nHlNBv+WiMzQj
Q4E1zY4TL6hg8L2Ydgf2twZusy1jVDDEEjLdbU6Gzrb6LSXfqWCcoqEwbEGG
ayle9+7tpYGJl44bpyzJsCs82veKMg1MnkthvMaWbl9zYiXRwHTwYuBbKzIs
8PoZa2JOAx8aSp99OY378Zp3fEMIDczpjVG9rMkwVenTIddoGph/xe7JxFaJ
Tq96dZMGvnx33Pn7DBn+Mfbu/JhHAwsRKR+CzpJhukXyYEIpDXzb0fZwDVtI
rv/yt2oaYCqJ27HYkOFWjxjbhTYaWH5ipBqNPe3+izu+mwZ+GIWwbbElQy8H
930fBmjgt/tYGY8dGc6cP+41+oYG1otSVoTO435Cx/lrftPAhkZbzx1s9jvw
7bF1GvjXsZgj7kCGoHX7o2wWOmB9Z6S315EMS7eL+MZvpQM23xChYmz9PqNG
KV46YN90/4usExnybFDeBPHTAacER8pBZzL8OW1ccFGMDrgrNZxrsCP32t3n
lKKDrWSnQxouZPiPdbez61464OlN4X6IXd21whFzgA62n217Q3Alw47Hlzsv
yNHBjs+L1U+wHeS4x7Yq0gFvkHi0zgUy7D2r5uV3kA74thifbseWv3OhJUuF
DnZlhsgfdSPDJtV967FqdACWSyxasbu7fleIadCBh8lIKMGdDPdXLwaEatJB
RhlrcR12+4/n0SVadNDGoTKg5EGG1CwtltxDdPDV0Xa1BDu5+o/geW06EGxN
2CPtScb3w0vmN+zDok2G2di/j7o06xPo4GLgR3/Bi2SoOx6e5YVNfcWXk4yd
tTby1B67XRl2cnuR4femPaclsBcTvZaisQm7xWPu4/V2f7oj/A/bd39UMAu2
nl734WBvMrwxx21zAO/HJ/+Xxw/say6+1sJ4v1nr0ulel8gQll+ij+H4Oq3N
Wuaxe9pajzur08H3+mtzDj54njwQTUeqdCC2s3zHFPb2cMq9OWU6MPAa1z7l
S4Y1hLd3p5TowP8Fu+Mg9q/5R4/yFeggd796oqEfno+pCcLquB49kefrn2Hr
6XLOpeF6SREfczT7k2HF+K+Qp7i+RpmflNUvk+GtgdfUW+J0ELAscKYSe3zJ
YkBehA76ynzK714hw5jBZW0GHx2scuQOiwbg+VKQ2Da5nQ72OfX+zcB2bS/Y
1shNByGiB8wSAvH7tmncm8D9WBRoEcwWRIbehtKH9/+lgcFXEQVh2C2rAaZw
lQZkkiZ/+gWTYfhLktunbzQwvJ5MP3eVDL8aJWmxj+H+tkbtI9g827awjQ/S
gHzD16+moWTIGttEDe2hgUivY0DvGhmSX5Q8IbXQwMHptXeK4WS4M4r3fmY+
DZwhyvGUYA+x3bFcp9FAdOYpzT0ReP7EyYtppuD5YFITKxCJ75t6gzKpSBqI
a3VV3IgiQ5acIe8PdjTwLp9xZSAG368JH9Z0+WjgueNPgn4s7ockWLWXkwZK
9wltIOxCse29E3+pwLvUJqYqjgwv7tv6ceATFaw9mM+8mUCG2Xc/s0w8oQL+
1r8PjW6R4UithEiKLRWsREiFdmBHHNpj8ceMCiaO6ELSbby+aU8IRY8K8jvj
uuWTyXDwmvihk/JUoNS/6zVXKhleoe/rbf6ZCY69kfvTlYH7RTU7qzAqE8jl
GSOdTPz+oozcVv9MwONwKeohtnO9B/9D50ww9KGeu4SK5//7+v9IxzKB/YKO
aAydDA2sDvAVbMkEQWtWZL0cPD9mnRpYozPA/d1RYW2FZBh3NzRb2TkdnPeL
vXCkiAwlZjbNxpmmA+HeJLNn2I1XjQ4jYjqICaVKdxeT4VxZizTiTQeObys6
B0rJkI97covw4zQgVjS2/W0FGdpNSJs7cKWBZBWlvL/1OH8U5ZSamykgQH+8
lfgcf580/S3giUwCp72mNuqwk466uDYYJwHttBmKUifev/2fv5rCSeDP9KfH
kl34Ps2aXmmtSgRhAf89ZHuBv4+efyJsmkgAMUUi1f0vyXBf7uDOq3LxIHOz
bb7jMBnyGlrOF1TdAA2tsxEJ78nQbV9D0+buUPBnITnEiY0C80/2DliumiPt
OLrqvX0UyNN2cqrOPgoNBF6OEd1PgT6VF7eH0KOQ6wXTyTTs82YbvDKvolDa
MfYb0QcosILrNdQ4dh0tsvmOu8ji36fm2vApRKPCSINwWUUK/KSwvi1z6Qbi
vbryslKdAru50grDHeJRicfQngMaFMi/nFgaSY1H4GxlQC62gVy4/vm+eORJ
cJK6rUmBUmOFO2q1E1DnSr+/zyEKZAZJTuRuS0Shl4tF1EkU2MTmPGtVnYQ+
eVm5NR2hQNT1mH1j9Day+Mn3jqhLgW1Zbz9xcSQjFDJ4rgX74a6va8FSySg9
1si0XQ+vf+39OKdVMtK5e1jr5TEKjH3+8Mnkk2SUOazENmNIgY8qJ3JlY1OQ
Lokjf4sFBUZMeDkvs6WhqqcduxOwT+rWbUeiaUjYIDKNx5ICiZr7nN3U0tCi
5XrMTisKJC8aQ2v7NHTHe9lL9DTej64QT97DNMS8O01SPkeB9utXnbMc0lEu
58OxU04UGFr0+cE7egZSs/EvGcT+K9qw50tZBup6oBxo6EyB8r9N3/Q/zkDM
U6WCwIUCEzZHxSm/yUC6RXSr/RdwfN2PeI5LZKJPh0Nf/fCgwGo5+uOH9EwU
mqF9z8uTAiuN2ZbCSzPRzs8//eax/W8Gdko/zETEZC++yYt4P5lsTSuvMtHN
aTvzdm+c763Zmye2UpHa1cMDyX4UuKNuQuHcZSrq7P+by+1Pgdb7fJ81R1DR
OelH3tHYoV4G55hJVBT9Qm170GUKjGzQn/hQSEVjQvtO2AdQYKbjxatzQ1R0
0XNG7DX2s7EFp03TVLSpNXvhZCAFVkX2rDA/UZG8q0DSsSAKLCtQCLLaoKLQ
eo5epRAKFLFzI8jI0BAvZ8edEmzf1oaJ7yo0VHQu3GPPVQpsqQ0dTiHSUD/r
KpdAKAV6XGOXNT9BQ3vMPxusX6PAA58/VnT70FBjYZFwQBgF6kq+v0QIpiHD
VYdPS9gkvQDtsEgaupw3Efs+nALvxS+oXE+hoc5vvZ09kRRoqL8uFvCAhvhK
rqkeiaLAmaYCB/tGGrI/r5zdjH2NbiAu3kJDq0OpvqXXKfC1/LczAj00pJek
NyUZTYFQfHei6SANpRz9fYyKvcqSl2Y7SkPyTWfEYm5QoPv+XYk/Z2kowHdr
7F/s7qKD8tfmaahDvuX75RgKbM/a2PR6gYZscqS6nGIpMM1TsJFrhYZuRc37
Ho6nQBa1vBlDLjqaINGnmrD7fo29ddtGRzK/DPVVEiiwUzNkzHonHbVdqBKT
TMT9W2nFWyVMRzx7zsdmYqceeMKyS4yOzkzsXN6WRIF6eXNGxyXpaNn4Stc6
tgLfO0O5/XQEOGTULt+kQDaTmQdDMnSU2Dqe/RU7i+dvn7E8HY0HJWxxuoXP
56LJNaoiHe1TI/tNYMtmLGTUHqQjn6/fpsxv4/jyF5ZyVOiopTBP/wW2W62L
0xk1OuK2M6+FyRQ45eHd/UGdjk4JbRZvwv7uIb6io0lHBYP1scopFBhmEd/l
oUVHS/Guy8XYJ59373Q5REdkXWFbiVQKPOawXHlQm47i1l90ZWDv7xa73IU9
3HBVbVsaBXbcsSMrE+hozyWlnGjs1eD+aRdsb9m3W9axUzmuq3tiP5pN9vNP
p0Dn2VQ+HWyOrCNvvmAfKee3nMXrWVj+1HfMoMB1NslBc+z8bcW1r7Fdb3fb
JeP9LHSeFjfPxPv7KjOejferHcEV141NbbbgD8Tx3CA8XtahUuDGHcevEhp0
NLR80fYhtoOKp2Y6zodEhUT3QRoFpotE94zifHm4DKoVY7v86Yiaw/l8KBGV
I06nwGKfw1odON9s4+qcGdiyErtaLuJ6mKV89OO5g+t/z3TpHa5XtiH1zXVs
s4JtRftxPT9vPm6whp30yKlRQ5qOogIqxL9kUeCtx2rGD0XpqF/ZLs4hmwJ/
fxyPkMf9Ivp5x49xbJtKX193fjqqP+ff3ZWD/3/myNxxHjpiEdivrpNLgT//
6xP9uoWOTPpHcxqxS6/t8jq9mY7mIdG/KA/PD/eZZ8n/0RBnSj+rTD4FCs8r
LH7+QUOys46ppdjjA2MCbIs05BGZWFN+lwI5XL3TQ/D5SGBIHlYqoMAbIxdu
jE7QUPme+sEq7FH1t6XLr2ho4enUUs09CuQ+7PLY4zkN8fD5hqsXUuC7mii9
Tnw+lRzZdzRg+2eQNGYbaMib9eDBpiL8XDvnqmURDTGPhF9EJbhfkhYFFfA8
4E3bta5Tivv7YOPh0EAaUn1fkvgUm25kSUr0oiG/64Nlz+5ToF2w6sCsNQ39
6tjzuaccn0cdMOepSEOC/I1BxhUUeNs87meRFA1pORty9mPnzL0nZPPTUBCb
vwyjEs9v0W85T9ao6I/eM5exBxS410RQu6uTikQyrH9ZV+N4dzz2fNNERaSP
C9ET2BznKkBVGZ6PNwQK39RQ4FP+1N9hN6no33PXd+/rKJC1Slt0zJSKpATX
fF3qcX1seBuf6FARbkyWeexjOZeszylTURRHk9SXBgpMtH43376Nitj0ueyZ
DymQ1+JCrmZXJtpHzVn0bcL9p2T47k19Jjo6rxr2A3vk7lIGpSATxcSezfnd
jOfBVF6EdGgm4uoun1x/TIEvVJ0HQxUz0fbjJtZcbThe8L31WHgGsnadpURh
s7Nvbn7tnoHuXb+8dw17IkGsTd4yA2mjO4sLT/H6M+gkh2wGclCfjx7soMA8
NjnWvJfpqF48oobaRYF37o0Yq3Glow3iLipvNwW+aax/krqUho5bF4fGY7c0
rt2rGklD06kv9a++oMDLcbvVhe+moS2cu6ftevF5bF/vrdRIQ2eXa7gPDOD7
aUthOTJJRYU7jjJzsUVJFrIdKqloSXF8RGgQz6e4nhsRfKko+sJGPhcD93Oo
O2X/SAqqnDI89G0I388iDCG+0yloU9d7p/pR3I/58WSrE8moJEug5cg0Pu+G
F1oRWxJK3ra79gV2f/IFRe3KRBQSLlZi9pYCgVyayw/LRGTstDfFbgavL3bz
klJBAmLKq7qEvMP3a/R3/Xvq8Uj7kfG22jkKrNEuJaiqxaCe8eu2e5YoUMbL
WsNeMxzVGcaeLMV2Z2Xmc1iFoewnCfrKTAp80vlljN//GvLOT1GlfMf3g5fR
Vseyq4jPLY/9zA/8vaAUbVHMHoTOrTyqTF6hwGl1hW4ebx+k544KhFYpMDfk
eKX7vDc6OPmUmotN8t2R4rF0Ed/f3ZEV/1FgEaAGB/5yQ4Uxo1bda3jeKCq6
Jr4+j26uvjY0XadAvzFagV26LQrweKMzip1Vmaj91fsMMjD5IPfhL/7+KLlF
frbDHKm2zUt4buD3Tegu8lUcRyJqX3ctY5/Kn+TnVjiMNhcucgb/w/d79IBf
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$15962#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15962#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 50->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, 4.3286815284141655`*^-11}, {
                    24.00184030752336, 6.484933276927353*^-7}, {
                    24.003680492597738`, 1.2928062501031933`*^-6}, {
                    24.007360862746495`, 2.569059441540792*^-6}, {
                    24.014721603044006`, 5.072346125006433*^-6}, {
                    24.02944308363903, 9.884208007305735*^-6}, {
                    24.03128326871341, 0.000010467625213245955`}, {
                    24.033123453787788`, 0.000011047060108790505`}, {
                    24.036803823936545`, 0.000012194021670710567`}, {
                    24.044164564234055`, 0.000014440582791998234`}, {
                    24.05888604482908, 0.00001874642433736906}, {
                    24.06072622990346, 0.000019267285637514547`}, {
                    24.062566414977837`, 0.00001978431943533576}, {
                    24.066246785126594`, 0.000020806943226023393`}, {
                    24.073607525424105`, 0.000022806686501703223`}, {
                    24.085190809808704`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
n7YqWhBY/vsPW2rEsEZz2Kzlfzba6VU=
                    "]]}, Annotation[#, "Charting`Private`Tag$16126#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    LineBox[{{24.00000012244898, -1.6154859387203108`*^-10}, {
                    24.00184030752336, -2.4202100473186714`*^-6}, {
                    24.003680492597738`, -4.824818609727691*^-6}, {
                    24.007360862746495`, -9.587860363494673*^-6}, {
                    24.014721603044006`, -0.000018930253452098972`}, {
                    24.025130002401628`, -0.00003162702065930905}}], 
                    
                    LineBox[{{24.920181872877883`, -0.00003162702065930905}, {
                    24.921764905805862`, -0.00003094260950799117}, {
                    24.925699020454857`, -0.000029250723852057147`}, {
                    24.933567249752848`, -0.000025904172158029458`}, {
                    24.94930370834883, -0.0000193698267585249}, {
                    24.98077662554079, -7.015204051236197*^-6}, {
                    24.98261147948411, -6.327202266665365*^-6}, {
                    24.984446333427428`, -5.6429839465088474`*^-6}, {
                    24.98811604131407, -4.286040885631107*^-6}, {
                    24.995455457087346`, -1.6191313849770548`*^-6}, {
                    25.010134288633903`, 3.520037260196977*^-6}, {
                    25.039491951727015`, 0.000013022126963956499`}, {
                    25.041326805670334`, 0.000013582311612885121`}, {
                    25.043161659613652`, 0.000014138589576153058`}, {
                    25.046831367500292`, 0.000015239463808801301`}, {
                    25.05417078327357, 0.000017394754040195}, {
                    25.068849614820124`, 0.000021521649900602582`}, {
                    25.085563147299432`, 0.00002581208648030628}}], 
                    LineBox[CompressedData["
1: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
9A==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$16126#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{27, -1.5881867761018131`*^-22}, {
                    27, 8.470329472543003*^-22}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{27, 3.441071348220595*^-22}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{27, 3.441071348220595*^-22}, {
                    27, 3.441071348220595*^-22}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {24., 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {24., 0}, DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{24, 30}, {-0.00003162702065930905, 
                    0.00002581208648030628}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"-6.84\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                    False], -6.8358106086438215`*^-6, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0000255\"", ShowStringCharacters -> False], 
                    0.000025511592502376935`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -10.17}, {Center, Center}, {
                    195., 18.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {102.375, -29.009999999999998`}, {
                    Center, Center}, {195., 15.999999999999996`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {
                    102.375, -46.349999999999994`}, {Center, Center}, {195., 
                    15.999999999999993`}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {102.375, -63.69}, {Center, Center}, {
                    195., 16.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 204.75}, {-72.36, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )]}, 
               Dynamic[$CellContext`i177$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Fit,
          StripOnInput->False], 
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i177$$], {1, 50, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->35.79418897628784,
                 AnimationTimeIndex->0.7941889762878418,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Right}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8427032695580053`*^9, 3.8427032812467566`*^9}, {
   3.8427034079973936`*^9, 3.8427034186861305`*^9}, {3.842703455114608*^9, 
   3.8427034701921988`*^9}, {3.8427035456709757`*^9, 3.842703557139931*^9}, 
   3.8427036268535895`*^9, {3.8427044884007764`*^9, 3.842704506662321*^9}, 
   3.842705351744958*^9, 3.8427054276857986`*^9, {3.8427054901015873`*^9, 
   3.8427055321394477`*^9}, 3.8430506590994368`*^9, 3.8430508295265646`*^9, 
   3.8430509205119824`*^9, 3.8430598697940083`*^9, 3.8430718083616896`*^9, 
   3.843142388531322*^9, 3.8431517606923847`*^9, 3.8431565306168804`*^9, 
   3.843237162222845*^9, 3.84323808104327*^9, 3.843238183949645*^9, 
   3.8432382236882243`*^9, 3.8432383013425493`*^9, 3.843238409877306*^9, 
   3.8433182134073496`*^9, 3.8433218381185837`*^9, 3.8433229187523794`*^9, 
   3.843325499371068*^9, 3.84332704774093*^9, 3.8433280077560563`*^9, 
   3.8435850789086647`*^9, 3.8435851742352934`*^9, 3.843585240700673*^9, 
   3.8435852961364346`*^9, 3.843585355139367*^9, 3.8435854215136943`*^9, 
   3.8435856172847557`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"48254b99-9ba8-4f44-9152-6e460e2226db"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics for All pixels", "Section",
 CellChangeTimes->{{3.8321935354974017`*^9, 3.8321935380848103`*^9}, {
  3.8363952278003016`*^9, 3.8363952460112877`*^9}, {3.8431519453413677`*^9, 
  3.8431519506391954`*^9}},ExpressionUUID->"b6f02be6-e33f-439a-9850-\
f2b2fc065ecc"],

Cell[CellGroupData[{

Cell["Flow All Pixel in line ", "Subsection",
 CellChangeTimes->{{3.836395934506852*^9, 3.8363959796401834`*^9}, 
   3.836396084971814*^9, {3.842703573534071*^9, 3.8427035807603846`*^9}, {
   3.843053597749626*^9, 3.84305360317021*^9}, {3.8431520401058893`*^9, 
   3.8431520532253513`*^9}},ExpressionUUID->"86058ab4-4029-4a68-aff4-\
593edcd6d38c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineTest", "[", 
   RowBox[{"rangex_", ",", "pyrab_", ",", "threshold_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"v1", ",", "v2", ",", "status", ",", "e"}], "}"}], "=", 
        RowBox[{"PyrFlow1D", "[", 
         RowBox[{"10", ",", "x", ",", "pyrab", ",", "threshold"}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "rangex"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
     ")"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pixelIterGraphics", "::", "usage"}], "=", 
   "\"\<\nInput\[Rule] [rangex, pyrab, threshold]\nOutput-> {rangex, \
{v1,v2,status,e}}\n\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8430536232334023`*^9, {3.843053877375848*^9, 3.8430539486245584`*^9}, {
   3.8430540149210873`*^9, 3.8430541575389752`*^9}, {3.8430548675404863`*^9, 
   3.843054872742379*^9}, {3.8430599342162204`*^9, 3.8430599371532817`*^9}, {
   3.8431564790483475`*^9, 3.843156482344513*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4a0b73fd-9080-402d-9136-478cbd6cfd4d"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"937129c5-48fa-4076-843d-\
656cc2170477"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tes1", "=", 
  RowBox[{"lineTest", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "line1", "]"}]}], "]"}], ",", 
    RowBox[{"pyrf12", "[", 
     RowBox[{"[", 
      RowBox[{"5", ";;", "5"}], "]"}], "]"}], ",", "0.001"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8430541726603727`*^9, 3.8430542426021805`*^9}, {
  3.8430542768852186`*^9, 3.843054302157134*^9}, {3.843054883911598*^9, 
  3.843054892362711*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"0980883b-18fd-4a73-bc1d-3be25bf822df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.34721336640801126`", ",", "0.6527465867623057`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3810283386005006`", ",", "0.618975694336412`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4095401765934233`", ",", "0.5904593162911209`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4346356753740025`", ",", "0.5653644021192845`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4575152736572853`", ",", "0.5424847121988334`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.47909188255546425`", ",", "0.5209081204951755`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5003049452657505`", ",", "0.4996950539603035`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.522871898225262`", ",", "0.47712810200663613`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5522069492234942`", ",", "0.4477930506923042`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6146809929593956`", ",", "0.3853190070811511`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4677650399038748`", ",", "0.5322349704848118`", ",", "\<\"flip\"\>", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.385319007077778`", ",", "0.6146809929188513`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.44779305069507347`", ",", "0.5522069493076975`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.477128101999988`", ",", "0.5228718979933629`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4996950539822401`", ",", "0.500304946039697`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5209081204087844`", ",", "0.4790918795048241`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.542484712599347`", ",", "0.45751528780116707`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5653643999249086`", ",", "0.4346355978807156`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5904593306511122`", ",", "0.4095406837088787`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6189755801371138`", ",", "0.38102430566358836`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6527477209168352`", ",", "0.3472534132376951`", 
     ",", "\<\"converged\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"mag\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "\<\"sign\"\>", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.843054892690528*^9, 3.843057248151964*^9, 
  3.8430576259209175`*^9, 3.8430593423263717`*^9, 3.843059870684422*^9, 
  3.8430599915987015`*^9, 3.843071809095892*^9, 3.843142388638956*^9, 
  3.8431517608133583`*^9, 3.8431565307125*^9, 3.843237163114375*^9, 
  3.843238081808962*^9, 3.84331821457314*^9, 3.843321838884*^9, 
  3.8433229195178313`*^9, 3.843325500152131*^9, 3.843327048646964*^9, 
  3.8433280085530243`*^9, 3.843585079468707*^9, 3.843585174793838*^9, 
  3.843585618203763*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"66581e36-f021-45c0-bc57-9a6d4b51af0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See All pixels in line", "Subsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9, {3.8431519883936224`*^9, 
   3.843151993701187*^9}},ExpressionUUID->"024a8dc4-7550-4e7d-a828-\
34c30ab55326"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"seeAllLine", "[", 
    RowBox[{"rangex_", ",", "pyrab_", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tRun", ",", "lineia", ",", "dlineia", ",", "lineib", ",", "dlineib", 
       ",", "cTable", ",", "c", ",", "g0", ",", "i"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tRun", "=", 
        RowBox[{"lineTest", "[", 
         RowBox[{"rangex", ",", "pyrab", ",", "threshold"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lineia", ",", "dlineia"}], "}"}], "=", 
        RowBox[{"pyrab", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lineib", ",", "dlineib"}], "}"}], "=", 
        RowBox[{"pyrab", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"cTable", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"lineia", "[", "p", "]"}], "+", 
               RowBox[{"lineib", "[", "p", "]"}]}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"g0", "=", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"p", ",", 
                    RowBox[{"lineia", "[", "p", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"p", ",", 
                    RowBox[{"lineib", "[", "p", "]"}]}], "}"}]}], "}"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", "2"}], 
                  ",", "Blue", ","}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tRun", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                  "\"\<sign\>\""}], ",", "Red", ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<mag\>\""}], ",", "Purple", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                    "\"\<flip\>\""}], ",", "Orange", ",", "Black"}], "]"}]}], 
                  "]"}]}], 
                RowBox[{"(*", "]", "*)"}], "\[IndentingNewLine]", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "c"}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Arrowheads", "\[Rule]", "Small"}], ",", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "-", 
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "+", 
                    RowBox[{"tRun", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "c"}], 
                    "}"}]}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
              "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", "g0"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "rangex"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lineia", "[", "x", "]"}], ",", 
             RowBox[{"lineib", "[", "x", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"rangex", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"rangex", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<ia\>\"", ",", "\"\<ib\>\""}], "}"}]}]}], "]"}], ",",
          "\[IndentingNewLine]", "cTable", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "\[Rule]", "info"}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", "0.5", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"seeAllLine", "::", "usage"}], "=", 
   "\"\<\nInput\[Rule] [rangex, {lvlmin,lvlmax}, pyrab, threshold]\nOutput-> \
Plot with solutions in rangex\n\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8430543162163053`*^9, 3.843054461770115*^9}, {
   3.8430545103367205`*^9, 3.8430545180946484`*^9}, {3.8430545856981444`*^9, 
   3.843054620001899*^9}, {3.8430547419761086`*^9, 3.843054793230691*^9}, 
   3.8430548770538483`*^9, {3.843056440206515*^9, 3.8430564480113688`*^9}, {
   3.8430567126501675`*^9, 3.8430567128688717`*^9}, {3.8430576471815214`*^9, 
   3.8430577230075235`*^9}, {3.843057842605462*^9, 3.843057847949701*^9}, {
   3.8430580550243073`*^9, 3.8430580926604977`*^9}, {3.8430581371989174`*^9, 
   3.8430581643350253`*^9}, {3.8430583893574653`*^9, 
   3.8430583945481615`*^9}, {3.8430585787240405`*^9, 
   3.8430586202011037`*^9}, {3.8430587026734514`*^9, 3.8430587286705*^9}, {
   3.843058781109539*^9, 3.8430587883736644`*^9}, {3.843058953165311*^9, 
   3.843058991317131*^9}, {3.843059021912061*^9, 3.843059104439335*^9}, {
   3.843059207373085*^9, 3.8430592387718935`*^9}, 3.8430596105299654`*^9, {
   3.843059709620127*^9, 3.843059710401457*^9}, {3.8430599544770384`*^9, 
   3.8430599775139775`*^9}, {3.843156501158812*^9, 3.8431565016598654`*^9}, {
   3.843237107128191*^9, 3.843237131882959*^9}, {3.843322882236026*^9, 
   3.843322892759296*^9}, {3.843327877787885*^9, 3.843327913455238*^9}, 
   3.8433279798673973`*^9, {3.843328089669784*^9, 3.8433281062700334`*^9}, {
   3.8435849700611134`*^9, 3.8435849848892655`*^9}, 3.843585049268121*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"423fc544-76d1-481c-bd89-c81e64a8d97c"],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.8322692006903553`*^9, 3.832269218824854*^9}, 
   3.8380824185442553`*^9},ExpressionUUID->"d227b672-9254-46f6-bbe8-\
e3456c25bc8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "15"}], "]"}], ",", "pyrf12", ",", "0.001"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8430546307493587`*^9, 3.843054688785618*^9}, {
   3.8430548021191974`*^9, 3.843054840458894*^9}, {3.8430572309687786`*^9, 
   3.8430572639138165`*^9}, {3.843057637652525*^9, 3.8430576404489775`*^9}, {
   3.8430577064955626`*^9, 3.8430577087296467`*^9}, {3.843059112390246*^9, 
   3.843059117654656*^9}, 3.8432371707601557`*^9, {3.843321808844994*^9, 
   3.84332181132878*^9}, {3.8433218484289045`*^9, 3.843321853035637*^9}, {
   3.8433279903197465`*^9, 3.843328016052522*^9}, {3.843328109821206*^9, 
   3.843328110713314*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"8b8c3b2f-53fc-4645-9556-7cd546d06378"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
tlNdVAawOBsborHLXDx3OcozwG9nwFEX7DzzkxmTCgy4f/KLwXbsK7qRM6cY
DHBzNrdbjR3FvqK/SpEBU69ia/txPE+RC7JSWAyoLvDzuIbtzX+XK8dmgErW
SPARbKf5/wzvKjPg6ZX6OXlsy8/Pc7Q3MWDUvm/6A86nUc+b762bGbDYtt4n
HVu7adTokBoD/MtNwoywqTnL5vy2MkBbQSk9H9cHKW6dyV8NBrjbxVX+v34E
Tklfi9/GgJL9tumjuL64Ftv3lWgzQKSV+ELGblztXzy4kwEpw88kDuJ6rfx1
7renHgP0JHvfvsX1XfwlYf+8PgN8bmq22mInPC79I2zEgA8Cp1z34/1gd2b4
oKEpAyQ/8C5tOIb7ldfMrVdmDDhZ/z09BO+vXVZLy5z3M6AiRObZe7z/WFvE
756xZIDv70JyricXLUyYrbpny4A/v6Lnv+P9PdXvYK9rzwDmuvjrgP3h6bHK
dgdcL3lVe+PduOhpYYzjmBOOb9DoUzFXvP9tiRpJDwY4Cc42CzlxkWqbikf0
CQZ4f50mh9ng/NhEJW4NYoCm/fvKZNyPfowPVn0+yYD3PzLu5VnhfPPF8uiF
MOB2D1OhCvcvLYNPmf/CGPB6qL+C2I/3c9PVF6cuMaBh3Y3/gnB/tK7hUTt2
kwHDG1xLW3E/rjewsibfYgBvRwu3WAPXb9+dc89vM+B8ZM+diK1c9G7Wtp1R
gfNBv/tMawsXuajed/tcg+u3J97whgquh9teVx1a8Poq1vacx/0+rLBnyewD
A7JKrigW4vOi+d3LnR+HcfwoGZYFG7iIV6IjOvAjA5RGmS/z13NRTNIz4cxR
BgzsNh8vXIf7dWiD/MdJPL/EALn/VnNR7qGSvYELDKgsGz2IePH5cPn65VWL
DIAFq/+sV3CRXEfB64zfDLDNGDUIXM5FRXrZTg//4vX21Py7x8NFtzcnB65a
yYTdBb/3XlnE569gSE7GeibsP0MfaZ/moCWD4BHWRia0SvT57Z7iIN3wQPpD
ESaw3p0NfjbBQc0/fStGxJjgsYv2pvcLBz3/7NrCkmHCfOoFB/mPHNTfuG+q
gcWEp+1tgVfw+UteNFY1YzNhRfdfA4vXHGS/1ejkiDITJB8064n3cdCHW7t4
Vqky4caNw5V3e/D5nqEpYqbJhH1/q96u6eSguQCKzogeE8RX/9SNe8JBRWYe
+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
1+3+ro/es+Ae373D/8/HpQjrHdkjLGAGqd62xf6VH799zycWrNfPOnAQ2+1h
49afn1nQSP+vyAxbe0FexWIc509tyVQPu0TUmrVsAtfXcEypzv/zvyWeXj6J
+8Wdwoqt2OM+32RWc1hw6679y//Xn0W8vGQ9lwVynh5fZLAbS63EPL6zYJNJ
fwUJO+3Tw3WP51iwNvOx7UrsXTZxPGeWWKBecE3mA673OycfLjH/smDhe2Nf
L7Z4Knfh9T8WbI7i6rVhczoPfVNboQRjAR5G1dg5+rSPEwJKMEpErYzC5nM5
9D5jtRI02NJjT2EHnI8dMFyrBMPGsc+PYe95wOkpFFaC+a0+F/Zjz29qeGwr
pgTvLlziSGCbSR4sbpNXAh2XnUb5uF9kfVZpsqPj3+/T4E/GHrvDPzjFUII4
FHY1DPscPgnWKSmB3GFnujP23SO0UAtVJXhbc0ZUDntNxbcDQzuU4CAv60Ea
7mfP9S/xzBxSAjSvQXfD/VJEyFPyvLUS1IjcnDHDdnqzU0PYVgk+x41kaGMv
eM0dU3NQgozS2dQN2Mwk+zcnXZXgfRehTeD+HP2WdfffcSX4T3j9k43Yer7P
7NbHKkEs2/nlHXweLPV/NWyJU4KNJzbzpGHX6K1RC05QAsUV6rRQbKbEfv53
SUqwaNu6yxhbqGWgujRdCVzc65ZG8fkzIDGzFoqU4G7fHh4p7IAnIk2+BF6/
c/fRGHx+sTdr3qI8UoJIbpqpL/Zolk16b7MS6F5br3MQ29ovz1vrqRLMNsto
0rB1JZkSqzqUICGS2kzg72tBf+2A3AElGP/q2vUbn5/XpFzkX8wpQdZFn++R
+HzV2aKk4vJTCYQnwuaPY7/e80NzYUEJkrXPi9lhCwZHm8gvKYHT54JKVeyA
7rKA0OVsGBa+8V/TPw7aFT3bxF7HBt0z2QExf/H3Vk5DW7MwG2KLfx51xj5Z
FdVrvYENLrml17Wxy4bFxiNF2fBojv819w8HbdTWWfdOkg0Kex7rOmJ/5kQ6
JDLZkBkiI2eA7w/nVpl60FhseH72mTQNW1xazL9eiQ1Rpk/slmHvNb4ZOarC
hlJrIqPxN/5eKOq4tWMrGzLW3SHpYEfZkBand7JBjv84VQ/fT+iPb6Sb2rGh
h5Z4OhzfX7rYC0VD9mz4aTCywhM7JN2o6qgjGxrWCrwwxe7w+voy2pkNSpde
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
yHKRWEzhxoCjWIz+H/xyw0c=
           "]]}, Annotation[#, "Charting`Private`Tag$17827#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
J+oJJg25VQlD7pJHsC1ssrS1F9Lw/Y098X3ZEWzz9dcR4b3SUGj/jXXnEy9s
3EtalqMP10vlks+zYS/smUZoV2a/NBx6nSv8748XFjNEotYOSMN+lx0nzu3x
xv6Rg97+GJGGVb2g0lO13tifSlHpoDlpMBr9JiiZ64MZUWtzKN+k4ej2q6Bb
74NlZlkJ9y9IwwtpA4GZPh9MNSqFS2tJGs5T5t26eHwxH1O2n39XpUGoiftZ
c5gv9rDp1omKNWkomty9889VX4xFDX11X5eGd5GhzVV3fbFc0YjPzzfw/U23
TycP+GLdX5jtl9jJYOv/LLZrhx8m6XBFfw8nGVzJ+2abDP2wgDcMbH4rGVJH
Xo5JOvlhWx56P7LgJcP+6lGgxvlhlnKsKpv4yZDybSn+VbofVnij8F71NjIM
hHMIvy/xw7RjhguEhcjQ3bKzT67dD0tcPi3WJkyGE3fbR30G/bA+H0L6aREy
NMi5/tg664edOHj40jCRDETN6Lkgdn+ssXmB9YoEGfgWLpXvEvLHuNSTo3RJ
ZAhJvKpiQ/bH7hDbgm+RyaBdlqhxZ7c/9v2K14IlhQzxjqtZ3fr+mO6mzf5s
smRY3+UeZmXhjyWH3JyokSODxKEoUHDwxwandVx9aWTQf7Ld29bTH5NzGhoQ
ZZBh/tKg5bsAfyykM9yqQ4EMlzrTTxcG+WPP9gl3nlUiQ1zuZoPGM/4YX021
kZIKGcxZx+VkY/wxJ9qh5yOqZHAUXUoevOCP3c39tjdVjQxC375/+ZDkj63w
Xa7fp06G1euFhaSr/pheHG3n8i4yHJN6qlB+zR9L/fni/h1NMkzeYl+JyvDH
RvyO0Gx3k+G1kk5gRpY/pvCR5TbHHjLk9EuwLmT7Y6ctCiQbdMjQWOZLSbzh
j71o2ZMdoEuGopbhvW44C2gMCkgAGeoVtZ6F4Ovd74VdebuPDGfW90i8zPTH
7ksIcUbrkcFMv+Tp4XR/bO1qVZyqARlKCBpChDR/zIjV4u+YIZ7vhdKU7Vf8
sYyw+fDrRmSouNOSu/+iPzY+e2lJ34QMey/sLf0vzh9TcZE/vmJKBkHtIRqK
9Mciu1un/ztIhsJ+uwSOUH+sQ8/T08GCDIcCQndsHPPHROo2PnIdJkMe11I2
1csf82Lk2zVakmHlVbJCmKM/Vp2v3XvcmgyP69jsl/D+mcWHtnXbkSHh5MXd
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
eEoW0nzXdj6drEZeB6oP7l2WhQPqh9XHt9QiTFo+XI9HDsZ03rSqLjUi68Cm
wXe8cqDptrJx1u8p+vrERseLXw7+CL9+X/T5KSLYxW+6ICAHapkKZee6m9Cx
K2OXX4rKAQfJR0LatRkR13ILjWXl4OG5d7kuLi0o7N22DgtdOVhLMSt6e+cl
imhZXN8EciD85x+X09JLdK6qW+XRPjlYrZbqM4c2FH81NUPUQA6WJtNnvT+1
oTTTbR5jpnJw70h5p5ZEOyp/zr8a5CAH3F4x8yVlr9H4Qz65zBA5YE+Xnv7v
QjcyT+eJ+1gqB7NNssFZB98js4MPJ1S3yUOYsEN6AHMU7ehQ9k0IlocYuevf
RqOm0DWHC1d2hcrD/mcmBo0ZU+jHzPDDyTB5yHAy23WxfArVclxi0YuQh+z8
6D+Lg1NI22DixkaMPMg1T37b2DmN9Juz3pxOkYe153l9Y5PTyL6WRe3oPXnY
POfym6Y1ixoM7OyJZfJQWy2Ucs9sFhH770e1l8vDye/FxYIes+jTsuNr+Up5
+DN+L+L2pVnkuaPGa7JWHir/hV4qG5xFx8r9s1xa5eG0i8AdhdCvKKaod93i
szyYfvop4ZY9h1o+de0bH5WHnGkb+tm7c4hN7G1CyLg83LOviDhXP4cSr7Zt
u/FFHlpE1dTVB+ZQSmQjdXxOHgRrKn97EeZRvm2JWciqPHREuV0suzKPRtJu
p7GvycPvAdbDhLx5JP228H32H3n4BKpRXqXz6I5ervvTf/JgP8FmXvpyHpWr
poawb6HBhPj+AwN/59Fjroi87O00EI5T//fG5xtaNwgfYwjS4DPH2MLR4G9I
NzZE7qkQDR541w0tRH9DLb8CK8dEaOD14B7frexvqH3ySCuDRIO3WRLvGl59
QwNNB+cbGTRgm16n91EW0M8gss6YHg2GHSq/+bxcQHcsfA9nGNCg8tvEsZju
BWSteN/H+AANakX2fYscWkDVX7TSqkxoYLIn9ozUwgI6aX9oKvYwDf6I25/m
E2Ki+b3RqTJuNEiXdOqpcmSiPOKL4vfuNHDN1bTmPsJEpr+4niR50iB8wmPV
+CgTlVZmflnypsHDz3cVw88ykR/lgfbzYzSInkB/03OYaJLz0+SRCBoULCWz
rL9jovQvMmsikTR4lWdzqW6IifRa/PjfnKOBv0GqleMYExWd/bFbPZYG8je9
1G0XmMh9gfsq20UazPpOnshgXUTbXh++U3+JBpe9VAnX2BcR9l9Ww7HLNAg6
rvslbusiInlQJvtSaJDHKN63j38RfXynvbs4A69vo7FLjbiIkitjzB2yaHCG
Z3d2r8Qi2nPl5RHeGzQwUIvZ7iu1iHIMLVNC82hgeyjEMZC6iOwb/CcMbtNg
7bygzKrSIuoryL4yVUmDwxoK/hxoEXnJX3h2rpoG2dJh0YOwiH5UnPop9Ajv
5+C14qL9i0jomYmLXh0NGO1F9kTDRWQ9sa5Y+JQGmYKtnwrNFtHk0Vl3TYwG
l77qryiaL6KQH/3pnc002F7tcKXSYhGlb6lYX39OgxeUwsACy0XUL+/xxqGD
BoscRrEE+0XkU3mQ5ftrGjwf5Bdwd1hEK1ra6hff4s+fKqXeclxEBBPBvNpu
Guh1vrnM47KIbI+9OCr4gQY/4hFbvMcimvpRdbN0gAZDbm7nUzwXUdi5gnf7
hmgwGpjlmnZkEWWmhO85+YkGWtpV7jHei+h9JZ377QQNdNfVRLb44/vvJiCv
LzTwW3iy9g7nlWebg/9M0eCshtS93AB8/3fDQ/SvNNAZ7M8XPraISpxe8T2b
o4FT4+BGG84ak4/223+jgRG7mFfw8UVk9/NKacIi7v/PpQE1gYto5lzEiOQS
Ddh/3aeZnVhEp9l9BWqWaeCQcFD6I87ZIhAxsYL7Q+L58vTJRUQrVHwQsUqD
3HLjuSOnFlE9TWx8+xo+b61vrQZxHti9ZAx/abBxU6WiMmgR+bWMnPvwjwZm
c0+fCgQvolWT11WBLHTg7y4NCcT54ru6L1s20yH2WufYc5xFne+I5bPS4UPY
JkHBkEV0dzL1oPoWOhx8Jk5wxlnr+LnY1+x0EK/9uVqA86uf/jWenHQ4e8O3
fRhn+yjb2d9b6VBSYZwhEIrXx64nmcZNhx6dkAA9nE9fVTlM46XD7guYbSDO
nKISFzA+Ogi+ZfW7jnN2IWeD7TY65NmLlVfjTKP/nP+2nQ7cxwZU3+BcXzUm
fUGQDjdMxdhGcTbS7rSWEKZD5J5HOxdwHmx5fPEhgQ6L0bFvV/6/X4Hys/2i
dPA6F/bpN86iEUW/e8TooC4dce/X/+PZENQ8xOnAfjBbdxFn+x1JAYsSdIiZ
+XhvAudVnn9F0SQ6HPhgtdqDc9bMqWE+aTps+sep+QRnjdYvggVkOljt4wy+
ifP7mw5mShQ6fLng0hCFc9jZt/GNVDo4VgqJOOBMsNv31FSODg7Fu28o41yr
VvNzSJ4OCcYDZhu4fjZ8dOUAOh0uxa7rvsb5x2yez28GHTjVqiOv4Zz+YtvN
i4p0KEZbBG1w7otc5f9PhQ5DbA/PvcH7F2J/zEhjBx2eXJA9FouzkPpozAs1
PL8Vr+kdOFvNtX2f2EUH2B1RfwH3x9LLPYxgTTp87vOl0XG+VlThuXk3Hd4u
HXZ4hfup1yHrnbQOHWhGpmpruP+CdnHzVO6lw6hR0I9knAW2R+sjRIco1xdl
4jgffuVT47KfDuuOUspKuH+7NTSycozw93OZC2Tc/ycFSrvoJnSgGrS2ZeDz
sW1BkrPBlA476NR/W3C2KN5y5oM5HUTVauqG8fnqFOx3FLKhg4ax/2sXv0X0
ejGYlOJBh9L82M9t+DwHvJm2lTxCh+OE/AccOHPddbpa7kWHXMHN5fr4/Ju4
6bG89qVDn9KAd60b7te3AuMcgXT4OLFJL8J5Eb0srSqOjaCDnO9D3qs2uJ7y
gQ/UIulw2zZOLd16EY3dYdRNnKPDlpMCfzOtFtF6we1XBrF0kF/lf5lxeBHt
uJ4xt/UiHTr0an6fObiI8s6e2XEtgw7Xf1mcmdPH9TLb97Sokg7njDd8ptUW
UUz73xdW1XRYZoYnPNuxiK4YPu5ke0SH8XMx7rmq+LzBzlGfOryf8sMJ5sqL
6JO6LKtCEx0IOXOBj+i43yW3Gj98TYfnctK6V6QXkeRCd9/zKXw+Hbb7TPPh
9Yuor9vN4PlkVQjM8eL+RVmU+Vn8+befhxd58PrSXIKEvtHBeuhm0wYX/r3Y
9ZXfe5kO70qOvt7JgdcXyWrKzsKA1fofwr83mOhrsU9QziYG/Kq2PIH+MdFA
Z/sNZVYGOImNRiWtM9Ej6dQZW3YGrDmX3Vf+zUTHWiUS/uNhgKX48osHS0z0
kVvjmZEYA0wsW5ovTTFRh/qNmY9EBryZFD0g9oWJ6l3W+U9JMMCrVF7r/gT+
/axocb0hxYBkltQD46NMZGZlsT4rywBP9bNZMcNM9CTHT/OyGgNksjWGL/Uw
0d3nr12l1BngoyzwwaWbiTLnlRMe7mJAWJPy0q4uJgrS/dk3rMWA//6aBS+9
YSLGeGyQImIAuzWvZN4rJsqh595/a8qANF3RhfvNTLSybFh8/iADlL3m+R9g
THS4aSlvtwUDKhTGK6qbmIjTyiS52JIBM+aqlu2NTBQe+TvgnAMDGssMTys0
MFGvYbHnTicGiJeITJjXM5Hy9sOOs854fTe35IXVMdFU8V1jG3cG6OzVGO2t
YSLrLjuaki8Drs8Nbm2qZqLKG6zSE34MGCmK28uKM7dXhciNAAZI1updNati
opZVdo4tgQyYK+AJnatgoh0ytV8+hjAgFN275XCfiZLnPT5dC2PAYC4bCStn
opla3n6j0wzYVRV8kYZzoal366OzDLCuSeLnKGMivlCh28lxeP4zl3WX7jJR
AGrO2R/PAL/ekPNhOL/Yeuza6gUG8PceS/j3HxNFFjyP9brEgL5niQ/EcB7w
O3GGeBmPf+leW3kJE6nvFD/VncyA7cIDCXo4z7UFueuk4v2mOXw+W8xEhtdI
9ktpDPiaWHpMEuci5w6Lu9cZsNWR/WLLHSZy/E5GQln4+i3Dh0Rwrn3yVqMj
mwEPay2XXt5mou0JZ5RjcnA9LvVujcD5FbFHcj6fAZv3zcR9LWIi6pdI4aKb
eD1/Iwf+wzm6gsZrf4sBUUkiyX44D53pY+O7zYBpy7osRZw19GPWn99hQFaL
08/lW0x0jU/xx5kSBuwwYLvZhPO3gQ9zKndxvQwrU5JxvnNcZTi3jAFPgrbR
1HBm0RruPXyfARD6/MVWnJ02J3ZwVDCg60542mQhnv8btZanlQzgPa54oQVn
gayRhuBqfL/dYzm3cQ70SKqiP2IAX1jGm0ScOxQ07n2uYYBoipHQCZzlVsYK
M+oYcOjb76MOOMc2X8k2bWCA3cbdt4Y4z39qTv/9mAH00f2hmjjb/1lO/a+R
AYqXjDcYOD8Xlb9i08SAxEk+HzLOyhqOl1ibcT9+nLxNxPmG1ZULVc9wPztK
PiTgzHaqOdbtOQO0TbhShHE+kbJ8jvcFAxLS/yqL4DxUJhfx5CUDmBTjVHGc
DdodwvxfMSB3XLdcBufKqeQgkQ4G1D1WPaeIswRbc+CL1wzwzTz5VwvnRPJy
QPBb3D9uh+SNcF7SlfMld+HzvEnm5//rc3V2ONLVzYBIL02PQJzbzyS7netl
AFfIuPcFnNWzMCeFPgZ8Fwv9W4DzzUdLdoP9DHCGfTJPcObqlbVO/MCAEz3Z
nYM4hzHtD+0aZMDhurfraziP8SSbTQzh+nzc8R8J75cZAzNK+8gAeYbIK32c
6w8s6aMR3P+XuxyO45wSZ783dwyPr7qp4QXOv29e3m08wQAPI9LZnzh7PW3a
9WuSAUYStlnyuJ/2rFKVrWYY4F3o0nYN55nj30ncTAZQa5/5xON+tbpMFW9Y
ZMAt41LH//u56a6diO8SA3S/6pzlwv2eMfGU//lPBkT8+U/hBs77HZJYzq4z
YN9aUmkXPi/3w56u0/4xgHC9wUsGny/R9MXV9xsMOJBEJoXjzOy0/a7GqgAu
Ol/C5fD5zNOnjH/dqgBlpjtoefg8c3jajmRzK0BdsPTefzgHRV8aMuRVACfT
AYrnPSYyfszsLdqmAFurZy1USvHzUKXxuaOIAtj/vnh+BD8vLMRtijuoCgCW
Pu6X8fMnZ1K52UlOAXxk90Rv4Dx1n3N4Xl4BCE8LJ0MqmSgKGrfxK+DxZ8pP
HsHPrwfelEirHQrw31IFj8VDJuKp/G75ca8CBP7KNHXGz8d2/RSWBVsFWO24
UaCMn8d6gW1O2y8pgNDkmk8lfr9aH5g1bE1SAEmlp6fd+vD50uNRC09WgBoT
vgq+fiaiiR3m/HRVAZwVhk4df4+fb61Dj+5mKoDEjfgyhUHcv2ILvHBHAfiG
4zuKR/D6Xwg1B2IKYFWgdc13lokUVTXLyM8UQKQ5pJf/KxN9yXHI7GtRgI4f
tLN1ONufLDim/VIB+pvCFtjmmUhXnCbG/lYBluYE67Pw+xzXqT1B+UMKIO5W
U521zES3JDypb34qwG3zHOkB/Hups1NB2fOXAkSZOy7Y/2Wi98Y/NFdXcWYJ
TB/AmSs8wZS6rgBmbwNt+/DvbVBPaVDkZkWQsBnNcmVZRPsTlpsV+RWh9gBn
GX0zfv/La+xo2aYICXfoB91xDnt4oc9eQBES3V5ZZ+JcOioyEy+sCAOy45ks
+P1ScI8O/ydxRSg4qv/rLc6TzHiXKzRFcMmteGC2ZRFFsZv7UhiKkCLnvXgG
Z1FJkVMNCorwfIp2qwRnM5N78V+UFeHPHmT5D+dHd96W7d2lCNFVXqz/4fdV
8yeZNe808P2cjTu7cJ7pccP8tRTh9l023lWcJTa+92bsUQSwOzJjiP/fuOBA
WPu2TxGSL0bJj+AsffIza7yeInhW9N/azLmIHifc5SUaKML28dfpcjgvPNQm
Gxrh9Rf+njqGsy2fm1GBuSLw/xE5uIyz3PP/Ms2dFCFtwrRkGr8vdyuu3vno
rAhuk1LerPj/nYjM/1VY53Exb1EAwIuiDdFiKVM8tN37PJ4loo4WzUOThBJ5
NUlKZWlRmhYhJe0pikISTSlEeyoUokVKka14U6FmkkxJvfP78/v5beeee37n
XPYdt90ERp5N4rPQz117GsIcCSQt4NRbo70V9WTvuxAITwoPLUKzjgbMtHAl
0BhUHNGIru2qW/jGjUDv1yD1bvScQnfjnx4EUnRkBCryQqMq+5sBi70JiJ+3
a7ij3WrHIsp98P4o74QQtPISy3MbjxC4c2hhciJ6n5SwwOUogVYvOatS9FT+
kr70EAIO8llpE/G8VqQcOkpDCdCEoivKaG7QC7my43h/h6PBQvRdKy+ttjAC
T06UETP0LnGBg2IUAaNGG40Q9CSu9IG0aAJKit9eRaHz67YFklgCz/NSdVLR
E9OHzrMTCIjenkwpQOfImF9vTSTwrvljSSV6++Hke3uSCOSLk32fobPN9JtD
zuN+pFlXd6K35oV/nJpKgBXmb/0N/XtWe/+FCwRmua8O/Yne/NVfoTidwDOJ
+hI5PI+ObHs6x/wyAdmZVY+U0Ffvz9FpuUJg2UjMQXX0z/hSM1Emga1DktcJ
+tKo/NbgLHze99HyZegNe3dxp9wg8HdCprMBerAh52BqNgGL4KX6xui0Vb+D
dHKw/jxHc9lodoZFVGEu7u/ZhFoOWqSQlmqWR4CtFX5yK9r0g2GR423cb7un
wt3ovn9iavrvEDjnpJ/uhD535/3LwLsE0q+ZDrqgjef+1SVfiP+LTbBwP/pL
WIjofBGB+Bt+iQfQicLGca0SApJNlR8Oow3t5k29V0rAVbK7xQfd/eCQumk5
1rtnkLcfOp5W676oIKC9Sbn8KDpbf6dsaCUBJ627rTx0lcmgYEk1gfWSvDNB
6DZOVM3HB1i/E+a9D0YLdyzKjHtEgL9tV0MIerLz/ePragmEzv/P/hiaddCW
K3qM1+N9IxmvCBDB5aeYr4ZHtowtwk5rWD0jkCh5poZ5fk/cH2MS9QSytxxr
Yd7Pu1DWkd9AoPSLfRjz/YSsbaUOTQT6frS3M/Fl3+47r9hMwCMlt5GJv7r8
lF/lSwLOE+L2M+trf6xpc7CVgITNGj6zfmFz8XLNNrxe5RLL5Efm/RblxnYC
1W51akz+NHq/DAS/IWDI0+Aw+V3x40TT4rcEpDXUtZn8cyRY+e/fYf/g+Wdz
0c7yhdExHwjMLu9vsWfiVd3sYdRJoFxuJd+W2Y95PRv7uwhYR0/Ws2biW6km
aynA/elYQM3Rr40LBGPdBDzFH/OBqQ8Li5qbvQR8+mU6V6E19wQfn9qH8c/w
sdRDB8Z2/X4+SODyjV43pp4TU3kdgUPYb9XUPCXROddUSqmYgN0t3wVirP/X
ZeZ+Ub8IHPgWk/sJrd/DH9g0gcJ3rQNmJWjLQdOm0YkUOlbNHbqJ3jv+Ni9H
moJUceG/GeizKooeCrIUCjPiHSLRA+u8BXXTKJjxpagtWs5iSk3AdArlWauL
N6Dn2V67qqdE4aEdS2ot8/95tjlGqlLQjmho00Tnpqzp2DCXguDU77jPTP/5
LtX0RJeC3oycT05oh2zT+l2EwtBF3dfWaFvHE3X9lIJ6zINLJmh2w8QalSUU
ZLRSM+ajtfkTSh1XUlj70jD2HfZDAVcic9iEwr6dZuEc9N4Xv/x07CnwWovk
lLAf744w8C3bTaGiwt1sjOnfEOBl6UChSb/fqQe9/uaIh48Tft/lHuc+089P
D3OrXCks2sH/4or+vO7nph2+FLgV6jUlOC/23BrQjIihoMA5pWyJ88Uz1Hp0
QxyFdynF+svRR6wLXikkUND1/NNKDX36h090bBKFBQaaXAHOr7xVw7+SL1KY
7tU9Jxg9UjXeeo1PISlILy1XSmgU90Ih6mEtBY/5gRcUcF6mZHjsC3tCYaer
eccAzter3vUm7DoKOvW2uu3oe6qxI3X1FLafiBvMZOazndK+5hYKblksW0Br
d8026eyisPpr7XR/SaHR0oKjrKufcb3ss8kOaIOTb4adBRTWT8vRZ6M5Whfz
e3opnNk/1DAT7bVfkyUSUVjqUu1ahOcB3ppjw7e/U5BWSf9wCR02pfOl9w8K
plvW+0egz+VlRIrFFMRTlivtRF8JkXIpGaHQ2aKuaormWzkb80Yxv5XTDCm6
YH7NXMMxCkGit5Gq6Irvi4bHxylkRdtISKD/B1LOt6c=
           "]]}, Annotation[#, "Charting`Private`Tag$17827#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{5, -2.710505431213761*^-20}, {5, 0.}}], 
      GrayLevel[0], 
      PointBox[{5, -1.3552527156068805`*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{5, -1.3552527156068805`*^-20}, {
         5, -1.3552527156068805`*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, -1.0842021724855044`*^-19}, {6, 0.}}], 
      GrayLevel[0], 
      PointBox[{6, -5.421010862427522*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{6, -5.421010862427522*^-20}, {
         6, -5.421010862427522*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.}, {7, -1.6263032587282567`*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{7, -8.131516293641283*^-20}], {Arrowheads -> Small, 
       ArrowBox[{{7, -8.131516293641283*^-20}, {
         7, -8.131516293641283*^-20}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, -1.734723475976807*^-18}, {8, 2.168404344971009*^-19}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{8, -7.589415207398531*^-19}], {Arrowheads -> Small, 
       ArrowBox[{{8, -7.589415207398531*^-19}, {
         8, -7.589415207398531*^-19}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 3.469446951953614*^-18}, {9, 0.}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{9, 1.734723475976807*^-18}], {Arrowheads -> Small, 
       ArrowBox[{{8.649466014772537, 1.734723475976807*^-18}, {
        9.64946601635711, 1.734723475976807*^-18}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.0993804832086067}, {10, 6.938893903907228*^-18}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{10, 0.04969024160430335}], {Arrowheads -> Small, 
       ArrowBox[{{9.553022878080414, 0.04969024160430335}, {
        10.553022877823055`, 0.04969024160430335}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.9006195167913934}, {11, 0.09938048320860672}}], 
      GrayLevel[0], 
      PointBox[{11, 0.5000000000000001}], {Arrowheads -> Small, 
       ArrowBox[{{10.500004349831459`, 0.5000000000000001}, {
        11.500004349860205`, 0.5000000000000001}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 1.}, {12, 0.9006195167913933}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{12, 0.9503097583956966}], {Arrowheads -> Small, 
       ArrowBox[{{11.446935020820586`, 0.9503097583956966}, {
        12.446935020799701`, 0.9503097583956966}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 1.}, {13, 1.}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{13, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{12.35077570381785, 1.}, {13.35077570382943, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 1.}, {14, 0.9999999999999999}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{14, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{14, 1.}, {14, 1.}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 1.}, {15, 1.}}], 
      GrayLevel[0], 
      PointBox[{15, 1.}], {Arrowheads -> Small, 
       ArrowBox[{{15, 1.}, {15, 1.}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {5., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {5., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{5, 15}, {-0.028786040543277963`, 1.0288027430431947`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8430546893321295`*^9, {3.843054823779989*^9, 3.843054841296482*^9}, 
   3.843054917153472*^9, {3.843057248276936*^9, 3.8430572645386996`*^9}, {
   3.8430576261083727`*^9, 3.843057709635462*^9}, {3.8430580759854565`*^9, 
   3.8430581020745792`*^9}, {3.8430581399111133`*^9, 3.843058166287446*^9}, 
   3.843058397310259*^9, 3.8430586230751715`*^9, {3.8430587155154796`*^9, 
   3.8430587304198537`*^9}, 3.843058792153762*^9, 3.8430589829642754`*^9, 
   3.8430590335809045`*^9, {3.843059107391549*^9, 3.843059118092018*^9}, {
   3.843059216542522*^9, 3.843059241249436*^9}, 3.8430593424513426`*^9, 
   3.8430598710437126`*^9, {3.843059984168648*^9, 3.843059994707306*^9}, 
   3.843071809236483*^9, 3.843142388958568*^9, 3.843151760899227*^9, 
   3.843156530857114*^9, {3.843237163551772*^9, 3.8432371720111876`*^9}, 
   3.843238082012072*^9, 3.8433182148603725`*^9, {3.8433218145934033`*^9, 
   3.843321853504018*^9}, 3.8433229197521443`*^9, 3.8433255003708363`*^9, 
   3.843327048990635*^9, 3.8433279172668715`*^9, {3.843328008912315*^9, 
   3.8433280166148033`*^9}, 3.8433281111660786`*^9, 3.843585079575854*^9, 
   3.8435851749018183`*^9, 3.8435856184726515`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"349a7e12-b1a7-42eb-8b52-5f678f823a68"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>0.95 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"89aaa611-87b2-44b1-ad8e-a6309943d655"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 410, 6, 92, "Title",ExpressionUUID->"76329b2f-faa1-4991-b7bc-3f37e4fd90db"],
Cell[993, 30, 449, 9, 57, "Text",ExpressionUUID->"e540e878-50f7-487d-9812-829d0d84e570"],
Cell[1445, 41, 169, 3, 34, "Text",ExpressionUUID->"b433364a-7f48-4bfa-b8ee-e4b00243845c"],
Cell[1617, 46, 483, 10, 26, "Input",ExpressionUUID->"d6613b5f-169d-4924-a7bf-e1328c874886"],
Cell[2103, 58, 562, 16, 45, "Input",ExpressionUUID->"01813ad3-70df-409c-b457-3805a8a47ac4"],
Cell[2668, 76, 623, 12, 45, "Input",ExpressionUUID->"8671407a-4f01-418c-b8d5-eb14191aec4b"],
Cell[CellGroupData[{
Cell[3316, 92, 337, 5, 63, "Section",ExpressionUUID->"abe4cac0-cd4b-41cf-b2c5-ecd47a7e40c3"],
Cell[CellGroupData[{
Cell[3678, 101, 2340, 57, 81, "Input",ExpressionUUID->"d44d9db4-afa4-41ed-86b5-14b9e69a97da"],
Cell[6021, 160, 18548, 390, 70, "Output",ExpressionUUID->"f11734bc-f3d3-4ea1-820c-c48c5980c7e6"]
}, Open  ]],
Cell[24584, 553, 2069, 62, 153, "Input",ExpressionUUID->"c2e35f5f-202f-40eb-9a89-9e7ff1cddd7b"]
}, Closed]],
Cell[CellGroupData[{
Cell[26690, 620, 219, 4, 50, "Section",ExpressionUUID->"18e1ac0b-2e67-4ae4-85a8-851f071e6799"],
Cell[CellGroupData[{
Cell[26934, 628, 209, 4, 51, "Subsection",ExpressionUUID->"2cdbf668-8d21-4060-b40c-6cfd253436b4"],
Cell[27146, 634, 4953, 124, 510, "Input",ExpressionUUID->"1a1c9eee-72d7-44cf-95e5-c69d858841fa",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[32136, 763, 162, 3, 51, "Subsection",ExpressionUUID->"4d85132e-f9aa-4886-993d-13ba7706c410"],
Cell[32301, 768, 1262, 40, 81, "Input",ExpressionUUID->"e59780ed-4960-4a38-9205-eb67bc3dd13f"],
Cell[33566, 810, 4121, 83, 222, "Input",ExpressionUUID->"d9ca9fe5-da34-4ce8-b433-13188ed942e8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[37712, 897, 580, 13, 26, "Input",ExpressionUUID->"688147c1-2d42-46d6-a4e5-687cef78a8ac"],
Cell[38295, 912, 173, 3, 30, "Output",ExpressionUUID->"934a5bda-b1c2-4e51-9744-f7dee5096b0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38505, 920, 670, 19, 26, "Input",ExpressionUUID->"5fa38a88-c8f2-4743-8a55-1ac2ae3fceb4"],
Cell[39178, 941, 27333, 469, 224, "Output",ExpressionUUID->"b866bb6d-77b9-445b-96f4-e32bddfdd2a6"]
}, Open  ]],
Cell[66526, 1413, 22844, 516, 1428, "Input",ExpressionUUID->"a13d90b2-dea1-4b19-a655-f82fe55fa81b",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[89407, 1934, 191, 3, 49, "Subsection",ExpressionUUID->"057490d3-59e3-4979-8857-b71daab20425"],
Cell[89601, 1939, 1516, 43, 81, "Input",ExpressionUUID->"984b118d-0285-4cf5-b45c-d8a67865e6d1"],
Cell[91120, 1984, 420, 12, 45, "Input",ExpressionUUID->"3b855824-91c0-4460-87ea-30ed817997ec"],
Cell[91543, 1998, 933, 17, 63, "Input",ExpressionUUID->"e8a19c3b-7ce4-41c9-9e2b-b6be0c488e6e"],
Cell[CellGroupData[{
Cell[92501, 2019, 1711, 34, 45, "Input",ExpressionUUID->"8e2e9166-e587-42d9-a494-f7bdc0bc8ffa"],
Cell[94215, 2055, 181687, 3470, 70, "Output",ExpressionUUID->"1d0f1e37-8905-4b81-82cc-eced704d0412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275939, 5530, 733, 16, 45, "Input",ExpressionUUID->"98c7f0d8-9bb8-43a4-9b19-323d9cc80ddb"],
Cell[276675, 5548, 59141, 967, 70, "Output",ExpressionUUID->"a956389d-cec5-42b0-9f19-aefff152afdf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[335865, 6521, 182, 3, 36, "Subsection",ExpressionUUID->"9476c611-cedb-4e14-b4f1-a7f3e4e663c4"],
Cell[336050, 6526, 212, 5, 34, "Text",ExpressionUUID->"dc51e695-7873-4d23-8fd3-56cf6235c000"],
Cell[336265, 6533, 9715, 169, 672, "Input",ExpressionUUID->"645692a6-b206-4825-b365-8647c0a7978a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[346005, 6706, 182, 3, 42, "Subsubsection",ExpressionUUID->"bd0e4e5e-07ac-4d81-8d42-091704d955dc"],
Cell[346190, 6711, 192, 3, 34, "Text",ExpressionUUID->"72690261-41c4-44e8-894e-424c3aadbc63"],
Cell[346385, 6716, 476, 12, 63, "Input",ExpressionUUID->"4a2d9cdc-af0c-4209-87b2-b87eb70ed9b6"],
Cell[346864, 6730, 1128, 28, 135, "Input",ExpressionUUID->"c762d551-3cb1-49bc-a28a-ed51f8e2b718"],
Cell[347995, 6760, 925, 23, 81, "Input",ExpressionUUID->"ce477a78-ea2e-4373-a69b-a57aecd4adf6"],
Cell[348923, 6785, 180, 3, 34, "Text",ExpressionUUID->"33afa66a-7a5a-4c28-a638-4e16bc8e59fc"],
Cell[349106, 6790, 240, 6, 34, "Text",ExpressionUUID->"6b52b0d8-024c-41a6-a4fa-ff4f0506ee33"],
Cell[CellGroupData[{
Cell[349371, 6800, 2860, 61, 153, "Input",ExpressionUUID->"2609a419-770e-40a0-824d-e1ef4cdb0071"],
Cell[352234, 6863, 4061, 59, 30, "Output",ExpressionUUID->"ae4f85d2-10eb-4a26-a5e2-d36c55d09def"],
Cell[356298, 6924, 4014, 57, 30, "Output",ExpressionUUID->"91a1b60e-86bb-4dbc-bafb-d7129031f6d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360349, 6986, 1217, 21, 26, "Input",ExpressionUUID->"10603e1f-ab0f-41e3-a7a6-b4cd1ded3daf"],
Cell[361569, 7009, 10909, 195, 224, "Output",ExpressionUUID->"f0ff8bc4-0441-42cf-a81b-929bd5e6dbfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372515, 7209, 1679, 37, 81, "Input",ExpressionUUID->"2b8fa10b-2455-437d-a597-696051382bd9"],
Cell[374197, 7248, 2167, 30, 30, "Output",ExpressionUUID->"a2d1b3ed-0a0b-4ca4-87f1-9d12264d438d"]
}, Open  ]],
Cell[376379, 7281, 175, 3, 34, "Text",ExpressionUUID->"f69c735a-a188-455c-a6c5-2fb3cf320fa3"],
Cell[376557, 7286, 879, 14, 45, "Input",ExpressionUUID->"3f4c1867-bd09-4c1e-92e8-e8d5fa88e88f"],
Cell[CellGroupData[{
Cell[377461, 7304, 4552, 121, 315, "Input",ExpressionUUID->"5f3c7b77-566e-44ea-904f-9ee47450a3b0"],
Cell[382016, 7427, 2331, 45, 117, "Output",ExpressionUUID->"1b12650d-c9dc-484a-b3a3-4ea66d67e416"],
Cell[384350, 7474, 2406, 47, 115, "Output",ExpressionUUID->"67fbf4bf-c655-41e5-8fbe-fa659643c172"],
Cell[386759, 7523, 2232, 46, 109, "Output",ExpressionUUID->"1e9f30ed-1710-49b1-8fb2-42b9ba7ca327"],
Cell[388994, 7571, 2240, 43, 98, "Output",ExpressionUUID->"95c493f9-6a6d-4a02-8f11-bc6261706002"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[391307, 7622, 351, 5, 63, "Section",ExpressionUUID->"7b97303b-d41f-4783-b552-ac3ef7ca3fb1"],
Cell[CellGroupData[{
Cell[391683, 7631, 292, 5, 51, "Subsection",ExpressionUUID->"d789d8ef-2469-4d2b-bebf-54c2820d12ec"],
Cell[391978, 7638, 4984, 108, 636, "Input",ExpressionUUID->"0fc06d81-f2b1-40f6-a8cc-58223608e8b8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[396987, 7750, 182, 3, 42, "Subsubsection",ExpressionUUID->"3f2a12aa-0d8a-473c-91b5-5c0de2130118"],
Cell[CellGroupData[{
Cell[397194, 7757, 649, 13, 26, "Input",ExpressionUUID->"11223a6b-dae0-49b9-a563-f236dd3f451a"],
Cell[397846, 7772, 14252, 299, 373, "Output",ExpressionUUID->"5cc99160-73ab-4afe-b24f-5cc63d6ac9ee"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[412159, 8078, 308, 5, 51, "Subsection",ExpressionUUID->"e070b4d8-71c4-4459-9bce-bb029e633635"],
Cell[412470, 8085, 10538, 224, 870, "Input",ExpressionUUID->"ea40331c-dbbe-4cac-b15f-3b84a0b270cd",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[423033, 8313, 182, 3, 42, "Subsubsection",ExpressionUUID->"32383e90-bbcb-4b66-886a-defc6ad800ff"],
Cell[423218, 8318, 681, 14, 26, "Input",ExpressionUUID->"829e1015-b972-48ee-82bd-17891ede8aa8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[423948, 8338, 312, 5, 51, "Subsection",ExpressionUUID->"bb6904ef-b86c-4967-baca-670303f2d955"],
Cell[424263, 8345, 3549, 77, 312, "Input",ExpressionUUID->"8c4ef01a-4a11-4128-b3bc-760ad1051576",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[427837, 8426, 182, 3, 42, "Subsubsection",ExpressionUUID->"dffec931-627b-4cc3-a317-ee1353adcebf"],
Cell[CellGroupData[{
Cell[428044, 8433, 706, 13, 26, "Input",ExpressionUUID->"627ccfd2-c7b9-4325-a262-7ef772ed6904"],
Cell[428753, 8448, 2416131, 42560, 424, "Output",ExpressionUUID->"48254b99-9ba8-4f44-9152-6e460e2226db"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2844957, 51016, 275, 4, 63, "Section",ExpressionUUID->"b6f02be6-e33f-439a-9850-f2b2fc065ecc"],
Cell[CellGroupData[{
Cell[2845257, 51024, 347, 5, 51, "Subsection",ExpressionUUID->"86058ab4-4029-4a68-aff4-593edcd6d38c"],
Cell[2845607, 51031, 1387, 31, 204, "Input",ExpressionUUID->"4a0b73fd-9080-402d-9136-478cbd6cfd4d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2847019, 51066, 182, 3, 42, "Subsubsection",ExpressionUUID->"937129c5-48fa-4076-843d-656cc2170477"],
Cell[CellGroupData[{
Cell[2847226, 51073, 568, 14, 26, "Input",ExpressionUUID->"0980883b-18fd-4a73-bc1d-3be25bf822df"],
Cell[2847797, 51089, 4459, 114, 139, "Output",ExpressionUUID->"66581e36-f021-45c0-bc57-9a6d4b51af0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2852317, 51210, 249, 4, 51, "Subsection",ExpressionUUID->"024a8dc4-7550-4e7d-a828-34c30ab55326"],
Cell[2852569, 51216, 7942, 174, 708, "Input",ExpressionUUID->"423fc544-76d1-481c-bd89-c81e64a8d97c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2860536, 51394, 182, 3, 42, "Subsubsection",ExpressionUUID->"d227b672-9254-46f6-bbe8-e3456c25bc8f"],
Cell[CellGroupData[{
Cell[2860743, 51401, 795, 14, 26, "Input",ExpressionUUID->"8b8c3b2f-53fc-4645-9556-7cd546d06378"],
Cell[2861541, 51417, 64930, 1138, 327, "Output",ExpressionUUID->"349a7e12-b1a7-42eb-8b52-5f678f823a68"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

