(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    266885,       4967]
NotebookOptionsPosition[    263311,       4900]
NotebookOutlinePosition[    263835,       4919]
CellTagsIndexPosition[    263792,       4916]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Test for VScaling", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.8431583610963435`*^9, 3.8431583669555917`*^9}, {3.8435589181641517`*^9, 
   3.8435589198932934`*^9}, 3.843744422167187*^9, {3.844344463274914*^9, 
   3.844344467474148*^9}},ExpressionUUID->"47a57545-a511-4f58-978d-\
8dfdd48a83b7"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8400383593859367`*^9, 3.8400383615886106`*^9}, {
  3.8433207191908846`*^9, 
  3.8433207198782096`*^9}},ExpressionUUID->"e20ef618-fd74-496f-80d8-\
4135c55a285c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Add", " ", "to", " ", "path", " ", "packages"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"packageDirectory", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<1DPackage\>\"", 
        ",", "\"\<*\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$Path", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"$Path", ",", 
       RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8437444304820337`*^9, {3.843744475443145*^9, 3.843744489249152*^9}, {
   3.84374460430722*^9, 3.843744614114832*^9}, {3.8437451879521313`*^9, 
   3.8437451890826197`*^9}, {3.8437453266046667`*^9, 3.8437453290342407`*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"f61f086e-f338-4618-975e-74bd85d44185"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<ReadSintel`\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<pyramid1d`\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\"\<OverConstrained\>\"", ",", 
     "\"\<SemiConstrained\>\"", ",", "\"\<Constrained\>\"", ",", 
     "\"\<ConstrainedInitialSign\>\"", ",", "\"\<ConstrainedNewMethod\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"\"\<pyramidalCyclope1D\>\"", "<>", "met", "<>", "\"\<`\>\""}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"met", ",", "methods"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8405470666010065`*^9, 3.8405470721952195`*^9}, {
   3.840550195734952*^9, 3.840550216899179*^9}, {3.8417693956828256`*^9, 
   3.8417694295737267`*^9}, 3.8417694792252483`*^9, {3.8423558358531294`*^9, 
   3.842355838266631*^9}, {3.843139686906508*^9, 3.8431397006034536`*^9}, 
   3.8431400354897623`*^9, {3.8431583092259803`*^9, 3.843158312433055*^9}, {
   3.8431587050542717`*^9, 3.8431587088646235`*^9}, {3.8432405156973643`*^9, 
   3.8432405180756235`*^9}, {3.8432434086403227`*^9, 3.8432434521650333`*^9}, 
   3.8435781970825057`*^9, 3.8435786572990074`*^9, {3.843745725318043*^9, 
   3.843745730794486*^9}, {3.8437501550408554`*^9, 3.843750161634801*^9}, {
   3.843750230642497*^9, 3.8437503524543705`*^9}, {3.8437504375112853`*^9, 
   3.8437504386938276`*^9}, {3.843755017106989*^9, 3.84375503403273*^9}, {
   3.843755426452015*^9, 3.843755445994274*^9}, {3.8438346833502474`*^9, 
   3.84383468782578*^9}, 3.843835196563305*^9, {3.8438498338643837`*^9, 
   3.843849837390987*^9}, {3.8438505820282726`*^9, 3.843850585529437*^9}, {
   3.843851080665611*^9, 3.8438510924880347`*^9}, {3.843917874644593*^9, 
   3.84391788967353*^9}, {3.843919464270398*^9, 3.8439194690819983`*^9}, {
   3.844258411683423*^9, 3.8442584146673145`*^9}, 3.844258734579767*^9, 
   3.84426385350611*^9, 3.8442668082773514`*^9, {3.8444603015210395`*^9, 
   3.8444603083251925`*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"6d0704c2-bf8e-416a-b07f-e26d538a6327"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Declare", " ", "path", " ", "for", " ", "SINTEL", " ", "Data", " ", 
    "depending", " ", "on", " ", "user"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"baseSINTEL", "=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "$UserName", ",", "\[IndentingNewLine]", "\"\<fieri\>\"", ",", 
      "\"\<D:\\\\MastersMathematica\\\\Data\\\\Sintel\>\"", ",", 
      "\[IndentingNewLine]", "\"\<roys\>\"", ",", 
      "\"\</home/roys/datasets/SINTEL-stereo\>\""}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8437446388681035`*^9, 3.8437446932344007`*^9}, 
   3.844344584044823*^9},
 CellLabel->
  "In[493]:=",ExpressionUUID->"d776a6b2-f575-4809-a505-9090b6544b17"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data", "Section",
 CellChangeTimes->{{3.8396005056192665`*^9, 3.839600506650977*^9}, {
   3.8396006430435266`*^9, 3.8396006454493484`*^9}, 3.8396009902260947`*^9, {
   3.839601775074339*^9, 3.839601775891445*^9}, {3.8437453621624937`*^9, 
   3.8437453624275274`*^9}},ExpressionUUID->"d964f20b-a4fc-49b4-acb5-\
4f1eaf7c2ffb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "downscaling", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}], "=", 
     RowBox[{"read", "[", 
      RowBox[{
      "baseSINTEL", ",", "\"\<bamboo_1\>\"", ",", "\"\<0001\>\"", ",", "r", 
       ",", "\"\<clean\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "44"}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "102"}], "}"}], " ", "arbitrary", " ", "size", " ", 
      "to", " ", "make", " ", "the", " ", "method", " ", "faster"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nx", "=", 
     RowBox[{"170", "/", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ny", "=", 
     RowBox[{"300", "/", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ImageTake", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"ny", ",", 
          RowBox[{"ny", "+", "44"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", 
          RowBox[{"nx", "+", "102"}]}], "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageDimensions", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"MinMax", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", "id", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<max dv=\>\"", ",", " ", "max"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843745436013342*^9, 3.843745445266261*^9}, {
   3.8437454795752115`*^9, 3.843745636648714*^9}, 3.8442584513876195`*^9, {
   3.8442678037667413`*^9, 3.844267808172227*^9}, {3.8442680916621*^9, 
   3.8442680954422073`*^9}},
 CellLabel->
  "In[494]:=",ExpressionUUID->"9dd85409-587b-4bcf-9b9c-30c708071c3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJwcl3dUzv//h4W0hIaGCmloaChb9/VGZGVFJHtlVWREIg3tPSSSoiKVolCa
mhIlUVZIsveW9fnd398fd+fc531O7/u8Xs/n43Fd2qu32Dl179at23Zp8R+7
Vbsmbtu2ymN+r/99WbfK2dLC+X8PTcSf9eKPrKiQ3F/dBcVVf9myIIHJzRLC
0Cm3eLp5KDGGMpha90bhWC/m1CmT3W7AuTmaeMzSQKrYhEenejGp7anIsao3
OT8kaVjYJfryTJbDA63obTCRxofDqR0wmBqVWYTE2DLy7CISdy/jfcIIHh3r
QdyxVtEjAyvCUvypLIjly5YEdjQm4v8ukfbGo3wdF8vJc54sXxTIrtQQzmjE
IVGwhjmCLxn94nHf4Mn7RdM46mSNwfBwtvYKovisD8M3bmVF8BIKJ1nQvWUT
F7JXsaTWj4nfQlilHMx5l+lsHmnEvK/GWDu4MP2TP3MM1Zjt2Aefg7DUbh2j
NvkwW+MA23uFot4SQc7mcCa0R9G6PpYcg0Q+njrD0LEnUfLKpqEymsNKPnTT
z6R6t6wg9fstH6XGCssPDxQmbvmDZKSpsHdMH+FhuxdmUkdo2lrFzRfdBYs/
DRjLF9Esc5Up0dkY5KXQqhPBzbJNeMqbsWa8E/82lbFh4A+C3xditrOSfQ/1
hP6TqjCw3kHHxeHcG66D8xtVWqfrIbIdhHPoQDSLB5Oo1pMN9t3Y/k8JT3Nl
FkR2p1jaiAs7HPCXGMoafS0OLNemd5kRCe7z2ezsiYa5OymZY3EP7UXPlzbs
nB+KKO4gNsaJ2AYcZ1pTOgvWnuJ20HHCCo4yrdKbIh0fThsfxu9wFE/7HGSK
TxYnAg7x5X0Qx9bu41LQTDS2DODly0082BBDcVEKMb/CeXN1JlrL52C7eiLz
ioMI7p1JyLc9BPyO4KJGMHsOueKy14tpU1ezswy0mo0J9zBDdvEIdFcupkl3
CxnBvjzYGsTBN6Fsa44gOvokQyKj0dqcxKHEApyeJFF5eB3hVQL2ioncvNuJ
7zxJISxzslB6dJxwNu8NS7fLC6OGi4RxE2rwKCulbelpJG6W8qf2GfNL8xgu
XQk301ALvsj0z2n8i/FlOBuYM/8cm3/kUv70FgOvNaNy8wif3JSFl79usLNu
C/e2WPB72XDMJg2hZrU27tN12bRbn3ltKlwL7ofDU0VOG6lSrmpIcIQSsx7L
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
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
pwqWG4w5fv6byPbsOD5aLkPWT44ZPWX5XioQH7mBDbf3oN68n3mRuxEeuqDr
5c/LPkkoxSfyNyqTRy25dMjlM9/kK/c7ZYVDZzPpGu+LheFhVtydQXT2aBw2
jiXx70C6Pg1Af6k+G+MG03FkMKO1++A+uB/9u/SoUplDktdxDl5q5mXqN+w0
3qD2M5X1U7wwWhGA0h4/Vi7agMNzKxROzuDttk3YO3iSFSNmnZBEdPYWMLvq
Bi8rk7j1vbuQ+ERSKNm/iT7VVnTE2vIoaBw1xRM41+Eg7ns1IiaOxuScOK8S
Q5k7PYP+3/OIcTnLNvGsRJ6vxFa9lvPza8RuWYuvxXXGTbmPwr67rJ3fxYmW
Tpr3PyB4SRhvPNbwsXQin3y3kdq+icNbViK/05KFH0x4Z72Tqr1H8RIdIvf4
Qyz63yPq0k+iM/sKRePLmPA6hbgPBeJ5TUcjJ51BiyKRcljBfDexr3eoiv11
EG5ze+Gv/09UWa/PpypxTixZzeph3lg3BxH5OwLrSaHcUvAjMiCAMUVe1Ju7
EaIQw93h2cRL5RDS6yKnZb7w9+0vhjoHoXckkfN/ziKv0MzTxm8oCneZKT5z
q9ijmnxMuBc8H30JI0Lz+1Ab3ofHq1UYYClCdV4oPhNfsFa+jnf3W7Ab9gjb
J0GklzsyxN8F0ZadOGTN5nTxEtxGRzD1ci6arWl8GlXAzOhK1lpd46NbNpeO
SQinrTp5edcY+e2qFDTJkWy4F73hvkhMHcWtjKmodNhxQkOcTUtSGRyaK65R
EaXfznF25yW0H9TS/+sVrLXreNv7OpqdL6h4/5Edmx7Rkt1LMPXt4spCTwLk
5tH9ojMPt21nlMFOvvY5wLimmfweOhT5+7Mx0NlP1Hmx8+9KZd67DhQ3fiNw
xH2ubtcU6qSUhYqsZPZXic8t3ovla3K4HJbMvs8HkbEZzISBOrzab8pW/YF0
HO9F7yZTDMau5VqsAzc3OoprcwCdDE8S+wUQkxWOaW0kKXmVnDLNpi1+L6+D
EhkUc5Kw/Q1kpkoI9in3GCO9AxXnWvYX9hG2NxsIpV66wmKbB6hMsUFtggXB
lgYEnDTl31VNnOersHZpp2jJQRmku5vwW0PsBMG5hPgF8/Byvjh/6jgYE4IY
EziyRmB1hR3uU2bxuHAvX2OyyBxWi4F+C5sXP8Ut9xFvhn8jpPMxvZoa+JDy
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
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyNvGVcVQnf/U2DiaKiAoqKhYWKBYisn4odmGN3jd3d7dg5tiIqJ/beBxCl
G0Hs7sYOUExCfNbc44vrM/c91/N/sWdz8Ai6115rfdc5OFVHTOk5xsLMzGyG
Hf/Tc/gcmT59+LxeNn89GD18omfjiX/9Yn0eY3lERplglmhChzSeD5tgmmfC
sKUmRK7k4yEm6LxNyBMTZvqa0NjaBNdCDQ0tTXjzXkN0goZD8RpqpWl4GajB
Yb4G5+Ua5i7SUNFfw05fDZN4NqumoXm+im3mGtYWqmj5XsXyrir8EjXI81B4
HwuDx64wDK0ThhlbQ/FcF4JZB01YPUhDve0qhm5TMWi4ikwfFbMeKij5SsF2
JxXlshQccVexqo6KIT1VHNqq4jGfszpHwRpXBXM6KuhlpqJDhoJxixTkb1Ng
1VZB2yNGrJpnxMspRoRtV3A78zgC3JLhvP4dzF9m4W3/jyhskIPsjTl4tzIH
7exyYDv1I5roPiD4QhYOJbxFmRqvcG7NU7QPfYRpYXH4rbEOx44YsCTUgJxo
A2qdMuDYMwN2XdGj+S4Dbhbo8WCaHo1G6bHOSw8v6HHFRw+bUvx8vg7lLPTI
57lYqg5m8To04fl9rAl6atOFh+M2EzIXmjB3mQmzF5ng6W/CilYmLKI2F6jR
FgsTEn5oWG5D3R5r2BKlYXKShr68xrqtGkwLNbxepuECNVrTWoNrKw05bTV0
qKzB6ruKhcU1WFfQMK66iqu7TdBWhGNw05OwL3cSxSPC8bZMOLr4ncCoWmGI
sgnFn0dM+FaRX1uvoqG3ijolVZRxUWHOa137soIpRVQkOKhoXUpFiKWKiXxO
0EIV85ap+EING5hTq0wFDskKzu1Q8J56tYaCld0VrE8wIocabX1nxIStBnx0
vIFP2z+hQkAO3EZ9xojgLxhU6yscbb9iZb8vmFDuM2pNzYHU+IiWtbIxqNJb
NMQLrNx8H4dGaSjeRY87PgY8OWNA3A4DOlGnis5GuAfpUWhnwO25BmSv0cOi
jR4fWulRpa0eMz30aPpDB/WnDiWs9Ah9pEPpGB1uJeqwLkmHOgn8+1MXz3he
f2ryZrEJI3i+MN+EDa1NsKE2/aiRWTUTqudrMDc3Ic7MhBZXNWTGalhAbZrQ
OxepidViDQGr6JMRGkr6aHgiGpbSO5mWGvrY0VefVWyfomJj9xAkR55CjUoR
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
aimOJw==
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
9v8BNexoPA==
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8443445346130323`*^9, 3.844344588669323*^9}, 
   3.844345686788784*^9, 3.844460323893034*^9, {3.844460408821314*^9, 
   3.8444604240025997`*^9}, 3.8444604806818304`*^9, 3.8444683725488043`*^9, 
   3.8444685660934534`*^9, 3.844468739342948*^9, 3.8444691953104305`*^9, 
   3.8445039555571284`*^9, 3.8445093612650194`*^9, {3.8445115933344903`*^9, 
   3.8445116099013443`*^9}, {3.844513165663068*^9, 3.844513176673892*^9}, 
   3.8445141326339755`*^9, 3.8445141934576554`*^9, 3.844514393525669*^9, 
   3.8445144878045244`*^9, 3.8445168499561243`*^9, 3.844516944103969*^9, 
   3.844516984462165*^9},
 CellLabel->
  "Out[498]=",ExpressionUUID->"8a509bbc-cac7-43bf-986d-4e9e9f76214b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8443445346130323`*^9, 3.844344588669323*^9}, 
   3.844345686788784*^9, 3.844460323893034*^9, {3.844460408821314*^9, 
   3.8444604240025997`*^9}, 3.8444604806818304`*^9, 3.8444683725488043`*^9, 
   3.8444685660934534`*^9, 3.844468739342948*^9, 3.8444691953104305`*^9, 
   3.8445039555571284`*^9, 3.8445093612650194`*^9, {3.8445115933344903`*^9, 
   3.8445116099013443`*^9}, {3.844513165663068*^9, 3.844513176673892*^9}, 
   3.8445141326339755`*^9, 3.8445141934576554`*^9, 3.844514393525669*^9, 
   3.8445144878045244`*^9, 3.8445168499561243`*^9, 3.844516944103969*^9, 
   3.84451698446416*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"2f9565d9-e172-4a05-8721-e1dc5d8a6d51"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"max dv=\"\>", "\[InvisibleSpace]", "12.595175743103027`"}],
  SequenceForm["max dv=", 12.595175743103027`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8443445346411877`*^9, 3.8443445887043347`*^9}, 
   3.84434568679776*^9, 3.844460323901018*^9, {3.844460408824306*^9, 
   3.844460424005592*^9}, 3.844460480684559*^9, 3.844468372551797*^9, 
   3.8444685660954475`*^9, 3.844468739345942*^9, 3.844469195313422*^9, 
   3.8445039555641127`*^9, 3.844509361268012*^9, {3.8445115933374825`*^9, 
   3.8445116099043365`*^9}, {3.8445131656660595`*^9, 3.844513176675886*^9}, 
   3.844514132637965*^9, 3.8445141934606476`*^9, 3.8445143935286613`*^9, 
   3.844514487807517*^9, 3.844516849959117*^9, 3.8445169441069603`*^9, 
   3.8445169844651575`*^9},
 CellLabel->
  "During evaluation of \
In[494]:=",ExpressionUUID->"630e8e3b-2e23-45c8-9de2-21c6d23fbb72"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Debug", "Section",
 CellChangeTimes->{{3.8396005056192665`*^9, 3.839600506650977*^9}, {
   3.8396006430435266`*^9, 3.8396006454493484`*^9}, 3.8396009902260947`*^9, {
   3.839601775074339*^9, 3.839601775891445*^9}, {3.8437453621624937`*^9, 
   3.8437453624275274`*^9}, {3.844344614474964*^9, 3.8443446148893847`*^9}, {
   3.844509480793912*^9, 
   3.844509481515544*^9}},ExpressionUUID->"5d61a41e-ed5a-4385-90bc-\
ff7ee152344b"],

Cell["\<\
seeAllLine[rangex ,pyrab ,threshold ,mode]

PyrFlow1DIter[i , p0 , pyrfunctions ,threshold ,mode]

oneLevelPixelIterGraphics[lvl_,iter_, p0_,prange_, \
{{flineia_,dflineia_},{flineib_,dflineib_}},info_]

pixelIterGraphics[i_, p0_,v0_,prange_, lvlmax_,pyrfunctions_,threshold_,mode_]

pixelInitialValueGraphics[i_,j_, \
p0_,{n1_,n2_},sol_,pyrfunctions_,threshold_,mode_]
\
\>", "Text",
 CellChangeTimes->{{3.8445101428204637`*^9, 3.8445102474336605`*^9}, {
  3.8445103406144466`*^9, 
  3.8445103420870595`*^9}},ExpressionUUID->"61f617de-1b05-4164-ac2b-\
9517f9b9c7d1"],

Cell[CellGroupData[{

Cell["Little Functions", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.843308066803094*^9, 
   3.8433080681141663`*^9}},ExpressionUUID->"f5c67ce6-88ae-4c58-ad48-\
5ea6e837929d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pyrfi", "[", 
   RowBox[{"ia_", ",", "ib_", ",", "row_", ",", "lvlmax_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pyrfia", ",", "pyrfib"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pyrfia", "=", 
      RowBox[{"pyrFuncGen", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageData", "[", "ia", "]"}], "[", 
         RowBox[{"[", "row", "]"}], "]"}], ",", " ", "lvlmax"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"pyrfib", "=", 
      RowBox[{"pyrFuncGen", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageData", "[", "ib", "]"}], "[", 
         RowBox[{"[", "row", "]"}], "]"}], ",", "lvlmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrfia", ",", "pyrfib"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.84313892088904*^9, 3.8431390761722784`*^9}, {
   3.8431392570148835`*^9, 3.843139273697956*^9}, {3.8431590848455114`*^9, 
   3.84315912015506*^9}, {3.843159154421751*^9, 3.843159154684618*^9}, 
   3.843159972594839*^9, {3.843224134943307*^9, 3.8432241373889875`*^9}, {
   3.843238887570883*^9, 3.8432388887128267`*^9}, {3.843244470687603*^9, 
   3.843244471083666*^9}, {3.843245943522396*^9, 3.843245953156348*^9}, 
   3.8432471526931915`*^9, 3.8432472029964914`*^9, 3.843247273562867*^9, {
   3.8432484084228573`*^9, 3.8432484087823677`*^9}, {3.8433081379635553`*^9, 
   3.843308241907001*^9}, {3.8433083959863462`*^9, 3.843308396126707*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"587ba82c-b710-4811-9f07-6f5bc7534355"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvlmax", "=", "5"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrfiab", "=", 
   RowBox[{"pyrfi", "[", 
    RowBox[{"ia", ",", "ib", ",", "row", ",", "lvlmax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.843746040554737*^9, 3.8437461051324205`*^9}, {
   3.8437555812868156`*^9, 3.843755582637147*^9}, 3.8437556660876565`*^9, {
   3.843756798752108*^9, 3.8437568007775183`*^9}, 3.844344601360875*^9},
 CellLabel->
  "In[503]:=",ExpressionUUID->"746e0c01-a7cc-4931-8006-cd72772f88de"]
}, Closed]],

Cell[CellGroupData[{

Cell["PickNewValue", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.8444601613969946`*^9, 3.844460163351858*^9}, {
   3.8445094451843915`*^9, 3.844509445880382*^9}, {3.8445130517876644`*^9, 
   3.8445130556291246`*^9}},ExpressionUUID->"bf515b6f-ee86-4614-9e02-\
51b26458da63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nV", "=", 
  RowBox[{"newValues", "[", 
   RowBox[{"10", ",", 
    RowBox[{"{", 
     RowBox[{"3.5", ",", "0.6"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Total", "/@", "nV"}]}], "Input",
 CellChangeTimes->{3.8445130743086376`*^9},
 CellLabel->
  "In[507]:=",ExpressionUUID->"a3b59f75-8182-43f5-b6c9-52a27118d68a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5765096049868201`", ",", "3.5234903950131797`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2759065194092836`", ",", "1.824093480590716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2040032677135173`", ",", "1.8959967322864824`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1142150239749187`", ",", "1.9857849760250808`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3662313044632581`", ",", "2.7337686955367415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8228111490281025`", ",", "1.2771888509718972`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5441754440442468`", ",", "2.555824555955753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02136272560201746`", ",", "4.078637274397982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6732519392036875`", ",", "3.4267480607963123`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5299560057380529`", ",", "3.5700439942619466`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.844513075303263*^9, {3.844513165723905*^9, 3.844513176730248*^9}, 
   3.8445141326838417`*^9, 3.84451419350453*^9, 3.8445143935855427`*^9, 
   3.8445144878553886`*^9, 3.8445168500339165`*^9, 3.8445169441807594`*^9, 
   3.8445169845369654`*^9},
 CellLabel->
  "Out[507]=",ExpressionUUID->"78c199a1-0a6a-400f-9e6c-8e7f0c817fa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.1`", ",", "4.1`", ",", "4.1`", ",", "4.1`", ",", "4.1`", ",", "4.1`", 
   ",", "4.1`", ",", "4.1`", ",", "4.1`", ",", "4.1`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.844513075303263*^9, {3.844513165723905*^9, 3.844513176730248*^9}, 
   3.8445141326838417`*^9, 3.84451419350453*^9, 3.8445143935855427`*^9, 
   3.8445144878553886`*^9, 3.8445168500339165`*^9, 3.8445169441807594`*^9, 
   3.8445169845409875`*^9},
 CellLabel->
  "Out[508]=",ExpressionUUID->"c4958089-4fda-4053-a373-87ddb90cdbbd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mode", "=", "\"\<ConstrainedNewMethod\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threshold", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "19"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.844513285766307*^9, 3.844513314813896*^9}, {
  3.8445133628623714`*^9, 3.8445133634355373`*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"0e16dd9a-929c-4227-a528-5280c7da1107"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "103"}], "]"}], ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"n", ";;", "n"}], "]"}], "]"}], ",", 
   RowBox[{"threshold", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "103"}], "]"}], ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"n", ";;", "n"}], "]"}], "]"}], ",", 
   RowBox[{"threshold", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", 
   "\"\<Constrained\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.844513213275521*^9, 3.8445132535969253`*^9}, {
  3.844513298327922*^9, 3.8445133234618554`*^9}, {3.844516861761344*^9, 
  3.8445168870323796`*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"38594f1a-cb7d-4c93-bb3c-5d4ee2a21848"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVmHk4lH8XxiWElF0SEkWKyr7mHNvYhmLMWJMWEpJKqKS0IMmuSCgiJEmW
krJmmbGOZSallBSSJeqnIu/z/uX6XPMs59znnO9zbpsOHnfw4uTg4LBdycHx
/7/j5a07ODlmIOL6UFKvagP4P/Cd2XxxBgpetVhxqzfAVLpAmQXHLMzNTJ0y
0G6A+fC9Wjc4foB4FY9ChVED/LNkG0iumIddke/mhvY0gMjQV8sdnAtgJa50
h/tUA2ReuqymysmBGxSOfC2paYDmohwbFy5e/LpPwDd0XyOUN/WadVrx4t9k
+XKDQ42Q+57LyDSeF4tk3Wy5jjbCRZEju1Sl+NCzOyEgL6gR9M9uF1+xix/X
/M08rRTbCI+syt8XuAmghXT1p201jWA9/0k3zEUIW7m67qjJNYF68jyDUSqG
i/LrHtsvNIFJtoGcXo8Y/rFI6/nxrwkcHl4Kyp8Vwzc71hekcb+GU41CMhHq
4ug4rH3yh8hrKJ9TCdAuF8eFzUWX3qu+Bi1HL6F7VRL4gV7GTDv8GnTFBxyD
X0niBt0Dm9L6X8PuW1VDcu3SyL8z4q9kczMoFqi6ffsmjfnjbN72jmZY+zyX
XbFaBv/tmo+/0t8M7wfje61tZFDVVVWDZ7QZLsr6tAXRZVCi6ckImasFGvIk
K1pbZVHwEGbOmLbA5kFD0rODcuih5Tk/0NIChWOZMp775ZF0lNvE5nMrWP4O
NMkKlMeNRYrlwVOtMMZnduRdhDxGnb985eFCKyhunyh1vi+P0Yk5J9XWtMH9
Y9pm9uPyePGwy9fH2m1w90enr8kpBdzjU2916XobpC0uV22O2oxvQ3Qf9hvS
IUrooMN4iSKq6j/OX6xjQJmnwAhHrSKq73xZyNPBgPellackuxQx1P3wrQ1v
GKBtvzrVYloRr+uWu3nPMuBLYjkrb6cSHv3MLLgo3w4k0VX7DpYqYXRIr3NP
ZDtwSxQfeftkKxrNSO/Y7twBlzf8Cuso34ZCDsXZK+S6YPDUs7ndzdtQ7ss3
Z7ddXaDefta3hLUNfdeXf2vCLhgOW3aK/7MNJ1Y6MFsOdIHhe14Ne9yOlkHf
ReLud8GvuxvG+xjbUSIh5HuyRDf4KhpT331SwTeWuDU4rxsc1GJVvwntxMSL
c9HDgz0gemIFp1OxGrZZUCYSPPtA/1/6bkq5GjYmeM++PdoHB6+rn9lTo4Zy
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
           "]]}, Annotation[#, "Charting`Private`Tag$157542#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
7QQ7MN8P6n5XQ7u1eSm+2/og/IC3mNa8Gk58EQmfJDh7ftFJbUUNLWUjtfZv
74OmmKvXldnVMWnf39pWgmc3yLXI86jjR8l3W5Wl+0As4w2njJA6Ok/9sooi
2FTezWybuDqKe7w3qCX48IuZsxLS6mg3Q11YIjiZFF8tpqSOfEA/vm1HH1TR
t/0S1lTH8+0+z4wJHvKqVhc0VMd6LdUiO4K5vjkGbzRTx9WlA/67CVY//f0R
t6067s5X6yUR7L724ug6qjp201/8VSD4XPIWKXZPdSxblexlJ7hg6wtPFl91
3FCb7tNOvL+9cNetlQB15Mi1vnmN4CW98c6lE+pYpeV12pRgyYazGxci1NGe
9Q/LOFGvFVXEZua8Oo6m2qlEEXz0y9NLPxLUMTMy6u86gm8Fk2u/pqhjhlV5
wAVCvzd/vvwdvaOObOelQuYIvSdiw/WGctTxZ+WYqBPBfMKCpwYfq+OFcFXq
I6JfujmPnzKfq+M4RW7bNNFPH1Wz7z3V6qjT8itanuCn1qf2tzWr47aRd6Mn
CH8wenmzmjvVcc1twbELhH9Y/B4yG/rV0U3uS0Dsf32w+2wv5c03dRxhy1jx
J/wXwnP0Ss2cOvocGmA1FemDzHTOxoo/6tg5gDEb/+/X53r4jFsDNbaKD8cI
9UHSxB2VbEUNDI/JG363oQ9enNI8nKmhgadepxxWJ+ZlkK0l97YBcf3ENDWF
mCeVLf/EU2w0UOr4fSslYt5aKD7cFwI08I5ekGcVSx/MDy5ZRJ/QwAs3DxZX
/2OAeOD1c2ciCO6S3F1MzHPgpdrfJxM00Foy+FDQEgN4qqUn/B5r4N3gdVVm
U8R+ZNt4Y0OpBr5MGpLN+U7sVx+DzMtrNDAzutV75isD2FjKszlbNdBraI+o
1wixP5iRvR5Pa6Bzv6jnMQYDtHt+cFN/a+BAvdITu24GnDiQXLXCqonP0rwL
RDsY8DOuf/MuQU3kGcu9Hd3MgJHWoI5pLU1cSTr5I+4lA7b5CMSkG2vi4Y6d
+sOVDNgz82KnqaUmlnKJCCu9YABTkOVKiqsmPt63GJhYxAC6a7KldoQm3vxx
R+1yJgNeDr2oiXijiSoeQt/3RjBg+YRHgHSjJk7OHQsrCWGA7loWsZZ2Tcx5
IOI5e4wBpbLkUIlhTex3/iCABxlQENiv9natFjYZ7PssQGXAjcXVhxw2Wnhs
bn1HshwDui4/cCp21MJoQRpr7zYG8IuS2V09tfBJ8Jwt1xbie2WQvPdRkBYq
flqSMSa+Z+eipcVtr2mh0tjVC8ylXgjmIl+/3q2Fa06frh6q64XjBn0LDz9q
YWp+CH/Cq14ICTzkXjOqhVJGumekK3ohsjVu+/iCFl6RgwsKj3shMbmpzFBY
G+V2THGfv9YLBWK2zHFnbcT0o/77XXthTGH3dmOGNn7SvqH7Z6AHJj0+XXb8
rI28TyuPt3b1wM/EI98PTmhjnZvbbCqtBxZ+Xi1LWdLGubUSySvVPcD+nG75
VUQHSzXU2Q1v98A2A4fAVDcdpIaqaT+i9sAeG6eySaYOjmpM/Myv7YZbRmq+
vUM6KHA2YPh0ZTd07OQVrJvUwQ0pG/pNn3aDhdD7o3eXdVDkfdXN93e7QeWj
ppK9mC4+k2BmJ5zuhpVgoZwyN12c5X/8xUy5G9KTO69FM3SxzYrM+y61Czou
FEPQZ108/5LNTT2hC3hCE366TejiaCj/h/sxXRDtQbLVWNJF2yCtrpjgLjgo
/Xzd2GY9nJStZ7G1Is53L5KjbFz0MMwiJlFjpRM6+yiBwj16OHGaP/yhfyds
o+slFQ/qYeUO1opnnp1wvF7qqdW4HlpsvuVe59AJfM9n5sKX9HAgWeIDC3TC
rsTrEZ/E9PHxCZMtHzd3QpNxe3z+Hn3MFY045d7cAWJalYUmB/Xx7fvjTr/f
dsAhxfutzKP6eOdTxvmcig7gFDkmwHtOH1/LfKsTe9gBFjN8t4890MfE+O2l
d2I6oDbH/pH+V30UGMvikjDoAIHbus2dM/roJOWw46p6B+y9JvkjcFkfHefe
hm5U6ACWyGnVLG4DrNhh9MpYtAOMna9VrFExwEkbpwLvpXao5KQ30I4bYEN/
fh2zsh04V8u/+kUYII/2hxLPknZwXcjiXj1vgBz2qrUzBe2w+OXIbrU0A/S5
YgTOGe2gWb2xN63cAD3KVuM3RrfD06DdY94rBui29Eol3KYd6tdsf+XLboh+
6+srSs3bYSB9Me0wjyG+zZ7btQbbYV39XfMQcUMUj1QM+KjZDt4S3x9cMTRE
eZ0fs/Fb2+Fk6eszKWaGmDizLjhArB3irFOo6baGmEX5L3HvpnYoDdFnz/U0
xAT+tDNXuduBuy12f80ZQyT/ev7q1xIdJP08DWovGCKXxYkv8fN00P6zU/BD
oiEOuvw10pqmwz7Z3trODEMM6mQeoY/ToeLsjm3fagyR7fptCxkGHVo3/f49
XWeISnuuNpzuosPIY1r7Is0Qm3ilREfodNjIOBHD9tEQ+f+78HttEx38VWs/
i/41xAeecnDmJR3O1KdVbF1rhJA23HW7ig7Jnoeu7eA1wqfNvB2d5XR4GcuH
aluM8B2KtKaV0KFDYmSzzg4jrOF4or71KR0mSsunDJWN0KBPtOndEzoIffHO
sjIywrCSEc89j+igEKoeusvcCK/jr5fOeXQAXo7dVDsj/PTVesvhXDpQc/pk
3J2MUGC28kl6Dh0O6z35t8fLCNszJLJH7xN5qi26x8/PCJuVHZV33aPDDT9q
UUCQERZOqJ3rzKRD4R/ZS8dOGaEkf1rnqbt0eHv9j1dopBF2TjpTtTLo0CPb
phV50QiPVVJ0BO7Q4fvLbN7zV4ww782eYp7bdGCjhozGphH3m3lMSafTQWSS
/DLprhHGXZZQ8LhFB5XoLWmpuUaY1Ho+ufgmHUjCM4G3nxgh09PPYxvBroV1
ZvfKjPC/kLvlz2/QIdj0lvjDl0b414uDuZ/gC4yA+cfvjVDBNXxBneDbwUB7
1mKElPxOQymCn7ILPijvJu5P/j6kQvD722MRLz8aoY5blpgnwUzVKsd3o0Zo
b1Iv/Ijg6forio0/CL2SDLiEifdzeO1d07ZAPP98n2wOweJzmv1df43QzDc8
255Yv9UVIZnLHMZ4xuBliBpR3wnZ+aN6G41xfYZ+qy5Rf+bbzupvm42RvL78
qz+hT5PHc45MSWPM4vi1vobQb2EhmWIvb4wHN78+okvoLXnteAabujFyvO70
GMiig62Cw3ipvjH2Rf/ekE/0K7ROTf0AyRhNP8833iH6me3NHylqa4z3fOJb
yol+ty5NNzRTjZF6Mcp9hfDD72S6QJSXMb5qT3t2qIDIx8pPvVT9jdG4MVWQ
hfCTfcPV/KFgY9SYgrevi+kQsffIXGqoMbI2ePzJ/78f01Tifsca4yzULC9V
0OHvzg1dj68b42Rwf8aeGjrINf2Q8L5tjBEmBvFTr+lw9l9hae1jY9yoG9Mc
10CHgluJqydLjdH/auPelGbCL+qB1rIviefPCH+oa6OD0gHFzwmtxnhf72Lc
XWLeXFm5FY17jfGvI6es2Uc6nL8zeWr6kzGaf6KK8g8R/Wp7xO00Q6y/eEOM
+Hc6XNaV05EQAjyzxvffTyLvl3SsO0cXB+w4cX345bp2GAwcp53bAei/jV/2
KS+xX91/uG9cG3D6XrPdX9F2GFq/I+mpG6DmbEL1TmL/MeyXGjXNAoxxV92e
HdwOB0+xqi7kAV59cfFMeEg7pGz8Ep73FDD6m7Hl0ah2mCTd4+OpBaywuF9W
ktQONwslDLtHAIWvX7gZ+7Qdfr+60qixCfHhZHX4jt/txPlhe+ppUcTJ45Sa
CLYOcBer9H65BfFP/sdHE9wdRF4ambOQQTQ/z71t7dYOiFIykHDXQbR6Jlxu
bNEB7Lcnjke7ITosVyz63eoAvlMk8Za7iGrhd4f4yJ0go/g72F/GBBVXD0jq
feiCqvwLqXsVTLBKY7nkQWcX7JLhq/JUMcF0udwYvk9dcEpKdq2jtglem9N7
Or7QBXWbne6AhQkmHd3olbi9G/azP2sQ8TfB/Zt/WB+J6oZ7Hw9KNueaYMPd
hO2Zqj2g6TFvXv/IBG1jnsMFgx74wDgb8PaJCV6QTT+716IHpjpvvCgvM0EH
z2RLFs8eMG6qs33w3gRTG7+zNVzqgY8vJMMiR03Q7l3dGT1mD4hdY7Tv3GGK
3ytE5ctCeqFi46RqjLwpdu1s2FQV3QsuV/9c7VA2xdGl8f5H8b2QmiSx65S2
KW5lUYqxyuyFjVd8m6osTdHZzY3zNHF+Yo+frjU/bIolX6Vbd/EwIHs927ab
wabY41bf0i3EAJM4wZiJ46aYLRzZZ0Kcz6JitSEhwhTp8x33G5QZ8PvSmWp6
oikOVVa3nrUjzqfnOUs9ik2xUdTLm3KZOM+tERN88twURRQF7vy9wgDF84rH
/5WbYvL5KOG4VAYcPLdL9f4bU0yN3eFseJ8Bw9GphWPtpmjhZtW+nji/nmN5
yK3bY4pyYo4Dua8YIBldfjiOaYpHt/qDBJHvvc8y5ZSGifpP2d3ObmUAI1Iy
99i8Kep/qImY+sKA0L9q7O+WTLFwW+5W3zEGCEeS9gv9NcW3r8Y0SyYZ4HjG
X6p8LQnP6EtgH5HvZ/+ERnNykfCY28EzzxYZcC0i7pPbBhIW6Ja+2LvMgNbw
wrsrwiTC77+fWbH2QeDyyxW7/0gYm2pZGUXke+7wNo+srST0fQY2CeuIPPf7
c9X0dhK2KfFwB3MR+SxsVtRUjoRHZHrvyBD5ZHxpTViKEgm/vWy6V0rk+Uun
NzFGVEn4Q4D/5WYiz78L1b1xWY+E/500/uAh3AdmDWB/1YiE/Haqe7YQ+ahe
2JLrpgkJDQ5kuVQQ+cnKf1ddpjkJvX8V3lUi8lVTmVPUQzIJzwmt+oYT+ct2
rZdukR0JhxQlxu4T+ayV6jtbRiFhfkGyWw6R3+0fBBS+dCIhz7+RX1FEnmuf
O+7/3o2EJil3f2sS+c+BFC7Z4kXCiF6zm+8J7kqOYXbtJeF3nf3r/5/fnYdi
Uwf8SNgsFRMbSjBD7dqukUMkJLHJ2qUT7B5zk/N7EAmvWXy8eoPgAXpm7dwx
En7xUIo7QrC35MMzf06R8HBxxjFpgj8deaK9Jpyop+hFTBnxPp/XpdNcUSSc
fs82u43goQ01BQLnSOi0f/2fQGK9vt7vfMUukfDNnEN3ClHP2JMmiW3xJNw/
cqDyJlHvwb/tDPkkEh7Npn86TegxaduXrJZMwm13NsXoEHoFZny21btBwvsG
r7s7CT1/fBvnMLlNQvkZJ+FdhN7BBlNvrDJJ+FVuX8RDoh/T8Yvh9tkkFLYP
NPpI5NHjzL+arg8JfTtXUmeJ/s3Lr53aU0DC81IZVWN8RL4N43l0oIiEcg87
xiqJvLr0QXD/kRISrm+Tcwjk6YM/B7b1RlURetU6fThC+OdMufz1S69IyHHA
yOwt4a9/HGo2SbWEn3z9v8wS/mN7CK/vNpHQVDJz768/DLiwYBGW20pCx4qX
ZU1EPuUw36XxpIOEut7Ie3aBAetHPPNqmCTcHXstP+EnA+I1fPfWDZJwfCzY
a4SYB57zAf/Rhki4lbPjl8Q4A/i2hV/tnySeb2n1Wv8TAzb73AxdXibhz0ef
GwSIebtVnKnGtkrCnRvbe6MbGSC2mvtt/RozfHIv7noHMZ8SmaV7RLnNUO7v
yRGpagbsGGi31P3PDN9dkdQJecgADVcekRADMzx8W2Gd7GkGvHmUzt0FZpjU
fSNrP5Evbf/IrKqZmeGtelWJ84cZ4J9pMvbD1gzNPO/9CPAk3j8SUurnbYYZ
jvbPvxszYOXoF3unGDP85r2m8eu/XoitDTZ7ftEMwwV0I0IWe2GT0IoOf7wZ
Pn7nmzz5oxdUyoW3tiSb4a+nrhvjB3ph71+bH2YPzLCgNFGqiMiP9XEv4jQb
zFDbTutGY2AvOPSTIpObzdBjoWfXz3298Emp/eh0mxkODel/+0fkx6W2by6F
DDOUllz5OWLWCwrCUjLSk8R1SQsW2n+9cDU7oVaQ1xw55Tj1zOt7wLXa58+s
gzluLnkX0b+xB6J/CKYaupjjZx0OBPYeyNvaoHTJwxxnOwRtbi11w+J5ZW9R
X3P0rOgyV/zSDWm2y2/glDnetaXBwDMiP35MuZR40xy3/Y3vyqV0gw1LA7/M
gDmeurb+9/PELjA2V5Zz87PA3QLS37NWO4Bs2fOf2yELVHGLqTKe7wAq+exG
tyALvG/OsTo0QeQvu/ZF11MWeH0wrcGwowNSnU69d71ogeHVGvsMcjtg0u/l
PtdcC5w/nSeSZtsBaZfs7rqMWqDGKzdfo+x2uBe7eM3lqwWubGFwLd4kvu/x
WRdcflhg6t35jdVX2uFN0kyAy4IFHmwWFgwII84LN9L0XdZaYlbiAc5DlHbA
vI+9zjsssWgllIuXvR2+NwQJOPtZoop18C+nU8T5mZYBhYcscdOXg3XmgXTY
TG8OZAu2xJ0z12XI++lgypBvKAqxRJ6lwbB4Ch1uTYxGrIu1RMN/RzkXVehg
vt57tKLAEg3Kim1ozDZw570isLHYEh8Np8oLNrfBUf4a8HtuiU4fHZ6crW6D
DFGx2/w1llgop2vemNEGs/I9uw63WOIn5psN4nvbINN6V8V/05aYFnetsWC6
FUp3RY4em7fE5xbbc3C4FRodCgU+LFninzyuzOXuVph35wo6yWqF0nYvbjCr
W8E6oF6qRcAK4z+mf7OMa4XFBOOEKC0rnJ11GalVaAWea0EVXXpW+InmdOzq
1laQSs0YVTC2ws7t0neihFrBNmMZei2scNWY37fuXwtkF76Y3+lqhX9Gzbd/
62qB3S0q3l/CrbCnY3DztcstYHXfcexHlBWaHhYzFzrbAnjqdPDyOSvcH29l
VxbSAupbaqMEE6xw4Xlwlp1/CwgFOWWZ37FCjd5zUt0WLcBrEi7rkGWF3wdn
V4ygBTg2ZRV751hhH6/+pnc6LfCrZuJ16GMrjFbFJ1LyLcDkOfP5UbUVNj9v
pqjwtkDH53sHX7y2wrqtaZMhHC3QXPp+uvadFQZSxLb1r9KgxnMj60CzFXI4
WUssztIgqzBbasOAFYpzfpE6yaSBr23jvuMrVphzYpLrbBENPCV/TkaxkPHr
+W6b049o4DQvcCKBnYyMG+ZTCQ9oYJHhef4BDxlnBPM2sN2hgfz3qZwecTL2
p228JBtHg21vhJSGJcmoOFb7bOYCDcRS9UqnpMmY2/vpfnc0DXgMz9dxKpPR
/odV9ORpGvxMEB7VNyIjbjjNY3GYBuN7DIIsTciYmCyiPuBPg88aPguO5mQ8
67wuKmE/Ddr7H60NsiPjre9v9bS8aNBU3HoljEJGrzGOczvdaVB7fm7TJScy
ch5JvG/qQoNSRSOZLC8yWp+x2fycQoPC1b1Fj/eS8aLcP3O+3TTI7bykXeFH
xuGS4ZWLxB5wI4Ju0R5EJs7DeqVVljS4unuh9eMxMs7abr8SZk6D2O1iLpOn
yPh3k3qWPYkGYc37D6yJItZ39tlWSyDqiy5K/RNDRldZu4wjRjS4p/n77dxF
Mo7qWG8qNqCB5lfS1Lc4MsZdWH96rT4NPtxNEh+5Qsbsz9+eHdcl9HfoIw9c
J2PyVoeni9o0mOKQDu1KI2Ol0F2f61o0ED5a2V53l4zSR3wTuTRoUCDNvlpz
n4xKEdlDE2o0MO7bpVSWS8aJeKt7H1Vp0HEl3e3JIzJWHysvmdhJAz/TkUu5
T8i4Zo39Oi6ClxZVSu8+I6Mk0WYTFRokPg77klZGxhPHY5SuKtNA0qduQ1Il
oe+v/t5ZJUJPoY2Gl16SUf/kcHggwVaNboei3pLxSM0S24oiDfojH9wIeU9G
l5wzXvcJDlafehfcSEbnlbZQT4LZxvVm/FvI2HTbEZQJvnHngsSedjIKOhy8
L0iwgn2bjUs3Ga8vBCdsJPgVu1jY7j4yPnT9MClJMKXS96HlRzIW7+outCR4
JKi4E76Qkffx4qvzBJ/etsyiO0pGKZMrG7oJ5uk1U1H9SkbyyO9YA2K99xKu
esj9IOPYgbv/lROsicxYyRkyumUxnlsS9TbMS78QWSAjizcP/CDY/dGRYb7f
ZDQOTS/II/T56VXFt/4vUe+rz8MhhH7nBNYas7Ja4xIHieFO6C3csDvgN7s1
qklLnXIk+lEQcfvWDKc1nvvan+ejTgMj1dH3X3ms0Uqhy+sc0T/6yM65L3zW
+Lny8IUKTWIe08MlmULWWBzAsn4N0f9ENr6IJnFrDDhf+KWL8IdkuXt+raQ1
ily7wOdJ+Od5QG53lbQ1hvN8cvhF+IvZpa/6WMkamfczGw4RfpTP8xtNMLTG
a16fDhgSfq7xeCpwAa1xL8c++X1kGtjz/YEzZtY4Xhl06I4NoV/YtduBtsT/
k3LErOxpUG9TvdvO0xpbeSR1Y4n5cmfhiDT3scZa+XMjlsT8/Sy1LzDytcbD
30+Ei/nQYJPEGLtKoDU6Po0TWfIj6pnmq9pwxho3UTYJpRwn+p/3RdIr2hrN
2zwM1EJocN+r5PLjC0R9uWfnRsJoMNjk6GR1xRojBczLE2No4Jp7Yzomk6jn
74Y55nUaLHoccKFnW+NXcuy67TdokCag+0oizxqf7in4efY24fezfQnVxda4
635rd2gODWzdxWUX3hD9if8U5PWCBpN8P66Q3lvjGo3xSHI1DeIaXs5fb7TG
ROH92eQ3RL2ae2pVOqzxt9XdxotNNMCN2V4Hh60x8ND+X5OfCL/Uyab2r7XB
nVyhbNQNxP4bvrQsz2WDSUJFmiFCLXBMrXHv6Q02uGQ0/a9ArAWKMg/v3LTZ
BqseRqzYyLaAXNiTpl1yNqg7uMh6yKQFxFU0WGutbXBC5/6V5dMtwH7LODj/
qg06rvUt27DQApck1qo+SSH+n/BOpH2lBdblNs88u2mDsvHHObPZW4GrxPVU
dZYNSq/eCjpCfL/4acfPtBbboLPov5Plmq0gwZIXP99mg4mF/XkLoa2ge3Bj
HvLZYopx2H/znG1Q9bP7oLmQLRY985s9LdAGBqcyFKxFbDH+7zFPbvE2MD4n
X+QoSbBiXZPrzjYwzyCV+ava4j5Nc+005zZwoIe+S7S3Rb+bgaev5LVBoO7n
T4xrthjTeDwlW54OS2+U+jXSbPHd4yP3inbS4SI5rCcp3RZ336gQrNWiQ6a7
QItZti2GPHYXXTWhA/2MWdXT57YYNyEk3O5OB423+amxPbb4x4TrLP0KHZbJ
x8i64nZYI2jkKfabDrEebM9v5tnhKkw8qRtuh6d1Jx0HH9vhTKjg2j3f2qFX
eXxO+qkdLrs42a7OtoMMC02zpMIOWRXcb1HYOqDuQdoLWqMdujYK5hhKdQDL
T7kq1u926Hf9wUE5nw4Ijd79NkB1F96Wk/+kNdQB/rnEoaVyFzKid7RLLXYC
90TBo6iK3Sjh1hnGJtcDktvTB9trduMnsbToNrUe0Pa+LLjj7W50sd3cc8eg
B3y69kc2N+7GgUCxGrXdPfDijThFpH83kQfId+xCemBfetLSs7+7MRtrPknU
9YDnjsqc41L2mGp2wnbGsxfGTVWNM7bb49R59t0O/r1w3CeP8X6HPfLlmQg/
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
           "]]}, Annotation[#, "Charting`Private`Tag$157542#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{1, 0.1420235040657881}, {1, 0.18423772849579323`}}], 
      GrayLevel[0], 
      PointBox[{1, 0.16313061628079067`}], {Arrowheads -> Small, 
       ArrowBox[{{5.0627999384093085`, 
        0.16313061628079067`}, {-16.056117052850343`, 
        0.16313061628079067`}}]}}, {
      PointSize[0.01], 
      LineBox[{{2, 0.146378237078263}, {2, 0.19035761451687327`}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{2, 0.16836792579756815`}], {Arrowheads -> Small, 
       ArrowBox[{{2., 0.16836792579756815`}, {2., 0.16836792579756815`}}]}}, {
      PointSize[0.01], 
      LineBox[{{3, 0.15127899892117885`}, {3, 0.19793727037560654`}}], 
      GrayLevel[0], 
      PointBox[{3, 0.1746081346483927}], {Arrowheads -> Small, 
       ArrowBox[{{6.752508645945722, 0.1746081346483927}, {-1.411875135913041,
         0.1746081346483927}}]}}, {
      PointSize[0.01], 
      LineBox[{{4, 0.1567298653561932}, {4, 0.20712136926073604`}}], 
      GrayLevel[0], 
      PointBox[{4, 0.18192561730846463`}], {Arrowheads -> Small, 
       ArrowBox[{{7.716883750857644, 0.18192561730846463`}, {
        0.5508507034433721, 0.18192561730846463`}}]}}, {
      PointSize[0.01], 
      LineBox[{{5, 0.16273491214496358`}, {5, 0.21805458436100483`}}], 
      GrayLevel[0], 
      PointBox[{5, 0.1903947482529842}], {Arrowheads -> Small, 
       ArrowBox[{{8.732919178063616, 0.1903947482529842}, {2.005437191547923, 
        0.1903947482529842}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, 0.16929821504914755`}, {6, 0.23088158886515597`}}], 
      GrayLevel[0], 
      PointBox[{6, 0.20008990195715176`}], {Arrowheads -> Small, 
       ArrowBox[{{9.778291559071507, 0.20008990195715176`}, {
        3.2514461292054726`, 0.20008990195715176`}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.17642698413949678`}, {7, 0.2457309253215285}}], 
      GrayLevel[0], 
      PointBox[{7, 0.21107895473051264`}], {Arrowheads -> Small, 
       ArrowBox[{{10.834880599866501`, 0.21107895473051264`}, {
        4.381573072983338, 0.21107895473051264`}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, 0.18420051859592984`}, {8, 0.2623601315491722}}], 
      GrayLevel[0], 
      PointBox[{8, 0.22328032507255102`}], {Arrowheads -> Small, 
       ArrowBox[{{11.878125832277576`, 0.22328032507255102`}, {
        5.4261091063795215`, 0.22328032507255102`}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 0.19277020670753195`}, {9, 0.28015574063784726`}}], 
      GrayLevel[0], 
      PointBox[{9, 0.2364629736726896}], {Arrowheads -> Small, 
       ArrowBox[{{12.882721403944124`, 0.2364629736726896}, {
        6.392344486893071, 0.2364629736726896}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.20229057107248263`}, {10, 0.2984881550369101}}], 
      GrayLevel[0], 
      PointBox[{10, 0.2503893630546964}], {Arrowheads -> Small, 
       ArrowBox[{{13.834219790366589`, 0.2503893630546964}, {
        7.289571028724637, 0.2503893630546964}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.21291613428896128`}, {11, 0.316727777195717}}], 
      GrayLevel[0], 
      PointBox[{11, 0.26482195574233913`}], {Arrowheads -> Small, 
       ArrowBox[{{14.725371349983906`, 0.26482195574233913`}, {
        8.14150233383789, 0.26482195574233913`}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 0.22480141895514744`}, {12, 0.33424500956362435`}}], 
      GrayLevel[0], 
      PointBox[{12, 0.27952321425938587`}], {Arrowheads -> Small, 
       ArrowBox[{{15.562948728523246`, 0.27952321425938587`}, {
        8.965168232691077, 0.27952321425938587`}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 0.23810094766922044`}, {13, 0.3504102545899883}}], 
      GrayLevel[0], 
      PointBox[{13, 0.29425560112960436`}], {Arrowheads -> Small, 
       ArrowBox[{{16.366830745016543`, 0.29425560112960436`}, {
        9.769920769560633, 0.29425560112960436`}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 0.25296924302935986`}, {14, 0.3645939147241655}}], 
      GrayLevel[0], 
      PointBox[{14, 0.3087815788767627}], {Arrowheads -> Small, 
       ArrowBox[{{17.14978575865031, 0.3087815788767627}, {
        10.561505975507625`, 0.3087815788767627}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 0.26954063302025016`}, {15, 0.37617769488355124`}}], 
      GrayLevel[0], 
      PointBox[{15, 0.32285916395190073`}], {Arrowheads -> Small, 
       ArrowBox[{{17.920020735220152`, 0.32285916395190073`}, {
        11.343555017178646`, 0.32285916395190073`}}]}}, {
      PointSize[0.01], 
      LineBox[{{16, 0.287484969516191}, {16, 0.38480325675043764`}}], 
      GrayLevel[0], 
      PointBox[{16, 0.3361441131333143}], {Arrowheads -> Small, 
       ArrowBox[{{18.678034580476105`, 0.3361441131333143}, {
        12.11258125137351, 0.3361441131333143}}]}}, {
      PointSize[0.01], 
      LineBox[{{17, 0.30600762828109734`}, {17, 0.3903722187720144}}], 
      GrayLevel[0], 
      PointBox[{17, 0.34818992352655587`}], {Arrowheads -> Small, 
       ArrowBox[{{19.415647324381354`, 0.34818992352655587`}, {
        12.856008496387055`, 0.34818992352655587`}}]}}, {
      PointSize[0.01], 
      LineBox[{{18, 0.3242937904653888}, {18, 0.39279750186350987`}}], 
      GrayLevel[0], 
      PointBox[{18, 0.35854564616444934`}], {Arrowheads -> Small, 
       ArrowBox[{{20.11769856599035, 0.35854564616444934`}, {
        13.55347066216336, 0.35854564616444934`}}]}}, {
      PointSize[0.01], 
      LineBox[{{19, 0.34152863721948534`}, {19, 0.3919920269401524}}], 
      GrayLevel[0], 
      PointBox[{19, 0.36676033207981884`}], {Arrowheads -> Small, 
       ArrowBox[{{20.754301687832264`, 0.36676033207981884`}, {
        14.169804373573125`, 0.36676033207981884`}}]}}, {
      PointSize[0.01], 
      LineBox[{{20, 0.35689734969380693`}, {20, 0.38786871491717034`}}], 
      GrayLevel[0], 
      PointBox[{20, 0.37238303230548864`}], {Arrowheads -> Small, 
       ArrowBox[{{21.26382635066925, 0.37238303230548864`}, {
        14.643757902114107`, 0.37238303230548864`}}]}}, {
      PointSize[0.01], 
      LineBox[{{21, 0.36958510903877323`}, {21, 0.3803404867097922}}], 
      GrayLevel[0], 
      PointBox[{21, 0.3749627978742827}], {Arrowheads -> Small, 
       ArrowBox[{{25.99081579558395, 0.3749627978742827}, {
        21.527969776018317`, 0.3749627978742827}}]}}, {
      PointSize[0.01], 
      LineBox[{{22, 0.3787770964048042}, {22, 0.36932026323324646`}}], 
      GrayLevel[0], 
      PointBox[{22, 0.37404867981902534`}], {Arrowheads -> Small, 
       ArrowBox[{{26.11078582120799, 0.37404867981902534`}, {
        21.609158407488508`, 0.37404867981902534`}}]}}, {
      PointSize[0.01], 
      LineBox[{{23, 0.3836894056778713}, {23, 0.35475483560228405`}}], 
      GrayLevel[0], 
      PointBox[{23, 0.36922212064007764`}], {Arrowheads -> Small, 
       ArrowBox[{{26.686406567123868`, 0.36922212064007764`}, {
        22.007662205455397`, 0.36922212064007764`}}]}}, {
      PointSize[0.01], 
      LineBox[{{24, 0.3842491236616319}, {24, 0.33737000952067575`}}], 
      GrayLevel[0], 
      PointBox[{24, 0.3608095665911538}], {Arrowheads -> Small, 
       ArrowBox[{{27.551901454442163`, 0.3608095665911538}, {
        22.612453467873166`, 0.3608095665911538}}]}}, {
      PointSize[0.01], 
      LineBox[{{25, 0.381094330077429}, {25, 0.31867060528121227`}}], 
      GrayLevel[0], 
      PointBox[{25, 0.34988246767932063`}], {Arrowheads -> Small, 
       ArrowBox[{{28.550744745876138`, 0.34988246767932063`}, {
        23.293321099512486`, 0.34988246767932063`}}]}}, {
      PointSize[0.01], 
      LineBox[{{26, 0.3748940173821575}, {26, 0.30019531337620686`}}], 
      GrayLevel[0], 
      PointBox[{26, 0.33754466537918215`}], {Arrowheads -> Small, 
       ArrowBox[{{29.612907160252647`, 0.33754466537918215`}, {
        23.990451927923324`, 0.33754466537918215`}}]}}, {
      PointSize[0.01], 
      LineBox[{{27, 0.36631717803271213`}, {27, 0.28348282429797267`}}], 
      GrayLevel[0], 
      PointBox[{27, 0.3249000011653424}], {Arrowheads -> Small, 
       ArrowBox[{{30.70627626182235, 0.3249000011653424}, {
        24.669577564483177`, 0.3249000011653424}}]}}, {
      PointSize[0.01], 
      LineBox[{{28, 0.35603280448598773`}, {28, 0.2700718285388231}}], 
      GrayLevel[0], 
      PointBox[{28, 0.3130523165124054}], {Arrowheads -> Small, 
       ArrowBox[{{31.80526949496477, 0.3130523165124054}, {
        25.299046325076485`, 0.3130523165124054}}]}}, {
      PointSize[0.01], 
      LineBox[{{29, 0.34470988919887907`}, {29, 0.2615010165910713}}], 
      GrayLevel[0], 
      PointBox[{29, 0.30310545289497515`}], {Arrowheads -> Small, 
       ArrowBox[{{32.86001974039077, 0.30310545289497515`}, {
        25.838201847644402`, 0.30310545289497515`}}]}}, {
      PointSize[0.01], 
      LineBox[{{30, 0.33301742462828093`}, {30, 0.25930907894703054`}}], 
      GrayLevel[0], 
      PointBox[{30, 0.29616325178765573`}], {Arrowheads -> Small, 
       ArrowBox[{{33.75815754296174, 0.29616325178765573`}, {
        26.228634350082004`, 0.29616325178765573`}}]}}, {
      PointSize[0.01], 
      LineBox[{{31, 0.32162046903553876`}, {31, 0.26495572573216547`}}], 
      GrayLevel[0], 
      PointBox[{31, 0.2932880973838521}], {Arrowheads -> Small, 
       ArrowBox[{{34.215424884039905`, 0.2932880973838521}, {
        26.39556698747653, 0.2932880973838521}}]}}, {
      PointSize[0.01], 
      LineBox[{{32, 0.3110935941843681}, {32, 0.2780841186344247}}], 
      GrayLevel[0], 
      PointBox[{32, 0.2945888564093964}], {Arrowheads -> Small, 
       ArrowBox[{{33.9989812110596, 0.2945888564093964}, {26.3195936339255, 
        0.2945888564093964}}]}}, {
      PointSize[0.01], 
      LineBox[{{33, 0.30192088534085426`}, {33, 0.2965208709042409}}], 
      RGBColor[1, 0, 0], 
      PointBox[{33, 0.2992208781225476}], {Arrowheads -> Small, 
       ArrowBox[{{33., 0.2992208781225476}, {33., 0.2992208781225476}}]}}, {
      PointSize[0.01], 
      LineBox[{{34, 0.2945824935755332}, {34, 0.3180136154251979}}], 
      GrayLevel[0], 
      PointBox[{34, 0.3062980545003655}], {Arrowheads -> Small, 
       ArrowBox[{{39.353652368487126`, 0.3062980545003655}, {
        33.46622543806916, 0.3062980545003655}}]}}, {
      PointSize[0.01], 
      LineBox[{{35, 0.2895585699589409}, {35, 0.34030998508087984`}}], 
      GrayLevel[0], 
      PointBox[{35, 0.3149342775199104}], {Arrowheads -> Small, 
       ArrowBox[{{40.008740239122275`, 0.3149342775199104}, {
        33.86133490940674, 0.3149342775199104}}]}}, {
      PointSize[0.01], 
      LineBox[{{36, 0.2873292655616136}, {36, 0.3611576127548706}}], 
      GrayLevel[0], 
      PointBox[{36, 0.3242434391582421}], {Arrowheads -> Small, 
       ArrowBox[{{40.64815015757585, 0.3242434391582421}, {34.27870465790588, 
        0.3242434391582421}}]}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.28837473145408715`}, {37, 0.37830413133075413`}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3333394313924206}], {Arrowheads -> Small, 
       ArrowBox[{{41.244079942471956`, 0.3333394313924206}, {
        34.685135366883216`, 0.3333394313924206}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.2931751187068977}, {38, 0.3894971736921146}}], 
      GrayLevel[0], 
      PointBox[{38, 0.34133614619950614`}], {Arrowheads -> Small, 
       ArrowBox[{{41.763690496947255`, 0.34133614619950614`}, {
        35.04682962654944, 0.34133614619950614`}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.30216801666989423`}, {39, 0.3925664381988325}}], 
      GrayLevel[0], 
      PointBox[{39, 0.3473672274343634}], {Arrowheads -> Small, 
       ArrowBox[{{42.16226413239076, 0.3473672274343634}, {
        35.325643251000564`, 0.3473672274343634}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3148120951171228}, {40, 0.3872291291656111}}], 
      GrayLevel[0], 
      PointBox[{40, 0.35102061214136693`}], {Arrowheads -> Small, 
       ArrowBox[{{42.40988827390841, 0.35102061214136693`}, {
        35.49832634170552, 0.35102061214136693`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.329587104246827}, {41, 0.37508995686197577`}}], 
      GrayLevel[0], 
      PointBox[{41, 0.3523385305544014}], {Arrowheads -> Small, 
       ArrowBox[{{42.50083729601718, 0.3523385305544014}, {35.56149624457131, 
        0.3523385305544014}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.3449302325365629}, {42, 0.3578356970337485}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.35138296478515574`}], {Arrowheads -> Small, 
       ArrowBox[{{42., 0.35138296478515574`}, {42., 
        0.35138296478515574`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.3592786684638869}, {43, 0.33715312542675174`}}], 
      GrayLevel[0], 
      PointBox[{43, 0.3482158969453193}], {Arrowheads -> Small, 
       ArrowBox[{{48.864139581519765`, 0.3482158969453193}, {
        42.48078097501597, 0.3482158969453193}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.3710696005063552}, {44, 0.3147290177868075}}], 
      GrayLevel[0], 
      PointBox[{44, 0.34289930914658134`}], {Arrowheads -> Small, 
       ArrowBox[{{49.13234742989875, 0.34289930914658134`}, {
        42.733759835606826`, 0.34289930914658134`}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.37874021714152417`}, {45, 0.29225014985973796`}}], 
      GrayLevel[0], 
      PointBox[{45, 0.33549518350063107`}], {Arrowheads -> Small, 
       ArrowBox[{{49.486899049459524`, 0.33549518350063107`}, {
        43.07570931882891, 0.33549518350063107`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.38072770684694995`}, {46, 0.2714032973913652}}], 
      GrayLevel[0], 
      PointBox[{46, 0.3260655021191576}], {Arrowheads -> Small, 
       ArrowBox[{{49.915934465572555`, 0.3260655021191576}, {
        43.49945932636028, 0.3260655021191576}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.37553799918989184`}, {47, 0.25383403748894817`}}], 
      GrayLevel[0], 
      PointBox[{47, 0.31468601833942}], {Arrowheads -> Small, 
       ArrowBox[{{50.41220719033145, 0.31468601833942}, {44.0018915266635, 
        0.31468601833942}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.3632580688007779}, {48, 0.24024037857279293`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3017492236867854}], {Arrowheads -> Small, 
       ArrowBox[{{50.96134718369942, 0.3017492236867854}, {44.57290680812378, 
        0.3017492236867854}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.34555593537320467`}, {49, 0.23037276037625215`}}], 
      GrayLevel[0], 
      PointBox[{49, 0.2879643478747284}], {Arrowheads -> Small, 
       ArrowBox[{{51.54285396165902, 0.2879643478747284}, {45.19684501265992, 
        0.2879643478747284}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.32416835969047164`}, {50, 0.22394042399411535`}}], 
      GrayLevel[0], 
      PointBox[{50, 0.2740543918422935}], {Arrowheads -> Small, 
       ArrowBox[{{52.14064524407691, 0.2740543918422935}, {45.86533745009878, 
        0.2740543918422935}}]}}, {
      PointSize[0.01], 
      LineBox[{{51, 0.3008321025358785}, {51, 0.22065261052117222`}}], 
      GrayLevel[0], 
      PointBox[{51, 0.26074235652852534`}], {Arrowheads -> Small, 
       ArrowBox[{{52.74003280285599, 0.26074235652852534`}, {
        46.57896069153441, 0.26074235652852534`}}]}}, {
      PointSize[0.01], 
      LineBox[{{52, 0.27728392469272484`}, {52, 0.22021856105221235`}}], 
      GrayLevel[0], 
      PointBox[{52, 0.24875124287246858`}], {Arrowheads -> Small, 
       ArrowBox[{{53.32345827015378, 0.24875124287246858`}, {
        47.34174565730527, 0.24875124287246858`}}]}}, {
      PointSize[0.01], 
      LineBox[{{53, 0.25526058694431014`}, {53, 0.22234751668202524`}}], 
      GrayLevel[0], 
      PointBox[{53, 0.2388040518131677}], {Arrowheads -> Small, 
       ArrowBox[{{53.863498711213296`, 0.2388040518131677}, {
        48.12544796129669, 0.2388040518131677}}]}}, {
      PointSize[0.01], 
      LineBox[{{54, 0.23649885007393404`}, {54, 0.2267487185054006}}], 
      GrayLevel[0], 
      PointBox[{54, 0.23162378428966732`}], {Arrowheads -> Small, 
       ArrowBox[{{54.30951289396232, 0.23162378428966732`}, {
        48.85034258897305, 0.23162378428966732`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55, 0.22268390920417805`}, {55, 0.23313502383394016`}}], 
      GrayLevel[0], 
      PointBox[{55, 0.2279094665190591}], {Arrowheads -> Small, 
       ArrowBox[{{60.86315338501251, 0.2279094665190591}, {54.20572754942684, 
        0.2279094665190591}}]}}, {
      PointSize[0.01], 
      LineBox[{{56, 0.21431494926110786`}, {56, 0.24130246296592525`}}], 
      GrayLevel[0], 
      PointBox[{56, 0.22780870611351656`}], {Arrowheads -> Small, 
       ArrowBox[{{60.851354339590685`, 0.22780870611351656`}, {
        54.18843063311973, 0.22780870611351656`}}]}}, {
      PointSize[0.01], 
      LineBox[{{57, 0.21070514497427337`}, {57, 0.25113023918631705`}}], 
      GrayLevel[0], 
      PointBox[{57, 0.23091769208029522`}], {Arrowheads -> Small, 
       ArrowBox[{{61.207611083485254`, 0.23091769208029522`}, {
        54.68393154577008, 0.23091769208029522`}}]}}, {
      PointSize[0.01], 
      LineBox[{{58, 0.21111610541250628`}, {58, 0.26250117199688855`}}], 
      GrayLevel[0], 
      PointBox[{58, 0.23680863870469743`}], {Arrowheads -> Small, 
       ArrowBox[{{61.851540154131975`, 0.23680863870469743`}, {
        55.47604942603385, 0.23680863870469743`}}]}}, {
      PointSize[0.01], 
      LineBox[{{59, 0.21480943964463842`}, {59, 0.2752980808994132}}], 
      GrayLevel[0], 
      PointBox[{59, 0.2450537602720258}], {Arrowheads -> Small, 
       ArrowBox[{{62.72496533520792, 0.2450537602720258}, {56.40133002500088, 
        0.2450537602720258}}]}}, {
      PointSize[0.01], 
      LineBox[{{60, 0.22104675673950167`}, {60, 0.2894037853956641}}], 
      GrayLevel[0], 
      PointBox[{60, 0.25522527106758286`}], {Arrowheads -> Small, 
       ArrowBox[{{63.79959393028238, 0.25522527106758286`}, {
        57.37548945684798, 0.25522527106758286`}}]}}, {
      PointSize[0.01], 
      LineBox[{{61, 0.22908966576592765`}, {61, 0.3047011049874142}}], 
      GrayLevel[0], 
      PointBox[{61, 0.2668953853766709}], {Arrowheads -> Small, 
       ArrowBox[{{65.02302345968539, 0.2668953853766709}, {58.3556750691436, 
        0.2668953853766709}}]}}, {
      PointSize[0.01], 
      LineBox[{{62, 0.23819977579274831`}, {62, 0.3210728591764371}}], 
      GrayLevel[0], 
      PointBox[{62, 0.2796363174845927}], {Arrowheads -> Small, 
       ArrowBox[{{66.33139958595474, 0.2796363174845927}, {59.31720487628099, 
        0.2796363174845927}}]}}, {
      PointSize[0.01], 
      LineBox[{{63, 0.24765569322452116`}, {63, 0.33838202060964095`}}], 
      GrayLevel[0], 
      PointBox[{63, 0.29301885691708107`}], {Arrowheads -> Small, 
       ArrowBox[{{67.65946257768307, 0.29301885691708107`}, {
        60.24319701666323, 0.29301885691708107`}}]}}, {
      PointSize[0.01], 
      LineBox[{{64, 0.25712696318749606`}, {64, 0.3560350842720438}}], 
      GrayLevel[0], 
      PointBox[{64, 0.3065810237297699}], {Arrowheads -> Small, 
       ArrowBox[{{68.94557874409522, 0.3065810237297699}, {61.11810580130165, 
        0.3065810237297699}}]}}, {
      PointSize[0.01], 
      LineBox[{{65, 0.2666740695296155}, {65, 0.372982067486773}}], 
      GrayLevel[0], 
      PointBox[{65, 0.31982806850819423`}], {Arrowheads -> Small, 
       ArrowBox[{{70.13783852630499, 0.31982806850819423`}, {
        61.92605678351125, 0.31982806850819423`}}]}}, {
      PointSize[0.01], 
      LineBox[{{66, 0.27637449343454734`}, {66, 0.3881531407220909}}], 
      GrayLevel[0], 
      PointBox[{66, 0.3322638170783191}], {Arrowheads -> Small, 
       ArrowBox[{{71.20257651511965, 0.3322638170783191}, {62.65167236491992, 
        0.3322638170783191}}]}}, {
      PointSize[0.01], 
      LineBox[{{67, 0.28630571608596}, {67, 0.40047847444626034`}}], 
      GrayLevel[0], 
      PointBox[{67, 0.34339209526611014`}], {Arrowheads -> Small, 
       ArrowBox[{{72.15417575997549, 0.34339209526611014`}, {
        63.28326782118459, 0.34339209526611014`}}]}}, {
      PointSize[0.01], 
      LineBox[{{68, 0.29654521866752137`}, {68, 0.408888239127544}}], 
      GrayLevel[0], 
      PointBox[{68, 0.3527167288975327}], {Arrowheads -> Small, 
       ArrowBox[{{73.00248464819626, 0.3527167288975327}, {63.81079854457392, 
        0.3527167288975327}}]}}, {
      PointSize[0.01], 
      LineBox[{{69, 0.30717048236289957`}, {69, 0.4123126052342042}}], 
      GrayLevel[0], 
      PointBox[{69, 0.3597415437985519}], {Arrowheads -> Small, 
       ArrowBox[{{73.71693284896658, 0.3597415437985519}, {64.2130760380671, 
        0.3597415437985519}}]}}, {
      PointSize[0.01], 
      LineBox[{{70, 0.31825898835576283`}, {70, 0.4096817432345037}}], 
      GrayLevel[0], 
      PointBox[{70, 0.36397036579513325`}], {Arrowheads -> Small, 
       ArrowBox[{{74.2092188289085, 0.36397036579513325`}, {64.45925527373007,
         0.36397036579513325`}}]}}, {
      PointSize[0.01], 
      LineBox[{{71, 0.3298691137826651}, {71, 0.3999851950836547}}], 
      GrayLevel[0], 
      PointBox[{71, 0.36492715443315993`}], {Arrowheads -> Small, 
       ArrowBox[{{74.33120214738612, 0.36492715443315993`}, {
        64.51551382962893, 0.36492715443315993`}}]}}, {
      PointSize[0.01], 
      LineBox[{{72, 0.34161984269653684`}, {72, 0.3835780469367105}}], 
      GrayLevel[0], 
      PointBox[{72, 0.3625989448166237}], {Arrowheads -> Small, 
       ArrowBox[{{74.04213704482734, 0.3625989448166237}, {64.37899953634887, 
        0.3625989448166237}}]}}, {
      PointSize[0.01], 
      LineBox[{{73, 0.3526907660666851}, {73, 0.3621809291485654}}], 
      RGBColor[1, 0, 0], 
      PointBox[{73, 0.35743584760762526`}], {Arrowheads -> Small, 
       ArrowBox[{{73., 0.35743584760762526`}, {73., 
        0.35743584760762526`}}]}}, {
      PointSize[0.01], 
      LineBox[{{74, 0.3622423708153027}, {74, 0.33757384356106346`}}], 
      GrayLevel[0], 
      PointBox[{74, 0.3499081071881831}], {Arrowheads -> Small, 
       ArrowBox[{{79.53704255936645, 0.3499081071881831}, {73.51049977058716, 
        0.3499081071881831}}]}}, {
      PointSize[0.01], 
      LineBox[{{75, 0.3694351438645826}, {75, 0.3115367920160487}}], 
      GrayLevel[0], 
      PointBox[{75, 0.34048596794031566`}], {Arrowheads -> Small, 
       ArrowBox[{{80.08220574804412, 0.34048596794031566`}, {
        73.88594812270361, 0.34048596794031566`}}]}}, {
      PointSize[0.01], 
      LineBox[{{76, 0.37342957213671785`}, {76, 0.28584977635536524`}}], 
      GrayLevel[0], 
      PointBox[{76, 0.32963967424604157`}], {Arrowheads -> Small, 
       ArrowBox[{{80.64391654951226, 0.32963967424604157`}, {
        74.30740097616564, 0.32963967424604157`}}]}}, {
      PointSize[0.01], 
      LineBox[{{77, 0.3733861425539011}, {77, 0.26229279842085684`}}], 
      GrayLevel[0], 
      PointBox[{77, 0.317839470487379}], {Arrowheads -> Small, 
       ArrowBox[{{81.20899002575139, 0.317839470487379}, {74.75928944572408, 
        0.317839470487379}}]}}, {
      PointSize[0.01], 
      LineBox[{{78, 0.3684653420383255}, {78, 0.24264586005436778`}}], 
      GrayLevel[0], 
      PointBox[{78, 0.3055556010463466}], {Arrowheads -> Small, 
       ArrowBox[{{81.76836765748844, 0.3055556010463466}, {75.22913788218986, 
        0.3055556010463466}}]}}, {
      PointSize[0.01], 
      LineBox[{{79, 0.3578776278802885}, {79, 0.22863235677909852`}}], 
      GrayLevel[0], 
      PointBox[{79, 0.2932549923296935}], {Arrowheads -> Small, 
       ArrowBox[{{82.31411438203591, 0.2932549923296935}, {75.7062115687196, 
        0.2932549923296935}}]}}, {
      PointSize[0.01], 
      LineBox[{{80, 0.34198277583649594`}, {80, 0.22067373878945148`}}], 
      GrayLevel[0], 
      PointBox[{80, 0.28132825731297373`}], {Arrowheads -> Small, 
       ArrowBox[{{82.84076607428136, 0.28132825731297373`}, {
        76.18295461501111, 0.28132825731297373`}}]}}, {
      PointSize[0.01], 
      LineBox[{{81, 0.3222898801300618}, {81, 0.21788951095103104`}}], 
      GrayLevel[0], 
      PointBox[{81, 0.2700896955405464}], {Arrowheads -> Small, 
       ArrowBox[{{83.34411288482703, 0.2700896955405464}, {76.65407715439406, 
        0.2700896955405464}}]}}, {
      PointSize[0.01], 
      LineBox[{{82, 0.3003580053522046}, {82, 0.219342571810798}}], 
      GrayLevel[0], 
      PointBox[{82, 0.2598502885815013}], {Arrowheads -> Small, 
       ArrowBox[{{83.81719111685739, 0.2598502885815013}, {77.11269023107941, 
        0.2598502885815013}}]}}, {
      PointSize[0.01], 
      LineBox[{{83, 0.277746216094143}, {83, 0.22409581991571323`}}], 
      GrayLevel[0], 
      PointBox[{83, 0.2509210180049281}], {Arrowheads -> Small, 
       ArrowBox[{{84.24897940881705, 0.2509210180049281}, {77.54837166979304, 
        0.2509210180049281}}]}}, {
      PointSize[0.01], 
      LineBox[{{84, 0.25601357694709576`}, {84, 0.2312121538127377}}], 
      GrayLevel[0], 
      PointBox[{84, 0.24361286537991672`}], {Arrowheads -> Small, 
       ArrowBox[{{84.6227309383875, 0.24361286537991672`}, {77.94395981285886,
         0.24361286537991672`}}]}}, {
      PointSize[0.01], 
      LineBox[{{85, 0.23671915250228132`}, {85, 0.2397544720488321}}], 
      RGBColor[1, 0, 0], 
      PointBox[{85, 0.2382368122755567}], {Arrowheads -> Small, 
       ArrowBox[{{85., 0.2382368122755567}, {85., 0.2382368122755567}}]}}, {
      PointSize[0.01], 
      LineBox[{{86, 0.22142200735091838`}, {86, 0.24878567317095748`}}], 
      GrayLevel[0], 
      PointBox[{86, 0.23510384026093795`}], {Arrowheads -> Small, 
       ArrowBox[{{92.03641351609772, 0.23510384026093795`}, {
        84.46967404267959, 0.23510384026093795`}}]}}, {
      PointSize[0.01], 
      LineBox[{{87, 0.21163143766149348`}, {87, 0.2573955302577481}}], 
      GrayLevel[0], 
      PointBox[{87, 0.2345134839596208}], {Arrowheads -> Small, 
       ArrowBox[{{91.98923449131944, 0.2345134839596208}, {84.40035883144729, 
        0.2345134839596208}}]}}, {
      PointSize[0.01], 
      LineBox[{{88, 0.20771206587965302`}, {88, 0.26529193061632694`}}], 
      GrayLevel[0], 
      PointBox[{88, 0.23650199824798998`}], {Arrowheads -> Small, 
       ArrowBox[{{92.14694795976109, 0.23650199824798998`}, {
        84.63172900742126, 0.23650199824798998`}}]}}, {
      PointSize[0.01], 
      LineBox[{{89, 0.20888384072820337`}, {89, 0.272800875782306}}], 
      GrayLevel[0], 
      PointBox[{89, 0.24084235825525468`}], {Arrowheads -> Small, 
       ArrowBox[{{92.480772315744, 0.24084235825525468`}, {85.12127657743028, 
        0.24084235825525468`}}]}}, {
      PointSize[0.01], 
      LineBox[{{90, 0.21431694250721867`}, {90, 0.28027524182297037`}}], 
      GrayLevel[0], 
      PointBox[{90, 0.24729609216509452`}], {Arrowheads -> Small, 
       ArrowBox[{{92.957336073712, 0.24729609216509452`}, {85.83441927548697, 
        0.24729609216509452`}}]}}, {
      PointSize[0.01], 
      LineBox[{{91, 0.2231815515167733}, {91, 0.2880679048056055}}], 
      GrayLevel[0], 
      PointBox[{91, 0.2556247281611894}], {Arrowheads -> Small, 
       ArrowBox[{{93.5502191489677, 0.2556247281611894}, {86.7863804107826, 
        0.2556247281611894}}]}}, {
      PointSize[0.01], 
      LineBox[{{92, 0.2346478480569414}, {92, 0.29653174079749656`}}], 
      GrayLevel[0], 
      PointBox[{92, 0.265589794427219}], {Arrowheads -> Small, 
       ArrowBox[{{94.2450313549714, 0.265589794427219}, {88.03900582494033, 
        0.265589794427219}}]}}, {
      PointSize[0.01], 
      LineBox[{{93, 0.24788601242779723`}, {93, 0.3060196258659289}}], 
      GrayLevel[0], 
      PointBox[{93, 0.2769528191468631}], {Arrowheads -> Small, 
       ArrowBox[{{95.04077547157529, 0.2769528191468631}, {89.55794405548063, 
        0.2769528191468631}}]}}, {
      PointSize[0.01], 
      LineBox[{{94, 0.262066224929415}, {94, 0.3168844360781877}}], 
      GrayLevel[0], 
      PointBox[{94, 0.28947533050380136`}], {Arrowheads -> Small, 
       ArrowBox[{{95.9345883919679, 0.28947533050380136`}, {91.17313000400884,
         0.28947533050380136`}}]}}, {
      PointSize[0.01], 
      LineBox[{{95, 0.27637524011914716`}, {95, 0.3294624562781563}}], 
      GrayLevel[0], 
      PointBox[{95, 0.3029188481986517}], {Arrowheads -> Small, 
       ArrowBox[{{96.91736287700361, 0.3029188481986517}, {92.68703774107142, 
        0.3029188481986517}}]}}, {
      PointSize[0.01], 
      LineBox[{{96, 0.2903810204717436}, {96, 0.3437083731714681}}], 
      GrayLevel[0], 
      PointBox[{96, 0.31704469682160585`}], {Arrowheads -> Small, 
       ArrowBox[{{97.98075042681114, 0.31704469682160585`}, {
        94.01371769914749, 0.31704469682160585`}}]}}, {
      PointSize[0.01], 
      LineBox[{{97, 0.30403273637935213`}, {97, 0.3591952753255074}}], 
      GrayLevel[0], 
      PointBox[{97, 0.3316140058524297}], {Arrowheads -> Small, 
       ArrowBox[{{99.11730792392316, 0.3316140058524297}, {95.1580987114168, 
        0.3316140058524297}}]}}, {
      PointSize[0.01], 
      LineBox[{{98, 0.31729613249139865`}, {98, 0.37547966008425615`}}], 
      GrayLevel[0], 
      PointBox[{98, 0.3463878962878274}], {Arrowheads -> Small, 
       ArrowBox[{{100.32051337546999`, 0.3463878962878274}, {
        96.17805953197828, 0.3463878962878274}}]}}, {
      PointSize[0.01], 
      LineBox[{{99, 0.330136953457309}, {99, 0.3921180247916965}}], 
      GrayLevel[0], 
      PointBox[{99, 0.36112748912450277`}], {Arrowheads -> Small, 
       ArrowBox[{{101.58479238533418`, 0.36112748912450277`}, {
        97.12071344064123, 0.36112748912450277`}}]}}, {
      PointSize[0.01], 
      LineBox[{{100, 0.342520943926509}, {100, 0.4086668667918103}}], 
      GrayLevel[0], 
      PointBox[{100, 0.37559390535915965`}], {Arrowheads -> Small, 
       ArrowBox[{{102.9055951702377, 0.37559390535915965`}, {
        98.00690866860333, 0.37559390535915965`}}]}}, {
      PointSize[0.01], 
      LineBox[{{101, 0.3544138485484245}, {101, 0.4246826834285796}}], 
      GrayLevel[0], 
      PointBox[{101, 0.38954826598850206`}], {Arrowheads -> Small, 
       ArrowBox[{{104.27957892955264`, 0.38954826598850206`}, {
        98.84586992983938, 0.38954826598850206`}}]}}, {
      PointSize[0.01], 
      LineBox[{{102, 0.3657814119724815}, {102, 0.4397219720459867}}], 
      GrayLevel[0], 
      PointBox[{102, 0.4027516920092341}], {Arrowheads -> Small, 
       ArrowBox[{{105.70501351564161`, 0.4027516920092341}, {
        99.64025214663039, 0.4027516920092341}}]}}, {
      PointSize[0.01], 
      LineBox[{{103, 0.37658937884810567`}, {103, 0.4533412299880133}}], 
      GrayLevel[0], 
      PointBox[{103, 0.41496530441805946`}], {Arrowheads -> Small, 
       ArrowBox[{{107.18270099977657`, 0.41496530441805946`}, {
        100.3877923492458, 0.41496530441805946`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.14202351256525605`},
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.14202351256525605`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{1, 103}, {0.14202351256525605`, 0.4533412034234447}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8445133064991198`*^9, 3.8445133254839897`*^9}, 
   3.8445133662420206`*^9, 3.844514133489933*^9, 3.8445141942936916`*^9, 
   3.8445143938089123`*^9, 3.844514488100733*^9, {3.8445168505784607`*^9, 
   3.8445168896373835`*^9}, 3.8445169465932455`*^9, 3.8445169882623987`*^9},
 CellLabel->
  "Out[514]=",ExpressionUUID->"63fce309-180a-47ac-bff9-2d0c91851503"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVmHk4lH8XxiWElF0SEkWKyr7mHNvYhmLMWJMWEpJKqKS0IMmuSCgiJEmW
krJmmbGOZSallBSSJeqnIu/z/uX6XPMs59znnO9zbpsOHnfw4uTg4LBdycHx
/7/j5a07ODlmIOL6UFKvagP4P/Cd2XxxBgpetVhxqzfAVLpAmQXHLMzNTJ0y
0G6A+fC9Wjc4foB4FY9ChVED/LNkG0iumIddke/mhvY0gMjQV8sdnAtgJa50
h/tUA2ReuqymysmBGxSOfC2paYDmohwbFy5e/LpPwDd0XyOUN/WadVrx4t9k
+XKDQ42Q+57LyDSeF4tk3Wy5jjbCRZEju1Sl+NCzOyEgL6gR9M9uF1+xix/X
/M08rRTbCI+syt8XuAmghXT1p201jWA9/0k3zEUIW7m67qjJNYF68jyDUSqG
i/LrHtsvNIFJtoGcXo8Y/rFI6/nxrwkcHl4Kyp8Vwzc71hekcb+GU41CMhHq
4ug4rH3yh8hrKJ9TCdAuF8eFzUWX3qu+Bi1HL6F7VRL4gV7GTDv8GnTFBxyD
X0niBt0Dm9L6X8PuW1VDcu3SyL8z4q9kczMoFqi6ffsmjfnjbN72jmZY+zyX
XbFaBv/tmo+/0t8M7wfje61tZFDVVVWDZ7QZLsr6tAXRZVCi6ckImasFGvIk
K1pbZVHwEGbOmLbA5kFD0rODcuih5Tk/0NIChWOZMp775ZF0lNvE5nMrWP4O
NMkKlMeNRYrlwVOtMMZnduRdhDxGnb985eFCKyhunyh1vi+P0Yk5J9XWtMH9
Y9pm9uPyePGwy9fH2m1w90enr8kpBdzjU2916XobpC0uV22O2oxvQ3Qf9hvS
IUrooMN4iSKq6j/OX6xjQJmnwAhHrSKq73xZyNPBgPellackuxQx1P3wrQ1v
GKBtvzrVYloRr+uWu3nPMuBLYjkrb6cSHv3MLLgo3w4k0VX7DpYqYXRIr3NP
ZDtwSxQfeftkKxrNSO/Y7twBlzf8Cuso34ZCDsXZK+S6YPDUs7ndzdtQ7ss3
Z7ddXaDefta3hLUNfdeXf2vCLhgOW3aK/7MNJ1Y6MFsOdIHhe14Ne9yOlkHf
ReLud8GvuxvG+xjbUSIh5HuyRDf4KhpT331SwTeWuDU4rxsc1GJVvwntxMSL
c9HDgz0gemIFp1OxGrZZUCYSPPtA/1/6bkq5GjYmeM++PdoHB6+rn9lTo4Zy
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
           "]]}, Annotation[#, "Charting`Private`Tag$157625#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
7QQ7MN8P6n5XQ7u1eSm+2/og/IC3mNa8Gk58EQmfJDh7ftFJbUUNLWUjtfZv
74OmmKvXldnVMWnf39pWgmc3yLXI86jjR8l3W5Wl+0As4w2njJA6Ok/9sooi
2FTezWybuDqKe7w3qCX48IuZsxLS6mg3Q11YIjiZFF8tpqSOfEA/vm1HH1TR
t/0S1lTH8+0+z4wJHvKqVhc0VMd6LdUiO4K5vjkGbzRTx9WlA/67CVY//f0R
t6067s5X6yUR7L724ug6qjp201/8VSD4XPIWKXZPdSxblexlJ7hg6wtPFl91
3FCb7tNOvL+9cNetlQB15Mi1vnmN4CW98c6lE+pYpeV12pRgyYazGxci1NGe
9Q/LOFGvFVXEZua8Oo6m2qlEEXz0y9NLPxLUMTMy6u86gm8Fk2u/pqhjhlV5
wAVCvzd/vvwdvaOObOelQuYIvSdiw/WGctTxZ+WYqBPBfMKCpwYfq+OFcFXq
I6JfujmPnzKfq+M4RW7bNNFPH1Wz7z3V6qjT8itanuCn1qf2tzWr47aRd6Mn
CH8wenmzmjvVcc1twbELhH9Y/B4yG/rV0U3uS0Dsf32w+2wv5c03dRxhy1jx
J/wXwnP0Ss2cOvocGmA1FemDzHTOxoo/6tg5gDEb/+/X53r4jFsDNbaKD8cI
9UHSxB2VbEUNDI/JG363oQ9enNI8nKmhgadepxxWJ+ZlkK0l97YBcf3ENDWF
mCeVLf/EU2w0UOr4fSslYt5aKD7cFwI08I5ekGcVSx/MDy5ZRJ/QwAs3DxZX
/2OAeOD1c2ciCO6S3F1MzHPgpdrfJxM00Foy+FDQEgN4qqUn/B5r4N3gdVVm
U8R+ZNt4Y0OpBr5MGpLN+U7sVx+DzMtrNDAzutV75isD2FjKszlbNdBraI+o
1wixP5iRvR5Pa6Bzv6jnMQYDtHt+cFN/a+BAvdITu24GnDiQXLXCqonP0rwL
RDsY8DOuf/MuQU3kGcu9Hd3MgJHWoI5pLU1cSTr5I+4lA7b5CMSkG2vi4Y6d
+sOVDNgz82KnqaUmlnKJCCu9YABTkOVKiqsmPt63GJhYxAC6a7KldoQm3vxx
R+1yJgNeDr2oiXijiSoeQt/3RjBg+YRHgHSjJk7OHQsrCWGA7loWsZZ2Tcx5
IOI5e4wBpbLkUIlhTex3/iCABxlQENiv9natFjYZ7PssQGXAjcXVhxw2Wnhs
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
k3LErOxpUG9TvdvO0xpbeSR1Y4n5cmfhiDT3scZa+XMjlsT8/Sy1LzDytcbD
30+Ei/nQYJPEGLtKoDU6Po0TWfIj6pnmq9pwxho3UTYJpRwn+p/3RdIr2hrN
2zwM1EJocN+r5PLjC0R9uWfnRsJoMNjk6GR1xRojBczLE2No4Jp7Yzomk6jn
74Y55nUaLHoccKFnW+NXcuy67TdokCag+0oizxqf7in4efY24fezfQnVxda4
635rd2gODWzdxWUX3hD9if8U5PWCBpN8P66Q3lvjGo3xSHI1DeIaXs5fb7TG
ROH92eQ3RL2ae2pVOqzxt9XdxotNNMCN2V4Hh60x8ND+X5OfCL/Uyab2r7XB
nVyhbNQNxP4bvrQsz2WDSUJFmiFCLXBMrXHv6Q02uGQ0/a9ArAWKMg/v3LTZ
BqseRqzYyLaAXNiTpl1yNqg7uMh6yKQFxFU0WGutbXBC5/6V5dMtwH7LODj/
qg06rvUt27DQApck1qo+SSH+n/BOpH2lBdblNs88u2mDsvHHObPZW4GrxPVU
dZYNSq/eCjpCfL/4acfPtBbboLPov5Plmq0gwZIXP99mg4mF/XkLoa2ge3Bj
HvLZYopx2H/znG1Q9bP7oLmQLRY985s9LdAGBqcyFKxFbDH+7zFPbvE2MD4n
X+QoSbBiXZPrzjYwzyCV+ava4j5Nc+005zZwoIe+S7S3Rb+bgaev5LVBoO7n
T4xrthjTeDwlW54OS2+U+jXSbPHd4yP3inbS4SI5rCcp3RZ336gQrNWiQ6a7
QItZti2GPHYXXTWhA/2MWdXT57YYNyEk3O5OB423+amxPbb4x4TrLP0KHZbJ
x8i64nZYI2jkKfabDrEebM9v5tnhKkw8qRtuh6d1Jx0HH9vhTKjg2j3f2qFX
eXxO+qkdLrs42a7OtoMMC02zpMIOWRXcb1HYOqDuQdoLWqMdujYK5hhKdQDL
T7kq1u926Hf9wUE5nw4Ijd79NkB1F96Wk/+kNdQB/rnEoaVyFzKid7RLLXYC
90TBo6iK3Sjh1hnGJtcDktvTB9trduMnsbToNrUe0Pa+LLjj7W50sd3cc8eg
B3y69kc2N+7GgUCxGrXdPfDijThFpH83kQfId+xCemBfetLSs7+7MRtrPknU
9YDnjsqc41L2mGp2wnbGsxfGTVWNM7bb49R59t0O/r1w3CeP8X6HPfLlmQg/
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
           "]]}, Annotation[#, "Charting`Private`Tag$157625#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{1, 0.1420235040657881}, {1, 0.18423772849579323`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{1, 0.16313061628079067`}], {Arrowheads -> Small, 
       ArrowBox[{{5.118650639630023, 
        0.16313061628079067`}, {-6.705134417052864, 
        0.16313061628079067`}}]}}, {
      PointSize[0.01], 
      LineBox[{{2, 0.146378237078263}, {2, 0.19035761451687327`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{2, 0.16836792579756815`}], {Arrowheads -> Small, 
       ArrowBox[{{5.863364313048626, 
        0.16836792579756815`}, {-8.441895265903817, 
        0.16836792579756815`}}]}}, {
      PointSize[0.01], 
      LineBox[{{3, 0.15127899892117885`}, {3, 0.19793727037560654`}}], 
      GrayLevel[0], 
      PointBox[{3, 0.1746081346483927}], {Arrowheads -> Small, 
       ArrowBox[{{6.75250864593729, 
        0.1746081346483927}, {-1.4118842830128626`, 0.1746081346483927}}]}}, {
      PointSize[0.01], 
      LineBox[{{4, 0.1567298653561932}, {4, 0.20712136926073604`}}], 
      GrayLevel[0], 
      PointBox[{4, 0.18192561730846463`}], {Arrowheads -> Small, 
       ArrowBox[{{7.716883750838141, 0.18192561730846463`}, {
        0.5508503386034014, 0.18192561730846463`}}]}}, {
      PointSize[0.01], 
      LineBox[{{5, 0.16273491214496358`}, {5, 0.21805458436100483`}}], 
      GrayLevel[0], 
      PointBox[{5, 0.1903947482529842}], {Arrowheads -> Small, 
       ArrowBox[{{8.732919177985488, 0.1903947482529842}, {2.005437154738359, 
        0.1903947482529842}}]}}, {
      PointSize[0.01], 
      LineBox[{{6, 0.16929821504914755`}, {6, 0.23088158886515597`}}], 
      GrayLevel[0], 
      PointBox[{6, 0.20008990195715176`}], {Arrowheads -> Small, 
       ArrowBox[{{9.778291558815912, 0.20008990195715176`}, {
        3.251446126130207, 0.20008990195715176`}}]}}, {
      PointSize[0.01], 
      LineBox[{{7, 0.17642698413949678`}, {7, 0.2457309253215285}}], 
      GrayLevel[0], 
      PointBox[{7, 0.21107895473051264`}], {Arrowheads -> Small, 
       ArrowBox[{{10.834880599869779`, 0.21107895473051264`}, {
        4.381573061157939, 0.21107895473051264`}}]}}, {
      PointSize[0.01], 
      LineBox[{{8, 0.18420051859592984`}, {8, 0.2623601315491722}}], 
      GrayLevel[0], 
      PointBox[{8, 0.22328032507255102`}], {Arrowheads -> Small, 
       ArrowBox[{{11.878125832228395`, 0.22328032507255102`}, {
        5.426109102763634, 0.22328032507255102`}}]}}, {
      PointSize[0.01], 
      LineBox[{{9, 0.19277020670753195`}, {9, 0.28015574063784726`}}], 
      GrayLevel[0], 
      PointBox[{9, 0.2364629736726896}], {Arrowheads -> Small, 
       ArrowBox[{{12.882721403387404`, 0.2364629736726896}, {
        6.392344487080381, 0.2364629736726896}}]}}, {
      PointSize[0.01], 
      LineBox[{{10, 0.20229057107248263`}, {10, 0.2984881550369101}}], 
      GrayLevel[0], 
      PointBox[{10, 0.2503893630546964}], {Arrowheads -> Small, 
       ArrowBox[{{13.834219790375727`, 0.2503893630546964}, {
        7.289571028678509, 0.2503893630546964}}]}}, {
      PointSize[0.01], 
      LineBox[{{11, 0.21291613428896128`}, {11, 0.316727777195717}}], 
      GrayLevel[0], 
      PointBox[{11, 0.26482195574233913`}], {Arrowheads -> Small, 
       ArrowBox[{{14.725371349998257`, 0.26482195574233913`}, {
        8.141502333837309, 0.26482195574233913`}}]}}, {
      PointSize[0.01], 
      LineBox[{{12, 0.22480141895514744`}, {12, 0.33424500956362435`}}], 
      GrayLevel[0], 
      PointBox[{12, 0.27952321425938587`}], {Arrowheads -> Small, 
       ArrowBox[{{15.562948728523299`, 0.27952321425938587`}, {
        8.965168232691072, 0.27952321425938587`}}]}}, {
      PointSize[0.01], 
      LineBox[{{13, 0.23810094766922044`}, {13, 0.3504102545899883}}], 
      GrayLevel[0], 
      PointBox[{13, 0.29425560112960436`}], {Arrowheads -> Small, 
       ArrowBox[{{16.366830745016546`, 0.29425560112960436`}, {
        9.76992076956063, 0.29425560112960436`}}]}}, {
      PointSize[0.01], 
      LineBox[{{14, 0.25296924302935986`}, {14, 0.3645939147241655}}], 
      GrayLevel[0], 
      PointBox[{14, 0.3087815788767627}], {Arrowheads -> Small, 
       ArrowBox[{{17.14978575865031, 0.3087815788767627}, {
        10.561505975507622`, 0.3087815788767627}}]}}, {
      PointSize[0.01], 
      LineBox[{{15, 0.26954063302025016`}, {15, 0.37617769488355124`}}], 
      GrayLevel[0], 
      PointBox[{15, 0.32285916395190073`}], {Arrowheads -> Small, 
       ArrowBox[{{17.920020735220263`, 0.32285916395190073`}, {
        11.34355501717853, 0.32285916395190073`}}]}}, {
      PointSize[0.01], 
      LineBox[{{16, 0.287484969516191}, {16, 0.38480325675043764`}}], 
      GrayLevel[0], 
      PointBox[{16, 0.3361441131333143}], {Arrowheads -> Small, 
       ArrowBox[{{18.678034580487036`, 0.3361441131333143}, {
        12.112581251399615`, 0.3361441131333143}}]}}, {
      PointSize[0.01], 
      LineBox[{{17, 0.30600762828109734`}, {17, 0.3903722187720144}}], 
      GrayLevel[0], 
      PointBox[{17, 0.34818992352655587`}], {Arrowheads -> Small, 
       ArrowBox[{{19.41564732514968, 0.34818992352655587`}, {
        12.856008496686794`, 0.34818992352655587`}}]}}, {
      PointSize[0.01], 
      LineBox[{{18, 0.3242937904653888}, {18, 0.39279750186350987`}}], 
      GrayLevel[0], 
      PointBox[{18, 0.35854564616444934`}], {Arrowheads -> Small, 
       ArrowBox[{{20.117698592379423`, 0.35854564616444934`}, {
        13.553462695266614`, 0.35854564616444934`}}]}}, {
      PointSize[0.01], 
      LineBox[{{19, 0.34152863721948534`}, {19, 0.3919920269401524}}], 
      RGBColor[1, 0, 0], 
      PointBox[{19, 0.36676033207981884`}], {Arrowheads -> Small, 
       ArrowBox[{{19., 0.36676033207981884`}, {19., 
        0.36676033207981884`}}]}}, {
      PointSize[0.01], 
      LineBox[{{20, 0.35689734969380693`}, {20, 0.38786871491717034`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{20, 0.37238303230548864`}], {Arrowheads -> Small, 
       ArrowBox[{{20., 0.37238303230548864`}, {20., 
        0.37238303230548864`}}]}}, {
      PointSize[0.01], 
      LineBox[{{21, 0.36958510903877323`}, {21, 0.3803404867097922}}], 
      RGBColor[1, 0, 0], 
      PointBox[{21, 0.3749627978742827}], {Arrowheads -> Small, 
       ArrowBox[{{21., 0.3749627978742827}, {21., 0.3749627978742827}}]}}, {
      PointSize[0.01], 
      LineBox[{{22, 0.3787770964048042}, {22, 0.36932026323324646`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{22, 0.37404867981902534`}], {Arrowheads -> Small, 
       ArrowBox[{{22., 0.37404867981902534`}, {22., 
        0.37404867981902534`}}]}}, {
      PointSize[0.01], 
      LineBox[{{23, 0.3836894056778713}, {23, 0.35475483560228405`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{23, 0.36922212064007764`}], {Arrowheads -> Small, 
       ArrowBox[{{23., 0.36922212064007764`}, {23., 
        0.36922212064007764`}}]}}, {
      PointSize[0.01], 
      LineBox[{{24, 0.3842491236616319}, {24, 0.33737000952067575`}}], 
      GrayLevel[0], 
      PointBox[{24, 0.3608095665911538}], {Arrowheads -> Small, 
       ArrowBox[{{27.551901454739017`, 0.3608095665911538}, {
        22.612453474801043`, 0.3608095665911538}}]}}, {
      PointSize[0.01], 
      LineBox[{{25, 0.381094330077429}, {25, 0.31867060528121227`}}], 
      GrayLevel[0], 
      PointBox[{25, 0.34988246767932063`}], {Arrowheads -> Small, 
       ArrowBox[{{28.550744745876628`, 0.34988246767932063`}, {
        23.293321099090235`, 0.34988246767932063`}}]}}, {
      PointSize[0.01], 
      LineBox[{{26, 0.3748940173821575}, {26, 0.30019531337620686`}}], 
      GrayLevel[0], 
      PointBox[{26, 0.33754466537918215`}], {Arrowheads -> Small, 
       ArrowBox[{{29.612907160252647`, 0.33754466537918215`}, {
        23.990451927922386`, 0.33754466537918215`}}]}}, {
      PointSize[0.01], 
      LineBox[{{27, 0.36631717803271213`}, {27, 0.28348282429797267`}}], 
      GrayLevel[0], 
      PointBox[{27, 0.3249000011653424}], {Arrowheads -> Small, 
       ArrowBox[{{30.706276261823525`, 0.3249000011653424}, {
        24.669577564483177`, 0.3249000011653424}}]}}, {
      PointSize[0.01], 
      LineBox[{{28, 0.35603280448598773`}, {28, 0.2700718285388231}}], 
      GrayLevel[0], 
      PointBox[{28, 0.3130523165124054}], {Arrowheads -> Small, 
       ArrowBox[{{31.805269495288936`, 0.3130523165124054}, {
        25.299046325076475`, 0.3130523165124054}}]}}, {
      PointSize[0.01], 
      LineBox[{{29, 0.34470988919887907`}, {29, 0.2615010165910713}}], 
      GrayLevel[0], 
      PointBox[{29, 0.30310545289497515`}], {Arrowheads -> Small, 
       ArrowBox[{{32.86001976440372, 0.30310545289497515`}, {
        25.83820184765574, 0.30310545289497515`}}]}}, {
      PointSize[0.01], 
      LineBox[{{30, 0.33301742462828093`}, {30, 0.25930907894703054`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{30, 0.29616325178765573`}], {Arrowheads -> Small, 
       ArrowBox[{{30., 0.29616325178765573`}, {30., 
        0.29616325178765573`}}]}}, {
      PointSize[0.01], 
      LineBox[{{31, 0.32162046903553876`}, {31, 0.26495572573216547`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{31, 0.2932880973838521}], {Arrowheads -> Small, 
       ArrowBox[{{31., 0.2932880973838521}, {31., 0.2932880973838521}}]}}, {
      PointSize[0.01], 
      LineBox[{{32, 0.3110935941843681}, {32, 0.2780841186344247}}], 
      RGBColor[1, 0, 0], 
      PointBox[{32, 0.2945888564093964}], {Arrowheads -> Small, 
       ArrowBox[{{32., 0.2945888564093964}, {32., 0.2945888564093964}}]}}, {
      PointSize[0.01], 
      LineBox[{{33, 0.30192088534085426`}, {33, 0.2965208709042409}}], 
      RGBColor[1, 0, 0], 
      PointBox[{33, 0.2992208781225476}], {Arrowheads -> Small, 
       ArrowBox[{{33., 0.2992208781225476}, {33., 0.2992208781225476}}]}}, {
      PointSize[0.01], 
      LineBox[{{34, 0.2945824935755332}, {34, 0.3180136154251979}}], 
      RGBColor[1, 0, 0], 
      PointBox[{34, 0.3062980545003655}], {Arrowheads -> Small, 
       ArrowBox[{{34., 0.3062980545003655}, {34., 0.3062980545003655}}]}}, {
      PointSize[0.01], 
      LineBox[{{35, 0.2895585699589409}, {35, 0.34030998508087984`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{35, 0.3149342775199104}], {Arrowheads -> Small, 
       ArrowBox[{{35., 0.3149342775199104}, {35., 0.3149342775199104}}]}}, {
      PointSize[0.01], 
      LineBox[{{36, 0.2873292655616136}, {36, 0.3611576127548706}}], 
      RGBColor[1, 0, 0], 
      PointBox[{36, 0.3242434391582421}], {Arrowheads -> Small, 
       ArrowBox[{{36., 0.3242434391582421}, {36., 0.3242434391582421}}]}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.28837473145408715`}, {37, 0.37830413133075413`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{37, 0.3333394313924206}], {Arrowheads -> Small, 
       ArrowBox[{{46.52568875644236, 0.3333394313924206}, {
        34.433801908854925`, 0.3333394313924206}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.2931751187068977}, {38, 0.3894971736921146}}], 
      GrayLevel[0], 
      PointBox[{38, 0.34133614619950614`}], {Arrowheads -> Small, 
       ArrowBox[{{41.763690496947255`, 0.34133614619950614`}, {
        35.04682962655021, 0.34133614619950614`}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.30216801666989423`}, {39, 0.3925664381988325}}], 
      RGBColor[1, 0, 0], 
      PointBox[{39, 0.3473672274343634}], {Arrowheads -> Small, 
       ArrowBox[{{39., 0.3473672274343634}, {39., 0.3473672274343634}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3148120951171228}, {40, 0.3872291291656111}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.35102061214136693`}], {Arrowheads -> Small, 
       ArrowBox[{{40., 0.35102061214136693`}, {40., 
        0.35102061214136693`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.329587104246827}, {41, 0.37508995686197577`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.3523385305544014}], {Arrowheads -> Small, 
       ArrowBox[{{41., 0.3523385305544014}, {41., 0.3523385305544014}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.3449302325365629}, {42, 0.3578356970337485}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.35138296478515574`}], {Arrowheads -> Small, 
       ArrowBox[{{42., 0.35138296478515574`}, {42., 
        0.35138296478515574`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.3592786684638869}, {43, 0.33715312542675174`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.3482158969453193}], {Arrowheads -> Small, 
       ArrowBox[{{43., 0.3482158969453193}, {43., 0.3482158969453193}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.3710696005063552}, {44, 0.3147290177868075}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.34289930914658134`}], {Arrowheads -> Small, 
       ArrowBox[{{44., 0.34289930914658134`}, {44., 
        0.34289930914658134`}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.37874021714152417`}, {45, 0.29225014985973796`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{45, 0.33549518350063107`}], {Arrowheads -> Small, 
       ArrowBox[{{45., 0.33549518350063107`}, {45., 
        0.33549518350063107`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.38072770684694995`}, {46, 0.2714032973913652}}], 
      GrayLevel[0], 
      PointBox[{46, 0.3260655021191576}], {Arrowheads -> Small, 
       ArrowBox[{{30.603287789924813`, 0.3260655021191576}, {
        43.49945932636026, 0.3260655021191576}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.37553799918989184`}, {47, 0.25383403748894817`}}], 
      GrayLevel[0], 
      PointBox[{47, 0.31468601833942}], {Arrowheads -> Small, 
       ArrowBox[{{50.41220719033168, 0.31468601833942}, {44.0018915266635, 
        0.31468601833942}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.3632580688007779}, {48, 0.24024037857279293`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3017492236867854}], {Arrowheads -> Small, 
       ArrowBox[{{50.96134718369942, 0.3017492236867854}, {
        44.572906808123754`, 0.3017492236867854}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.34555593537320467`}, {49, 0.23037276037625215`}}], 
      GrayLevel[0], 
      PointBox[{49, 0.2879643478747284}], {Arrowheads -> Small, 
       ArrowBox[{{51.54285396165901, 0.2879643478747284}, {45.19684501264699, 
        0.2879643478747284}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.32416835969047164`}, {50, 0.22394042399411535`}}], 
      GrayLevel[0], 
      PointBox[{50, 0.2740543918422935}], {Arrowheads -> Small, 
       ArrowBox[{{52.14064524408062, 0.2740543918422935}, {45.86533744905257, 
        0.2740543918422935}}]}}, {
      PointSize[0.01], 
      LineBox[{{51, 0.3008321025358785}, {51, 0.22065261052117222`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{51, 0.26074235652852534`}], {Arrowheads -> Small, 
       ArrowBox[{{52.681783490947296`, 0.26074235652852534`}, {
        38.6241527563921, 0.26074235652852534`}}]}}, {
      PointSize[0.01], 
      LineBox[{{52, 0.27728392469272484`}, {52, 0.22021856105221235`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{52, 0.24875124287246858`}], {Arrowheads -> Small, 
       ArrowBox[{{52., 0.24875124287246858`}, {52., 
        0.24875124287246858`}}]}}, {
      PointSize[0.01], 
      LineBox[{{53, 0.25526058694431014`}, {53, 0.22234751668202524`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{53, 0.2388040518131677}], {Arrowheads -> Small, 
       ArrowBox[{{53., 0.2388040518131677}, {53., 0.2388040518131677}}]}}, {
      PointSize[0.01], 
      LineBox[{{54, 0.23649885007393404`}, {54, 0.2267487185054006}}], 
      RGBColor[1, 0, 0], 
      PointBox[{54, 0.23162378428966732`}], {Arrowheads -> Small, 
       ArrowBox[{{54., 0.23162378428966732`}, {54., 
        0.23162378428966732`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55, 0.22268390920417805`}, {55, 0.23313502383394016`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{55, 0.2279094665190591}], {Arrowheads -> Small, 
       ArrowBox[{{55., 0.2279094665190591}, {55., 0.2279094665190591}}]}}, {
      PointSize[0.01], 
      LineBox[{{56, 0.21431494926110786`}, {56, 0.24130246296592525`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{56, 0.22780870611351656`}], {Arrowheads -> Small, 
       ArrowBox[{{56., 0.22780870611351656`}, {56., 
        0.22780870611351656`}}]}}, {
      PointSize[0.01], 
      LineBox[{{57, 0.21070514497427337`}, {57, 0.25113023918631705`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{57, 0.23091769208029522`}], {Arrowheads -> Small, 
       ArrowBox[{{57., 0.23091769208029522`}, {57., 
        0.23091769208029522`}}]}}, {
      PointSize[0.01], 
      LineBox[{{58, 0.21111610541250628`}, {58, 0.26250117199688855`}}], 
      GrayLevel[0], 
      PointBox[{58, 0.23680863870469743`}], {Arrowheads -> Small, 
       ArrowBox[{{61.85154015413204, 0.23680863870469743`}, {
        55.47604939378293, 0.23680863870469743`}}]}}, {
      PointSize[0.01], 
      LineBox[{{59, 0.21480943964463842`}, {59, 0.2752980808994132}}], 
      GrayLevel[0], 
      PointBox[{59, 0.2450537602720258}], {Arrowheads -> Small, 
       ArrowBox[{{62.72496533520792, 0.2450537602720258}, {
        56.401330011339724`, 0.2450537602720258}}]}}, {
      PointSize[0.01], 
      LineBox[{{60, 0.22104675673950167`}, {60, 0.2894037853956641}}], 
      GrayLevel[0], 
      PointBox[{60, 0.25522527106758286`}], {Arrowheads -> Small, 
       ArrowBox[{{63.79959393028238, 0.25522527106758286`}, {
        57.375489456184006`, 0.25522527106758286`}}]}}, {
      PointSize[0.01], 
      LineBox[{{61, 0.22908966576592765`}, {61, 0.3047011049874142}}], 
      GrayLevel[0], 
      PointBox[{61, 0.2668953853766709}], {Arrowheads -> Small, 
       ArrowBox[{{65.02302345968539, 0.2668953853766709}, {58.35567506914945, 
        0.2668953853766709}}]}}, {
      PointSize[0.01], 
      LineBox[{{62, 0.23819977579274831`}, {62, 0.3210728591764371}}], 
      GrayLevel[0], 
      PointBox[{62, 0.2796363174845927}], {Arrowheads -> Small, 
       ArrowBox[{{66.33139958595474, 0.2796363174845927}, {
        59.317204876270665`, 0.2796363174845927}}]}}, {
      PointSize[0.01], 
      LineBox[{{63, 0.24765569322452116`}, {63, 0.33838202060964095`}}], 
      GrayLevel[0], 
      PointBox[{63, 0.29301885691708107`}], {Arrowheads -> Small, 
       ArrowBox[{{67.65946257768306, 0.29301885691708107`}, {
        60.24319701665116, 0.29301885691708107`}}]}}, {
      PointSize[0.01], 
      LineBox[{{64, 0.25712696318749606`}, {64, 0.3560350842720438}}], 
      GrayLevel[0], 
      PointBox[{64, 0.3065810237297699}], {Arrowheads -> Small, 
       ArrowBox[{{68.94557874409514, 0.3065810237297699}, {61.1181058013014, 
        0.3065810237297699}}]}}, {
      PointSize[0.01], 
      LineBox[{{65, 0.2666740695296155}, {65, 0.372982067486773}}], 
      GrayLevel[0], 
      PointBox[{65, 0.31982806850819423`}], {Arrowheads -> Small, 
       ArrowBox[{{70.1378385263048, 0.31982806850819423`}, {61.92605678351107,
         0.31982806850819423`}}]}}, {
      PointSize[0.01], 
      LineBox[{{66, 0.27637449343454734`}, {66, 0.3881531407220909}}], 
      GrayLevel[0], 
      PointBox[{66, 0.3322638170783191}], {Arrowheads -> Small, 
       ArrowBox[{{71.20257651511966, 0.3322638170783191}, {62.6516723649199, 
        0.3322638170783191}}]}}, {
      PointSize[0.01], 
      LineBox[{{67, 0.28630571608596}, {67, 0.40047847444626034`}}], 
      GrayLevel[0], 
      PointBox[{67, 0.34339209526611014`}], {Arrowheads -> Small, 
       ArrowBox[{{72.15417575996855, 0.34339209526611014`}, {
        63.28326782118459, 0.34339209526611014`}}]}}, {
      PointSize[0.01], 
      LineBox[{{68, 0.29654521866752137`}, {68, 0.408888239127544}}], 
      GrayLevel[0], 
      PointBox[{68, 0.3527167288975327}], {Arrowheads -> Small, 
       ArrowBox[{{73.00248464915893, 0.3527167288975327}, {63.81079854457392, 
        0.3527167288975327}}]}}, {
      PointSize[0.01], 
      LineBox[{{69, 0.30717048236289957`}, {69, 0.4123126052342042}}], 
      RGBColor[1, 0, 0], 
      PointBox[{69, 0.3597415437985519}], {Arrowheads -> Small, 
       ArrowBox[{{73.71997167147708, 0.3597415437985519}, {72.6608672396781, 
        0.3597415437985519}}]}}, {
      PointSize[0.01], 
      LineBox[{{70, 0.31825898835576283`}, {70, 0.4096817432345037}}], 
      RGBColor[1, 0, 0], 
      PointBox[{70, 0.36397036579513325`}], {Arrowheads -> Small, 
       ArrowBox[{{70., 0.36397036579513325`}, {70., 
        0.36397036579513325`}}]}}, {
      PointSize[0.01], 
      LineBox[{{71, 0.3298691137826651}, {71, 0.3999851950836547}}], 
      RGBColor[1, 0, 0], 
      PointBox[{71, 0.36492715443315993`}], {Arrowheads -> Small, 
       ArrowBox[{{71., 0.36492715443315993`}, {71., 
        0.36492715443315993`}}]}}, {
      PointSize[0.01], 
      LineBox[{{72, 0.34161984269653684`}, {72, 0.3835780469367105}}], 
      RGBColor[1, 0, 0], 
      PointBox[{72, 0.3625989448166237}], {Arrowheads -> Small, 
       ArrowBox[{{72., 0.3625989448166237}, {72., 0.3625989448166237}}]}}, {
      PointSize[0.01], 
      LineBox[{{73, 0.3526907660666851}, {73, 0.3621809291485654}}], 
      RGBColor[1, 0, 0], 
      PointBox[{73, 0.35743584760762526`}], {Arrowheads -> Small, 
       ArrowBox[{{73., 0.35743584760762526`}, {73., 
        0.35743584760762526`}}]}}, {
      PointSize[0.01], 
      LineBox[{{74, 0.3622423708153027}, {74, 0.33757384356106346`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{74, 0.3499081071881831}], {Arrowheads -> Small, 
       ArrowBox[{{74., 0.3499081071881831}, {74., 0.3499081071881831}}]}}, {
      PointSize[0.01], 
      LineBox[{{75, 0.3694351438645826}, {75, 0.3115367920160487}}], 
      RGBColor[1, 0, 0], 
      PointBox[{75, 0.34048596794031566`}], {Arrowheads -> Small, 
       ArrowBox[{{75., 0.34048596794031566`}, {75., 
        0.34048596794031566`}}]}}, {
      PointSize[0.01], 
      LineBox[{{76, 0.37342957213671785`}, {76, 0.28584977635536524`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{76, 0.32963967424604157`}], {Arrowheads -> Small, 
       ArrowBox[{{76., 0.32963967424604157`}, {76., 
        0.32963967424604157`}}]}}, {
      PointSize[0.01], 
      LineBox[{{77, 0.3733861425539011}, {77, 0.26229279842085684`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{77, 0.317839470487379}], {Arrowheads -> Small, 
       ArrowBox[{{88.61849966367225, 0.317839470487379}, {74.67135495307276, 
        0.317839470487379}}]}}, {
      PointSize[0.01], 
      LineBox[{{78, 0.3684653420383255}, {78, 0.24264586005436778`}}], 
      GrayLevel[0], 
      PointBox[{78, 0.3055556010463466}], {Arrowheads -> Small, 
       ArrowBox[{{81.7683676574885, 0.3055556010463466}, {75.22913788218986, 
        0.3055556010463466}}]}}, {
      PointSize[0.01], 
      LineBox[{{79, 0.3578776278802885}, {79, 0.22863235677909852`}}], 
      GrayLevel[0], 
      PointBox[{79, 0.2932549923296935}], {Arrowheads -> Small, 
       ArrowBox[{{82.31411438203591, 0.2932549923296935}, {75.70621156871925, 
        0.2932549923296935}}]}}, {
      PointSize[0.01], 
      LineBox[{{80, 0.34198277583649594`}, {80, 0.22067373878945148`}}], 
      GrayLevel[0], 
      PointBox[{80, 0.28132825731297373`}], {Arrowheads -> Small, 
       ArrowBox[{{82.84076607428136, 0.28132825731297373`}, {76.1829546150532,
         0.28132825731297373`}}]}}, {
      PointSize[0.01], 
      LineBox[{{81, 0.3222898801300618}, {81, 0.21788951095103104`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{81, 0.2700896955405464}], {Arrowheads -> Small, 
       ArrowBox[{{83.35223710611453, 0.2700896955405464}, {61.13725060641234, 
        0.2700896955405464}}]}}, {
      PointSize[0.01], 
      LineBox[{{82, 0.3003580053522046}, {82, 0.219342571810798}}], 
      RGBColor[1, 0, 0], 
      PointBox[{82, 0.2598502885815013}], {Arrowheads -> Small, 
       ArrowBox[{{82., 0.2598502885815013}, {82., 0.2598502885815013}}]}}, {
      PointSize[0.01], 
      LineBox[{{83, 0.277746216094143}, {83, 0.22409581991571323`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{83, 0.2509210180049281}], {Arrowheads -> Small, 
       ArrowBox[{{83., 0.2509210180049281}, {83., 0.2509210180049281}}]}}, {
      PointSize[0.01], 
      LineBox[{{84, 0.25601357694709576`}, {84, 0.2312121538127377}}], 
      RGBColor[1, 0, 0], 
      PointBox[{84, 0.24361286537991672`}], {Arrowheads -> Small, 
       ArrowBox[{{84., 0.24361286537991672`}, {84., 
        0.24361286537991672`}}]}}, {
      PointSize[0.01], 
      LineBox[{{85, 0.23671915250228132`}, {85, 0.2397544720488321}}], 
      RGBColor[1, 0, 0], 
      PointBox[{85, 0.2382368122755567}], {Arrowheads -> Small, 
       ArrowBox[{{85., 0.2382368122755567}, {85., 0.2382368122755567}}]}}, {
      PointSize[0.01], 
      LineBox[{{86, 0.22142200735091838`}, {86, 0.24878567317095748`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{86, 0.23510384026093795`}], {Arrowheads -> Small, 
       ArrowBox[{{86., 0.23510384026093795`}, {86., 
        0.23510384026093795`}}]}}, {
      PointSize[0.01], 
      LineBox[{{87, 0.21163143766149348`}, {87, 0.2573955302577481}}], 
      RGBColor[1, 0, 0], 
      PointBox[{87, 0.2345134839596208}], {Arrowheads -> Small, 
       ArrowBox[{{87., 0.2345134839596208}, {87., 0.2345134839596208}}]}}, {
      PointSize[0.01], 
      LineBox[{{88, 0.20771206587965302`}, {88, 0.26529193061632694`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{88, 0.23650199824798998`}], {Arrowheads -> Small, 
       ArrowBox[{{88., 0.23650199824798998`}, {88., 
        0.23650199824798998`}}]}}, {
      PointSize[0.01], 
      LineBox[{{89, 0.20888384072820337`}, {89, 0.272800875782306}}], 
      GrayLevel[0], 
      PointBox[{89, 0.24084235825525468`}], {Arrowheads -> Small, 
       ArrowBox[{{92.48077231564525, 0.24084235825525468`}, {
        85.12127657743025, 0.24084235825525468`}}]}}, {
      PointSize[0.01], 
      LineBox[{{90, 0.21431694250721867`}, {90, 0.28027524182297037`}}], 
      GrayLevel[0], 
      PointBox[{90, 0.24729609216509452`}], {Arrowheads -> Small, 
       ArrowBox[{{92.95733607371426, 0.24729609216509452`}, {
        85.83441927548697, 0.24729609216509452`}}]}}, {
      PointSize[0.01], 
      LineBox[{{91, 0.2231815515167733}, {91, 0.2880679048056055}}], 
      GrayLevel[0], 
      PointBox[{91, 0.2556247281611894}], {Arrowheads -> Small, 
       ArrowBox[{{93.5502191489677, 0.2556247281611894}, {86.78638041080106, 
        0.2556247281611894}}]}}, {
      PointSize[0.01], 
      LineBox[{{92, 0.2346478480569414}, {92, 0.29653174079749656`}}], 
      GrayLevel[0], 
      PointBox[{92, 0.265589794427219}], {Arrowheads -> Small, 
       ArrowBox[{{94.24503135497139, 0.265589794427219}, {88.03900582494016, 
        0.265589794427219}}]}}, {
      PointSize[0.01], 
      LineBox[{{93, 0.24788601242779723`}, {93, 0.3060196258659289}}], 
      GrayLevel[0], 
      PointBox[{93, 0.2769528191468631}], {Arrowheads -> Small, 
       ArrowBox[{{95.04077547157529, 0.2769528191468631}, {89.55794405548065, 
        0.2769528191468631}}]}}, {
      PointSize[0.01], 
      LineBox[{{94, 0.262066224929415}, {94, 0.3168844360781877}}], 
      GrayLevel[0], 
      PointBox[{94, 0.28947533050380136`}], {Arrowheads -> Small, 
       ArrowBox[{{95.9345883919679, 0.28947533050380136`}, {91.17313000392453,
         0.28947533050380136`}}]}}, {
      PointSize[0.01], 
      LineBox[{{95, 0.27637524011914716`}, {95, 0.3294624562781563}}], 
      GrayLevel[0], 
      PointBox[{95, 0.3029188481986517}], {Arrowheads -> Small, 
       ArrowBox[{{96.91736287700361, 0.3029188481986517}, {92.68703774122055, 
        0.3029188481986517}}]}}, {
      PointSize[0.01], 
      LineBox[{{96, 0.2903810204717436}, {96, 0.3437083731714681}}], 
      GrayLevel[0], 
      PointBox[{96, 0.31704469682160585`}], {Arrowheads -> Small, 
       ArrowBox[{{97.98075042681113, 0.31704469682160585`}, {94.0137176965295,
         0.31704469682160585`}}]}}, {
      PointSize[0.01], 
      LineBox[{{97, 0.30403273637935213`}, {97, 0.3591952753255074}}], 
      GrayLevel[0], 
      PointBox[{97, 0.3316140058524297}], {Arrowheads -> Small, 
       ArrowBox[{{99.11730792392315, 0.3316140058524297}, {95.15809871111644, 
        0.3316140058524297}}]}}, {
      PointSize[0.01], 
      LineBox[{{98, 0.31729613249139865`}, {98, 0.37547966008425615`}}], 
      GrayLevel[0], 
      PointBox[{98, 0.3463878962878274}], {Arrowheads -> Small, 
       ArrowBox[{{100.32051337547001`, 0.3463878962878274}, {
        96.17805953197956, 0.3463878962878274}}]}}, {
      PointSize[0.01], 
      LineBox[{{99, 0.330136953457309}, {99, 0.3921180247916965}}], 
      GrayLevel[0], 
      PointBox[{99, 0.36112748912450277`}], {Arrowheads -> Small, 
       ArrowBox[{{101.58479238533435`, 0.36112748912450277`}, {
        97.12071344064124, 0.36112748912450277`}}]}}, {
      PointSize[0.01], 
      LineBox[{{100, 0.342520943926509}, {100, 0.4086668667918103}}], 
      GrayLevel[0], 
      PointBox[{100, 0.37559390535915965`}], {Arrowheads -> Small, 
       ArrowBox[{{102.90559517023779`, 0.37559390535915965`}, {
        98.00690866860334, 0.37559390535915965`}}]}}, {
      PointSize[0.01], 
      LineBox[{{101, 0.3544138485484245}, {101, 0.4246826834285796}}], 
      GrayLevel[0], 
      PointBox[{101, 0.38954826598850206`}], {Arrowheads -> Small, 
       ArrowBox[{{104.27957892955507`, 0.38954826598850206`}, {
        98.84586992983938, 0.38954826598850206`}}]}}, {
      PointSize[0.01], 
      LineBox[{{102, 0.3657814119724815}, {102, 0.4397219720459867}}], 
      GrayLevel[0], 
      PointBox[{102, 0.4027516920092341}], {Arrowheads -> Small, 
       ArrowBox[{{105.70501351567412`, 0.4027516920092341}, {
        99.64025214663039, 0.4027516920092341}}]}}, {
      PointSize[0.01], 
      LineBox[{{103, 0.37658937884810567`}, {103, 0.4533412299880133}}], 
      GrayLevel[0], 
      PointBox[{103, 0.41496530441805946`}], {Arrowheads -> Small, 
       ArrowBox[{{107.18270099982999`, 0.41496530441805946`}, {
        100.3877923492458, 0.41496530441805946`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.14202351256525605`},
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.14202351256525605`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Constrained\"", TraditionalForm], 
     PlotRange -> {{1, 103}, {0.14202351256525605`, 0.4533412034234447}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8445133064991198`*^9, 3.8445133254839897`*^9}, 
   3.8445133662420206`*^9, 3.844514133489933*^9, 3.8445141942936916`*^9, 
   3.8445143938089123`*^9, 3.844514488100733*^9, {3.8445168505784607`*^9, 
   3.8445168896373835`*^9}, 3.8445169465932455`*^9, 3.8445169884060316`*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"c5e784e6-4b47-4d38-9a8e-7d0f10f37eec"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "Values", " ", "for", " ", "highest", " ", "lvl"}],
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"updateValues", "=", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "\"\<ok\>\"", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "This", " ", "will", " ", "only", " ", "give", " ", "values", " ", 
       "that", " ", "sum", " ", "up", " ", "to", " ", "the", " ", "magnitude",
        " ", "of", " ", "v", " ", "\[IndentingNewLine]", "Or", " ", "if", " ",
        "v0"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{
      "random", " ", "values", " ", "between", " ", "10", " ", "and"}], " ", 
      "-", "10"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nV", "=", 
     RowBox[{"newValues", "[", 
      RowBox[{"100", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"updateValues", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"updateValues", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "5"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableNV", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"updateValues", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"v", ",", "\"\<ok\>\"", ",", "0"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"updateValues", "=", 
           RowBox[{"PyrUpgrade1D", "[", 
            RowBox[{"updateValues", ",", "p0", ",", "  ", 
             RowBox[{"pyrfiab", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"threshold", "*", 
              RowBox[{"2", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "n"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
            "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "updateValues"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "nV"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.844513097028797*^9, 3.8445131257629805`*^9}, 
   3.8445131706532497`*^9, {3.844513274711496*^9, 3.844513282360671*^9}, {
   3.844513344957049*^9, 3.8445133981910944`*^9}, {3.8445134636763344`*^9, 
   3.844513483318038*^9}, {3.8445135235677843`*^9, 3.844513545987602*^9}, {
   3.84451363957569*^9, 3.8445136436515636`*^9}, {3.844513678059814*^9, 
   3.844513683424965*^9}, {3.844513716044792*^9, 3.844513743842458*^9}, {
   3.8445138004575295`*^9, 3.844513998071407*^9}, {3.8445140423102503`*^9, 
   3.844514043918432*^9}, 3.84451415456316*^9, {3.8445143488029084`*^9, 
   3.8445143842115088`*^9}, {3.844514478973324*^9, 3.84451450292251*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"2bc12351-735d-4b3d-a030-2c409369cff8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pickNewValue", "[", "tableNV", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.844514018260544*^9, 3.8445145069821806`*^9},
 CellLabel->
  "In[519]:=",ExpressionUUID->"14c57afd-16c9-4a60-91d1-3de6cb63ce76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare PyrFlow", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.8444601613969946`*^9, 3.844460163351858*^9}, {
   3.8445094451843915`*^9, 3.844509445880382*^9}, {3.8445130517876644`*^9, 
   3.8445130556291246`*^9}, {3.844514689140035*^9, 3.844514693174758*^9}, {
   3.8445167802758245`*^9, 
   3.844516783855506*^9}},ExpressionUUID->"5f0fcd9d-cd16-4a5d-ba1d-\
bdb9691efb66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"10", ",", " ", "p", ",", " ", 
      RowBox[{"pyrfiab", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", "mode"}], 
     "]"}], "==", 
    RowBox[{"PyrFlow1D", "[", 
     RowBox[{"10", ",", " ", "p", ",", " ", 
      RowBox[{"pyrfiab", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "0.001", ",", 
      "\"\<Constrained\>\""}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1", ",", "103"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8427011171311693`*^9, {3.8427011579256897`*^9, 3.8427011722779355`*^9}, {
   3.842701297457902*^9, 3.8427012976177683`*^9}, 3.842702107395807*^9, {
   3.842702956024593*^9, 3.8427029573174276`*^9}, {3.843674018607419*^9, 
   3.843674022402357*^9}, {3.843678971174404*^9, 3.8436790129068117`*^9}, 
   3.8437586436966314`*^9, {3.8437586845840893`*^9, 3.8437586855190554`*^9}, 
   3.8437618402596893`*^9, 3.8437618985421076`*^9, 3.8444602703342605`*^9, 
   3.8444657790598745`*^9, 3.8444658517453156`*^9, 3.844467337496135*^9, {
   3.84446810899422*^9, 3.8444681207636952`*^9}, {3.8444690196543484`*^9, 
   3.8444690537755437`*^9}, {3.8444692346263294`*^9, 
   3.8444692429257164`*^9}, {3.8444693087297163`*^9, 
   3.8444693418978047`*^9}, {3.844516799868083*^9, 3.8445168376411505`*^9}, {
   3.844517004685013*^9, 3.8445170144091964`*^9}, {3.844517044957429*^9, 
   3.8445170685246296`*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"08618a1a-464c-40ba-8730-9b2b87ad4f99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "False", ",", "False", ",", "False", ",", "False",
    ",", "False", ",", "False", ",", "False", ",", "False", ",", "False", ",",
    "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.844516838633813*^9, 3.8445168515159535`*^9}, 
   3.844516947709453*^9, {3.844516989376437*^9, 3.844517083380067*^9}},
 CellLabel->
  "Out[525]=",ExpressionUUID->"40f4452e-ba83-4239-8749-48b9f87a942c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[521]:=",ExpressionUUID->"8ef6bc8a-ce67-49d0-88d7-af6fe6d0d33e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958.5, 741.},
WindowMargins->{{-5.25, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"00e0d04c-8771-43b9-80d8-cdeb6d7a9933"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 487, 7, 97, "Title",ExpressionUUID->"47a57545-a511-4f58-978d-8dfdd48a83b7"],
Cell[CellGroupData[{
Cell[1092, 33, 207, 4, 66, "Section",ExpressionUUID->"e20ef618-fd74-496f-80d8-4135c55a285c"],
Cell[1302, 39, 950, 24, 66, "Input",ExpressionUUID->"f61f086e-f338-4618-975e-74bd85d44185"],
Cell[2255, 65, 2232, 40, 141, "Input",ExpressionUUID->"6d0704c2-bf8e-416a-b07f-e26d538a6327"],
Cell[4490, 107, 764, 18, 104, "Input",ExpressionUUID->"d776a6b2-f575-4809-a505-9090b6544b17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5291, 130, 330, 5, 66, "Section",ExpressionUUID->"d964f20b-a4fc-49b4-acb5-4f1eaf7c2ffb"],
Cell[CellGroupData[{
Cell[5646, 139, 2450, 66, 235, "Input",ExpressionUUID->"9dd85409-587b-4bcf-9b9c-30c708071c3a"],
Cell[8099, 207, 79648, 1324, 70, "Output",ExpressionUUID->"8a509bbc-cac7-43bf-986d-4e9e9f76214b"],
Cell[87750, 1533, 999, 21, 70, "Output",ExpressionUUID->"2f9565d9-e172-4a05-8721-e1dc5d8a6d51"],
Cell[88752, 1556, 901, 16, 70, "Print",ExpressionUUID->"630e8e3b-2e23-45c8-9de2-21c6d23fbb72"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[89702, 1578, 433, 7, 52, "Section",ExpressionUUID->"5d61a41e-ed5a-4385-90bc-ff7ee152344b"],
Cell[90138, 1587, 577, 17, 232, "Text",ExpressionUUID->"61f617de-1b05-4164-ac2b-9517f9b9c7d1"],
Cell[CellGroupData[{
Cell[90740, 1608, 446, 7, 45, "Subsubsection",ExpressionUUID->"f5c67ce6-88ae-4c58-ad48-5ea6e837929d"],
Cell[91189, 1617, 1894, 43, 122, "Input",ExpressionUUID->"587ba82c-b710-4811-9f07-6f5bc7534355"],
Cell[93086, 1662, 723, 18, 104, "Input",ExpressionUUID->"746e0c01-a7cc-4931-8006-cd72772f88de"]
}, Closed]],
Cell[CellGroupData[{
Cell[93846, 1685, 644, 9, 37, "Subsubsection",ExpressionUUID->"bf515b6f-ee86-4614-9e02-51b26458da63"],
Cell[CellGroupData[{
Cell[94515, 1698, 351, 9, 47, "Input",ExpressionUUID->"a3b59f75-8182-43f5-b6c9-52a27118d68a"],
Cell[94869, 1709, 1355, 30, 51, "Output",ExpressionUUID->"78c199a1-0a6a-400f-9e6c-8e7f0c817fa7"],
Cell[96227, 1741, 541, 11, 32, "Output",ExpressionUUID->"c4958089-4fda-4053-a373-87ddb90cdbbd"]
}, Open  ]],
Cell[96783, 1755, 628, 16, 122, "Input",ExpressionUUID->"0e16dd9a-929c-4227-a528-5280c7da1107"],
Cell[CellGroupData[{
Cell[97436, 1775, 1056, 31, 47, "Input",ExpressionUUID->"38594f1a-cb7d-4c93-bb3c-5d4ee2a21848"],
Cell[98495, 1808, 78850, 1464, 278, "Output",ExpressionUUID->"63fce309-180a-47ac-bff9-2d0c91851503"],
Cell[177348, 3274, 77942, 1450, 278, "Output",ExpressionUUID->"c5e784e6-4b47-4d38-9a8e-7d0f10f37eec"]
}, Open  ]],
Cell[255305, 4727, 3335, 74, 404, "Input",ExpressionUUID->"2bc12351-735d-4b3d-a030-2c409369cff8"],
Cell[258643, 4803, 238, 5, 28, "Input",ExpressionUUID->"14c57afd-16c9-4a60-91d1-3de6cb63ce76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258918, 4813, 749, 11, 45, "Subsubsection",ExpressionUUID->"5f0fcd9d-cd16-4a5d-ba1d-bdb9691efb66"],
Cell[CellGroupData[{
Cell[259692, 4828, 1654, 33, 66, "Input",ExpressionUUID->"08618a1a-464c-40ba-8730-9b2b87ad4f99"],
Cell[261349, 4863, 1798, 27, 126, "Output",ExpressionUUID->"40f4452e-ba83-4239-8749-48b9f87a942c"]
}, Open  ]],
Cell[263162, 4893, 109, 2, 28, "Input",ExpressionUUID->"8ef6bc8a-ce67-49d0-88d7-af6fe6d0d33e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

