(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1819401,      32592]
NotebookOptionsPosition[   1814467,      32503]
NotebookOutlinePosition[   1814961,      32522]
CellTagsIndexPosition[   1814918,      32519]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Little Tests", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.8431583610963435`*^9, 3.8431583669555917`*^9}, {3.8435589181641517`*^9, 
   3.8435589198932934`*^9}, 
   3.843744422167187*^9},ExpressionUUID->"db62e516-81ba-4d70-b1b1-\
9cd33c91d768"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8400383593859367`*^9, 3.8400383615886106`*^9}, {
  3.8433207191908846`*^9, 
  3.8433207198782096`*^9}},ExpressionUUID->"78b447b1-9527-4a44-8f25-\
13c25c5e9101"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Add", " ", "to", " ", "path", " ", "packages"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"packageDirectory", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<1DPackage\>\"", 
        ",", "\"\<*\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$Path", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"$Path", ",", 
       RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8437444304820337`*^9, {3.843744475443145*^9, 3.843744489249152*^9}, {
   3.84374460430722*^9, 3.843744614114832*^9}, {3.8437451879521313`*^9, 
   3.8437451890826197`*^9}, {3.8437453266046667`*^9, 3.8437453290342407`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"73bb8eb7-fd63-4382-a987-e4763fd2c07f"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<ReadSintel`\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<pyramid1d`\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\"\<OverConstrained\>\"", ",", 
     "\"\<SemiConstrained\>\"", ",", "\"\<Constrained\>\"", ",", 
     "\"\<ConstrainedSteps\>\"", ",", "\"\<ConstrainedInitialSignLeft\>\"", 
     ",", "\"\<ConstrainedInitialSignStepsLeft\>\"", ",", 
     "\"\<ConstrainedInitialSignStepsRight\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"\"\<pyramidalCyclope1D\>\"", "<>", "met", "<>", "\"\<`\>\""}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"met", ",", "methods"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8405470666010065`*^9, 3.8405470721952195`*^9}, {
   3.840550195734952*^9, 3.840550216899179*^9}, {3.8417693956828256`*^9, 
   3.8417694295737267`*^9}, 3.8417694792252483`*^9, {3.8423558358531294`*^9, 
   3.842355838266631*^9}, {3.843139686906508*^9, 3.8431397006034536`*^9}, 
   3.8431400354897623`*^9, {3.8431583092259803`*^9, 3.843158312433055*^9}, {
   3.8431587050542717`*^9, 3.8431587088646235`*^9}, {3.8432405156973643`*^9, 
   3.8432405180756235`*^9}, {3.8432434086403227`*^9, 3.8432434521650333`*^9}, 
   3.8435781970825057`*^9, 3.8435786572990074`*^9, {3.843745725318043*^9, 
   3.843745730794486*^9}, {3.8437501550408554`*^9, 3.843750161634801*^9}, {
   3.843750230642497*^9, 3.8437503524543705`*^9}, {3.8437504375112853`*^9, 
   3.8437504386938276`*^9}, {3.843755017106989*^9, 3.84375503403273*^9}, {
   3.843755426452015*^9, 3.843755445994274*^9}, {3.8438346833502474`*^9, 
   3.84383468782578*^9}, 3.843835196563305*^9, {3.8438498338643837`*^9, 
   3.843849837390987*^9}, {3.8438505820282726`*^9, 3.843850585529437*^9}, {
   3.843851080665611*^9, 
   3.8438510924880347`*^9}},ExpressionUUID->"8e037178-fa87-40a0-a24d-\
b460c488efbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Declare", " ", "path", " ", "for", " ", "SINTEL", " ", "Data", " ", 
    "depending", " ", "on", " ", "user"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"baseSINTEL", "=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "$UserName", ",", "\[IndentingNewLine]", "\"\<fieri\>\"", ",", 
      "\"\<D:\\\\MastersMathematica\\\\Data\\\\Sintel\>\"", ",", 
      "\[IndentingNewLine]", "\"\<roys\>\"", ",", 
      "\"\</home/roys/datasets/SINTEL-stereo\>\""}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8437446388681035`*^9, 3.8437446932344007`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"17e8648f-4974-4529-81b4-a9cf0e6c6f42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data", "Section",
 CellChangeTimes->{{3.8396005056192665`*^9, 3.839600506650977*^9}, {
   3.8396006430435266`*^9, 3.8396006454493484`*^9}, 3.8396009902260947`*^9, {
   3.839601775074339*^9, 3.839601775891445*^9}, {3.8437453621624937`*^9, 
   3.8437453624275274`*^9}},ExpressionUUID->"1bff5a9f-0ef9-4eb9-a97f-\
cc3b0be84b3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "downscaling", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}], "=", 
     RowBox[{"read", "[", 
      RowBox[{
      "baseSINTEL", ",", "\"\<bamboo_1\>\"", ",", "\"\<0001\>\"", ",", "r", 
       ",", "\"\<clean\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "44"}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "102"}], "}"}], " ", "arbitrary", " ", "size", " ", 
      "to", " ", "make", " ", "the", " ", "method", " ", "faster"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nx", "=", 
     RowBox[{"150", "/", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ny", "=", 
     RowBox[{"300", "/", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ImageTake", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"ny", ",", 
          RowBox[{"ny", "+", "44"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", 
          RowBox[{"nx", "+", "102"}]}], "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageDimensions", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"MinMax", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", "id", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<max dv=\>\"", ",", " ", "max"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843745436013342*^9, 3.843745445266261*^9}, {
  3.8437454795752115`*^9, 3.843745636648714*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"1f69a44f-8be3-4b10-b578-417791e2468b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
uDykR1qPHh7/CUe8KwB/w9n8H/Focok=
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
MWK3N7N9yT3sOiUF06TbmH7sxEdpLmds1CgPVsNpuTUHTn4VuVUN473TPOQj
FBjfQ55vxwXSk5az/PpmdDq8mZq0CeGuH4YhkTztlYVKeiZ/kwu596CULoVy
ptl+4fZneWFnVSG/HcNxMN/FgpvjSSm2wWvFUDL/avH7gwbGc41ZkWZC124T
bPR7EWjSh76/jWhUm0xWyAF2nOngae5X3HVfoPkjl2WjQ7BYEIXK5ggWzlqO
12NnCu9o4fPus8jP1pktc9ZQptObkKWSBOSo4+U1jIObNZiXN5Ia75X0OudM
13437sUMo6l6OCe6vMS512TfCBtsT6zDNzOeKeMK6PutjFS/KtaKZyXpZANu
Os2cnNYkdstmwh0uMWz0bZS23cRz2m8OPvhMh/cdYuck8CJoCe+Pj+BD+Fpy
361k1+qFKG5wYuZbW165bKBxyx5CRDspPXAXh763SD7zg5TC3sIRx1qGP88h
7W2FeF7z0S3JR3tWEjJeC5gWIPb1LnWxv2oTMKUnkcb/RA2txnxoFPfEnMUs
HhCKS0cMSb/24TIynmtKESRFRTH4SAitQwKIU0rl5sBi0mVKiOt5mqNyn/j7
8if9fWMw2p3JyT9VKCp18LD9K8rCTSaI19wp9qirYbbcip2GsaQF8eW9aE7s
xX+L1dBwEqE+NZ6wEU/wVGzh1e0HuA+4h9v9GPLrtmIa6Ydo9Qa8iiaRGqnN
iinfRPmt6ox+M4R/HyQ5HvJdZG7YC50IET1W6BA5xJynN61RXKdOxVUFss23
YDQwHMkxg7hWMAa1LncO6sYiMycXk/hS8R4d4fjXE1RtOIP+nWb6fjmPi34L
L6Uvoff5CfVv3rN+5T0eFPcU7MJ/c35mMFEKU+l+2pe7a9cxyGwDX3ptZ9jV
Cfzq3x/F25MwM/Am+aTY+TfmMvVVF8orvhJteZsL6/SEFhlVob4oG+/GBjzF
52LdkhLOJmSz7eMO5FxNGK5lwDNvO9YYa9F1oCfSV+0wG+rJxf1eXFmxVbw3
2zEoCCazTxSpRYnYNSeRU9bAYbtiXqdv4XlMJtqph0jwbqMwV1LwyLnFYNn1
qPk2413ZS1jXYSYcDzEUZrveQW20K5rDHYh1MiPqkB3/LujhO00Nz7mfRXN2
yCHb3ZZfumIniC0lLiKWu2fLxf3Two7UOMSYwO4lAovr3QkcPZElf6XpEd8d
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
2+0Me70bcIlt4r5rI24Gj7n6UEY4fU9ZcLgiL3BeRng3qIQ1GWqM3e7Exdcb
uPs+iC9p3mxT1uLg/CFM2TmP6NW+KHn4oz9jEp+OV2EXd4JnJSXMVfbkT/kq
ju0KYK9CCv1l8sheuIDI4XYctB+Bo4UyU8XcGJnqwJcqQxTrZzNm5xR6Ph9A
90Qb0rKNeJvhwKrN6vwt+yfan9Of9adXMj4vmLY7sazbmcqeC+kcfpPL0LIc
ftdn0b41iXf/pZKVdZy7iXqCtdFxInQuMsfNQtDOekzpjNlI/47ju6343psv
ZInYtwxqh7DhxQLa53vwz+a56L/5ipR/8cL/y2wWj3Dg6eVcRtyOIDFpJvMm
j6D7zf4MT1fl+oZhxN8R++kQaU4FDCfomSHr4odwXjuW4MpylOPfM3ieoWAr
nstCf7EnWJkwYoUlR4YPwO3IUqYsS6FOrpjiXoeR8TmGVWclnasP8WCOmPfy
65FOPUe/ykY+jb2C69fvVFX0FjRdVITNjfLCx+t/eNlnG4rmOry36suZsGFc
EjO69HhTLi6zx++eA3IDJxJhsQAZ2elU1e0V8/kRTjnlM/9TKBYDthP9LIYK
1Yu8dKxhcGU25vlBvDNSRmm0Ie2eRmT5DWf1b13q/prx58VibvZYgWl6EtoT
U3GqOMikzmGs7ibJDh8j5jtMIbEggHS5KJQikqgITWezci7fy4oYqlhEQ0w5
5UeK+Lk0m0l3khgvJSMk5asJtwOv4DdZQvi1ZzVztLfS6ZjPiaJ03rQsYdDK
eTQsHMcQTVuEAH+2bu+D3P6eqGhosfD7FMY4KbIocRVpGzJwGrAFn/szCT0y
hEcuYqd71I9f5/S5H9mfjaf7IBssz9BaZR61BFDgWI/fqm5Cw41fdL3uT0X8
YC5q6vIpoB9Pr3nR6JXJsnFl7MitRP16NfdN6vlu0Yiexlm2SFVycnUdaDah
d6qJ6Yb3WNwkIWwZqSycUVEQPB/9pk4tA+HiIt4t8eJxSV+a/LrjcvO+SM9J
DYVnRqRX2rDx9VCeFsHH1EXYK0XxIOkASXuPcH5tF4Un3+C39jGvtF8wcv8n
yka8ZF7KEQJmaTN1o5F4vWJHFnOcicoAdNoM2PzFhgdrwnFQLWaySgW9DuRh
7GmG01cNtjXasv7keko7QxkoimWb+Fz64JlJ4JtCztQW82tpGY+DKhmYd5jh
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
vfBSVxl143mU1arwD/KQm9w=
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
wSeKyteDReR7Rwe5EGwnztHW8rWYray69grTg05g4QsDWqbpMYJ51oee2cOt
OZueOb2CvUNt3PyZecwzNzLAPZ5/2OhhTc9YkwM8qNFldowtMy2fungw1y5T
kyLMszv0TTI758xqE6LolxH/n12zml2zlNpcpkan6BfnWcy5B/w17hcv3ts5
u+PR+XMa+r25hGV10zA18BJGl7qEHjUvophrKtxykuFiSIJfQSJCAxLQ4vN5
7J0Vi7alzqH6jzDU4fcsZL90Ip95LFRRLUvB/b0KHrFrKjdQ0f6jghHMNXsy
dPAHBYMduE25L5vV5q5hp3TijplPTtvHPWogG3xhDxnZTwv7K0i7qMJ790kc
/HgHs8sVk/yXxWTHqBLS40sJedSopERULympdiWldlgJ8fAuIe3GF5eSTYvJ
+VTqk2Mvj1fayrj21uLTOxbN9CeR9MOAqmTmmXHUIF4P5516vGX3O7FnXk3V
ozmzzETPFOugxxlX+idfh5n0Swl2zYBGZpygLoN5FCMPvP1gQih16c+jLDdn
impCB27OfPrmO/3jwK45xRzL/z+6xo7aDKBG9QI1zJumoc8j9kxjeshHxdLZ
iVhx6BocO16B1/Yr6Fb1ClqtuYzXp9Lgf+QSguZdREb1VOzalQyLS8y2MonY
+Uc8fnaNw6fcCBQ8MiHLTUXxuypS6JH3J+iRaSoCq6iYUUzFssEqIphjVdkf
O++Tm8uS4dgpU/wVfGmloIMvN884+uUiO2aiimbUsCR3Z+1t1KuKgvy23M0h
gVCWPcC2+mUkYFUJCbtXUkq3KCWRs0uJ37RSMrxmKTlhKinvWpSUq+dLSNnb
xWV+m2LijCLifMReHpawkPLW/HpD9Ui1MOBDNLmZDPDYpMda7syBZIAtzLXJ
Q9g7XvQSGeAlc22gLXvnJ7Whb8K5OStx11iQyz5Rm87/8vrmXG7OceS0+UuY
b/TKXubZ4v+jayzYNSVSuEPXayjjTM8115Dyp4qSI5Iw3eMmiuy7hvTa17H/
5DXU+HoVtVyvItX1CvbmpKFbwCVcq3oRyb1T0GdgEpxqJ2J3+wT8oC4zzvBr
dFbRKkZFwxEqim2nLrEq7NeraLKNTMD92oK6LaunYgM35iry2TAy26zuCqaT
kec0VTCcPOZ9T0FX+ilhkYL35LizZAIL7p8Xdgq6B7OL5p+E0j0fz46UkcU+
paTU9dIS1reMfF1URooMKCM3rMvI22mlxWdvKSm/taQ8vlZCKiQUlw7ri8qV
0Q7SubylbOc1c1usw4FKBnjSM7vYNaZtesyiNglkgHTmWnX2SwNqUkAGmN1E
j+mFOjj80sGJ2uzjxsmlNkXyTbBnrkX+y+ubH6lJP3ZNCr1zpj2vNf0y4v/o
mvpk51enNKwoY8IvG14j5szsrik4Me42Xiy/Aa8KN5F6+waUgTeQarwOl8PX
8GveVTSvfgWNjqXh5/eLOGbBbFufhA/5iZjyIg57/TTASsO2ohp+ZCjo8ZL5
dI455K+iOnUZS44+5KxiET0wlttzD7fOlV/0yCB6hPfwry9G3K/OPLvN+5la
tPlkRAkywDQy2jfuGz+yde1NKq5an8KFa1dQZU4ZabK6tBzv6yhxDmWl3ICy
Mm5UWVnfuKzkxjnKjiqOktKujKysX1ps1ZIyMLSELC9WXFx9i8jD4YUIsuB2
CNOhKfk5iVlmIgNUoiaTyQB96Jk9o/UYRc984t7cRd9sK6XHZ+aZq5UeN5lp
C33MqGhrxjp2zMh/eX0zjZqspSZV2DkpU5lvvswz+uY7/ePA3D/FHMv/b12j
Y55tpHdaeJrwlves5+FQtOhwCaFxd9Bx4C2EWt5G8+O3sKXiLQyaexNJcTew
5f11WARcQ9mqVxE49zJ+MNsejEnFzt1JKLIwAYG+IbA/o+CWD3Uhg2cxdzqR
mbv+Zqr3Co7sUHGUj4fcUdA4/z978jtZeb2mwH0NmbicgvZkgJK1FAzg5uxy
yohuadyXqUYMCuTWdFRwlb8/76aB3B6KLcuKS/AuR5nct6z03VdOUquUl9A/
y0tGh/JS17K8pKwqJx/iy8qUe46yJbSM+DQpLVW7lxSvFcVlV0ZxWRp8F3Om
BOJ0ZyPGUhcf5pnFMT0c6JleZIC0VeydP/QY0EaPxmSA09SorKUeZ+mb2mSB
suSA4eToQ1bsGGrT/5/XN1ezY0ZTk1o8v2XXRLJrtlGbGevoixHMN17zceS0
+W2Yb/TKXubZ4n+6JpRd4xeroeV9DbeKm3C1pIZBSZeg1n6A7pPuYPlfd9G9
wV1s2XYHLvdvY+CzW9CduInGF24gKeI6pv+8ivVuV7DBIg3fXqfA7JUCQ/9w
RLYyIqqOhp/HVOxnz6yih7rfVPGA3lneTkXL0yo6blSxPVDBiRXMKDLwltMK
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
ddGwyZZatVFx4KkC51gFJWurcCEnjN6poMISBTbryAWjFGyjZ1aIgi6+ZGdb
Bdu5N9OpTcFDI6ypySvmWR7zrA49M5Vd04GMvX+3Dh2KncHaGtVlw756Ytzg
Ll1c6smbfvVk+J/1JLZ1PYn/4i7bAt2ldBt36apSt3V1ZET12rJyek353LaG
TJnoKrMPVJQfTULwtNVp3OxlwDTuTc+1emzkpvH/Z9P40TNe9MyBRtyfhTro
yACbqE0Hbs2W1KZ9vA6nmWuVV+qgkaGbM89yXpjQ4r4JeZH/+dmAJ4dNOLnI
BFllwhGel5PLejczYf48M8rd4gpokYCbGRm4+DIHm159RqnP2Qhbko3Uq5/x
yfIzjpb/BHzKQu2ADxjV9D0ydG+RRu+kHnmFIi0yMEL3HK/KRuPTWAPOOnJf
sef/ctEwIZv7kdtlMjd/NHmsdLIKPXPteKCKNaqK1a8UpOsUmAMUvLinsG+o
zVIFR9bQG7xfarJrZtMzexuxd5hjZvZMN/KzKzXZG0Ne+yfPJi0zInaCEeXo
0U9njqLktQJUy20sjlXcxa1yfTkWVV/qODaQYbUbyKSv9WX3xvoy6W09mVun
nqTOd5fv9JXzmjpib6glU/+uIb6l3aTarCJyrclpZLgbeF8YsE7TYyc3jZmZ
No2Z5snuH8dN857a/KpMbXJ1CGTfvODWbMOtuTlWh8/Ms27HdIhYrEOF/eTe
bPIAt8w8fxMqPOa+oT45zLE+9Ev7dSZcJId1djPBP9OM/uSM1lMTUO10DjZu
/IH1M78ia+U3jHr3FRuaf4XzyC+4PiYbzXp+xo/Sn+Chy8KfpT+goPc7/Orz
Bm6LXiI/LxNzmqfg3SAdinAXBZjYIWdUZH5S8ZUMtuwiNSGbhVVQcYUMsEM0
nGH/9zuhYmwNFYOK8vNbVDy+omD6DHY8dfEhBySwY7b7KHhObSxdFP7djdhD
z+xknvWlLpOoy/N/8mzOst+v1ZARKvBa5JjhdaKm+IxrIB5f6kv+sIay4m5D
Mf1qKNcLGorLmYayzquh/PV3A5mWVF/sAurJlIXusjakrux4XVvGv3GTPW+r
ywjPNJTuEIBe5I1q7Jnuh/Q4xOu1lJ5ZO02Pg2Szv5lnD3nuaqfHX8yzVOba
FG7NzfSKOz3jwL6puUaH1Ut1aDgzCG++noXP+7MI7RqEyzNNuEaddv9+P4B9
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
gE8=
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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

      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.843745544172974*^9, 3.8437455587086134`*^9}, {
   3.8437456043349733`*^9, 3.843745637230178*^9}, 3.843750357194377*^9, 
   3.843750442540288*^9, 3.843755038653054*^9, 3.843755451850748*^9, 
   3.8437565646884813`*^9, 3.843757271302692*^9, 3.8437575470726614`*^9, 
   3.8437576304434233`*^9, 3.8437622275332413`*^9, 3.8438308820688467`*^9, 
   3.843835235590736*^9, 3.843835519146273*^9, 3.8438356415889378`*^9, 
   3.8438362828180304`*^9, 3.843847844848304*^9, 3.843847894620516*^9, 
   3.8438498651881757`*^9, 3.843850602870332*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"e37495dc-8731-4908-9bec-eac7b611f800"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.843745544172974*^9, 3.8437455587086134`*^9}, {
   3.8437456043349733`*^9, 3.843745637230178*^9}, 3.843750357194377*^9, 
   3.843750442540288*^9, 3.843755038653054*^9, 3.843755451850748*^9, 
   3.8437565646884813`*^9, 3.843757271302692*^9, 3.8437575470726614`*^9, 
   3.8437576304434233`*^9, 3.8437622275332413`*^9, 3.8438308820688467`*^9, 
   3.843835235590736*^9, 3.843835519146273*^9, 3.8438356415889378`*^9, 
   3.8438362828180304`*^9, 3.843847844848304*^9, 3.843847894620516*^9, 
   3.8438498651881757`*^9, 3.843850602872327*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"1247c6f7-2c77-4474-8afb-425e2f9fc725"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"max dv=\"\>", "\[InvisibleSpace]", "12.595175743103027`"}],
  SequenceForm["max dv=", 12.595175743103027`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8437456043449473`*^9, 3.843745637239154*^9}, 
   3.843750357199365*^9, 3.8437504425442753`*^9, 3.8437550386580753`*^9, 
   3.843755451857729*^9, 3.8437565646944666`*^9, 3.843757271338664*^9, 
   3.843757547165414*^9, 3.8437576304833183`*^9, 3.8437622275402226`*^9, 
   3.8438308820718384`*^9, 3.843835235594726*^9, 3.843835519150263*^9, 
   3.843835641592928*^9, 3.843836282821023*^9, 3.843847844852294*^9, 
   3.843847894630489*^9, 3.8438498651941595`*^9, 3.843850602873325*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"5c579fd5-a733-4e57-a76c-c8a76301e836"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Tests", "Section",
 CellChangeTimes->{{3.8396005056192665`*^9, 3.839600506650977*^9}, {
   3.8396006430435266`*^9, 3.8396006454493484`*^9}, 3.8396009902260947`*^9, {
   3.839601775074339*^9, 3.839601775891445*^9}, {3.8432444128743267`*^9, 
   3.8432444151784225`*^9}},ExpressionUUID->"d27acb04-c6fd-4944-8227-\
118c1ff153a7"],

Cell[CellGroupData[{

Cell["Little Functions", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.843308066803094*^9, 
   3.8433080681141663`*^9}},ExpressionUUID->"b38d52a6-6120-4727-a325-\
de50a59d758d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pyrfi", "[", 
   RowBox[{"ia_", ",", "ib_", ",", "row_", ",", "lvlmax_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pyrfia", ",", "pyrfib"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pyrfia", "=", 
      RowBox[{"pyrFuncGen", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageData", "[", "ia", "]"}], "[", 
         RowBox[{"[", "row", "]"}], "]"}], ",", " ", "lvlmax"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"pyrfib", "=", 
      RowBox[{"pyrFuncGen", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageData", "[", "ib", "]"}], "[", 
         RowBox[{"[", "row", "]"}], "]"}], ",", "lvlmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrfia", ",", "pyrfib"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.84313892088904*^9, 3.8431390761722784`*^9}, {
   3.8431392570148835`*^9, 3.843139273697956*^9}, {3.8431590848455114`*^9, 
   3.84315912015506*^9}, {3.843159154421751*^9, 3.843159154684618*^9}, 
   3.843159972594839*^9, {3.843224134943307*^9, 3.8432241373889875`*^9}, {
   3.843238887570883*^9, 3.8432388887128267`*^9}, {3.843244470687603*^9, 
   3.843244471083666*^9}, {3.843245943522396*^9, 3.843245953156348*^9}, 
   3.8432471526931915`*^9, 3.8432472029964914`*^9, 3.843247273562867*^9, {
   3.8432484084228573`*^9, 3.8432484087823677`*^9}, {3.8433081379635553`*^9, 
   3.843308241907001*^9}, {3.8433083959863462`*^9, 3.843308396126707*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"cb786676-2541-46c2-a080-ee0f48f60b08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvlmax", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrfiab", "=", 
   RowBox[{"pyrfi", "[", 
    RowBox[{"ia", ",", "ib", ",", "row", ",", "lvlmax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.843746040554737*^9, 3.8437461051324205`*^9}, {
   3.8437555812868156`*^9, 3.843755582637147*^9}, 3.8437556660876565`*^9, {
   3.843756798752108*^9, 3.8437568007775183`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"6ea70fb8-085a-46ce-a6db-87a5d0ee1215"]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: Friction", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.843845394355653*^9, 
   3.8438453962691684`*^9}},ExpressionUUID->"62b14247-7735-4ebb-aa4c-\
bce57988dad4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pyrfiab", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"pyrfiab", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "103"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843845649071014*^9, 3.843845744333729*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"c917c1cb-7859-4fb2-b27e-567e8a406602"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vT+0w/8Bt2wiCQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$20870#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
0zqZxHNc0Owy+DlezeR3bFywm3k//g+hpECZ
       "]]},
     Annotation[#, "Charting`Private`Tag$20870#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.1015370493922691},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{453.42857142857434`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 103}, {0.1015370493922691, 0.6808370572248603}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.843845703100545*^9, 3.843845745348981*^9}, 
   3.8438478449509945`*^9, 3.843847894743187*^9, 3.8438498653509345`*^9, 
   3.843850602999985*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"9987662b-09fe-4175-a1e7-5eead3d4ce6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pyrfiab", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"pyrfiab", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "[", "x", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843845761222068*^9, 3.8438457675414953`*^9}, {
  3.8438476993188024`*^9, 3.8438476997806854`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"4197093e-6336-4dc6-900f-fb248b8cc750"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9VT49uzBp0cHWSi8VeqmzCMqtOqfNjt1hoXY703sMHxCBbkSWy7LWBai9aWf
ffmUCuapxeZSySwEgpZJNi1USCjOtErKZKGgyw+mXduoYKR5/u79chbKZJ6X
XnpBhbJ7e/uPsViocYy2O+glFTT0nr6tf8RCK5ZRabdfU2Fvcy5XejsLyUXu
fE7pIvR8wLWd+oaFtjYuLBS+Ifzwhl/Lvp+FLqsdNXnYQwXamRWz5c8slOIo
7GfUR4Xfn75cPj7JQveTn9zr7Cf8GeR78vIMC/1g1/g9+p4KveSLHr0/WUjC
YFjJ4wMVPpO/JkivsNBmj0SL30NUYNu5xpvEVoes8o2vXhumgnrwA+GnHHXo
wvuVQsFPVHD6LHZuA3cduiVa2X3nMxUKzoiEmfPVoaq9p/7RxqjwR4BppyJY
h7oCZNRLx6lg3z07Uydch+aqX9noTVChrf4NsJHqkPBUSGjTJBX+e3LYgk28
DmlS9cpNvlKhfTqQcl+iDpnbTA28nSbybTFmqEjVofMxmWsdZqjAmVs9Zy5d
h2KaD26cnKVCrdbjHxtk6lDpL65jF+ap4PvBs/4pgds1GyL/LhDxS5u3icnW
oSlnj5rri1SQTWf5yxCYN40+LPqDCuxl+y/2EfdVu/r4039S4ddQ2EYzAhtz
x2xZ95uoZ6NDkT+R78wOOFnxhwrcBe+HHAg+ERcW47auUEFl25+uFYJvQRGj
/ulfKljO14daEvU8+2g/bv6PCpGtlPljRL2jEqKkATYadDUpUhRF6hDH/mc7
TrLTQPFdG1cm0S/F0Mtnv3HQIEJcrLyL6Kfh/Q1JF9fS4LvHKukR0e8TMyNN
a7hp4DEdrevIWYeClZKno3lo8PtGg0QDoVe2nYm0JB8NYo1jq18Reg61VHmo
CdJgXFVKVXaRhZQ197qVCdGg41XZlOssC7klvXfRFqGBnJwgt98UC/05yemk
J0aDN+XKZg0fWei/9pTjD8RpAEtDfksDLBSps+HodkkaCI06/pnsJvyzxsbK
UIYGb+sbhdifs5C9y5TFM1kaPM9JzVJuYqGc14FmxmSivk0oiuMBC2lnFhqZ
K9Bgev8nt5kiFtq/7be+nTINxE7FnwmOZKHbObG6H9bRQCS+ssUviIXe8Srq
OKrSwO1kWpCKHwu59Juon1angTlH22qdEwuF+aZTvDfSIFUlRidJn4XaB7Vl
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
6BA2+mKXckwB/h+sEwWI
       "]]},
     Annotation[#, "Charting`Private`Tag$20919#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
lmDH7sNlgs+F4VrK/i3tnAz8pMnGZ+KFMJQ5i3TOTRZhpYogdK9fGE6p714b
flCEZ+MbX1m8EwaFehfVKf8i7Gexba3oozB8O5vS//BLIQ6bETmhtSYMidrf
XpU1FeBCkckZpy0i8MpJgTZ/Kg+zxOknX1YSAbXztpsvK+Zhc94WrZvbRaCe
oWe/mS0PC7Am3ypWE4Hvc2oRKzW5+PKPI1s/7ReBo2VHnL1FcvGJJ2X2duYi
cNv2x383W+7gxSCv4bNRIrAgJZKZRcvA+qvvr7vGiEDnUHrS5XfpuNT3uGJg
vAgM0ELW8hPTsdXFjf5ZKSJgAp6Skxzp+LH5oPhwvggc73oTIzSXirPU9p0y
axaBmrVWM1p/Mj78jfXJqe8En/WzfiIDCThdzdFn+6wI5BvvvtWbkYBng3qp
vD9FIEL9AMtTG+JcJNWvfVkEtAryOBPn4vGM1raNO9lF4Zd6TKIJKR6nxpkE
80uJwpgHFewfxOCvauXqj4+KQrJ1kPi5cxEYBQuNF+iKAvuruR3f/oXjpCe+
0cF6BLb7xv03Oxwjq/2Tu41E4eoHr98to2E4KeJ1fJGVKMzovBsosruBtYZY
vl/3FYX4wTUf6cgQHBd8Ov+/AlEgVe6sV/bzx6rbrszyMkRB5mCtaurby/jt
2xyttyWicKDnQgyX1mUspzI96MUUhcDma6//cFzCdR9D+EqaRMGVtL9xL8MH
v9Gp8hF+IQpitzc8/kP2wAFLA+1jr0QhyeMv90CUO6YVrApUvhaF5tDjeg7/
3LDzH+3So8OiwHVdbZpz4CJeY46MXv0kCpoXlHt/pDphWVHeo5//iMLs5/t0
w+vncMeDHbfvsogB384ApeGb1tjR1Xg8hE0MLj00Gvokb4WrunIDKNxi4P4n
Z1faKQt8wH9PtaGIGAQfDlc8PH4KO7y3l2zZKgZtD5UkuYV3Y55bUecjt4kB
SwA9RU1vB2buqa4z2UHgBRLzjgodL8ev6c2rETjy49eE73wo8lDi9c37Ccyc
y4o/ooUqS9qm403EgBoXO1p57hTSfa8mnmkuBtYTav+2zhqhzyJl+4vOiIH+
icWKF5eNkVzw7eQmW+K9A76bHWiGko2dYcJNDKA42HW3nhVSufXe+bunGAi+
XfrHZmGN+h4Y3V7yEQOFL/djr/GdQzzb0FfeADGYLXMK1XS0QUFsIkmqEWLQ
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
pMpGfDVG8xLjwXHlZJg9ZhX87IMxesltrXybSYbkst1xTSPGqHplZCithgzB
J2gnj48ao7gvFjez7xL6bpduuT5hjNzfvlXPbyD6VV/hnfV3Y6T/2GSScZ8M
CTWHiyZWjdGOxoH48lYyHDfypvEJmCDBklOo+gEZxtTqdN9tMkE/Ul9M3+0g
+Jis36h30AQ9iziZ3tRFhu6G8xXn7UxQ5aXeI/gJGfaYD01uijRBMY66iw97
CT77rJ9G1ZkgV9PHed19xPszv6yTJ0yQ3tEj+r2vyFDVmlWoLW6Ktu159OfF
azJkWhmnZZ40RdPiD0yHhskQYLMarfHMFPVwIo6x90R/PvwUEyxihsqWmmsn
x8nAZ//xv4tWZsh5sIF/5jPB/7xI+W42c6TTpd48/40Mzd2HnUQtzdHW+jqn
pRkysDtHDKQ2mqMvyVUdLItkkHfZfz8uxAJ1hyl7rl8m4vfUq66fsUDFvuWy
PKtk0HRFZ2TPWiJH42J/4XUSYOoecv/Q8TPoqPYmBTK7BOx5oTV38skZtFm9
YECaUwJ6PHhes5w4i6ZEc3Zs2iABl7wGy09ZW6HO9TKjWwUloLt/MHtx1goV
LmZEbReWgIKmhTsyB62R3UDK1B4JCQjdl9N19r01mkiKzdTdSMRrPrvzgYoN
ag/doKOvIAFc3/OnimNsUJ531JKRIsGnxcNr4psNsjEKNzy7UwLWtBjCBhW2
aEw4iMtDSwLKWy+78h+3RyMJrt7JpyWgATdHC604ogaDjxvPmxL8JqWEfN2d
UIKg5eBuCwmgHucXHvvihLRjju19ay0Bsx/LEzrGnVHVTXkWaReC/4EXwc+n
XVBI8Luo3BAJsDxpcetXlTuyRAZanjckoH2toL1/zR2p/+2aORAhAW26exru
HvNA367cNZiMJuI/3/chaMoDGfnFiW9OI+pxvrdVTckLbXLVzi9nSoDm3OUM
+mcfxLKtxehqjQQ0N57p3HbIF737psKhd1cCpulRVXtzfVGsE83pRxOh10h7
u+VZP7Rst6a8q1MCpD8Wjj6YvISeWNQ01Q9LwK3DexcE5AKQ2zGZl+3ckrB1
k97TM8xr6ED8pHUfnyRM7VM4PTB/DYm8Lf0xIiAJIocX2T+qh6Amx90bVkQl
wXKX4+uethDEEaF/dLucJBT5VUPr0HWU1RnSmrFXEm5VvNiloByGnh78VOp9
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
muA=
       "]]},
     Annotation[#, "Charting`Private`Tag$20919#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 10}, {-0.06641217429390582, 0.09024199720316553}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8438457685407495`*^9, 3.8438477052839203`*^9, 
  3.8438478450098658`*^9, 3.843847894785075*^9, 3.843849865410774*^9, 
  3.843850603048855*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"04b34ca8-35a9-4dc5-b881-418943a44bf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"pyrfiab", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "'"}], "[", "x", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"pyrfiab", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "'"}], "[", "x", 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8438457752058067`*^9, 3.843845779900731*^9}, {
  3.8438477018905516`*^9, 3.8438477027593155`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"299dfc2c-b67e-4ef4-be9a-89baf073b6b1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pTEar83BHvNjWaK5NPAM9VBr1efgKI9zAx/yaeCrXOyywoiD+U4uZi7FNLh3
xHDsqi0H7zD9jx5bTYOM4mPfD/tzsLLMmYqfnTSYuh08TvrEwbvCBn6X9NBg
UbFJw6iXg+2Ip9cHfaEBgSvt5jPCwbFzJx+sGqaB3PCTibEFDs6/9KX22wgN
aLcGNVeL5uKWUYeFvO80UFVQu2hLycXi3fZOJlM02GrK/VmrmovXHumNl/1F
gz2Df7WWaediw+YTzX2zNDDx2Xlpq34uPrm3RzDjLw0sqHc4roa5+Ga5ne7V
BRocz66fTDHPxQl63ed3L1OEWtbTNfXbc3FB3vEkSUFFYCkuyyoi5uKPG7o+
tQsrgqvMSZ3U9xw8mXJM7IWoIuRLVhQ/jOdgEqMTuYkrwgJx9a7AMxy8Ps7W
XY+kCCbLAmrcNTjY8a5N13tpReicMvx4sCIHt7sezVqgK4Jse90PsdFsXLbV
8tDRzYowYfhiN8EjE3/axj5jr6sIQb+svFIXM/Co/qSns74iWKaIZFmEZGDZ
nRGPru5SBJ7QOYUXT9Lxub31fbH7FSGwUvvn3ro0TLXZ49buqAhmu8oS79Nf
4gvXN92zeagIdte5U2bRT7BiqfS7Y7OKwDCiLOuYdsBsAVHdkxlKkHJDsOAY
SkMH/HsWEi+uAnV3mUs+M8VIpepbeecaOqSVbNId/FqJrpoX2b5Wo0N6mXWN
5PIqxO8ImfZSpwO30ufI1lVVyG1STYW6iQ7l9TUedy2rUDH9QvBBRIeBzmMc
rbdVyPza5IHqw3RQ/Oev5vOoGl3X+NuZ5UeHR9s/KlHNalBjEd/DJ4AOyTv/
pINzDWIYJkiaBdEhxYCuf/Z2Dao+th1G7tGhxOw/G15hDSKH3Hy+Oo4OH47/
izmlUotSBpafjcuiA9VHmZy9WItmXT8IOHPoS/tg35N2hTpk8jc5fnM+HdiB
rurLN9ehiZWGDa1FdFAPKzS1OleH9FCQpmQ1HQ4kmgXPt9Wh5jjx336ddLhb
6iGwl8NHtMz158N66GDUancHN/GRY7lpf9wXOggPG4lv/s5H/0ZCm7KH6RC6
UkGWvaYeGS+mG5SM0sFYZXl8nEE9iqY0FL/7QYeVemN08ql6tE5f4lX39FL9
06Vr/z2uR57mG1aN/KaDpdfLzMvF9ejtabPomT9L+WERG0fa6pG41/kVyxbo
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
Ve38NLe4yAarmNXeKgEl6P8AiIhqVg==
       "]]},
     Annotation[#, "Charting`Private`Tag$20968#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FhbrLW+brhF6hP8H8GhYSQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$20968#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 10}, {-0.2488628955088253, 0.22637047554966883`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.843845781020709*^9, 3.843847703113514*^9, 
  3.8438478450796504`*^9, 3.843847894816021*^9, 3.8438498654995704`*^9, 
  3.8438506030947323`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"7f9e472c-f874-4687-85f1-749bf2622fb0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: All packages", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}},ExpressionUUID->"9c505c31-94a6-4052-b7df-\
b3725127238a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmin", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvlmax", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrfiab", "=", 
   RowBox[{"pyrfi", "[", 
    RowBox[{"ia", ",", "ib", ",", "row", ",", 
     RowBox[{"lvlmax", "-", "1"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.843835334624956*^9, 3.843835368578481*^9}, 
   3.8438450809974666`*^9, {3.843845211153522*^9, 3.843845212205433*^9}, 
   3.843849999355584*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"4f0ef374-c6e6-429c-a633-c384f90ef0ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "=", "0.01"}], ";"}]], "Input",
 CellChangeTimes->{{3.843746156392084*^9, 3.843746168463135*^9}, {
  3.8437464535954347`*^9, 3.843746456248817*^9}, {3.84375505081446*^9, 
  3.843755063807511*^9}, {3.8437557499280577`*^9, 3.8437557865431476`*^9}, {
  3.8437620984781995`*^9, 3.8437621011046305`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"63d8c9a3-e7fb-4f1e-98cf-5e99960797b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "solution"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ic", "=", 
    RowBox[{"(*", 
     RowBox[{"move", "[", 
      RowBox[{"ia", ",", 
       RowBox[{"-", "dv"}]}], "]"}], "*)"}], "ib"}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.843746180314154*^9, 3.8437462727569265`*^9, {3.8437556416931443`*^9, 
   3.8437556427123094`*^9}, {3.843755828024852*^9, 3.8437558677851343`*^9}, 
   3.843756927989253*^9, {3.8438353412280216`*^9, 3.8438353415412087`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"363e1a28-ff19-4521-a087-a9ef2cc7e061"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rangex", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"37", ",", "50"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<OverConstrained\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"rangex", ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.01", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<SemiConstrained\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"rangex", ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.01", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedInitialSign\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"rangex", ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.01", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedInitialSignSteps\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"rangex", ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.01", "/", "3"}], ")"}], "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedInitialSignStepsRight\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"rangex", ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.01", "/", "3"}], ")"}], "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<Constrained\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"seeAllLine", "[", 
  RowBox[{"rangex", ",", 
   RowBox[{"pyrfiab", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"0.01", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedSteps\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seeAllLine", "[", 
   RowBox[{"rangex", ",", 
    RowBox[{"pyrfiab", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.01", "/", "3"}], ")"}], "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.84374627585063*^9, 3.8437462865014696`*^9}, 
   3.8437463363994474`*^9, 3.843750451052354*^9, 3.843755043838456*^9, {
   3.8437555145970716`*^9, 3.8437555589105415`*^9}, {3.843755593721691*^9, 
   3.843755650040806*^9}, {3.843755713026413*^9, 3.8437557397989397`*^9}, {
   3.8437557969025016`*^9, 3.8437558094282227`*^9}, {3.84375584625963*^9, 
   3.8437558470639553`*^9}, {3.8437563392884903`*^9, 3.843756343035241*^9}, {
   3.843756380773343*^9, 3.8437563809555287`*^9}, 3.843756416890011*^9, 
   3.843756646261092*^9, {3.843756897535613*^9, 3.8437569015380273`*^9}, {
   3.8437569603421383`*^9, 3.8437569887616463`*^9}, {3.8437572018445663`*^9, 
   3.843757202550776*^9}, {3.8437572349006124`*^9, 3.8437572380804935`*^9}, {
   3.84375764378139*^9, 3.8437576664207797`*^9}, {3.8437623169149556`*^9, 
   3.8437623480122547`*^9}, 3.843830891232695*^9, {3.843835316061458*^9, 
   3.843835319855777*^9}, {3.843835378850127*^9, 3.843835393323268*^9}, {
   3.843835672540033*^9, 3.8438356756693716`*^9}, {3.843835749340381*^9, 
   3.8438357804692707`*^9}, {3.843836321465438*^9, 3.843836322550544*^9}, {
   3.8438364353232756`*^9, 3.843836462997342*^9}, {3.843845097041973*^9, 
   3.843845101078538*^9}, {3.843845811444827*^9, 3.843845815619734*^9}, {
   3.8438458951961737`*^9, 3.8438458962692842`*^9}, {3.843849851956296*^9, 
   3.8438498574836864`*^9}, {3.8438499697052007`*^9, 3.843849975044771*^9}, {
   3.8438500673959074`*^9, 3.843850070083871*^9}, {3.8438505959892635`*^9, 
   3.843850599084394*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"788522ba-e6d0-4785-bdd8-038a8bbe2c9b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21017#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nc8VW8YAHCZkSKVWUiKjJ9oGJX3ybk4aEhIqYxEJWQ0lCQtFQ1FiMqo
ZIUiMkNE55pN56JUWrYKZfye/rqf7+e89973PO8z3vmuPja7+Pn4+NKm8PH9
+4wqMeTnCzEB4y026anWjSTNQSs1FP3tVsFZ/Q2NpHxIcb3QCRNQgeA31esa
yffFgnFioSaQV7u/qcuykUB0ve6cUybgmDq0RMu0kfzw3umiEWYCJsyBLMaw
kaxRjii3vWwCvX5RC3YtaCQ9oe+D7982AbpUua+vr4G4MEbrparw94uZNVHQ
QI7e7fZQ+WwCC19EHnfLrCfTp+8NDBeiYErj/bU62vWkoPGPopwwBQcuFU8u
0qwnrtcuVN1BQ17CN6XF+FwhU6JMhIIlAydc5yzE5xr9dwZEKYh1aOqZMQ+f
mx9stp9BQajd6chV0+uJW2io5nwZCnTDptue7OWSouG4tjx1CgZb/uQ9f8Ql
qXJ2yoaLKdBwefVD6yGXRK+U2FmMXvvR1igyh0v2Hz/5tUKDgnHrN/Ods7hk
kci+oQYtCq7EjyqKpnLJZenVot+XUHDYQm/w0g0u2bW8Y5miIQUZt935/E5y
iYT/gvAzFhSoB+5nL9lzifhOdWa2JQXOzme/K9pxidgmbfFkdE/tgvUPNnGJ
8FL98DIrCh4sTZv10ppLxgctw0fWUbCyQTZB24pLfvj5he+1ocDiyttmZeCS
Gr+n4esdKfgbUzJbVJNLqlyrGR46eZusZOViLqmweSHuuY2CJKUPu4LVuaRU
71X42e0UkIeB80cXckne4NfwcicKfIIH2yaUuSTZTzJCz42CYIkdUVYyXHLc
zylC2osCqYAR+ocgl2RdppYnofdolUm+FuCS9iy1Nm1vjFecklYFP5cY/+jT
MvWhYFOw846bfFwytjOE8felIKG4Os99jCGBdonTmg5QYFVkvln/J0P8DT6e
uxBMQfQ03ZvvPjEkyb5GV+Y4BfuTX+v0fWRIc0D6uyR0jHamvDBaL8d/8ZMQ
Cvz4bo/pf2BI/2LB2q+hFPj/Cvmd3sYQL4WFU83OUvDzmc23l68Z4jHhfobv
MgVbrawEteoY0nok4EUoWvr0OC+wliFrh09ICl2hoGrlp67nzxmypD8+TjSS
gi+b3l/cW8OQkQ/NWVLXKCiJu7C0uIoh558Zv1GNoeByu29fTBlDxtasnXsP
zRn36R4tZYh36RaXxbEUJO7+MncbetPjgB/acRSs2dIiq1rCkLn30yZXxFNw
fXpMSMUThmSFS6tb3MbfU4zRMcxniLKoqtcLdMI8nQOZeQyJPK2buy6RAhHD
U/0q6EPBa1fZJFHwcWQ0bOYjhsD+UGvHFAqMp4qbjudgvDb1HvZKpcDlaYSo
RBZDOI1/S/rQavFixdGZDMlfKyrgd5+CCdfzd5XQN0xVIw6mUdD6dYHq8gyG
uOlvTTyeQUEBPH7mncaQX/LVtVeyKRA6plIx9x5DDu9SFFfKwXzLeXztwV2G
/HlwcH0G2lWJfUuh+UzVWqpzKcitPp2//w5DxHzCeH8fUVCx+gjDJjMkovC9
4rk8CuK0riw5gpYUNHSRzqfAPC5VRB49J/bb5yWPKbCfEymxIwnjUWnZt6sQ
8yPE6cLwbcyP6cm6Q+jAbefDE9ELHf76hzyh4Nq4Gv86tEZP+khcEQVpuQFW
qbcYslxmOn9jCQV57Tsd999kSIHLLs72Ujzv1mVCi9BGGSVnvqMDOr+rtiVg
PNd4TxMqp6Bdv6x6A9rSs2G2UQXm64BsrFk8Q5g8tc016GxQGRZBb+ALibWt
xHzqDGXqbjDENmqJok8VBSrGAu226DcdYc5j6B3nj8vPRW/V+JB07hkFjVbi
DZ/iGOJUdkUtpZqCsxslE4+gO0W/79GtocBd7VOpOdrN1iSjFJ0RdcJOGr33
2+CSd8+xvnc09zyOZUjALFujGS8wnjFsgzh6eHtG0A20rLp44ecYhhxJFSxT
Zyhwiz48txx9fHUeRXEpiNQrtQlE84dNP9OIlhgcWuiAPtW86/n2egouPFQM
MECf95Bed7iBghwn8dDx6wwRz/W+JNRIwW9W06QTfWmsuikS7Xls9NhztJS5
0mzlJoxfePLybPS1K4fsM9GKmxz2xKJleA0xRs3Yf2XN5E6h4xapszVoLbUb
pvvRc31D5tm14HlXn+7djr5V9NapEz1Gls1eh3Zz20rcX1JgE7gj2xitMZ2n
+B1drPkgRhfdl7d9wusVBVcnrbgL0Y92dLQNoHUTtq5XQAeKuJQceE1Bfwbf
XCm0cXZn/Cha683OFWJowS1uQcfeULCq6n6CALp2SpfjlLcUHJ07snEimiEX
0zxWnkZzwgI2/UHbbvomL/qOgt4HnKRhtNzY3j/h6LcrLxr/RrendL+TbKXA
7uVB9X9OXuddeA1dOV/V+d/63b/7YmRZ7LdM0edR9H+3fA/Ho1uDdhaOo4fM
hzYr8yjQZ4Hlx/0U9Afop6C7LwVaiaKDY39Lq7dRsJFaKjYTTZkcxj6I9ZZw
VUYePfXH6Cuddgrizcv9VdHcq0fzHqKXfWtXXIKOXDV+Tb+Dgi6NOXKr0Q6f
gwOK0KJ5Ya5W6HkX+WzJe+wXOk5/t6I7V4QurUTLcEo/eqJTOwRmmX/Aeo99
oRCM9go7PViHXvwuI/kKWk9XpHl9JwWv084evYsefheW04yWeHwiuRhdHCp2
xf4j7uduucJLtPnL6dY7PlFwsz55XBjzT/zYJZ1OdIzDVQ8VdPPCmRLun7H/
ue9QIehth2bXe3VR0Jwz70IQer5ydOYAWp1sN0xAdz2XiTjwhQKjwRmGZWhf
eYW1x75S8H2vk7YI1suKynjNKd/wvE9YqGijxzwVp51G5+5YtccWfaZkfl34
dwqcJFt67qJvOKvT8d04nws6XzliPTqLpqkp9+D7+eo6haMX5WqKpKB7luWv
LEVnC+hUp/fi+RwZ6V2I9f/s7nJOUT/mq2ewiRD2j/MbHi8gAxTotd/YA2jr
EQOBSrRHwtzPQehWi1UVdYP/5mH7u1F0X7cJtP6k4JP+yVIB7F9dlclnHX9h
vtlN0aDR7XGCDTy0SXN5WwSaoau3d/ymILzxiuI87IepKRZHP41QkG+xXdQK
+6XLNuv83jG8/7jdSfqE/dZhac64zzgFQW9bk1ZjP7YWkzIdQGdtOtdzHW1c
0NIyNEFBKd3hap3CEPnZmwdG+Diw95p1UyP2+5YX27UEhDhw88smnsR9htQl
lfqfQr83KLp2DF0RqFQkJMyBfYYtsd3obLUPFlNFOOCrl3y+HudN+Ek3j+mi
HOjfmyKWhPPIdKVnksx0DlzQ1E8+m82Qx2mHZbXmcICOHf5vfSFDSjeobi9A
Z4SsfDSIrv7ZkMiR5oDKyp3VMThfXxuraW6X4cCY16zIb0UM+dn8avVFOQ5U
Zfx4kYDzeclfvZ3983D/sSoD1jjf71v1ZD5axIGsU53GHxtxf/0xg6DGgZNz
vQsKm7D+ojj6XPSpzLNVV5oZ8rzjRvlndfy9Sbkos5d4Hv6WLdKaHLholj23
8g1DVOLvjRzW4cCc3ZY9Ih2YP90u1GoDDiRaezU97cX1fSsWlqM5gl2LC/tw
P0PTRChDDqyzrP6c08+QqtG8OtqIA9aN1mH3BhnSLSxmY7uKAxHR14KSf+N5
zM919gQOdFgJmrRPMOS9HX9wLM2BZw07pzpJconGljdOcy3w/UsK3oXO5JKA
bRlrbv1zNZ94qhSXTN1pL3THkgMPf3hE/p7NJbr708Kz13LAuDFUKUWOS0LP
29yoseaAfZgX/5oFXLKwLKnglwMHDGo11EL0uSTkcsX1k1s4MKLT1fLDgEta
XToPztyK5yf/as4WI7wfC6os13bkwGSUoIPBai75Y5GY47Yd4/MinRGluKT+
5a20FhcO5Ier64ys55LD3+Pjc/ZyYFDdLJZvN5e8mHM9xCuIAwpvPISybnKJ
w5zomhG0hsmqSf/bXPJpdtSMU8c4oPSl2nNlEt43Z12NjwvmAJVVc6P+Dpf8
J3WpoCaEAy/bfq4XzuSSyBln++ef5sAf1R8lT4q4ZKvIIefXEZgvnrkJy1u5
5NuIPZBbHJgZJejsqlBPMvd5WxaUcWBap3NTaHI9iXAzvNffyYFdR19PS7Bq
ILN6HNc3CpjCGfVb/Hf+NJC8UV3aR80UruYIRO7b1UgaIlsMd1uaAt+ba27u
LxvJpWLmwFRPUyhs4WToU03Ec2+g4O6LpqD48NLBgoom0pN6rM37gSlc+FXb
rgTN5Iv/uqyGBlNQ6cp8drK8mYxXNDb1DZrCsjn/8dlubCGFSenk8SwzMNv1
2ViprYVcETbiM9Y3g226ou/lA1+SD7+vFihuNYPRJdIgI/2KvDlkWnT3iBmI
ym99+CbtFfkWlCbZm2AGF9UWHdJZ95okSnlk80rNIOn+Aet1n16TpmV95gs7
zMB+zOhz8cE3ZB6roafNbw77LsguMpV6SySkSt15KuZgeaY3h3fzLVHkCvZa
mplDMedwYv2Sd6RFNrnM2cMcTB+rj8fmvCN8A+LnGs+aw2BivFKYWiuxWKdx
ZzLNHDYGpsYlx7cSA6Nb016/MAet6lxHj4lWMsaedHVjzEHz7Z+on5OtpPzY
7sJBtIX2gc8hU1hi8VTXQ6LeHETN7CuiBVmyla6qoBvNITFv/u7HYiw5av8t
sOilORzMjBVmpFlS6rf06+02c1Dl70sh/7GESq+p8uwzh9s2+tKGW1lidPTC
yWH0FvXGlaGOLFlitcHkZL85GI/u3lW3jSVzf7wuixswh5A5IpWbnVjyU6Pr
Se2QOZj87o53d2NJSppgjtqIOVyymudv680SwbQ1CR/5aBhjJ7u8TrDkT6DQ
Np8pNJju1qiNDmVJv0Wt/F/05IrCpNKTLOF9s46REqAhX3W/0bQzLHm02Pnq
GiEawiaNBq6fZ8mu+8HnbonScPUOv+rxqyypTi064ChFw5CFBe9ECksmXqc2
taE/WjqYHrrDEn2haG3nWTSMlOiVeN5lSarL/s9us2noPcz/dmMqSy7IL7Tz
lkbny+ZIZbDEOvzishPyNEz/c/S++0OWtPq4DN1VoUGn5c8Bu6cskbq5fsPi
BTR8sHklp1XBEitmZXo6elSfVEypZEmxuvTObFUairMDldKqWHLrQ11z4SIa
vJqu8ffVsMRt07JcRoMGk4NlCyzqWdK3QsR3UI8GvVOV11a1ssRgKak7vpSG
4CL/U/wsS0J1Di2YvowG1/QAqEHPVv/ySm05DdW6NQrr2nC9XI3Rdn0aOk04
tpbvWRLy94zg85U0eDyz8BXrYkntcOl2u1U02KvJ/ipGS/38nd+JXrE8x9j7
C55Xt/ue8dU0pDQlzud+xfVtZvV6QMPnslkKQT9wfblwTAIH479stOxmP0sc
i40HNExpuOU6FrZ6AL9fcNCyAH3WwU6GRa/I6RprNqNB5MPEKakhzMekapep
FjSEWnSn+f1iSfKpM5r+62gQuimxeWSUJcsshMtoexo2hPp2yPPzSHmyRx6D
/qPs33YevXbiebr1ZhqO63xsGEXvfHghxsGBBr8pbyJfCvBI5LyZfru30qBM
wqKPCfFI34DCwrAdNBzZ+KU8YSqPHFl7TEHciYZdjVbzxtHC99pnXka32YKv
oyiPKG5LnLjujPFrSeSbI4b/V73o7T1XPJ/9TyuOTuORtDjdCzXuNDjaWPDJ
zuCRFb8iT1h50DAsrtHjjn664eehBvRL1+KXj9BvBR+7vdlNQ71p6bV1Ejwi
4rPK+MteGtKyctr8JHG/tQnLPD1pcBeNu1OIVlSd1OhDU3VVeybRK949lRne
R0Pdx/tfzs7kETfKfEDYh4YZq7TLwqV4pD8h9ct5dF1EsvcLdNCIaPuM/TSc
lOxREJ3FI1czmTppXxqsZ1TsP4GukLFJWeRPg09O71T32Tyi1L1ts9khGrKe
qStNzuERXkBCXg1acN5UVkuaR+LG22ZZHKZhoVZt4ha0tIRTo1UgDamQaZ2N
Ftdzsdh4lIb5PxYZ2sjwSN2TxHvNaJX7qzceRp+lOoVsg2goK35wIAHNb7ez
wv4Y1vND10+f0COHdq3cdpwGgXPaO3bL8kg+393YNrRFPN1+Bu1/rmt4RwgN
fMkG+1LQvXEej1xO0HBni20uD52xIFXqI1rUt33vMHpPxtf9bqE01Fr+0Z0p
xyOfSvZoe5ykwWh2SvcadJJZ2oWvaFfPy+8d0E4N37/tOUVD06YXH73Rre89
7+47TcP2e99kY9AxezIEe9E/AzWt0tF2g92uPmdoKMg4HFGCbhTwVvI7S0P2
lEGTDvTF8KxjQ2iHC0H5vWirOX1sQBgNcpwGo3H01Js6Rr/R6U5yjWLyPFK9
aH/MoXO435nnD8qgTz3I/j2C1r5o/d8C9BqDAdsj52m4MjV+WBs9Ua778C/6
4aMbzfroYgu/mccuYLyqg8sAfaQ512cCLekbUEqj9R2HuMfDaSj/mt6wAf3z
41KtKRE0yLjYDtmhc/cFnA9FM9MTFjui9/969FXgIg0JKnl+Tuj/gn+ZnUab
tLyod0V3C6+4I3yJhoBNksa70PcvHRQIQw+8zil3R7vLPnYRvYz1eKXD3gOt
mjhcdh6dk/+c7587Fxsoil+hYfeR+NJ/37+dezgoAm0jef7yTvSOlYWtMyJp
0MooP+iMVqgaNbiMzjjh47sN/Xat0fWZV2m4VPUsZDM6+tWRX5Hoi6mDKRvR
tjuKNs2+hvXksrDdEj3zy9+cKHSjSoQWha73WSUpE0XDaeUtl43Q4SNB3jFo
6mKBqC7a8kQJIxdNw9NbrTGL0CJiExo30E/CelcroEMVjn9JuE6DWHZq3RS0
tZ8YpRGD8yTJ58Agnq9ibdTNfLTD+uvTO9FPDmbYNcTSINE3KlyKDuPq5zjG
YTwCMnenoe1VK8W/ore15BZEoQeb3lXyxWN8V6Wo7kGXq+9SikBrvJm6ZuO/
/Dref0QuAfufZ/ZaA7SGtoie3k0achML9QTQrmHLbu+8TQOor4VwrIclHWV/
+9ArApzbPNETy602ByXSMPEn1tMSHffRZUZUEg3x77y2CaKbjS8FVafg+rIl
0Z5Yn7ej5N/a3KGh65lwpQnau/vO0g50FP2pUxYtFlf8ffguDZc77449xX5g
8uubw+L7NMxb13lTBC259sCjPPRfmfC9r7G/tCfxSZqk0SB+W0kzBX3EWqZm
azoNm6f+urAKnZvOWR6eif1h3kCzM/anEP7Gy7JZNJD8kLVq6PVbHLtT0Brr
eMXd2M++C/sllzzAeoj+GhqAVnG9NbMvh4aaoJ60Q//6Y4GG19FcjGd3wIfl
6FKJ/OciD2l4cCNNcgj76dYS5rjyIxr2vJu5dS86UvZPz8Z8GqTzPW6txf47
pcG27tETfD6nX/39dB6ROiVaqV9EwxlDbvhVtIphadETtLj+vRlmaE6yWmZ5
MQ0lqXO8UsV55MyhP5eYUszPBv04V5wfYsq37T5V4Pv57nufgfNH/pXteo9K
GpJSxFfaoDXPi5p/R8dtLcz/LYLz56efQX8V3j+MxmauRl96bqowVo3noXNy
exnOt9m+P97PekHDAmNf/zich6qLbr+LRnfJNfzSRS9nbZvlGJynKhbxz6dg
vpmWVipxcT/JdvZDfNjf5K7c1WzA+dioecp4kiXzKlbso1po6JFPHUj/y5JF
s0KH/VgaOKlP9n7C+f1xwQ1NIR4N69M2+29E3172yOk6WlEtzrdkkCXy9l01
RW00HJZVto7E+T8j1jJG8D3mQ0RyvE4fS4YVZxlGf8J62rzogcF3ljzXSDlS
2EODkvHU62c6WHJ6ZUmWVS/+n6r92+Z2lpisfd3Zhs4r48oooou9plrx9+N9
J8EyMofHkpzsfQpWgzhv7/cGMe9YErdieTHvN97Pbhxza25hyWbz9f3ewzQ4
5dinzkDPdvBQnTKC/S/uRq9FM0suBsaGLxzF/e4NPFnSiPer4vFt3n9pUHsy
8iqGyxLClb7CN0bDG5mUZVyGJWNtOs8i0Y/sedf50AcnXbQfj9NgMCng5VbH
kqWSR10sJmgIzzjaca0W77PK16JYtEPF5c1Vz1mSpZtZ6zVJg6/r2VeDeP/z
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21017#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421249, 0.3151331887599742}, {34.83101002585675, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{39, 0.29877888623510995`}, {39, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{40, 0.28455796905472625`}, {40, 0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{41, 0.2739172240468092}, {41, 0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{42, 0.26792669635623945`}, {42, 0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43, 0.2672796894447925}, {43, 0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{44, 0.2726531267010651}, {44, 0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      RGBColor[1, 0, 0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{45, 0.28465572847822596`}, {45, 0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{46, 0.30232754531459227`}, {46, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      RGBColor[1, 0, 0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{47, 0.32313995793363015`}, {47, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{48, 0.3444961440233774}, {48, 0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      RGBColor[1, 0, 0], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{49, 0.3638276915372358}, {49, 0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{50, 0.37921962453197594`}, {
         50, 0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"OverConstrained\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.843850603216457*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"2c95ebd7-1aed-421b-b928-3c82d444693a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21100#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21100#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421249, 0.3151331887599742}, {34.83101002585675, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{41.97382916738341, 0.29877888623510995`}, {
        27.70819280365207, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{40., 0.28455796905472625`}, {40., 
        0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{41., 0.2739172240468092}, {41., 0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{42., 0.26792669635623945`}, {42., 
        0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43., 0.2672796894447925}, {43., 0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{44., 0.2726531267010651}, {44., 0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      RGBColor[1, 0, 0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{45., 0.28465572847822596`}, {45., 
        0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{60.35901833324132, 0.30232754531459227`}, {
        43.862705781525534`, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      RGBColor[1, 0, 0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{49.911960731251234`, 0.32313995793363015`}, {
        37.867245327114084`, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{50.537674857793526`, 0.3444961440233774}, {
        45.12359236788022, 0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{49., 0.3638276915372358}, {49., 0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{50., 0.37921962453197594`}, {50., 
        0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SemiConstrained\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.8438506033131976`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"ee9e319e-da3f-4568-935c-25150c3be2be"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21183#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21183#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421249, 0.3151331887599742}, {34.83101002585675, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{41.97382916738341, 0.29877888623510995`}, {
        27.70819280365207, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40., 
        0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{39.587891636620256`, 0.2739172240468092}, {41., 
        0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{41.34101346568937, 0.26792669635623945`}, {42., 
        0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43.294211879746754`, 0.2672796894447925}, {43., 
        0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{25.512153595013583`, 0.2726531267010651}, {
        42.941971332336145`, 0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      GrayLevel[0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{48.878600975037486`, 0.28465572847822596`}, {
        43.35380404126437, 0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{60.35901833324132, 0.30232754531459227`}, {
        43.862705781525534`, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{49.911960731251234`, 0.32313995793363015`}, {
        37.867245327114084`, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{50.537674857793526`, 0.3444961440233774}, {
        45.12359236788022, 0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{47.26630163517534, 0.3638276915372358}, {49., 
        0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{48.529294024061265`, 0.37921962453197594`}, {50., 
        0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.8438506033999996`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"82eb3d6f-1af7-47e1-be0c-bc1c8f61ec81"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21266#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21266#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421248, 0.3151331887599742}, {34.83101002585674, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      GrayLevel[0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{41.581769050554215`, 0.29877888623510995`}, {
        35.3634865085561, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{38.03679389343633, 0.28455796905472625`}, {40., 
        0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{39.5962868286911, 0.2739172240468092}, {41., 
        0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{41.40425568574465, 0.26792669635623945`}, {42., 
        0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43.233322404684046`, 0.2672796894447925}, {43., 
        0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{45.28101095667958, 0.2726531267010651}, {44., 
        0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{49.17011753308949, 0.28465572847822596`}, {
        43.30012287155687, 0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      GrayLevel[0], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{49.396026502435575`, 0.30232754531459227`}, {
        43.91282618258459, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      GrayLevel[0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{49.96588524021492, 0.32313995793363015`}, {
        44.52461850385641, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{50.53767485779353, 0.3444961440233774}, {45.12359236788022, 
        0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      GrayLevel[0], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{49.541933205288295`, 0.3638276915372358}, {
        45.664022442661235`, 0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{48.57790926680117, 0.37921962453197594`}, {50., 
        0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedInitialSignSteps\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.843850603483588*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"5293eb1d-a59c-4171-8156-25313ee6cc3a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21349#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21349#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421248, 0.3151331887599742}, {34.83101002585674, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      GrayLevel[0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{41.581769050554215`, 0.29877888623510995`}, {
        35.3634865085561, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      GrayLevel[0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{42.07433364269409, 0.28455796905472625`}, {
        35.84510031531042, 0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{42.87877753472505, 0.2739172240468092}, {35.53059893680187, 
        0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{42., 0.26792669635623945`}, {41.13132243141107, 
        0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43., 0.2672796894447925}, {43.247447237903955`, 
        0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{44., 0.2726531267010651}, {44.97997060001133, 
        0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      RGBColor[1, 0, 0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{45., 0.28465572847822596`}, {46.54219213800936, 
        0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      GrayLevel[0], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{49.396026502435575`, 0.30232754531459227`}, {
        43.91282618258459, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      GrayLevel[0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{49.96588524021492, 0.32313995793363015`}, {
        44.52461850385641, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{50.53767485779353, 0.3444961440233774}, {45.12359236788022, 
        0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      RGBColor[1, 0.5, 0], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{50.641151293718586`, 0.3638276915372358}, {
        44.70595189098643, 0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      GrayLevel[0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{51.51300336538141, 0.37921962453197594`}, {
        46.108346093983975`, 0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedInitialSignStepsRight\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.843850603566223*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"8647d770-d315-47b7-8f46-228296ab50a4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nk8VO3bAHCJEqneShTJU0kUkmxJ99XgPoNol3pEIcpOStaipEWFypqH
pE0JlaxFCYkztsneQovInrXQe/3+ms/3M3Pm3Mu1/WPjtvOwoICAwKxpAgL/
+7zxQkdQ4DQHTGL1l/qrN5NUi7X3g9Gfbu3tyFnfTIp+yZoJB3FA3095xbBa
M+lSFIoTDeZA5M5b/U7rmglE8dQkznLgqsem7zuVm8lPV9tDSuc5UGHbYDFD
oZlskbtctDucA0rpe0FoSTPpCf4c+CCJAznhmzfbTjWRQ5Ubzea/4YA0R9fh
QH4T8bvb7bD8GweKjhgZHPdqIuLijj5hwvrguY8dvK/QRPJH4z5krdaHDQtz
H72tbCRzj60IO2ekD962Xt1HPRrJKU/ry4tc9MFpS/DPlpmNxGHK/pxAuD50
JauUbYprIMNLSssjMvRB07SPqKo2kMT8Ruv2On3Ial/c7P28nvR1c6B5SB+i
N6yQ+L2lnmSnnpRaK2EAc+/driqofE/iuw/p62kbgKL4gVlZxu+JfGFyzrCF
ATSN7LxsUsUnFRLRp138DUC/ufKSApdPOsfMgSSiU55HryquI2nOrsY5hQaQ
XucgW8jUkct2Ovf62w2g8+uMvzeLa8mCnn/NqqcbwkBCXkmdcS3JGlfjuikY
QpvBu4aSihpSFVmnc8TYEAxXO7qO7qohVwsqj4s4GYLYxQuCVzqriZOjj9CR
K4agLTk+Kh5QTXruB3xwTTeEuKn8EYVl1aTjmOnjqipD6PRrT2y9UUUmX1fX
9A0awlfW+1zyII/4q5zv8/xlCLKrDu517OeR37FEfARdGCV9SL2XR8bcH3Mn
hgwhSYYnV97JI0OyYYUio4ago+t5YHobj3T7Mmn//DEEWrpR5WkVj7Ssf3l+
13QKKxV6tkx/zCO5yQ9J9gIKJx831Aa48gi3NW2/4UIKH6cKo12deaRRIuN4
HfrDOZ2eg448MnL+2cM+CQrzY5ZuNbbnkQ1uLyRXS1F4oLW3U9WKR9J1q/pi
ZCgYqE7IMmY8coc/mOgrT+GqjJPNA1X8/ZzhPJFVFDpWrN/GKvPIG2b0fRT6
nsbxj4NreKQ974/YUwUKL2sffees5hG5W0InfypSuO10NW1EjkfiXRZtt1Sh
MNhyOTJtPo9EzNgosFmLwrw6NsVylCU7XaXPlKPPhnJTXwyzZGH9hPAebQpt
JQd2yw2xJOpOoZizDoXuwydiuvpZEm9gKBmnS6GvSaMvsosld4K3q4wQCm/L
4kzVP7Ikd8re8jGXgqUVr+tZKUt87bmfdIworN0RpG1SwpJNPEWbEnSoe6Da
l2KWvEzodmg1pnA8TURe6hVLijd5HhM1pbDAWWteVD5LWN+Ai/Y7KMT+W/2t
LYMlbSPXcmT3Uzg0FSyUe5MlXwv+a0xCN73cx42NZ8mP4Adjy/+l8OhV+aRv
HEv65xRqK1hSePJe4wUnhiUCCl05qlYUViudDvtyjSWyeyEXbCjMkemxcrzE
Esvs7lwbRwpLPqbYhvmx5GDAaNNX9Hr30vw4X5bY6Qv+tnfC9wWeOZPqwxLn
KsmNTs54v/vCD/G8WeLXwck75kph3ZCmuYIXS+IkY/POelIwtixbIOvCkgZv
w/y7vhScHnu4yx5kSbdYfKO6H+7fTGmlsTWuL6l/uAgdX94S4m3FktVv49e1
+FPInN24s8ESz1Nq8M7cU/i+7xPzHu5jiUzuf+Enz1DI/75u9u1dLFlnOpQm
fJZCp+rAjc6dLDFoM6qIRE9tOVyphnaZNSycFoLx5i9Jyrbj+e8z8WsLpeB2
1Elnhhnu9/foYeMwCroKou58Lku8rpieaUAvHDmdr4E+v/x2kt1lXJ+f/ZMY
hiWZxmYtgVcoyNmvTbalLBGMT9n+NJyCcpNjqLgBS1J0d+jK3KBgqv3TPJOw
JKfqrsUD9J6jZduU0ZW2E8c1oyjwN7ODqZtZMnzpXsb2aAopkUJaD/VYQlsn
5UNiMV8mf2QV6rKk0z91Xm8CBbP2V37a2iwBN8UKj/8ofLfNmV6vhfF66H7I
MLpxYf+kF9qA3v09kUjhZudnbrYmS5LmJn8VS6ZgnzSuaarBktFp/yReRV/5
qLRtZANLzIYS9y24TSFLYnFTEnqiMYG3JIVC3a6uLb/VWbI3OTZH8S4FsR0R
h1+uZ8nj61LH0tBdMS2zjqGFQqOV1e5RcL1ttUwR/cTpRrL2fQrq3yoTYtVY
MkcjIoxJpeB5wO/7pXUsOawwj6lAr5somL8VXbD46rRtDyloKDxNF0c7ToWd
MH9EoXeGn+4NVZaUlJ0/ePgxhSqV1JgsFbz/vJnSnegIj1fcILTno3PvndMp
cERnHTVDy0WcNfbKwPtc3jHercwS7zPThcfQfdcsHV+ieceDC/0yKdhAkXEE
2n//6Q1nnlDYpzLvX1103da/vTOeUmBsWi7ORyuRwAcX0WVZO5V+rmVJ4wp/
2chnFLYnTc9JQqsu+tMokUXhlaLM3QD0ORHfa7Ho2Oz/plui1Xu8RW49x/gr
SZy9FH3x08jrldkUQrQms/+uYcnnmuMB99F/IoNrv6C13gxprc3Berp9mWU5
+srzY4PpaJuu17sz0N/uDz5Sz6WQ02hZEIPeFO/hkI1efKM1Mhjddcqt9WUe
1idLk7D96C2evVGcfApB+xenc9Exdi47StGLxC6BNrrPvFvMuIBCXsdVUERT
I6dSFn37qGS6NDpBt+v0jhcUZoj+X9hc9JDyUd336MUc5wYhtLHcj2GLlxRm
X5KK+KPEklvzHTJa0VJWwrm/0ErqJbUHCilIavQ59aCf7Fox/BEd65MZ+AOt
6xUkebAI4zl208BX9Jvrn3Ta0PpCQcXtaNMsPUubVxTGV7kNt6Hr38cHfkGb
uo+e+9/3ViPjSXavKVwwEz35v+c7FlkUf0MPqsa87UC7az3/Zl9MgRcccbIb
PbZ3ocgPtEPW99BBdNBJT6WjbygIaZ4fGUeLxlZv7UJ3edq/EcT9XctVcXMq
oWDX7DEwGy3THBbRjX7SHBcghU753fXUpZTC8vaaI/JoZWmj+l70mNXMp+ro
57r3xtzKKAQWrrHUR2+2FJYeQI94qNrtRpf52+p5vqWQ+lWwwh69PeGV9S90
e0hUuC+66cWyYK9yCt+Km59dRdt8DEgZRo/PLtK6iz62bGPn6DsKx3xU9zWg
J0iMmE8F5rtP3OgA+uzBEeXf6FC9I0PiGH9Rt554TlRScK/oETFG565YMyFQ
hfVHvCe+Fs0xuCAbjOZtzlszhn5n1wHTqykcvOuyeBnmQ+ud2yHCNRTe13Dn
eKD/KsjMFa3D/HwgYymP+Xee66t2Cf0nwaFpD3re0cZds/kUSjfKPAtFL0+9
HjPnPQULhbNBfWjDteLLFzRQ2Nga51uF+c7b6mRwHa0if6pNFOuBuUu5vUQj
/t/57XcY9JHHIQ8lmyhs3u+vX4K+tG5qg0wLBUV1g8ZqrDc1G/oY+U8UPm0a
3qOI9cxxRYxDJvozzAoIQgvN3xKq95nC7jRWrwWt2RdZuqeNAlWRCruG9THu
gabhuS+4v/pz+ySxntrJBnI6OjAeRmzuOm1kyeRsBZtjPygU+ChZf0BH/akK
+ou+ucwuYzvW6/LGf15JdlFQ0v8ovWkTS1SulRBuN84f/UULV2G9H50prveg
n4KORKM/5bAkfCTLUmOAwt4i16c1aKVvVv6v0DJGOkFW+tifX2fkNw3i+dgs
affH/lLkv3uj6DCeX+6n55XYfy4OxGs5jVOwVp0bn2PCkqUtSuuVBRkYbH39
usgc411hsjcdnXRS8ZfHXpbwvaoerp/OQKtZ25mVFiwJm+Mlry3EQI2oUOll
7K8TW15I6c9g4I31jgp37L/N97f9tRBlwOjEj4qTNrjfE16VZ+czELy4Xz3c
DetvMb0wcwED34+v2+bijv1k3mJ6EV0o9uKtiQdLhFNfFF5dyECOvm/97GPY
Xz/MeBq3iIHSM0X7E0/gPGYQG5uxhIGWTfvGhANZMnf+S/vW5QyEm99e1HQZ
17O2Rc5xBQMep04pj13BeYcZax5Fr1NO+SAVjucRsH7bAnn8v9des6wjMd87
72oZKzAw89xg2FQUS2qLrorkrGHA+ucBtYtJuH63Q6nXNjAwtfKzdd0zlgRf
DLT7R4OBuf0/veWfs8T1TrxsOlonPm2VTzZLmJb3ke80GdDXE+DK5+F5UmO/
aToM/LROjg4vZMl+WfWtbnoMiP7XYPH0Hc5XrFCvMWVAeWCgdnU71i9qYliF
Fts/k3ftC/abwoibuxgGVh4/pSjwDfM7U9bEkstAZu7uaR86WHI9Svu+izED
Kzgv19/rYYnYQWebcDMGhgK/XA4Yx/cP1tW/N2fAZenqDDWcb+ukbhcedGDg
S5T876cMzs9FbwPb0QM7QjNdjHjkukOvnt0RBjgS0dmrTXjE/LlOgcNRBsYv
BKUn4/zduKs6x9UJ/bds6909PPLxymSmvxsDAq+NVLtteaRLyCIlxpuBkLwb
8p5BPCIwMPtCdSgDcGjMxraIR4xMle78TWWge0ju2YP9VUR7Y6JYfQUD6x1l
Q1YLVBP9h2VvnPrwfmq2hkUerial9/OP/zufC2vul/wq41eTPs2ZHoPruZA4
0u39ltaQDUYzCrnmXKiMFVexZmvIsm7LvdSbC9k+zrHmu2tJsPSpjoRoLtRf
NHbt/1RLplXtfvcsjwsnBX+19wbUkVULgkc9W7jgYmfbPybBJ19WxK8RbuVC
x9f6e/ek+CRpwzPraHT3G+k4c2k+WWL+vSz/AxfOgJRylhyfzIk1jhH6zAVJ
99oprzV8Miq7QCfqKz4vOPV5CvjkrVKKb24PF/aHvlmq7cwnIbovHpv0ckF+
LFuzx5VPOFvr2z+gU9I9fJM9+KTARcREsJ8LN69qnhb35pPMDGdpk0EuvDww
ceJbEJ/EaWoUtI5woeCs0q2b0XyylzHrdx3F/RRbKO2O45OFFg4rp41xwaeA
qRdL4JMrPrFh8uNcUPW1v+6XzCfBBZOWrn+48Mg1Id4yjU8IuyhCYIILteVl
ayUy+GTig2pJJFpkcUYr+4RPTvw9pJw9yYXAdblRJIdP1Of5HTKa4oIm05Q4
lscn/XLXb7Sg23qzSjJf8MljtbRyl7+4Ph5vplMRnzhxSif/oscu3z68sphP
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21432#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21432#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421249, 0.3151331887599742}, {34.83101002585675, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{39, 0.29877888623510995`}, {39, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{40, 0.28455796905472625`}, {40, 0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{41, 0.2739172240468092}, {41, 0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{42, 0.26792669635623945`}, {42, 0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43, 0.2672796894447925}, {43, 0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{44, 0.2726531267010651}, {44, 0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      RGBColor[1, 0, 0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{45, 0.28465572847822596`}, {45, 0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{46, 0.30232754531459227`}, {46, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      RGBColor[1, 0, 0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{47, 0.32313995793363015`}, {47, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{50.537674857793526`, 0.3444961440233774}, {
        45.12359236788022, 0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      RGBColor[0.5, 0, 0.5], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{49, 0.3638276915372358}, {49, 0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{50, 0.37921962453197594`}, {
         50, 0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Constrained\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.8438506036496124`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"c18d0ed4-afb3-4ff0-87da-827a0f0e4ea4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nk8VO3bAHCJEqneShTJU0kUkmxJ99XgPoNol3pEIcpOStaipEWFypqH
pE0JlaxFCYkztsneQovInrXQe/3+ms/3M3Pm3Mu1/WPjtvOwoICAwKxpAgL/
+7zxQkdQ4DQHTGL1l/qrN5NUi7X3g9Gfbu3tyFnfTIp+yZoJB3FA3095xbBa
M+lSFIoTDeZA5M5b/U7rmglE8dQkznLgqsem7zuVm8lPV9tDSuc5UGHbYDFD
oZlskbtctDucA0rpe0FoSTPpCf4c+CCJAznhmzfbTjWRQ5Ubzea/4YA0R9fh
QH4T8bvb7bD8GweKjhgZHPdqIuLijj5hwvrguY8dvK/QRPJH4z5krdaHDQtz
H72tbCRzj60IO2ekD962Xt1HPRrJKU/ry4tc9MFpS/DPlpmNxGHK/pxAuD50
JauUbYprIMNLSssjMvRB07SPqKo2kMT8Ruv2On3Ial/c7P28nvR1c6B5SB+i
N6yQ+L2lnmSnnpRaK2EAc+/driqofE/iuw/p62kbgKL4gVlZxu+JfGFyzrCF
ATSN7LxsUsUnFRLRp138DUC/ufKSApdPOsfMgSSiU55HryquI2nOrsY5hQaQ
XucgW8jUkct2Ovf62w2g8+uMvzeLa8mCnn/NqqcbwkBCXkmdcS3JGlfjuikY
QpvBu4aSihpSFVmnc8TYEAxXO7qO7qohVwsqj4s4GYLYxQuCVzqriZOjj9CR
K4agLTk+Kh5QTXruB3xwTTeEuKn8EYVl1aTjmOnjqipD6PRrT2y9UUUmX1fX
9A0awlfW+1zyII/4q5zv8/xlCLKrDu517OeR37FEfARdGCV9SL2XR8bcH3Mn
hgwhSYYnV97JI0OyYYUio4ago+t5YHobj3T7Mmn//DEEWrpR5WkVj7Ssf3l+
13QKKxV6tkx/zCO5yQ9J9gIKJx831Aa48gi3NW2/4UIKH6cKo12deaRRIuN4
HfrDOZ2eg448MnL+2cM+CQrzY5ZuNbbnkQ1uLyRXS1F4oLW3U9WKR9J1q/pi
ZCgYqE7IMmY8coc/mOgrT+GqjJPNA1X8/ZzhPJFVFDpWrN/GKvPIG2b0fRT6
nsbxj4NreKQ974/YUwUKL2sffees5hG5W0InfypSuO10NW1EjkfiXRZtt1Sh
MNhyOTJtPo9EzNgosFmLwrw6NsVylCU7XaXPlKPPhnJTXwyzZGH9hPAebQpt
JQd2yw2xJOpOoZizDoXuwydiuvpZEm9gKBmnS6GvSaMvsosld4K3q4wQCm/L
4kzVP7Ikd8re8jGXgqUVr+tZKUt87bmfdIworN0RpG1SwpJNPEWbEnSoe6Da
l2KWvEzodmg1pnA8TURe6hVLijd5HhM1pbDAWWteVD5LWN+Ai/Y7KMT+W/2t
LYMlbSPXcmT3Uzg0FSyUe5MlXwv+a0xCN73cx42NZ8mP4Adjy/+l8OhV+aRv
HEv65xRqK1hSePJe4wUnhiUCCl05qlYUViudDvtyjSWyeyEXbCjMkemxcrzE
Esvs7lwbRwpLPqbYhvmx5GDAaNNX9Hr30vw4X5bY6Qv+tnfC9wWeOZPqwxLn
KsmNTs54v/vCD/G8WeLXwck75kph3ZCmuYIXS+IkY/POelIwtixbIOvCkgZv
w/y7vhScHnu4yx5kSbdYfKO6H+7fTGmlsTWuL6l/uAgdX94S4m3FktVv49e1
+FPInN24s8ESz1Nq8M7cU/i+7xPzHu5jiUzuf+Enz1DI/75u9u1dLFlnOpQm
fJZCp+rAjc6dLDFoM6qIRE9tOVyphnaZNSycFoLx5i9Jyrbj+e8z8WsLpeB2
1Elnhhnu9/foYeMwCroKou58Lku8rpieaUAvHDmdr4E+v/x2kt1lXJ+f/ZMY
hiWZxmYtgVcoyNmvTbalLBGMT9n+NJyCcpNjqLgBS1J0d+jK3KBgqv3TPJOw
JKfqrsUD9J6jZduU0ZW2E8c1oyjwN7ODqZtZMnzpXsb2aAopkUJaD/VYQlsn
5UNiMV8mf2QV6rKk0z91Xm8CBbP2V37a2iwBN8UKj/8ofLfNmV6vhfF66H7I
MLpxYf+kF9qA3v09kUjhZudnbrYmS5LmJn8VS6ZgnzSuaarBktFp/yReRV/5
qLRtZANLzIYS9y24TSFLYnFTEnqiMYG3JIVC3a6uLb/VWbI3OTZH8S4FsR0R
h1+uZ8nj61LH0tBdMS2zjqGFQqOV1e5RcL1ttUwR/cTpRrL2fQrq3yoTYtVY
MkcjIoxJpeB5wO/7pXUsOawwj6lAr5somL8VXbD46rRtDyloKDxNF0c7ToWd
MH9EoXeGn+4NVZaUlJ0/ePgxhSqV1JgsFbz/vJnSnegIj1fcILTno3PvndMp
cERnHTVDy0WcNfbKwPtc3jHercwS7zPThcfQfdcsHV+ieceDC/0yKdhAkXEE
2n//6Q1nnlDYpzLvX1103da/vTOeUmBsWi7ORyuRwAcX0WVZO5V+rmVJ4wp/
2chnFLYnTc9JQqsu+tMokUXhlaLM3QD0ORHfa7Ho2Oz/plui1Xu8RW49x/gr
SZy9FH3x08jrldkUQrQms/+uYcnnmuMB99F/IoNrv6C13gxprc3Berp9mWU5
+srzY4PpaJuu17sz0N/uDz5Sz6WQ02hZEIPeFO/hkI1efKM1Mhjddcqt9WUe
1idLk7D96C2evVGcfApB+xenc9Exdi47StGLxC6BNrrPvFvMuIBCXsdVUERT
I6dSFn37qGS6NDpBt+v0jhcUZoj+X9hc9JDyUd336MUc5wYhtLHcj2GLlxRm
X5KK+KPEklvzHTJa0VJWwrm/0ErqJbUHCilIavQ59aCf7Fox/BEd65MZ+AOt
6xUkebAI4zl208BX9Jvrn3Ta0PpCQcXtaNMsPUubVxTGV7kNt6Hr38cHfkGb
uo+e+9/3ViPjSXavKVwwEz35v+c7FlkUf0MPqsa87UC7az3/Zl9MgRcccbIb
PbZ3ocgPtEPW99BBdNBJT6WjbygIaZ4fGUeLxlZv7UJ3edq/EcT9XctVcXMq
oWDX7DEwGy3THBbRjX7SHBcghU753fXUpZTC8vaaI/JoZWmj+l70mNXMp+ro
57r3xtzKKAQWrrHUR2+2FJYeQI94qNrtRpf52+p5vqWQ+lWwwh69PeGV9S90
e0hUuC+66cWyYK9yCt+Km59dRdt8DEgZRo/PLtK6iz62bGPn6DsKx3xU9zWg
J0iMmE8F5rtP3OgA+uzBEeXf6FC9I0PiGH9Rt554TlRScK/oETFG565YMyFQ
hfVHvCe+Fs0xuCAbjOZtzlszhn5n1wHTqykcvOuyeBnmQ+ud2yHCNRTe13Dn
eKD/KsjMFa3D/HwgYymP+Xee66t2Cf0nwaFpD3re0cZds/kUSjfKPAtFL0+9
HjPnPQULhbNBfWjDteLLFzRQ2Nga51uF+c7b6mRwHa0if6pNFOuBuUu5vUQj
/t/57XcY9JHHIQ8lmyhs3u+vX4K+tG5qg0wLBUV1g8ZqrDc1G/oY+U8UPm0a
3qOI9cxxRYxDJvozzAoIQgvN3xKq95nC7jRWrwWt2RdZuqeNAlWRCruG9THu
gabhuS+4v/pz+ySxntrJBnI6OjAeRmzuOm1kyeRsBZtjPygU+ChZf0BH/akK
+ou+ucwuYzvW6/LGf15JdlFQ0v8ovWkTS1SulRBuN84f/UULV2G9H50prveg
n4KORKM/5bAkfCTLUmOAwt4i16c1aKVvVv6v0DJGOkFW+tifX2fkNw3i+dgs
affH/lLkv3uj6DCeX+6n55XYfy4OxGs5jVOwVp0bn2PCkqUtSuuVBRkYbH39
usgc411hsjcdnXRS8ZfHXpbwvaoerp/OQKtZ25mVFiwJm+Mlry3EQI2oUOll
7K8TW15I6c9g4I31jgp37L/N97f9tRBlwOjEj4qTNrjfE16VZ+czELy4Xz3c
DetvMb0wcwED34+v2+bijv1k3mJ6EV0o9uKtiQdLhFNfFF5dyECOvm/97GPY
Xz/MeBq3iIHSM0X7E0/gPGYQG5uxhIGWTfvGhANZMnf+S/vW5QyEm99e1HQZ
17O2Rc5xBQMep04pj13BeYcZax5Fr1NO+SAVjucRsH7bAnn8v9des6wjMd87
72oZKzAw89xg2FQUS2qLrorkrGHA+ucBtYtJuH63Q6nXNjAwtfKzdd0zlgRf
DLT7R4OBuf0/veWfs8T1TrxsOlonPm2VTzZLmJb3ke80GdDXE+DK5+F5UmO/
aToM/LROjg4vZMl+WfWtbnoMiP7XYPH0Hc5XrFCvMWVAeWCgdnU71i9qYliF
Fts/k3ftC/abwoibuxgGVh4/pSjwDfM7U9bEkstAZu7uaR86WHI9Svu+izED
Kzgv19/rYYnYQWebcDMGhgK/XA4Yx/cP1tW/N2fAZenqDDWcb+ukbhcedGDg
S5T876cMzs9FbwPb0QM7QjNdjHjkukOvnt0RBjgS0dmrTXjE/LlOgcNRBsYv
BKUn4/zduKs6x9UJ/bds6909PPLxymSmvxsDAq+NVLtteaRLyCIlxpuBkLwb
8p5BPCIwMPtCdSgDcGjMxraIR4xMle78TWWge0ju2YP9VUR7Y6JYfQUD6x1l
Q1YLVBP9h2VvnPrwfmq2hkUerial9/OP/zufC2vul/wq41eTPs2ZHoPruZA4
0u39ltaQDUYzCrnmXKiMFVexZmvIsm7LvdSbC9k+zrHmu2tJsPSpjoRoLtRf
NHbt/1RLplXtfvcsjwsnBX+19wbUkVULgkc9W7jgYmfbPybBJ19WxK8RbuVC
x9f6e/ek+CRpwzPraHT3G+k4c2k+WWL+vSz/AxfOgJRylhyfzIk1jhH6zAVJ
99oprzV8Miq7QCfqKz4vOPV5CvjkrVKKb24PF/aHvlmq7cwnIbovHpv0ckF+
LFuzx5VPOFvr2z+gU9I9fJM9+KTARcREsJ8LN69qnhb35pPMDGdpk0EuvDww
ceJbEJ/EaWoUtI5woeCs0q2b0XyylzHrdx3F/RRbKO2O45OFFg4rp41xwaeA
qRdL4JMrPrFh8uNcUPW1v+6XzCfBBZOWrn+48Mg1Id4yjU8IuyhCYIILteVl
ayUy+GTig2pJJFpkcUYr+4RPTvw9pJw9yYXAdblRJIdP1Of5HTKa4oIm05Q4
lscn/XLXb7Sg23qzSjJf8MljtbRyl7+4Ph5vplMRnzhxSif/oscu3z68sphP
/h8Yxt98
           "]]}, Annotation[#, "Charting`Private`Tag$21515#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NKken0Q/yEreooz+H2jHmM4=
           "]]}, Annotation[#, "Charting`Private`Tag$21515#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{37, 0.40939238721939736`}, {37, 0.2549230322369115}}], 
      GrayLevel[0], 
      PointBox[{37, 0.3321577097281544}], {Arrowheads -> Small, 
       ArrowBox[{{40.45737717271055, 0.3321577097281544}, {
        34.282333432411335`, 0.3321577097281544}}]}}, {
      PointSize[0.01], 
      LineBox[{{38, 0.3938779310214077}, {38, 0.2363884464985407}}], 
      GrayLevel[0], 
      PointBox[{38, 0.3151331887599742}], {Arrowheads -> Small, 
       ArrowBox[{{41.03141117421248, 0.3151331887599742}, {34.83101002585674, 
        0.3151331887599742}}]}}, {
      PointSize[0.01], 
      LineBox[{{39, 0.3718979980218842}, {39, 0.22565977444833563`}}], 
      GrayLevel[0], 
      PointBox[{39, 0.29877888623510995`}], {Arrowheads -> Small, 
       ArrowBox[{{41.581769050554215`, 0.29877888623510995`}, {
        35.3634865085561, 0.29877888623510995`}}]}}, {
      PointSize[0.01], 
      LineBox[{{40, 0.3453280145211532}, {40, 0.22378792358829927`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{40, 0.28455796905472625`}], {Arrowheads -> Small, 
       ArrowBox[{{40, 0.28455796905472625`}, {40, 0.28455796905472625`}}]}}, {
      PointSize[0.01], 
      LineBox[{{41, 0.31607093449732165`}, {41, 0.23176351359629668`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{41, 0.2739172240468092}], {Arrowheads -> Small, 
       ArrowBox[{{41, 0.2739172240468092}, {41, 0.2739172240468092}}]}}, {
      PointSize[0.01], 
      LineBox[{{42, 0.28666284851746016`}, {42, 0.2491905441950188}}], 
      RGBColor[1, 0, 0], 
      PointBox[{42, 0.26792669635623945`}], {Arrowheads -> Small, 
       ArrowBox[{{42, 0.26792669635623945`}, {42, 0.26792669635623945`}}]}}, {
      PointSize[0.01], 
      LineBox[{{43, 0.2602729837376021}, {43, 0.2742863951519829}}], 
      RGBColor[1, 0, 0], 
      PointBox[{43, 0.2672796894447925}], {Arrowheads -> Small, 
       ArrowBox[{{43, 0.2672796894447925}, {43, 0.2672796894447925}}]}}, {
      PointSize[0.01], 
      LineBox[{{44, 0.2400980949915623}, {44, 0.305208158410568}}], 
      RGBColor[1, 0, 0], 
      PointBox[{44, 0.2726531267010651}], {Arrowheads -> Small, 
       ArrowBox[{{44, 0.2726531267010651}, {44, 0.2726531267010651}}]}}, {
      PointSize[0.01], 
      LineBox[{{45, 0.22925869795567613`}, {45, 0.3400527590007758}}], 
      RGBColor[1, 0, 0], 
      PointBox[{45, 0.28465572847822596`}], {Arrowheads -> Small, 
       ArrowBox[{{45, 0.28465572847822596`}, {45, 0.28465572847822596`}}]}}, {
      PointSize[0.01], 
      LineBox[{{46, 0.2291218076842592}, {46, 0.37553328294492533`}}], 
      GrayLevel[0], 
      PointBox[{46, 0.30232754531459227`}], {Arrowheads -> Small, 
       ArrowBox[{{49.396026502435575`, 0.30232754531459227`}, {
        43.91282618258459, 0.30232754531459227`}}]}}, {
      PointSize[0.01], 
      LineBox[{{47, 0.239300938609607}, {47, 0.4069789772576533}}], 
      GrayLevel[0], 
      PointBox[{47, 0.32313995793363015`}], {Arrowheads -> Small, 
       ArrowBox[{{49.96588524021492, 0.32313995793363015`}, {
        44.52461850385641, 0.32313995793363015`}}]}}, {
      PointSize[0.01], 
      LineBox[{{48, 0.25933336600653606`}, {48, 0.42965892204021877`}}], 
      GrayLevel[0], 
      PointBox[{48, 0.3444961440233774}], {Arrowheads -> Small, 
       ArrowBox[{{50.53767485779353, 0.3444961440233774}, {45.12359236788022, 
        0.3444961440233774}}]}}, {
      PointSize[0.01], 
      LineBox[{{49, 0.2886564885487146}, {49, 0.438998894525757}}], 
      GrayLevel[0], 
      PointBox[{49, 0.3638276915372358}], {Arrowheads -> Small, 
       ArrowBox[{{51.066779213089106`, 0.3638276915372358}, {
        45.664022442661235`, 0.3638276915372358}}]}}, {
      PointSize[0.01], 
      LineBox[{{50, 0.3244105430833998}, {50, 0.4340287059805521}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50, 0.37921962453197594`}], {Arrowheads -> Small, 
       ArrowBox[{{50, 0.37921962453197594`}, {
         50, 0.37921962453197594`}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {37., 0.22335698104658044`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {37., 0.22335698104658044`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedSteps\"", TraditionalForm], 
     PlotRange -> {{37, 50}, {0.22335698104658044`, 0.43911155208322505`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843756983332062*^9, 3.843756989454421*^9}, {
   3.843757198869472*^9, 3.8437572034972596`*^9}, {3.8437572496015153`*^9, 
   3.8437572719408436`*^9}, 3.8437575474616213`*^9, {3.8437576265719414`*^9, 
   3.843757671095394*^9}, 3.843762228075223*^9, 3.843762352204978*^9, 
   3.843830882372066*^9, 3.843835235863022*^9, {3.843835374484578*^9, 
   3.8438353947673187`*^9}, 3.8438355194285526`*^9, 3.8438356418895483`*^9, 
   3.8438356767757998`*^9, 3.8438357809416533`*^9, 3.8438362829922857`*^9, 
   3.8438363232368546`*^9, {3.8438364410300827`*^9, 3.843836463894153*^9}, {
   3.8438450848306713`*^9, 3.8438451016961794`*^9}, 3.843845216222624*^9, 
   3.8438458165378337`*^9, 3.8438458972949543`*^9, 3.8438478453239965`*^9, 
   3.843847895023472*^9, {3.843849858709386*^9, 3.843849865817873*^9}, {
   3.843849976119458*^9, 3.843850004045227*^9}, 3.843850070497471*^9, 
   3.843850603732132*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"90793950-6d1f-443b-8460-a308f34a7f2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Little Test: ConstrainedInitialSign Animation", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.843834763201581*^9, 
   3.843834767819809*^9}, {3.843835241207244*^9, 3.8438352447779284`*^9}, {
   3.843835712689432*^9, 
   3.8438357141919117`*^9}},ExpressionUUID->"a41d9d9d-3293-446b-a45e-\
95ab4521322d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", "40"}], ";"}]], "Input",
 CellChangeTimes->{{3.8438452618170643`*^9, 3.843845263885205*^9}, {
  3.843845549919113*^9, 3.8438455747499037`*^9}, {3.8438500930232925`*^9, 
  3.843850093245192*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"d16c2f78-3c94-4279-b731-2615b3162271"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedInitialSign\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"pixelIterGraphics", "[", 
   RowBox[{"10", ",", "p", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "30", ",", " ", "lvlmax", ",", 
    RowBox[{"pyrfiab", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
    RowBox[{"0.01", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.84374627585063*^9, 3.8437462865014696`*^9}, 
   3.8437463363994474`*^9, 3.843750451052354*^9, 3.843755043838456*^9, {
   3.8437555145970716`*^9, 3.8437555589105415`*^9}, {3.843755593721691*^9, 
   3.843755650040806*^9}, {3.843755713026413*^9, 3.8437557397989397`*^9}, {
   3.8437557969025016`*^9, 3.8437558094282227`*^9}, {3.84375584625963*^9, 
   3.8437558470639553`*^9}, {3.8437563392884903`*^9, 3.843756343035241*^9}, {
   3.843756380773343*^9, 3.8437563809555287`*^9}, 3.843756416890011*^9, 
   3.843756646261092*^9, {3.843756897535613*^9, 3.8437569015380273`*^9}, {
   3.8437569603421383`*^9, 3.8437569887616463`*^9}, {3.8437572018445663`*^9, 
   3.843757202550776*^9}, {3.8437572349006124`*^9, 3.8437572380804935`*^9}, {
   3.84375764378139*^9, 3.8437576664207797`*^9}, {3.8437621564809384`*^9, 
   3.843762253166991*^9}, {3.8437623621777735`*^9, 3.8437623856138563`*^9}, 
   3.843830900277937*^9, {3.8438309736523895`*^9, 3.843830974407455*^9}, {
   3.8438355591470222`*^9, 3.8438355621823497`*^9}, {3.843835728711878*^9, 
   3.8438357384197855`*^9}, {3.8438357982481337`*^9, 
   3.8438358852355185`*^9}, {3.8438360521354713`*^9, 
   3.8438360530938997`*^9}, {3.8438364858922653`*^9, 3.843836486049472*^9}, 
   3.8438365552629943`*^9, {3.8438366256874313`*^9, 3.843836709266229*^9}, 
   3.843845554595148*^9},
 CellLabel->
  "In[164]:=",ExpressionUUID->"3fab5e98-4cce-4a1f-849f-99e703fa495d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i296$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i296$$ = 1}, 
     "\"max\"" :> {$CellContext`i296$$ = 20}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i296$$], 1, ""}, 1, 20, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$21600#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$21600#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$21764#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$21764#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$21929#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$21929#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$22094#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$22094#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$22258#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$22258#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$22422#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$22422#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 7->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$22586#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$22586#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 8->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$22750#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$22750#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 9->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$22914#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$22914#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 10->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$23078#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$23078#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3354972071935335}, {
                    40, 0.3030429484748937}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.3192700778342136}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{37.425482429993664`, 0.3192700778342136}, {40.,
                     0.3192700778342136}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.15280052601930408`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.15280052601930408`, 
                    0.365547322951908}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0063\"", ShowStringCharacters -> 
                    False], -0.006302978681664227, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029138993257018073`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.5745175700063343`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 11->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$23242#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$23242#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 12->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVl3k8lG8XxlWSJRVFyr5liSyJrOfMYDAjhhDlJwmJNoUkRSJLiERIQkVF
EhVJEiozzNiXmRFalCJRUpF6n/cfPt/P3M99n3Od65znuRV9Djv7Lebj42sg
/vz/f5KdpAYfnwqu6uSrr+xsBHpyncIBIRU0KLy0d4JgyXYfqQFxFSTxn/mo
1tUIRS73llWoqqDxPdfsGwQ/3m37YTdNBRNYKf8edDfC6aLJ160uKjiyP+73
AsFWo5d6jbxU0H/68RfbnkboCHzTvDJYBVdPtna9J3gsNOL6sywVnOrSnzbo
a4TyGoUrGwtUMH2hQi6V4JD5lxcv31bBoiC6zyeC/0Wvjjlcp4J6FqPGxf1E
fMll3vJvieenlyYbcxrBumhINkpbFfVNZRmMwUYQHo2VGDdUxdstq+atXxPn
q20U3YGqKEadjGgm2PPu8T+btqviWxePoy1DxHk1q3hD4aro8yy1cGKkEUzm
H3VRYwhWDL5x8k0j8Fn8x3x0XhUvtyuKib5thPNNtx+n5qsiw2xki9E7Qh82
OduiWRU1LxxZcXu0EQLEPl24w1LFlnjf57QPjbDJ5UK8ZL8qjqiIzE0RXMvh
hU1+UsW8cB9hy7FG6Hwf4pq/cgMaPBkQFBgnzpsvFv+7cwOqubxOFJ5uBHeB
RRMGfhvQuWY6fYzgCrFdL4IOb0DXuq4uxrdG2K2+MpxzdgPWFjxblTXTCPWu
x18/KNuA3c0lv11/NUJkhc2toL8b8FFLi89xviboeVJ4pkhQDT1a65afX9QE
Wq/md3LE1VB9T7ph0eIm4L2+J2qjpobrLAulefxNYCIidUyJroYbmfUlx4Wa
4LffmDmnUA3PbRYs3b26CejB5LWrytSwVUg64O6aJrgVmTdFeaSGF/yVJv5K
NIF7Bv36A6Ya+lV077wr1QQ1DTWCad/VUO6wsuNWuSYIk07splirI+1japiw
ZhN869DY/2BMHesM6Zx6qyZIfRc0Z/5NHU3WsE0PU5pAY/bu+Vfz6tglLeCn
bNsE3tL65dwVGli9N1vyMq0JWH4m3/m2aGD+v1M9pc5EPHPUU9vOaGCG6Ur+
xD1N8J/KgfQP6zTx/gedY/wxTfDLsFzpiLImjlg87dWMbYJLdlNVv7U08ZmS
SYvLuSZgHgrpW46auP26mmtVUhNsfRwpvdlfEw8o9PbnZjSBuEPKzahKTSxm
Z7WIFTdBy/Hyx1K0jfhE9kp2OqsJnkfK+B912Yj/1Cu113U0Qe2ZJPG2/zai
wrPJb9e7mqDsvH9Q1JGNuOROsEBTfxOkXZOT/ZC5EYfs2bJqb5vA41VqdNXI
Rpzcuedw3M8m+Cx52MYhTAsFjd/dTlFpBpFHOr1nC7UxZNE8zze+GbLOOu29
VaqNSks156aSmkHB6dh020Nt1NmuuS06tRkMJx6JSjK1kSGrlXArsxl8lCwo
t75pY3i22Cr5G81Qm2pf3Wa5CVWit7kVPW+GwH37cyQ+bMLxue7N03+bwS+5
s3y7hC4eqTj6ZWPMCzDcsPyImZUeGniMCxddfAnWXc/2nUnWx/rCkYw1I69A
mDndzGBvRu8QlyHWNgaQ76jI7583wIBlgU1OL5hQk9dxz5dkiP49W4u8LrSB
Cn3ZnCrFEEUbHfovZ7XBhSUWVh+phki6wCrpvdoG/oGlA/tdDHHKZ2zL7rI2
kNh6btHhfYbYrPGi8Q6jDY52m24/kWKIP5fdjdZYygIt4ZLZFI4hHstrzpmJ
YkHB8VPm1cFGKNgbf9P4HBtMVKiZ3mFGyJPS3HU9lQ29HZJfhE4aIbM/UXr1
ZTYIa1bkecYa4XeFvl7+W2wIGXw7v+iyETa7Tb3RY7LBlmRba19nhE6Lr72t
XtkOX4VXG70V2IoGn2I41661g0X+LV3RvK1ILR7Olw/sgPX99jufDRvjweci
ER/fdULAr+noFlFT/GhQaZu7uxt+bFw1pO1qhkcMzEvOz/TA1tKygqwsc3Ta
ve1Z8a4++CJO9XZrtMBIrQvVj+P64QhFd+PjJYhi6c76wrcHYEuopJiUAKKe
ft0libsDMHf9z2yYIKJ203CB/P0BOLuI0WggipggdeapzuMByKrbs7NCEvEM
ba8JMgbgqX5GYokG4mDJrh7lTwMgLD/7MdMR0XvJuMQ/NQ60bxtkzTgh9t5R
ufhmIwcuRTZWbXdBrEqOCWvU4YAsNzVKzANRwuSDeZQRB3Qz1dam+CA294zr
v6NwwE3EgxIbikjvfi9u68eB6z+f3Dh6BZFCNrioUMCBZKmVlvz5iGt7mcf4
bnAgzNjnTWYBYveHULfBEg7YnhSUe3wT8d7+pN74exyY/Oty+d89xFD5zTWl
9RzYKjCZmNyM+H3owbzkIAcU1Ujqcq8Qr32961Q+zAFh20sv7zGIeISexeA7
DrxONFnSzUaUMb+j5fqZAzGi8ZHrOIgxXZpXzX9xoG2NwuHiL4hvaAKv58S5
8HDLMdGtU0S8Z3NtjCS5kO/2spTxDfGhA3XfwXVcCM4+MDbxE5EWeyrypTwX
JGUe79m8mIRdeTXzGlpc8FZ2dmmQJKH42irjYksu2Fnd/Oa0joRr5KQ9Qilc
0Pf7lfZOmoR3LIuWmdtxYWlJPktAkYTmrNSWhw5cuKM5Ttm2kYR+y/f1Uz24
8EMv1pgLJIxnW0t8P8CFMMeiod1kEh58GzNgdJgLswcazo5akTCiKtklJJgL
v0r+sKbsSEhLDdfrCeXCnGyozzIXEpbqtF/WPs2Fk6YZy1LcSFi0Jc1kUzQX
/rjfLxP3IKHd/CKRDTFcWMj4MivrRcL3L/d/nYvjAp+w/3mDABKaBQQMG6Vw
4YxarG5tIAnPhbAEp1K5sNi6qBcOknCZ5aue/DQuLIkekqcdJeGk2viKkQwu
CMy6PdgTSeS3Xlz1aw4X4leHenw8TUJJkmnkzitcENTL+HvgDAkrtV5/fpLH
BaED7bbh50i4d/tCi/c1Lix/a/M6NY2Etz62Fere4ELKP7+YNRkkdDPnsqg3
ubBCNlYtN5OE1J1W53YWc2Gle0PwzVyCxwvcdt7iQlrokOTGqyT8tbuNRr3N
hVUZf55UXCOh7tWX8Tp3uCDO3ipQd4PQ92hOKqeUCxfH3UpJJSS0FSk1zC/j
wmqhUPqr2yTsO7gwvOMuFy5tyPhhX0bCs+u1TwiUc2GN1f3crnISFqb3Td0m
OHNPO7jfJ2HM9qwt5HuEP6K+vH9dRcLQEUHDdoKz8kSS9j4iYWsNc4RewYW1
tRo6n2pIOOAZrvKK4Ox+m55DT0j4yb78q959Lkj98Dsx85SEzkJCeukE54jH
ykU0kHCPuGr/e4LX6xY1/WskYdBYfodWJRdytzUExL0gYb3I6uX7CZYOGhIV
aSHq/0c2PIfgvIQ/lWlMEsaZei6pJ1imeL27JIuEV2wD8/oIvtq0deFKOwnx
xnu9dwTLvXErUuwiYSN7X+X/Of9viE1JDwnDbNOWDxAsL5MxodVPwtvpc5sa
CC4wvp9eySFhuaalYB7BCjvaDbcOkrA/QyA+iODCkC+8p0MkDNn2JmcTwUoX
Rc5YviFhT/9hnVEin5D7yj1X3xEsxeedSfCLDlO1X6MkPFZadsmEYMmp7RHO
YyQcd97xrIfQK2DlAVbZZ8L/XW869xJcuylWYdkXEnp80a7/SOi93CHv2J6v
RPz+smHeBN9LblsnOUNCpZiDq3SJevGVvT9wZJaEF+6k950j6uvc+ucZ8xcJ
j1qM6HQR9Z8V0vaPWiD0enh2L4Xwh62G9WPOPxJqy+cpHib8k2P733KDxWQ0
XORvkkz4yyw+pXJMgIyeppmW10u4kFp8c6mlEBkn19WvvUr4c/jFU/erImRs
PSW/4jzh3xj+yb9Oq8jo9VZcw/I6F3qUBZzLxMkYvz9AT7SIC6qWcjcFJMj4
OeaUcmsBF1rOONCerCOjzYmDyUr5RP0L/fMlZMj4aFDk4//7J6jh9PRhOTLa
D099syX6a8W/8ssqymRsZ0t8MM/mgmvkyvcpWmQsux9Znp7OheIrakZjm8j4
IGCR4KsLxPyohSSyHhkfDnALvxL9nvf7sO7PLWTMmRL3Wp/EhbdhHZHeQEb6
TruDPWe4YJA11l5LImPzpTEoiuJC3EM+ZQkrMr6/dvGHzykuqM/oMhi2ZEy7
zzZ9Gs6FQ8HpEpudybg6V/Ji3yEuNKTdDkhxIeOZqFtcM2K+iVU8f/LRjYzh
r8wDs/Zz4cHk9J68XWQsdjmRpuzLhfkg5/KlfmQ8Yeq7o8SdCwn+q20GjpPx
zmx8w27gwt/j2c5+EWSUWX1JotqU8FOirNe3SDIehZM+fFuJ+VymFro8howO
i64q79flwtZvptcxmYxqdacWZSpw4dMp33+3Coj1hbpyvn854H3hk7DhdTIy
wiv2v/3Ngb6CQ5JNN8m4YL2mbPsPDjQ2hWu/vkPGnfN2risnOJArlLJL7CHx
vO/TnxMDHKBmPqw+wSCjVBMedqzgQEOxSZNAGxndHjQW8pdywLDmGTuDTUbX
M3rMuzc5oMRjjN7tJqPy2GWzwVwOzCsMrX77moy0k/1+pbEcKCsTOEL9Rsbv
1Pw6BTcOiDbvUJeWtkQ3dZ2V/VMD4NLf9yZS1hI7Lc5evPJ5AHI/u14ZkrdE
D/se5x3vB0BdzGVFkYolysw71T/oHwArL/qM+iZL7Dr4p1SwfgAif9k2GJIs
MZ672kwhcQAmtEzcnfdZItf39L+AdQPQmimTkFhliZ957EtGqv1w56a/7fBD
SyRTTo56yPZDwsMKwS01lqgZpjgWJtEPVr1WiSN1lthwnLiCLu2H+jUHk4xe
WmKc8QqLmtE+qMx4mjw6YIlKIeLMuRt9kJ3ulU76a4mRd0Rc1RT6wDelIPe3
rRWmzFeJt4r0gsyKPS1rx63QTkk8wPdmF0yJiX8N+WKFcyNG/LfzuqBZokmi
66sVFpLFbKczuiBIVnVv8owVHrnoIZsS0wW1Wp8W+P5aYedg7q6Z3V3gTgve
/HmVNTa/qxK7JN0FlxLO5NcZWuP6769r72UR32/J+i/WGVvjU7th3YzUTjBL
ezceZmqNzN37F5861wnvLlsb66E1Vh68uMI3rBP0S4R6btpZY0riRfUYt07o
eJEudMHTGtMT5BzEpDpBdElRyJ4Yazw0uOSReGEHCPx+tn061hrzBo0POed0
wN/J1/pn4q0xo4yflZfeAZPcddMFydZ4LjN4wimmA9or0w+OZFmjcpTbQ/Tt
gHSfM/67S61RxLEu1lazA5Lcr1l/vWuNwyz1FFDugBiHpypRFdaoezZlhizT
AUdNfr/Nf2iNY4HuDodXdMB28eDdQ8+sscPKak/jh3aQaPR2/6/HGr/mf0o6
G9UOK2pOG33pI847kme79lg7CJTnSZ7iWOODkwJbXvm3w2zOQE/ekDVq/dAL
i3Roh/5gutPgmDV+cydfI8u3Q44iUnctWKObvHr1wZdsuLjWS2P8nzW65ypu
GnrChiTRSMGTiym4VjbH6tB9NkT8rn6Zu4yCUl82a03msWFXp44lV4yCBfkh
40dD2SB7Rt7MYwMFbc8ucm3QYkPZMUGl1+oUrHks+zFIhQ1m/tPL9mykoErV
K0tjGTZ40pq6A3QpGHZQXttkORtyJfYFhZtQ8FDojqPcLyzQFKQ7/TGjoKHx
LpHcDyyondtqFA0UnK0rXHlqmAWcYeElCVYUlH6zZepuJwuk7pTnXnagYOYv
xZe11Sy4lXc5WtqJghMtzoys+ywwuhDtf207BVfrjpOzSlngFuKsX+JOQT1p
zZP/rrEg02KW8ciHgsntTVoRSSxQ0Ru+Z+JHwc3P16wKjmPBA+WWzPp9FAyf
O6l9PpoFPYK5e14eoKBjnu8v9eMsEO82/90bRkE5wZh5IX8WFL3YMOxxgoKV
hQGD63xYoF+z8sXrkxR8unnNE3svFjhdfZM2Gk3B3Jz07dI7WDBygRm2/ywF
b6xz/PtoOwuOxFR5fomj4IXPtxJC6SxI2xen/iOJgvv7BeV2UVmgsPPQihMp
FEy/NrcuxoYF9+x3zPy5QMHFYt79rVYssADkRl+kIHfRPYetZBaw9TQa+DMp
qGP7X/grYIGXinhxwmVCv9oR+xPmLJiUnD+/PJeCz7TvNW8zZYHon7Yda65R
MOkof7SXEQvyJh+aZxdS8NPXsAe5W4j73Zt8ZZkbFPR/JXLo92YW1HXHCxUU
E/u1b70Zoc8C+5dHvirfJur9+piznB4LBms8ektKiXxf6R96r8OCoFLyk43l
FMzzHZ9q28SCuasbC+9VUNAiaXV3vzYLktLWxG+uouC1FYqiSwlef3bhQPVD
CnJeJV520WLBndAPzqY1FORPbgp8uZEFJgHtW5/VUtBMzypqJ8GMnTVylk8p
mJ9yhrWKYPdthfyvnlGQfHx62ydNFoxB0mdqI8HNQr/fERyuf6yD3UzBWiq+
4iPWC6p6PnJ+RcEXI8L3geCAdUAtZRD7rWNK5vx/f1GloSVtFPxFEpNZRcSj
uXjpUU82BV8pN9beIDhp9uPShx0U/JdQP+FGxP/5MzNHtJuC2aZjpRuIfGnD
d7X9eykYt1Tx22pCj7LutOf1/US/VFAfy+myYHnLMde1XApqLrOZpxD6Hahz
+3R4kILtXT/vJxP6siqMT7UMUTDntUX/V0L/TTdlxBTfUDB6esH3CFGf1Jx/
N068o+DxAUnXFUT9vqa83do1SsGjnkGFjK0soMe8aNMco2CAzWvLIhMWiAWd
n+FNUFAyouBoqQULju4+lGDwlYLVrg+/8ZAFXdudZFKmKajWcKhCw5IFl8zW
WlnMUtB8v1ubjC0LZnTn+rN+UbDD1FaukfCnq+rroK9zFFzywi8zdhsLJFdc
zyj4R0FZ5VKuN+HvsMXn1H4vssGJ81l5EW4s6J8NeOLEb4Obuw2C7nuwIHt4
07vFQjY4piImGeZN1P9+rb6fuA12js/N7jzMgoibV18+XWODS3brHPM8xgJe
TvROybU2SOdTbY0g+jEvhhLzStoGhX9wf4gS/Srv0tWpoWqDLU+Vz6dcZEG0
7UO/GDUbvFiz2iT0MtF/Ztm/uRo2KKnXnXEij+hfVS/F5E02aNZkozNQTMyD
n5+OTBrZYGbM450TdSyIHW/jtzGxIb5X+x/UNLJgdPhe9jUzG5Ry7E4obGFB
cUtoA51kg0InxuNaelignrtoVRXVBpnKdI2gSRZom6+7d/w/G/yXdLJ2YQMb
KpX3zy/2tkHLO9cfbtZhw1bhxzapPjZ4pc24NsmIDeR+95Eb+4j8dCMartiy
wS04W6wr2AbvLO/6YHuADadvrg3ROmeDlGHxVy2P2bAkeV9DdYINBtUzKkSa
2ZBwtHq55XkbnPopqXaYTcx72HHTI80G312wyL38jg3FnKy+c7k2aDdh23Bw
ZTu0i0oavym3QT3ZKCP1g+3gMuMXd+C+Df7QpZKPnGgHLvdh588qG/Sf7fYc
iGuH9yWugSse26BY2ZdCwWvt8IuUecW0yQYP72pIH+tqB4WwNX8z+23QpEUk
11GhA4KHxJuofLbo1ZhzdIB4v7586fn0zmJb/PjugGkQ8f6VuVdcLbzUFrkP
GRdEbndAS5RJGVPIFj1fHmKH1HSAgqJPJnW1LYavO0/91N8BHXvv76NusMWU
ON3jO9Z1gu4nx+VUe1vcXbgsRKe4Eya/J7vaZdviPH3cY/RtFwwOFLpdzbVF
pxnZXr0vXcB4+mjHdJ4tFlR/4cX97IIb8SMeOYW26BCYyG+1vBs8pA28Pt2x
xeI1VcISht3QTOb5Jz61RVflQf2JpG7ITdcIZ7y1xT73z/pntvYARedlrp22
HZbcVPjRf6UX3AVsXTp07PDu9I2EyZJeCHzNEN2hb4dWc4/mlzzohdTzrGhf
IzvMfjXVpdnWC70fe/yjSHYoy1d1bu+fXvAteKf/0NUO65x1RHZ59kGM2KJW
hdN2uJ/97YX+un64NBYTWxJth3LsZ0adKv1Q/IzfYtNZO1xff1pmv24/MA8K
3jdNsEP/HxbpsTb9IMZcedntoh2GHWoI8Avth4IYub3JxXZYPBPbf6u9H55+
N53/ybZDz8J/0wKnBqCgrdpne6cdXui+H9l2bgBibm5mlnfbIfW4wdX4tAGw
3bExx2+AWG9ZIT50fQC6a9cbdb+xwz6z4pllzAH4dOb30fIZO9y7qfyp7hoO
tO0M5Qr9tEOexBIFkOVA+eZpkt/v//9u/h43cCBkdGyVzF87TFLyXyq3lQP/
bAfKE5dRcYf/vXaTXRyQWFX92Xc9Ff/2kO4O53Pg15i+c4MMFT/uj7u1uoQD
3Oflj6Xlqfjf18bOrfc4UHCsOKFLmYrT87qKbs84sLE/cwNqU/Fe4MLAwBAH
SPkhPtJIxUUWEb3D67lwUEuf2+lHxeqRZ5t9zhH3lZ/r53YHUNHXqjB5JXH/
imxcsn4ykIoLnWh+O4NLfN/1eggfoeJS1e33C4n7YHFsOIccQcW9z6e3lDzm
wshg/UBVKhWPJEWZLBvjwseSkl+kdCqGeWoEnfzChcmjaVIdGVT8gDOKg9+4
sCDo4z6RTUWN+TjtvQvEfXLL0gGV61Rcbv9SNEGMBy4ptP7MaioGSipH6hjy
YJe7wU9l4uX1dqgp8KAJD3yUZddW1lHRumhMNNuCB8GPJ93Yz6n4rdvtVBWF
B6mj6X0CbVR8+vub0xI3HmRWRMxeYlPxRMXIlhIPHuSd3Cup3ElFr76zo0b/
8aBUbIsb9FGxS+NslbwvD1rMB3qPj1DRUCBjl1AwD9oFn/9Y+o6KW7d5TK4O
4UFf922JS6NUvHNcwFfkOA9G9590rfhMxRnd8iXPI3kwYeAbavGFijyZ0M1R
UTyY+Wef2faVii7FT5w0Y3iwOEuud2yGiiL23n428TwQ2rPsR9hPKu56keT9
OJEHq7Sm1iydIziL5SqVzAP5xucuiv+oGPfbwORqGg/MJn17PIRoGMSrNm3K
5sGaJzZFdSI0DAzMTjidS5wfr3lEfgUNb2+1366RR+SrOCUyKk5Dbll+0LZr
PAiZ7OLYSNCwefjH05cFPLB/8rDkzloavgtKv6xTxIMFl5OWR2RoWH5b4HP7
DSJfRS+xbjkauo5l71tWzIPySRzeokhDpdyR0E0lPDj3RPlutjINM5earLW+
xQOvBIGT86o0VA9e5EC7zQND10+2Xuo09FTOkCHd4cEKpTbJ55o0vOVDi9tQ
yoP6J+mV53RomFBUsKmhjAdZCSHRn/RoKKk7eyzkLg8Oue5wsDegYaXvO0+p
ch5QlExk7hnS8PW55vFSguW+ynwWM6bhqtc/lHTu8WD2yb/qEFMattzt5i8i
mJ3wNq7fnIaxUJvBX8GDYtcX202Qhs8Hlna5ERyldEvxKpmG88/EG7MJdv+a
9PWfFQ3vm5r7MwnWrTv41MeGiP/im4ZxggUT6edf2NEwUtiz5w/BI66bPdTt
aZj6WfD6AsE1SpJq5x1oKHrCSmeS4LSvv2a+0GkY/ifwJJvggDpeI307Dbc9
GUjMJxgT69OqXGm47M8nTy+CpdwKvSTdCX2Xzs+KEjylFKt1YicNZWQDdt4l
8mn56j/H86ThsaSURDOCC+rsWix20/BGxqtzTwg9whO1sgr30FAr6qiLJsF0
t5W+/L40PJfxeSaB0FNd+ZvePn8a6q1NDuwn9F401fOPEUDUg15VLUEwt66a
pRVE+Otc3ZAlUZ/KxNwrFw7S8MffJW/33Pl//3kbuR6loUtX/bmDRL1NpshL
a0KIeGs/a+0i/CD+VLV7/XEalv59UbOV8Euj2/ihkZOEv6rnk5qu8yBXmW1m
eZqGFx6v6DtC+O3oVIVwcTQNP+qRV60o5IFSUlhxUBwNrxac3CWVz4M5N48Q
djwNp5VNguMIP3cpm5H1kmg4bpQU9Zbw+9mni4ZmU2lYu5F+4cBlHngmvS/1
SKdhYvbpzJxMHhjseHWiLoOG3+/du/oogwfvp5IlYrKJ+v1KetpwgQdWKlLb
RItoqFZsfkqC6McHX14o+t6goVTHlxvsWB4oVx+brS2mYdvonajw//cvtf1a
QCnRPyl6O/JP8aDh8LlvTQ8Iv7+padM/RvjF2ODV+moaUiOkWoOP8ODa4rdX
gh8TzwfTUwsP8uB0prm1fD0NTbfoHOjexwPzJzOXI17R8LPcVFP0Lh6UxRYd
6GTQULNupxrFnQcyDnSSehsN/TX37/njwoM/I6WfeztoqLx5h4+pAw9qBfaa
63Fp2CnQ0LsEiX5z7nz7cYKGiEtDGxQIv0tHVVt8pWHMjextl2R4IDGqlZw5
TcPf9f4KHlLEfDqesMVyloa89uynD1cS9b4KCfn/aJh7NG/NE2I+b/p0V9tV
3B7NrH3UfvVxIb9y1+KyNfa4sTm5fLCTC6KRQv2L19rjhaGE7ZVtXJhY4Rdd
IW2Pv/J5/3QbuXDHQKZbRNUek3ZvVogs44JadFJ4o5E9vguYCKad5kKd6c2l
9ib2aHf8i/ez41yg/3x2sdfMHl/Oiv9UDOZC+KEfZWMkezR+r7ihai8XWjy9
36ywt8fb9uzmZbZcCDA2pO7ytsfw+Rull0S5cOvbG+mZBGL/GI+8NSkcMCv/
c+vUeXtcffvkzfRYDnTsX2u4LJXI57zQFF8k8X4dsaevz7DHN/vONz8K5IBt
e3UsXiXOey7NiLHhwFhpypfk+8T+n1fpVv8dAA0/42eqXHuUZnh+C/AdgFQl
h7mzg/Z4XtuYuWbXAHwb9tnydsgeKRrhi2qcBqBuZ3Jp/jt7JAkYf3tvMQB0
+vDltV/s8apBbA5PagDCTeOOCPFtQ3TRGXVq7YeXYp2KX1S3YacGvUBsYz/4
1gfEPgjehvEx4Yo7eL1QX9DjOy3hgAtn9NvOfeuCYXvF3WFSDqh2znFh38cu
4Pt90GN+vQPaqoxrOwx2AclpmcNSBQdsH90ooPmyC5oXmRit03RA2pmqIaXc
Lmj1uSZEsnBAhy281M2WXTCgElie5u+A/IbPbSNyO+F3x6NbEvsd8ED+BWnt
tE5Yf2rJ9dwgB9Qcrr3wMa4TPHvzLt844oAeg4dTjgV3wnBce3RNhAMeC6AZ
fbLthA8fDLaPpDrg9aG45W6/O+D7rX8/daodcPGfqbnz3h3w3o1SkPjYAScn
ass/7eiAPv4U23dPiPOibng6OnZArff6nKwGBxxw7mfrW3RAtNQWkwUGsd7w
ucoumQ5YkRAYyRx0wAr5G3dDHrSD5r5ePr/FjijBSL8zXcMGGQmZ2/X8jmgR
0Lmz6zYbVjT5OEktc8SR955RL3LZMC03Vdgq4oh9Qh6h7yLZUNMnbKkv4Yhh
QtNWfGQ2UIir7D81R0xc++sbu50FPqqlQrnbHNFvk0qK/VwbhL/wCtxAd8RT
O1U3XZxog1Q/8dZKZ0fM7xcOmRpqgyc3TyS37nBEkuoZl59NbbBmg+3KhT1E
fBUr9fUutMHLDaNrvMMc8WWGx70gzTYYfJkdOhHuiNNShy/ayLXBN3/7vvCT
jmh9xKfSXLwN5EuqLqdHO2LFj5EVJ+ZaIVwtZn1TkiPeXdDj12lrBQ11eYUN
1xzxrxhDpzykFbClK7qy0BHtF5/vMQ5sBbeAc28sbjjihLWKw5vdrRBz60vR
jtuO6KHGU42ltQJXvU41scoRR2cc9GRUWiFZw2PjxCtHzGJ+X1bGZUIRY3ly
ONMRtbfOfeHrYkLN/oYJfpYjbo7oxGMMJozeViuX7XJEJm/qYkUNEyw0Z3Ud
Bx2RUv2xMi2bCVOaGYaVU46oPrxTb+E/JvS3ofXq744YuWCmU7KDCfWHJreH
/HDEFmOuwQEnJiRX2gUbzjmiWoXVHRtrJqyR5XN7vYiOCis7YiibmCA46fZa
dAkdt2WfWdKqzoT5+ru+Fvx03BI/rhekzIS33ruOXROgI7/Jx89/pZhw/8aj
tD0idGw8FCIetpQJN0JFpS4up2NDwbA1l48J2RTfa42idNSN5mPt/MOA6DGx
cuVVxP7jezTuf2dAyOOALS5idPzcoqge/5UB+5Ke1cWK03HoZybrxDgDHLQO
to6uoWPel5zdD98xgLzQ5CwpSUdXgduhf4cZsIW9nktZS0fKmqA430EGyBxp
GStZR8fcKoHR+F4GfK5SFgiUo6PZyYuftBkMGIqNSMmVp+PNGh3xPS8Z0Ona
uaZVgY6b+pb1329iQM3P08paynTc7f7zWWk9A8paeu94qhDrtZfHuNQx4FqO
ln6KKh0Dj1oYrq9lwDlTLk6q0THiyLqK+YcMiFiu1yKnQccOM6fVax8w4ODr
eEdHTTrW5Tdfd6hkgHf5UF/URjo+kzfVLapggEvUFq8KLTp62UXGi91jgC09
eXREm47yNx3D8+4ywEzx3QExHTom1kV2kssYoPvNeIakS9RrXese/lIGKDel
nTyqR8eDVot/jdxmgOSlj4uv69Nx5tUnn4FbDBD2s0jq3kxHI2274M8lDPi7
JVOMfwtx/sLHaUmCvwlMZBsY0lGsKaXqv2IGfOgnK/gZ0bFSYHFc/U0GcG7l
lGRupaOG8/ItxgS3nZja9NKYjnObQi6ybjCggWrzaNaEjqUbFh04SfAD6Xxz
NTM6Pm+MSCMTXDIx07zDnI4vkm+xlQjOfUqzT7Ag4lnh/EOa4NTUou4aoGNB
h0W3NsExu3/v/IR0jPvP0Mid4FBd+tt1ZDoesuCbyiU4YFHJfqolHbl/9rb9
INiza2EqwoqOO5Q0rgQQ8V1RrD1505qOwQJhRlMEc4+ECXRQ6Fhr23Yilchv
fYN++pwNoad422ZLIn+PlV+lVe0If6dIGK0g9Mr2Ki12pNJR6q2t61eCB+7u
04ugEetNBLw/EPq62Y9Q2rfRMezKtTMSRD0yr+R1/nYg4p99YrqNqFfPZ3fC
LnR8OvdWPbecAdsTO4NPOBP1ut759uh9BlwcSPlzfTsdJXM5zn8JP3SpUePZ
LoTfhg+Y5RN+ob9szFPeQUfjuYeN62sYcEEiSs3BnY6nlMoW/3zMALavaWW4
B5GfRfnij08YsG3Jg1esXXRkzLolLmpgABVvfjvuTUfOZH2+NOH3xAt7ThXt
oaOFSU5bWisDWoZkBVk+dFzdHG0jxWaAzaksWSU/Oh7e+ivwv24GWNXG27bt
p2OGhqjbkyEGnBWy6p4NJPw42ct5+oYBje58XooH6Dhoeteo8z0DSD/Dj4Ud
IvpZSrBFg+hXC4PAfIVjdCza+V396i8GbC23nwmJpCPoN+/wlWTC8QXBqGun
iHkwnvDMaz0THtm/EGKepmNXo5f0PjkmbBk3l5c/Q8fsY/U/CjYwQV9dh8qI
o+Mt7y6lB0ZM0C4SK5C9QMd1WUeYOp5MOB3IH78njY7Dz525u/YwoUP/58Gb
6XQcOP1m7JI/E0KaBk21L9FRPVpOQjuYCbXvS/rNcoj5Etiq8/UcEyhqFis9
r9NxdsvlK+ceMMGrLPB0bjUdz9lr1O6VbIXUR02ea0foGNXSFvn2Yyu0RFXl
Wr+h4zELsTHhyVZYbHd94NhbOsru42/Sm2mFMF6MS8d7oh+HTy6L4GsDLz6y
feInwv/dzvFfpdpgE7XBdP4boZ9QnY2VXRuwXtetH17qhG+uuc5YFreBQEmZ
u+gyJ3xy5d2616VtgEfyskwFnfB7g23poftt8GBxpHi2sBM6Z8k6RdS1QZ6a
qbDTSidM6rnkt6mrDQ4EP/7dKOWEYa97sobn22D50kcDxRudUP2Q+wMLGxZ0
F1qY/9Jywt0Sdhck7VmQa/Gq0G6TExGP2cIInQXq4QOBE7pO+JM5PLttJwus
xuf+6Bk6YQbIK50/wIJTnaD4FJ2w7UyM961U4vdDLXEryE74XFXQ+OFFFiwX
cfq829IJZQeCjB5lEftb+VQtpjihsXuscGY+Cx5Vx1rb0pxQxH2O2XKXBZNX
Gfu7XZ0wbvRvnRyTBQ9NnNkqO5yw/3JvwwkWCyL7ufph7k5YvM7/FLODBcJi
E/NSu5xw7mRQ3LZ+FmyIXZHq5e2EodsELw6+Y4FX4PbKT4FOKF6VetNgngWq
ywYlTQ84oVfc0cU/F1gwcd33ZPJBJ8Sx8TsVfGyIeB1qpXPECZfR3SyFBdiQ
Rc/uCwl1whxj4e0eq9jw3xcF05dhThipdIU1IM4GlaTb19aGO2F0pM5/dAk2
VDbVBtRGOKFByDoF9fVsOOFtyRKJdELhJGZcggwbcKFV779TTmizyNDvjRwb
BHNdsspPOyFfVmK/viIb2g1fz/2LckIS//cfkcps+B/zyL7o
                    "]]}, Annotation[#, "Charting`Private`Tag$23406#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$23406#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 13->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$23570#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$23570#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 14->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$23734#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$23734#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 15->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVl3k8lG8XxlWSJRVFyr5liSyJrOfMYDAjhhDlJwmJNoUkRSJLiERIQkVF
EhVJEiozzNiXmRFalCJRUpF6n/cfPt/P3M99n3Od65znuRV9Djv7Lebj42sg
/vz/f5KdpAYfnwqu6uSrr+xsBHpyncIBIRU0KLy0d4JgyXYfqQFxFSTxn/mo
1tUIRS73llWoqqDxPdfsGwQ/3m37YTdNBRNYKf8edDfC6aLJ160uKjiyP+73
AsFWo5d6jbxU0H/68RfbnkboCHzTvDJYBVdPtna9J3gsNOL6sywVnOrSnzbo
a4TyGoUrGwtUMH2hQi6V4JD5lxcv31bBoiC6zyeC/0Wvjjlcp4J6FqPGxf1E
fMll3vJvieenlyYbcxrBumhINkpbFfVNZRmMwUYQHo2VGDdUxdstq+atXxPn
q20U3YGqKEadjGgm2PPu8T+btqviWxePoy1DxHk1q3hD4aro8yy1cGKkEUzm
H3VRYwhWDL5x8k0j8Fn8x3x0XhUvtyuKib5thPNNtx+n5qsiw2xki9E7Qh82
OduiWRU1LxxZcXu0EQLEPl24w1LFlnjf57QPjbDJ5UK8ZL8qjqiIzE0RXMvh
hU1+UsW8cB9hy7FG6Hwf4pq/cgMaPBkQFBgnzpsvFv+7cwOqubxOFJ5uBHeB
RRMGfhvQuWY6fYzgCrFdL4IOb0DXuq4uxrdG2K2+MpxzdgPWFjxblTXTCPWu
x18/KNuA3c0lv11/NUJkhc2toL8b8FFLi89xviboeVJ4pkhQDT1a65afX9QE
Wq/md3LE1VB9T7ph0eIm4L2+J2qjpobrLAulefxNYCIidUyJroYbmfUlx4Wa
4LffmDmnUA3PbRYs3b26CejB5LWrytSwVUg64O6aJrgVmTdFeaSGF/yVJv5K
NIF7Bv36A6Ya+lV077wr1QQ1DTWCad/VUO6wsuNWuSYIk07splirI+1japiw
ZhN869DY/2BMHesM6Zx6qyZIfRc0Z/5NHU3WsE0PU5pAY/bu+Vfz6tglLeCn
bNsE3tL65dwVGli9N1vyMq0JWH4m3/m2aGD+v1M9pc5EPHPUU9vOaGCG6Ur+
xD1N8J/KgfQP6zTx/gedY/wxTfDLsFzpiLImjlg87dWMbYJLdlNVv7U08ZmS
SYvLuSZgHgrpW46auP26mmtVUhNsfRwpvdlfEw8o9PbnZjSBuEPKzahKTSxm
Z7WIFTdBy/Hyx1K0jfhE9kp2OqsJnkfK+B912Yj/1Cu113U0Qe2ZJPG2/zai
wrPJb9e7mqDsvH9Q1JGNuOROsEBTfxOkXZOT/ZC5EYfs2bJqb5vA41VqdNXI
Rpzcuedw3M8m+Cx52MYhTAsFjd/dTlFpBpFHOr1nC7UxZNE8zze+GbLOOu29
VaqNSks156aSmkHB6dh020Nt1NmuuS06tRkMJx6JSjK1kSGrlXArsxl8lCwo
t75pY3i22Cr5G81Qm2pf3Wa5CVWit7kVPW+GwH37cyQ+bMLxue7N03+bwS+5
s3y7hC4eqTj6ZWPMCzDcsPyImZUeGniMCxddfAnWXc/2nUnWx/rCkYw1I69A
mDndzGBvRu8QlyHWNgaQ76jI7583wIBlgU1OL5hQk9dxz5dkiP49W4u8LrSB
Cn3ZnCrFEEUbHfovZ7XBhSUWVh+phki6wCrpvdoG/oGlA/tdDHHKZ2zL7rI2
kNh6btHhfYbYrPGi8Q6jDY52m24/kWKIP5fdjdZYygIt4ZLZFI4hHstrzpmJ
YkHB8VPm1cFGKNgbf9P4HBtMVKiZ3mFGyJPS3HU9lQ29HZJfhE4aIbM/UXr1
ZTYIa1bkecYa4XeFvl7+W2wIGXw7v+iyETa7Tb3RY7LBlmRba19nhE6Lr72t
XtkOX4VXG70V2IoGn2I41661g0X+LV3RvK1ILR7Olw/sgPX99jufDRvjweci
ER/fdULAr+noFlFT/GhQaZu7uxt+bFw1pO1qhkcMzEvOz/TA1tKygqwsc3Ta
ve1Z8a4++CJO9XZrtMBIrQvVj+P64QhFd+PjJYhi6c76wrcHYEuopJiUAKKe
ft0libsDMHf9z2yYIKJ203CB/P0BOLuI0WggipggdeapzuMByKrbs7NCEvEM
ba8JMgbgqX5GYokG4mDJrh7lTwMgLD/7MdMR0XvJuMQ/NQ60bxtkzTgh9t5R
ufhmIwcuRTZWbXdBrEqOCWvU4YAsNzVKzANRwuSDeZQRB3Qz1dam+CA294zr
v6NwwE3EgxIbikjvfi9u68eB6z+f3Dh6BZFCNrioUMCBZKmVlvz5iGt7mcf4
bnAgzNjnTWYBYveHULfBEg7YnhSUe3wT8d7+pN74exyY/Oty+d89xFD5zTWl
9RzYKjCZmNyM+H3owbzkIAcU1Ujqcq8Qr32961Q+zAFh20sv7zGIeISexeA7
DrxONFnSzUaUMb+j5fqZAzGi8ZHrOIgxXZpXzX9xoG2NwuHiL4hvaAKv58S5
8HDLMdGtU0S8Z3NtjCS5kO/2spTxDfGhA3XfwXVcCM4+MDbxE5EWeyrypTwX
JGUe79m8mIRdeTXzGlpc8FZ2dmmQJKH42irjYksu2Fnd/Oa0joRr5KQ9Qilc
0Pf7lfZOmoR3LIuWmdtxYWlJPktAkYTmrNSWhw5cuKM5Ttm2kYR+y/f1Uz24
8EMv1pgLJIxnW0t8P8CFMMeiod1kEh58GzNgdJgLswcazo5akTCiKtklJJgL
v0r+sKbsSEhLDdfrCeXCnGyozzIXEpbqtF/WPs2Fk6YZy1LcSFi0Jc1kUzQX
/rjfLxP3IKHd/CKRDTFcWMj4MivrRcL3L/d/nYvjAp+w/3mDABKaBQQMG6Vw
4YxarG5tIAnPhbAEp1K5sNi6qBcOknCZ5aue/DQuLIkekqcdJeGk2viKkQwu
CMy6PdgTSeS3Xlz1aw4X4leHenw8TUJJkmnkzitcENTL+HvgDAkrtV5/fpLH
BaED7bbh50i4d/tCi/c1Lix/a/M6NY2Etz62Fere4ELKP7+YNRkkdDPnsqg3
ubBCNlYtN5OE1J1W53YWc2Gle0PwzVyCxwvcdt7iQlrokOTGqyT8tbuNRr3N
hVUZf55UXCOh7tWX8Tp3uCDO3ipQd4PQ92hOKqeUCxfH3UpJJSS0FSk1zC/j
wmqhUPqr2yTsO7gwvOMuFy5tyPhhX0bCs+u1TwiUc2GN1f3crnISFqb3Td0m
OHNPO7jfJ2HM9qwt5HuEP6K+vH9dRcLQEUHDdoKz8kSS9j4iYWsNc4RewYW1
tRo6n2pIOOAZrvKK4Ox+m55DT0j4yb78q959Lkj98Dsx85SEzkJCeukE54jH
ykU0kHCPuGr/e4LX6xY1/WskYdBYfodWJRdytzUExL0gYb3I6uX7CZYOGhIV
aSHq/0c2PIfgvIQ/lWlMEsaZei6pJ1imeL27JIuEV2wD8/oIvtq0deFKOwnx
xnu9dwTLvXErUuwiYSN7X+X/Of9viE1JDwnDbNOWDxAsL5MxodVPwtvpc5sa
CC4wvp9eySFhuaalYB7BCjvaDbcOkrA/QyA+iODCkC+8p0MkDNn2JmcTwUoX
Rc5YviFhT/9hnVEin5D7yj1X3xEsxeedSfCLDlO1X6MkPFZadsmEYMmp7RHO
YyQcd97xrIfQK2DlAVbZZ8L/XW869xJcuylWYdkXEnp80a7/SOi93CHv2J6v
RPz+smHeBN9LblsnOUNCpZiDq3SJevGVvT9wZJaEF+6k950j6uvc+ucZ8xcJ
j1qM6HQR9Z8V0vaPWiD0enh2L4Xwh62G9WPOPxJqy+cpHib8k2P733KDxWQ0
XORvkkz4yyw+pXJMgIyeppmW10u4kFp8c6mlEBkn19WvvUr4c/jFU/erImRs
PSW/4jzh3xj+yb9Oq8jo9VZcw/I6F3qUBZzLxMkYvz9AT7SIC6qWcjcFJMj4
OeaUcmsBF1rOONCerCOjzYmDyUr5RP0L/fMlZMj4aFDk4//7J6jh9PRhOTLa
D099syX6a8W/8ssqymRsZ0t8MM/mgmvkyvcpWmQsux9Znp7OheIrakZjm8j4
IGCR4KsLxPyohSSyHhkfDnALvxL9nvf7sO7PLWTMmRL3Wp/EhbdhHZHeQEb6
TruDPWe4YJA11l5LImPzpTEoiuJC3EM+ZQkrMr6/dvGHzykuqM/oMhi2ZEy7
zzZ9Gs6FQ8HpEpudybg6V/Ji3yEuNKTdDkhxIeOZqFtcM2K+iVU8f/LRjYzh
r8wDs/Zz4cHk9J68XWQsdjmRpuzLhfkg5/KlfmQ8Yeq7o8SdCwn+q20GjpPx
zmx8w27gwt/j2c5+EWSUWX1JotqU8FOirNe3SDIehZM+fFuJ+VymFro8howO
i64q79flwtZvptcxmYxqdacWZSpw4dMp33+3Coj1hbpyvn854H3hk7DhdTIy
wiv2v/3Ngb6CQ5JNN8m4YL2mbPsPDjQ2hWu/vkPGnfN2risnOJArlLJL7CHx
vO/TnxMDHKBmPqw+wSCjVBMedqzgQEOxSZNAGxndHjQW8pdywLDmGTuDTUbX
M3rMuzc5oMRjjN7tJqPy2GWzwVwOzCsMrX77moy0k/1+pbEcKCsTOEL9Rsbv
1Pw6BTcOiDbvUJeWtkQ3dZ2V/VMD4NLf9yZS1hI7Lc5evPJ5AHI/u14ZkrdE
D/se5x3vB0BdzGVFkYolysw71T/oHwArL/qM+iZL7Dr4p1SwfgAif9k2GJIs
MZ672kwhcQAmtEzcnfdZItf39L+AdQPQmimTkFhliZ957EtGqv1w56a/7fBD
SyRTTo56yPZDwsMKwS01lqgZpjgWJtEPVr1WiSN1lthwnLiCLu2H+jUHk4xe
WmKc8QqLmtE+qMx4mjw6YIlKIeLMuRt9kJ3ulU76a4mRd0Rc1RT6wDelIPe3
rRWmzFeJt4r0gsyKPS1rx63QTkk8wPdmF0yJiX8N+WKFcyNG/LfzuqBZokmi
66sVFpLFbKczuiBIVnVv8owVHrnoIZsS0wW1Wp8W+P5aYedg7q6Z3V3gTgve
/HmVNTa/qxK7JN0FlxLO5NcZWuP6769r72UR32/J+i/WGVvjU7th3YzUTjBL
ezceZmqNzN37F5861wnvLlsb66E1Vh68uMI3rBP0S4R6btpZY0riRfUYt07o
eJEudMHTGtMT5BzEpDpBdElRyJ4Yazw0uOSReGEHCPx+tn061hrzBo0POed0
wN/J1/pn4q0xo4yflZfeAZPcddMFydZ4LjN4wimmA9or0w+OZFmjcpTbQ/Tt
gHSfM/67S61RxLEu1lazA5Lcr1l/vWuNwyz1FFDugBiHpypRFdaoezZlhizT
AUdNfr/Nf2iNY4HuDodXdMB28eDdQ8+sscPKak/jh3aQaPR2/6/HGr/mf0o6
G9UOK2pOG33pI847kme79lg7CJTnSZ7iWOODkwJbXvm3w2zOQE/ekDVq/dAL
i3Roh/5gutPgmDV+cydfI8u3Q44iUnctWKObvHr1wZdsuLjWS2P8nzW65ypu
GnrChiTRSMGTiym4VjbH6tB9NkT8rn6Zu4yCUl82a03msWFXp44lV4yCBfkh
40dD2SB7Rt7MYwMFbc8ucm3QYkPZMUGl1+oUrHks+zFIhQ1m/tPL9mykoErV
K0tjGTZ40pq6A3QpGHZQXttkORtyJfYFhZtQ8FDojqPcLyzQFKQ7/TGjoKHx
LpHcDyyondtqFA0UnK0rXHlqmAWcYeElCVYUlH6zZepuJwuk7pTnXnagYOYv
xZe11Sy4lXc5WtqJghMtzoys+ywwuhDtf207BVfrjpOzSlngFuKsX+JOQT1p
zZP/rrEg02KW8ciHgsntTVoRSSxQ0Ru+Z+JHwc3P16wKjmPBA+WWzPp9FAyf
O6l9PpoFPYK5e14eoKBjnu8v9eMsEO82/90bRkE5wZh5IX8WFL3YMOxxgoKV
hQGD63xYoF+z8sXrkxR8unnNE3svFjhdfZM2Gk3B3Jz07dI7WDBygRm2/ywF
b6xz/PtoOwuOxFR5fomj4IXPtxJC6SxI2xen/iOJgvv7BeV2UVmgsPPQihMp
FEy/NrcuxoYF9+x3zPy5QMHFYt79rVYssADkRl+kIHfRPYetZBaw9TQa+DMp
qGP7X/grYIGXinhxwmVCv9oR+xPmLJiUnD+/PJeCz7TvNW8zZYHon7Yda65R
MOkof7SXEQvyJh+aZxdS8NPXsAe5W4j73Zt8ZZkbFPR/JXLo92YW1HXHCxUU
E/u1b70Zoc8C+5dHvirfJur9+piznB4LBms8ektKiXxf6R96r8OCoFLyk43l
FMzzHZ9q28SCuasbC+9VUNAiaXV3vzYLktLWxG+uouC1FYqiSwlef3bhQPVD
CnJeJV520WLBndAPzqY1FORPbgp8uZEFJgHtW5/VUtBMzypqJ8GMnTVylk8p
mJ9yhrWKYPdthfyvnlGQfHx62ydNFoxB0mdqI8HNQr/fERyuf6yD3UzBWiq+
4iPWC6p6PnJ+RcEXI8L3geCAdUAtZRD7rWNK5vx/f1GloSVtFPxFEpNZRcSj
uXjpUU82BV8pN9beIDhp9uPShx0U/JdQP+FGxP/5MzNHtJuC2aZjpRuIfGnD
d7X9eykYt1Tx22pCj7LutOf1/US/VFAfy+myYHnLMde1XApqLrOZpxD6Hahz
+3R4kILtXT/vJxP6siqMT7UMUTDntUX/V0L/TTdlxBTfUDB6esH3CFGf1Jx/
N068o+DxAUnXFUT9vqa83do1SsGjnkGFjK0soMe8aNMco2CAzWvLIhMWiAWd
n+FNUFAyouBoqQULju4+lGDwlYLVrg+/8ZAFXdudZFKmKajWcKhCw5IFl8zW
WlnMUtB8v1ubjC0LZnTn+rN+UbDD1FaukfCnq+rroK9zFFzywi8zdhsLJFdc
zyj4R0FZ5VKuN+HvsMXn1H4vssGJ81l5EW4s6J8NeOLEb4Obuw2C7nuwIHt4
07vFQjY4piImGeZN1P9+rb6fuA12js/N7jzMgoibV18+XWODS3brHPM8xgJe
TvROybU2SOdTbY0g+jEvhhLzStoGhX9wf4gS/Srv0tWpoWqDLU+Vz6dcZEG0
7UO/GDUbvFiz2iT0MtF/Ztm/uRo2KKnXnXEij+hfVS/F5E02aNZkozNQTMyD
n5+OTBrZYGbM450TdSyIHW/jtzGxIb5X+x/UNLJgdPhe9jUzG5Ry7E4obGFB
cUtoA51kg0InxuNaelignrtoVRXVBpnKdI2gSRZom6+7d/w/G/yXdLJ2YQMb
KpX3zy/2tkHLO9cfbtZhw1bhxzapPjZ4pc24NsmIDeR+95Eb+4j8dCMartiy
wS04W6wr2AbvLO/6YHuADadvrg3ROmeDlGHxVy2P2bAkeV9DdYINBtUzKkSa
2ZBwtHq55XkbnPopqXaYTcx72HHTI80G312wyL38jg3FnKy+c7k2aDdh23Bw
ZTu0i0oavym3QT3ZKCP1g+3gMuMXd+C+Df7QpZKPnGgHLvdh588qG/Sf7fYc
iGuH9yWugSse26BY2ZdCwWvt8IuUecW0yQYP72pIH+tqB4WwNX8z+23QpEUk
11GhA4KHxJuofLbo1ZhzdIB4v7586fn0zmJb/PjugGkQ8f6VuVdcLbzUFrkP
GRdEbndAS5RJGVPIFj1fHmKH1HSAgqJPJnW1LYavO0/91N8BHXvv76NusMWU
ON3jO9Z1gu4nx+VUe1vcXbgsRKe4Eya/J7vaZdviPH3cY/RtFwwOFLpdzbVF
pxnZXr0vXcB4+mjHdJ4tFlR/4cX97IIb8SMeOYW26BCYyG+1vBs8pA28Pt2x
xeI1VcISht3QTOb5Jz61RVflQf2JpG7ITdcIZ7y1xT73z/pntvYARedlrp22
HZbcVPjRf6UX3AVsXTp07PDu9I2EyZJeCHzNEN2hb4dWc4/mlzzohdTzrGhf
IzvMfjXVpdnWC70fe/yjSHYoy1d1bu+fXvAteKf/0NUO65x1RHZ59kGM2KJW
hdN2uJ/97YX+un64NBYTWxJth3LsZ0adKv1Q/IzfYtNZO1xff1pmv24/MA8K
3jdNsEP/HxbpsTb9IMZcedntoh2GHWoI8Avth4IYub3JxXZYPBPbf6u9H55+
N53/ybZDz8J/0wKnBqCgrdpne6cdXui+H9l2bgBibm5mlnfbIfW4wdX4tAGw
3bExx2+AWG9ZIT50fQC6a9cbdb+xwz6z4pllzAH4dOb30fIZO9y7qfyp7hoO
tO0M5Qr9tEOexBIFkOVA+eZpkt/v//9u/h43cCBkdGyVzF87TFLyXyq3lQP/
bAfKE5dRcYf/vXaTXRyQWFX92Xc9Ff/2kO4O53Pg15i+c4MMFT/uj7u1uoQD
3Oflj6Xlqfjf18bOrfc4UHCsOKFLmYrT87qKbs84sLE/cwNqU/Fe4MLAwBAH
SPkhPtJIxUUWEb3D67lwUEuf2+lHxeqRZ5t9zhH3lZ/r53YHUNHXqjB5JXH/
imxcsn4ykIoLnWh+O4NLfN/1eggfoeJS1e33C4n7YHFsOIccQcW9z6e3lDzm
wshg/UBVKhWPJEWZLBvjwseSkl+kdCqGeWoEnfzChcmjaVIdGVT8gDOKg9+4
sCDo4z6RTUWN+TjtvQvEfXLL0gGV61Rcbv9SNEGMBy4ptP7MaioGSipH6hjy
YJe7wU9l4uX1dqgp8KAJD3yUZddW1lHRumhMNNuCB8GPJ93Yz6n4rdvtVBWF
B6mj6X0CbVR8+vub0xI3HmRWRMxeYlPxRMXIlhIPHuSd3Cup3ElFr76zo0b/
8aBUbIsb9FGxS+NslbwvD1rMB3qPj1DRUCBjl1AwD9oFn/9Y+o6KW7d5TK4O
4UFf922JS6NUvHNcwFfkOA9G9590rfhMxRnd8iXPI3kwYeAbavGFijyZ0M1R
UTyY+Wef2faVii7FT5w0Y3iwOEuud2yGiiL23n428TwQ2rPsR9hPKu56keT9
OJEHq7Sm1iydIziL5SqVzAP5xucuiv+oGPfbwORqGg/MJn17PIRoGMSrNm3K
5sGaJzZFdSI0DAzMTjidS5wfr3lEfgUNb2+1366RR+SrOCUyKk5Dbll+0LZr
PAiZ7OLYSNCwefjH05cFPLB/8rDkzloavgtKv6xTxIMFl5OWR2RoWH5b4HP7
DSJfRS+xbjkauo5l71tWzIPySRzeokhDpdyR0E0lPDj3RPlutjINM5earLW+
xQOvBIGT86o0VA9e5EC7zQND10+2Xuo09FTOkCHd4cEKpTbJ55o0vOVDi9tQ
yoP6J+mV53RomFBUsKmhjAdZCSHRn/RoKKk7eyzkLg8Oue5wsDegYaXvO0+p
ch5QlExk7hnS8PW55vFSguW+ynwWM6bhqtc/lHTu8WD2yb/qEFMattzt5i8i
mJ3wNq7fnIaxUJvBX8GDYtcX202Qhs8Hlna5ERyldEvxKpmG88/EG7MJdv+a
9PWfFQ3vm5r7MwnWrTv41MeGiP/im4ZxggUT6edf2NEwUtiz5w/BI66bPdTt
aZj6WfD6AsE1SpJq5x1oKHrCSmeS4LSvv2a+0GkY/ifwJJvggDpeI307Dbc9
GUjMJxgT69OqXGm47M8nTy+CpdwKvSTdCX2Xzs+KEjylFKt1YicNZWQDdt4l
8mn56j/H86ThsaSURDOCC+rsWix20/BGxqtzTwg9whO1sgr30FAr6qiLJsF0
t5W+/L40PJfxeSaB0FNd+ZvePn8a6q1NDuwn9F401fOPEUDUg15VLUEwt66a
pRVE+Otc3ZAlUZ/KxNwrFw7S8MffJW/33Pl//3kbuR6loUtX/bmDRL1NpshL
a0KIeGs/a+0i/CD+VLV7/XEalv59UbOV8Euj2/ihkZOEv6rnk5qu8yBXmW1m
eZqGFx6v6DtC+O3oVIVwcTQNP+qRV60o5IFSUlhxUBwNrxac3CWVz4M5N48Q
djwNp5VNguMIP3cpm5H1kmg4bpQU9Zbw+9mni4ZmU2lYu5F+4cBlHngmvS/1
SKdhYvbpzJxMHhjseHWiLoOG3+/du/oogwfvp5IlYrKJ+v1KetpwgQdWKlLb
RItoqFZsfkqC6McHX14o+t6goVTHlxvsWB4oVx+brS2mYdvonajw//cvtf1a
QCnRPyl6O/JP8aDh8LlvTQ8Iv7+padM/RvjF2ODV+moaUiOkWoOP8ODa4rdX
gh8TzwfTUwsP8uB0prm1fD0NTbfoHOjexwPzJzOXI17R8LPcVFP0Lh6UxRYd
6GTQULNupxrFnQcyDnSSehsN/TX37/njwoM/I6WfeztoqLx5h4+pAw9qBfaa
63Fp2CnQ0LsEiX5z7nz7cYKGiEtDGxQIv0tHVVt8pWHMjextl2R4IDGqlZw5
TcPf9f4KHlLEfDqesMVyloa89uynD1cS9b4KCfn/aJh7NG/NE2I+b/p0V9tV
3B7NrH3UfvVxIb9y1+KyNfa4sTm5fLCTC6KRQv2L19rjhaGE7ZVtXJhY4Rdd
IW2Pv/J5/3QbuXDHQKZbRNUek3ZvVogs44JadFJ4o5E9vguYCKad5kKd6c2l
9ib2aHf8i/ez41yg/3x2sdfMHl/Oiv9UDOZC+KEfZWMkezR+r7ihai8XWjy9
36ywt8fb9uzmZbZcCDA2pO7ytsfw+Rull0S5cOvbG+mZBGL/GI+8NSkcMCv/
c+vUeXtcffvkzfRYDnTsX2u4LJXI57zQFF8k8X4dsaevz7DHN/vONz8K5IBt
e3UsXiXOey7NiLHhwFhpypfk+8T+n1fpVv8dAA0/42eqXHuUZnh+C/AdgFQl
h7mzg/Z4XtuYuWbXAHwb9tnydsgeKRrhi2qcBqBuZ3Jp/jt7JAkYf3tvMQB0
+vDltV/s8apBbA5PagDCTeOOCPFtQ3TRGXVq7YeXYp2KX1S3YacGvUBsYz/4
1gfEPgjehvEx4Yo7eL1QX9DjOy3hgAtn9NvOfeuCYXvF3WFSDqh2znFh38cu
4Pt90GN+vQPaqoxrOwx2AclpmcNSBQdsH90ooPmyC5oXmRit03RA2pmqIaXc
Lmj1uSZEsnBAhy281M2WXTCgElie5u+A/IbPbSNyO+F3x6NbEvsd8ED+BWnt
tE5Yf2rJ9dwgB9Qcrr3wMa4TPHvzLt844oAeg4dTjgV3wnBce3RNhAMeC6AZ
fbLthA8fDLaPpDrg9aG45W6/O+D7rX8/daodcPGfqbnz3h3w3o1SkPjYAScn
ass/7eiAPv4U23dPiPOibng6OnZArff6nKwGBxxw7mfrW3RAtNQWkwUGsd7w
ucoumQ5YkRAYyRx0wAr5G3dDHrSD5r5ePr/FjijBSL8zXcMGGQmZ2/X8jmgR
0Lmz6zYbVjT5OEktc8SR955RL3LZMC03Vdgq4oh9Qh6h7yLZUNMnbKkv4Yhh
QtNWfGQ2UIir7D81R0xc++sbu50FPqqlQrnbHNFvk0qK/VwbhL/wCtxAd8RT
O1U3XZxog1Q/8dZKZ0fM7xcOmRpqgyc3TyS37nBEkuoZl59NbbBmg+3KhT1E
fBUr9fUutMHLDaNrvMMc8WWGx70gzTYYfJkdOhHuiNNShy/ayLXBN3/7vvCT
jmh9xKfSXLwN5EuqLqdHO2LFj5EVJ+ZaIVwtZn1TkiPeXdDj12lrBQ11eYUN
1xzxrxhDpzykFbClK7qy0BHtF5/vMQ5sBbeAc28sbjjihLWKw5vdrRBz60vR
jtuO6KHGU42ltQJXvU41scoRR2cc9GRUWiFZw2PjxCtHzGJ+X1bGZUIRY3ly
ONMRtbfOfeHrYkLN/oYJfpYjbo7oxGMMJozeViuX7XJEJm/qYkUNEyw0Z3Ud
Bx2RUv2xMi2bCVOaGYaVU46oPrxTb+E/JvS3ofXq744YuWCmU7KDCfWHJreH
/HDEFmOuwQEnJiRX2gUbzjmiWoXVHRtrJqyR5XN7vYiOCis7YiibmCA46fZa
dAkdt2WfWdKqzoT5+ru+Fvx03BI/rhekzIS33ruOXROgI7/Jx89/pZhw/8aj
tD0idGw8FCIetpQJN0JFpS4up2NDwbA1l48J2RTfa42idNSN5mPt/MOA6DGx
cuVVxP7jezTuf2dAyOOALS5idPzcoqge/5UB+5Ke1cWK03HoZybrxDgDHLQO
to6uoWPel5zdD98xgLzQ5CwpSUdXgduhf4cZsIW9nktZS0fKmqA430EGyBxp
GStZR8fcKoHR+F4GfK5SFgiUo6PZyYuftBkMGIqNSMmVp+PNGh3xPS8Z0Ona
uaZVgY6b+pb1329iQM3P08paynTc7f7zWWk9A8paeu94qhDrtZfHuNQx4FqO
ln6KKh0Dj1oYrq9lwDlTLk6q0THiyLqK+YcMiFiu1yKnQccOM6fVax8w4ODr
eEdHTTrW5Tdfd6hkgHf5UF/URjo+kzfVLapggEvUFq8KLTp62UXGi91jgC09
eXREm47yNx3D8+4ywEzx3QExHTom1kV2kssYoPvNeIakS9RrXese/lIGKDel
nTyqR8eDVot/jdxmgOSlj4uv69Nx5tUnn4FbDBD2s0jq3kxHI2274M8lDPi7
JVOMfwtx/sLHaUmCvwlMZBsY0lGsKaXqv2IGfOgnK/gZ0bFSYHFc/U0GcG7l
lGRupaOG8/ItxgS3nZja9NKYjnObQi6ybjCggWrzaNaEjqUbFh04SfAD6Xxz
NTM6Pm+MSCMTXDIx07zDnI4vkm+xlQjOfUqzT7Ag4lnh/EOa4NTUou4aoGNB
h0W3NsExu3/v/IR0jPvP0Mid4FBd+tt1ZDoesuCbyiU4YFHJfqolHbl/9rb9
INiza2EqwoqOO5Q0rgQQ8V1RrD1505qOwQJhRlMEc4+ECXRQ6Fhr23Yilchv
fYN++pwNoad422ZLIn+PlV+lVe0If6dIGK0g9Mr2Ki12pNJR6q2t61eCB+7u
04ugEetNBLw/EPq62Y9Q2rfRMezKtTMSRD0yr+R1/nYg4p99YrqNqFfPZ3fC
LnR8OvdWPbecAdsTO4NPOBP1ut759uh9BlwcSPlzfTsdJXM5zn8JP3SpUePZ
LoTfhg+Y5RN+ob9szFPeQUfjuYeN62sYcEEiSs3BnY6nlMoW/3zMALavaWW4
B5GfRfnij08YsG3Jg1esXXRkzLolLmpgABVvfjvuTUfOZH2+NOH3xAt7ThXt
oaOFSU5bWisDWoZkBVk+dFzdHG0jxWaAzaksWSU/Oh7e+ivwv24GWNXG27bt
p2OGhqjbkyEGnBWy6p4NJPw42ct5+oYBje58XooH6Dhoeteo8z0DSD/Dj4Ud
IvpZSrBFg+hXC4PAfIVjdCza+V396i8GbC23nwmJpCPoN+/wlWTC8QXBqGun
iHkwnvDMaz0THtm/EGKepmNXo5f0PjkmbBk3l5c/Q8fsY/U/CjYwQV9dh8qI
o+Mt7y6lB0ZM0C4SK5C9QMd1WUeYOp5MOB3IH78njY7Dz525u/YwoUP/58Gb
6XQcOP1m7JI/E0KaBk21L9FRPVpOQjuYCbXvS/rNcoj5Etiq8/UcEyhqFis9
r9NxdsvlK+ceMMGrLPB0bjUdz9lr1O6VbIXUR02ea0foGNXSFvn2Yyu0RFXl
Wr+h4zELsTHhyVZYbHd94NhbOsru42/Sm2mFMF6MS8d7oh+HTy6L4GsDLz6y
feInwv/dzvFfpdpgE7XBdP4boZ9QnY2VXRuwXtetH17qhG+uuc5YFreBQEmZ
u+gyJ3xy5d2616VtgEfyskwFnfB7g23poftt8GBxpHi2sBM6Z8k6RdS1QZ6a
qbDTSidM6rnkt6mrDQ4EP/7dKOWEYa97sobn22D50kcDxRudUP2Q+wMLGxZ0
F1qY/9Jywt0Sdhck7VmQa/Gq0G6TExGP2cIInQXq4QOBE7pO+JM5PLttJwus
xuf+6Bk6YQbIK50/wIJTnaD4FJ2w7UyM961U4vdDLXEryE74XFXQ+OFFFiwX
cfq829IJZQeCjB5lEftb+VQtpjihsXuscGY+Cx5Vx1rb0pxQxH2O2XKXBZNX
Gfu7XZ0wbvRvnRyTBQ9NnNkqO5yw/3JvwwkWCyL7ufph7k5YvM7/FLODBcJi
E/NSu5xw7mRQ3LZ+FmyIXZHq5e2EodsELw6+Y4FX4PbKT4FOKF6VetNgngWq
ywYlTQ84oVfc0cU/F1gwcd33ZPJBJ8Sx8TsVfGyIeB1qpXPECZfR3SyFBdiQ
Rc/uCwl1whxj4e0eq9jw3xcF05dhThipdIU1IM4GlaTb19aGO2F0pM5/dAk2
VDbVBtRGOKFByDoF9fVsOOFtyRKJdELhJGZcggwbcKFV779TTmizyNDvjRwb
BHNdsspPOyFfVmK/viIb2g1fz/2LckIS//cfkcps+B/zyL7o
                    "]]}, Annotation[#, "Charting`Private`Tag$23898#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$23898#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 16->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVl3k8lG8XxlWSJRVFyr5liSyJrOfMYDAjhhDlJwmJNoUkRSJLiERIQkVF
EhVJEiozzNiXmRFalCJRUpF6n/cfPt/P3M99n3Od65znuRV9Djv7Lebj42sg
/vz/f5KdpAYfnwqu6uSrr+xsBHpyncIBIRU0KLy0d4JgyXYfqQFxFSTxn/mo
1tUIRS73llWoqqDxPdfsGwQ/3m37YTdNBRNYKf8edDfC6aLJ160uKjiyP+73
AsFWo5d6jbxU0H/68RfbnkboCHzTvDJYBVdPtna9J3gsNOL6sywVnOrSnzbo
a4TyGoUrGwtUMH2hQi6V4JD5lxcv31bBoiC6zyeC/0Wvjjlcp4J6FqPGxf1E
fMll3vJvieenlyYbcxrBumhINkpbFfVNZRmMwUYQHo2VGDdUxdstq+atXxPn
q20U3YGqKEadjGgm2PPu8T+btqviWxePoy1DxHk1q3hD4aro8yy1cGKkEUzm
H3VRYwhWDL5x8k0j8Fn8x3x0XhUvtyuKib5thPNNtx+n5qsiw2xki9E7Qh82
OduiWRU1LxxZcXu0EQLEPl24w1LFlnjf57QPjbDJ5UK8ZL8qjqiIzE0RXMvh
hU1+UsW8cB9hy7FG6Hwf4pq/cgMaPBkQFBgnzpsvFv+7cwOqubxOFJ5uBHeB
RRMGfhvQuWY6fYzgCrFdL4IOb0DXuq4uxrdG2K2+MpxzdgPWFjxblTXTCPWu
x18/KNuA3c0lv11/NUJkhc2toL8b8FFLi89xviboeVJ4pkhQDT1a65afX9QE
Wq/md3LE1VB9T7ph0eIm4L2+J2qjpobrLAulefxNYCIidUyJroYbmfUlx4Wa
4LffmDmnUA3PbRYs3b26CejB5LWrytSwVUg64O6aJrgVmTdFeaSGF/yVJv5K
NIF7Bv36A6Ya+lV077wr1QQ1DTWCad/VUO6wsuNWuSYIk07splirI+1japiw
ZhN869DY/2BMHesM6Zx6qyZIfRc0Z/5NHU3WsE0PU5pAY/bu+Vfz6tglLeCn
bNsE3tL65dwVGli9N1vyMq0JWH4m3/m2aGD+v1M9pc5EPHPUU9vOaGCG6Ur+
xD1N8J/KgfQP6zTx/gedY/wxTfDLsFzpiLImjlg87dWMbYJLdlNVv7U08ZmS
SYvLuSZgHgrpW46auP26mmtVUhNsfRwpvdlfEw8o9PbnZjSBuEPKzahKTSxm
Z7WIFTdBy/Hyx1K0jfhE9kp2OqsJnkfK+B912Yj/1Cu113U0Qe2ZJPG2/zai
wrPJb9e7mqDsvH9Q1JGNuOROsEBTfxOkXZOT/ZC5EYfs2bJqb5vA41VqdNXI
Rpzcuedw3M8m+Cx52MYhTAsFjd/dTlFpBpFHOr1nC7UxZNE8zze+GbLOOu29
VaqNSks156aSmkHB6dh020Nt1NmuuS06tRkMJx6JSjK1kSGrlXArsxl8lCwo
t75pY3i22Cr5G81Qm2pf3Wa5CVWit7kVPW+GwH37cyQ+bMLxue7N03+bwS+5
s3y7hC4eqTj6ZWPMCzDcsPyImZUeGniMCxddfAnWXc/2nUnWx/rCkYw1I69A
mDndzGBvRu8QlyHWNgaQ76jI7583wIBlgU1OL5hQk9dxz5dkiP49W4u8LrSB
Cn3ZnCrFEEUbHfovZ7XBhSUWVh+phki6wCrpvdoG/oGlA/tdDHHKZ2zL7rI2
kNh6btHhfYbYrPGi8Q6jDY52m24/kWKIP5fdjdZYygIt4ZLZFI4hHstrzpmJ
YkHB8VPm1cFGKNgbf9P4HBtMVKiZ3mFGyJPS3HU9lQ29HZJfhE4aIbM/UXr1
ZTYIa1bkecYa4XeFvl7+W2wIGXw7v+iyETa7Tb3RY7LBlmRba19nhE6Lr72t
XtkOX4VXG70V2IoGn2I41661g0X+LV3RvK1ILR7Olw/sgPX99jufDRvjweci
ER/fdULAr+noFlFT/GhQaZu7uxt+bFw1pO1qhkcMzEvOz/TA1tKygqwsc3Ta
ve1Z8a4++CJO9XZrtMBIrQvVj+P64QhFd+PjJYhi6c76wrcHYEuopJiUAKKe
ft0libsDMHf9z2yYIKJ203CB/P0BOLuI0WggipggdeapzuMByKrbs7NCEvEM
ba8JMgbgqX5GYokG4mDJrh7lTwMgLD/7MdMR0XvJuMQ/NQ60bxtkzTgh9t5R
ufhmIwcuRTZWbXdBrEqOCWvU4YAsNzVKzANRwuSDeZQRB3Qz1dam+CA294zr
v6NwwE3EgxIbikjvfi9u68eB6z+f3Dh6BZFCNrioUMCBZKmVlvz5iGt7mcf4
bnAgzNjnTWYBYveHULfBEg7YnhSUe3wT8d7+pN74exyY/Oty+d89xFD5zTWl
9RzYKjCZmNyM+H3owbzkIAcU1Ujqcq8Qr32961Q+zAFh20sv7zGIeISexeA7
DrxONFnSzUaUMb+j5fqZAzGi8ZHrOIgxXZpXzX9xoG2NwuHiL4hvaAKv58S5
8HDLMdGtU0S8Z3NtjCS5kO/2spTxDfGhA3XfwXVcCM4+MDbxE5EWeyrypTwX
JGUe79m8mIRdeTXzGlpc8FZ2dmmQJKH42irjYksu2Fnd/Oa0joRr5KQ9Qilc
0Pf7lfZOmoR3LIuWmdtxYWlJPktAkYTmrNSWhw5cuKM5Ttm2kYR+y/f1Uz24
8EMv1pgLJIxnW0t8P8CFMMeiod1kEh58GzNgdJgLswcazo5akTCiKtklJJgL
v0r+sKbsSEhLDdfrCeXCnGyozzIXEpbqtF/WPs2Fk6YZy1LcSFi0Jc1kUzQX
/rjfLxP3IKHd/CKRDTFcWMj4MivrRcL3L/d/nYvjAp+w/3mDABKaBQQMG6Vw
4YxarG5tIAnPhbAEp1K5sNi6qBcOknCZ5aue/DQuLIkekqcdJeGk2viKkQwu
CMy6PdgTSeS3Xlz1aw4X4leHenw8TUJJkmnkzitcENTL+HvgDAkrtV5/fpLH
BaED7bbh50i4d/tCi/c1Lix/a/M6NY2Etz62Fere4ELKP7+YNRkkdDPnsqg3
ubBCNlYtN5OE1J1W53YWc2Gle0PwzVyCxwvcdt7iQlrokOTGqyT8tbuNRr3N
hVUZf55UXCOh7tWX8Tp3uCDO3ipQd4PQ92hOKqeUCxfH3UpJJSS0FSk1zC/j
wmqhUPqr2yTsO7gwvOMuFy5tyPhhX0bCs+u1TwiUc2GN1f3crnISFqb3Td0m
OHNPO7jfJ2HM9qwt5HuEP6K+vH9dRcLQEUHDdoKz8kSS9j4iYWsNc4RewYW1
tRo6n2pIOOAZrvKK4Ox+m55DT0j4yb78q959Lkj98Dsx85SEzkJCeukE54jH
ykU0kHCPuGr/e4LX6xY1/WskYdBYfodWJRdytzUExL0gYb3I6uX7CZYOGhIV
aSHq/0c2PIfgvIQ/lWlMEsaZei6pJ1imeL27JIuEV2wD8/oIvtq0deFKOwnx
xnu9dwTLvXErUuwiYSN7X+X/Of9viE1JDwnDbNOWDxAsL5MxodVPwtvpc5sa
CC4wvp9eySFhuaalYB7BCjvaDbcOkrA/QyA+iODCkC+8p0MkDNn2JmcTwUoX
Rc5YviFhT/9hnVEin5D7yj1X3xEsxeedSfCLDlO1X6MkPFZadsmEYMmp7RHO
YyQcd97xrIfQK2DlAVbZZ8L/XW869xJcuylWYdkXEnp80a7/SOi93CHv2J6v
RPz+smHeBN9LblsnOUNCpZiDq3SJevGVvT9wZJaEF+6k950j6uvc+ucZ8xcJ
j1qM6HQR9Z8V0vaPWiD0enh2L4Xwh62G9WPOPxJqy+cpHib8k2P733KDxWQ0
XORvkkz4yyw+pXJMgIyeppmW10u4kFp8c6mlEBkn19WvvUr4c/jFU/erImRs
PSW/4jzh3xj+yb9Oq8jo9VZcw/I6F3qUBZzLxMkYvz9AT7SIC6qWcjcFJMj4
OeaUcmsBF1rOONCerCOjzYmDyUr5RP0L/fMlZMj4aFDk4//7J6jh9PRhOTLa
D099syX6a8W/8ssqymRsZ0t8MM/mgmvkyvcpWmQsux9Znp7OheIrakZjm8j4
IGCR4KsLxPyohSSyHhkfDnALvxL9nvf7sO7PLWTMmRL3Wp/EhbdhHZHeQEb6
TruDPWe4YJA11l5LImPzpTEoiuJC3EM+ZQkrMr6/dvGHzykuqM/oMhi2ZEy7
zzZ9Gs6FQ8HpEpudybg6V/Ji3yEuNKTdDkhxIeOZqFtcM2K+iVU8f/LRjYzh
r8wDs/Zz4cHk9J68XWQsdjmRpuzLhfkg5/KlfmQ8Yeq7o8SdCwn+q20GjpPx
zmx8w27gwt/j2c5+EWSUWX1JotqU8FOirNe3SDIehZM+fFuJ+VymFro8howO
i64q79flwtZvptcxmYxqdacWZSpw4dMp33+3Coj1hbpyvn854H3hk7DhdTIy
wiv2v/3Ngb6CQ5JNN8m4YL2mbPsPDjQ2hWu/vkPGnfN2risnOJArlLJL7CHx
vO/TnxMDHKBmPqw+wSCjVBMedqzgQEOxSZNAGxndHjQW8pdywLDmGTuDTUbX
M3rMuzc5oMRjjN7tJqPy2GWzwVwOzCsMrX77moy0k/1+pbEcKCsTOEL9Rsbv
1Pw6BTcOiDbvUJeWtkQ3dZ2V/VMD4NLf9yZS1hI7Lc5evPJ5AHI/u14ZkrdE
D/se5x3vB0BdzGVFkYolysw71T/oHwArL/qM+iZL7Dr4p1SwfgAif9k2GJIs
MZ672kwhcQAmtEzcnfdZItf39L+AdQPQmimTkFhliZ957EtGqv1w56a/7fBD
SyRTTo56yPZDwsMKwS01lqgZpjgWJtEPVr1WiSN1lthwnLiCLu2H+jUHk4xe
WmKc8QqLmtE+qMx4mjw6YIlKIeLMuRt9kJ3ulU76a4mRd0Rc1RT6wDelIPe3
rRWmzFeJt4r0gsyKPS1rx63QTkk8wPdmF0yJiX8N+WKFcyNG/LfzuqBZokmi
66sVFpLFbKczuiBIVnVv8owVHrnoIZsS0wW1Wp8W+P5aYedg7q6Z3V3gTgve
/HmVNTa/qxK7JN0FlxLO5NcZWuP6769r72UR32/J+i/WGVvjU7th3YzUTjBL
ezceZmqNzN37F5861wnvLlsb66E1Vh68uMI3rBP0S4R6btpZY0riRfUYt07o
eJEudMHTGtMT5BzEpDpBdElRyJ4Yazw0uOSReGEHCPx+tn061hrzBo0POed0
wN/J1/pn4q0xo4yflZfeAZPcddMFydZ4LjN4wimmA9or0w+OZFmjcpTbQ/Tt
gHSfM/67S61RxLEu1lazA5Lcr1l/vWuNwyz1FFDugBiHpypRFdaoezZlhizT
AUdNfr/Nf2iNY4HuDodXdMB28eDdQ8+sscPKak/jh3aQaPR2/6/HGr/mf0o6
G9UOK2pOG33pI847kme79lg7CJTnSZ7iWOODkwJbXvm3w2zOQE/ekDVq/dAL
i3Roh/5gutPgmDV+cydfI8u3Q44iUnctWKObvHr1wZdsuLjWS2P8nzW65ypu
GnrChiTRSMGTiym4VjbH6tB9NkT8rn6Zu4yCUl82a03msWFXp44lV4yCBfkh
40dD2SB7Rt7MYwMFbc8ucm3QYkPZMUGl1+oUrHks+zFIhQ1m/tPL9mykoErV
K0tjGTZ40pq6A3QpGHZQXttkORtyJfYFhZtQ8FDojqPcLyzQFKQ7/TGjoKHx
LpHcDyyondtqFA0UnK0rXHlqmAWcYeElCVYUlH6zZepuJwuk7pTnXnagYOYv
xZe11Sy4lXc5WtqJghMtzoys+ywwuhDtf207BVfrjpOzSlngFuKsX+JOQT1p
zZP/rrEg02KW8ciHgsntTVoRSSxQ0Ru+Z+JHwc3P16wKjmPBA+WWzPp9FAyf
O6l9PpoFPYK5e14eoKBjnu8v9eMsEO82/90bRkE5wZh5IX8WFL3YMOxxgoKV
hQGD63xYoF+z8sXrkxR8unnNE3svFjhdfZM2Gk3B3Jz07dI7WDBygRm2/ywF
b6xz/PtoOwuOxFR5fomj4IXPtxJC6SxI2xen/iOJgvv7BeV2UVmgsPPQihMp
FEy/NrcuxoYF9+x3zPy5QMHFYt79rVYssADkRl+kIHfRPYetZBaw9TQa+DMp
qGP7X/grYIGXinhxwmVCv9oR+xPmLJiUnD+/PJeCz7TvNW8zZYHon7Yda65R
MOkof7SXEQvyJh+aZxdS8NPXsAe5W4j73Zt8ZZkbFPR/JXLo92YW1HXHCxUU
E/u1b70Zoc8C+5dHvirfJur9+piznB4LBms8ektKiXxf6R96r8OCoFLyk43l
FMzzHZ9q28SCuasbC+9VUNAiaXV3vzYLktLWxG+uouC1FYqiSwlef3bhQPVD
CnJeJV520WLBndAPzqY1FORPbgp8uZEFJgHtW5/VUtBMzypqJ8GMnTVylk8p
mJ9yhrWKYPdthfyvnlGQfHx62ydNFoxB0mdqI8HNQr/fERyuf6yD3UzBWiq+
4iPWC6p6PnJ+RcEXI8L3geCAdUAtZRD7rWNK5vx/f1GloSVtFPxFEpNZRcSj
uXjpUU82BV8pN9beIDhp9uPShx0U/JdQP+FGxP/5MzNHtJuC2aZjpRuIfGnD
d7X9eykYt1Tx22pCj7LutOf1/US/VFAfy+myYHnLMde1XApqLrOZpxD6Hahz
+3R4kILtXT/vJxP6siqMT7UMUTDntUX/V0L/TTdlxBTfUDB6esH3CFGf1Jx/
N068o+DxAUnXFUT9vqa83do1SsGjnkGFjK0soMe8aNMco2CAzWvLIhMWiAWd
n+FNUFAyouBoqQULju4+lGDwlYLVrg+/8ZAFXdudZFKmKajWcKhCw5IFl8zW
WlnMUtB8v1ubjC0LZnTn+rN+UbDD1FaukfCnq+rroK9zFFzywi8zdhsLJFdc
zyj4R0FZ5VKuN+HvsMXn1H4vssGJ81l5EW4s6J8NeOLEb4Obuw2C7nuwIHt4
07vFQjY4piImGeZN1P9+rb6fuA12js/N7jzMgoibV18+XWODS3brHPM8xgJe
TvROybU2SOdTbY0g+jEvhhLzStoGhX9wf4gS/Srv0tWpoWqDLU+Vz6dcZEG0
7UO/GDUbvFiz2iT0MtF/Ztm/uRo2KKnXnXEij+hfVS/F5E02aNZkozNQTMyD
n5+OTBrZYGbM450TdSyIHW/jtzGxIb5X+x/UNLJgdPhe9jUzG5Ry7E4obGFB
cUtoA51kg0InxuNaelignrtoVRXVBpnKdI2gSRZom6+7d/w/G/yXdLJ2YQMb
KpX3zy/2tkHLO9cfbtZhw1bhxzapPjZ4pc24NsmIDeR+95Eb+4j8dCMartiy
wS04W6wr2AbvLO/6YHuADadvrg3ROmeDlGHxVy2P2bAkeV9DdYINBtUzKkSa
2ZBwtHq55XkbnPopqXaYTcx72HHTI80G312wyL38jg3FnKy+c7k2aDdh23Bw
ZTu0i0oavym3QT3ZKCP1g+3gMuMXd+C+Df7QpZKPnGgHLvdh588qG/Sf7fYc
iGuH9yWugSse26BY2ZdCwWvt8IuUecW0yQYP72pIH+tqB4WwNX8z+23QpEUk
11GhA4KHxJuofLbo1ZhzdIB4v7586fn0zmJb/PjugGkQ8f6VuVdcLbzUFrkP
GRdEbndAS5RJGVPIFj1fHmKH1HSAgqJPJnW1LYavO0/91N8BHXvv76NusMWU
ON3jO9Z1gu4nx+VUe1vcXbgsRKe4Eya/J7vaZdviPH3cY/RtFwwOFLpdzbVF
pxnZXr0vXcB4+mjHdJ4tFlR/4cX97IIb8SMeOYW26BCYyG+1vBs8pA28Pt2x
xeI1VcISht3QTOb5Jz61RVflQf2JpG7ITdcIZ7y1xT73z/pntvYARedlrp22
HZbcVPjRf6UX3AVsXTp07PDu9I2EyZJeCHzNEN2hb4dWc4/mlzzohdTzrGhf
IzvMfjXVpdnWC70fe/yjSHYoy1d1bu+fXvAteKf/0NUO65x1RHZ59kGM2KJW
hdN2uJ/97YX+un64NBYTWxJth3LsZ0adKv1Q/IzfYtNZO1xff1pmv24/MA8K
3jdNsEP/HxbpsTb9IMZcedntoh2GHWoI8Avth4IYub3JxXZYPBPbf6u9H55+
N53/ybZDz8J/0wKnBqCgrdpne6cdXui+H9l2bgBibm5mlnfbIfW4wdX4tAGw
3bExx2+AWG9ZIT50fQC6a9cbdb+xwz6z4pllzAH4dOb30fIZO9y7qfyp7hoO
tO0M5Qr9tEOexBIFkOVA+eZpkt/v//9u/h43cCBkdGyVzF87TFLyXyq3lQP/
bAfKE5dRcYf/vXaTXRyQWFX92Xc9Ff/2kO4O53Pg15i+c4MMFT/uj7u1uoQD
3Oflj6Xlqfjf18bOrfc4UHCsOKFLmYrT87qKbs84sLE/cwNqU/Fe4MLAwBAH
SPkhPtJIxUUWEb3D67lwUEuf2+lHxeqRZ5t9zhH3lZ/r53YHUNHXqjB5JXH/
imxcsn4ykIoLnWh+O4NLfN/1eggfoeJS1e33C4n7YHFsOIccQcW9z6e3lDzm
wshg/UBVKhWPJEWZLBvjwseSkl+kdCqGeWoEnfzChcmjaVIdGVT8gDOKg9+4
sCDo4z6RTUWN+TjtvQvEfXLL0gGV61Rcbv9SNEGMBy4ptP7MaioGSipH6hjy
YJe7wU9l4uX1dqgp8KAJD3yUZddW1lHRumhMNNuCB8GPJ93Yz6n4rdvtVBWF
B6mj6X0CbVR8+vub0xI3HmRWRMxeYlPxRMXIlhIPHuSd3Cup3ElFr76zo0b/
8aBUbIsb9FGxS+NslbwvD1rMB3qPj1DRUCBjl1AwD9oFn/9Y+o6KW7d5TK4O
4UFf922JS6NUvHNcwFfkOA9G9590rfhMxRnd8iXPI3kwYeAbavGFijyZ0M1R
UTyY+Wef2faVii7FT5w0Y3iwOEuud2yGiiL23n428TwQ2rPsR9hPKu56keT9
OJEHq7Sm1iydIziL5SqVzAP5xucuiv+oGPfbwORqGg/MJn17PIRoGMSrNm3K
5sGaJzZFdSI0DAzMTjidS5wfr3lEfgUNb2+1366RR+SrOCUyKk5Dbll+0LZr
PAiZ7OLYSNCwefjH05cFPLB/8rDkzloavgtKv6xTxIMFl5OWR2RoWH5b4HP7
DSJfRS+xbjkauo5l71tWzIPySRzeokhDpdyR0E0lPDj3RPlutjINM5earLW+
xQOvBIGT86o0VA9e5EC7zQND10+2Xuo09FTOkCHd4cEKpTbJ55o0vOVDi9tQ
yoP6J+mV53RomFBUsKmhjAdZCSHRn/RoKKk7eyzkLg8Oue5wsDegYaXvO0+p
ch5QlExk7hnS8PW55vFSguW+ynwWM6bhqtc/lHTu8WD2yb/qEFMattzt5i8i
mJ3wNq7fnIaxUJvBX8GDYtcX202Qhs8Hlna5ERyldEvxKpmG88/EG7MJdv+a
9PWfFQ3vm5r7MwnWrTv41MeGiP/im4ZxggUT6edf2NEwUtiz5w/BI66bPdTt
aZj6WfD6AsE1SpJq5x1oKHrCSmeS4LSvv2a+0GkY/ifwJJvggDpeI307Dbc9
GUjMJxgT69OqXGm47M8nTy+CpdwKvSTdCX2Xzs+KEjylFKt1YicNZWQDdt4l
8mn56j/H86ThsaSURDOCC+rsWix20/BGxqtzTwg9whO1sgr30FAr6qiLJsF0
t5W+/L40PJfxeSaB0FNd+ZvePn8a6q1NDuwn9F401fOPEUDUg15VLUEwt66a
pRVE+Otc3ZAlUZ/KxNwrFw7S8MffJW/33Pl//3kbuR6loUtX/bmDRL1NpshL
a0KIeGs/a+0i/CD+VLV7/XEalv59UbOV8Euj2/ihkZOEv6rnk5qu8yBXmW1m
eZqGFx6v6DtC+O3oVIVwcTQNP+qRV60o5IFSUlhxUBwNrxac3CWVz4M5N48Q
djwNp5VNguMIP3cpm5H1kmg4bpQU9Zbw+9mni4ZmU2lYu5F+4cBlHngmvS/1
SKdhYvbpzJxMHhjseHWiLoOG3+/du/oogwfvp5IlYrKJ+v1KetpwgQdWKlLb
RItoqFZsfkqC6McHX14o+t6goVTHlxvsWB4oVx+brS2mYdvonajw//cvtf1a
QCnRPyl6O/JP8aDh8LlvTQ8Iv7+padM/RvjF2ODV+moaUiOkWoOP8ODa4rdX
gh8TzwfTUwsP8uB0prm1fD0NTbfoHOjexwPzJzOXI17R8LPcVFP0Lh6UxRYd
6GTQULNupxrFnQcyDnSSehsN/TX37/njwoM/I6WfeztoqLx5h4+pAw9qBfaa
63Fp2CnQ0LsEiX5z7nz7cYKGiEtDGxQIv0tHVVt8pWHMjextl2R4IDGqlZw5
TcPf9f4KHlLEfDqesMVyloa89uynD1cS9b4KCfn/aJh7NG/NE2I+b/p0V9tV
3B7NrH3UfvVxIb9y1+KyNfa4sTm5fLCTC6KRQv2L19rjhaGE7ZVtXJhY4Rdd
IW2Pv/J5/3QbuXDHQKZbRNUek3ZvVogs44JadFJ4o5E9vguYCKad5kKd6c2l
9ib2aHf8i/ez41yg/3x2sdfMHl/Oiv9UDOZC+KEfZWMkezR+r7ihai8XWjy9
36ywt8fb9uzmZbZcCDA2pO7ytsfw+Rull0S5cOvbG+mZBGL/GI+8NSkcMCv/
c+vUeXtcffvkzfRYDnTsX2u4LJXI57zQFF8k8X4dsaevz7DHN/vONz8K5IBt
e3UsXiXOey7NiLHhwFhpypfk+8T+n1fpVv8dAA0/42eqXHuUZnh+C/AdgFQl
h7mzg/Z4XtuYuWbXAHwb9tnydsgeKRrhi2qcBqBuZ3Jp/jt7JAkYf3tvMQB0
+vDltV/s8apBbA5PagDCTeOOCPFtQ3TRGXVq7YeXYp2KX1S3YacGvUBsYz/4
1gfEPgjehvEx4Yo7eL1QX9DjOy3hgAtn9NvOfeuCYXvF3WFSDqh2znFh38cu
4Pt90GN+vQPaqoxrOwx2AclpmcNSBQdsH90ooPmyC5oXmRit03RA2pmqIaXc
Lmj1uSZEsnBAhy281M2WXTCgElie5u+A/IbPbSNyO+F3x6NbEvsd8ED+BWnt
tE5Yf2rJ9dwgB9Qcrr3wMa4TPHvzLt844oAeg4dTjgV3wnBce3RNhAMeC6AZ
fbLthA8fDLaPpDrg9aG45W6/O+D7rX8/daodcPGfqbnz3h3w3o1SkPjYAScn
ass/7eiAPv4U23dPiPOibng6OnZArff6nKwGBxxw7mfrW3RAtNQWkwUGsd7w
ucoumQ5YkRAYyRx0wAr5G3dDHrSD5r5ePr/FjijBSL8zXcMGGQmZ2/X8jmgR
0Lmz6zYbVjT5OEktc8SR955RL3LZMC03Vdgq4oh9Qh6h7yLZUNMnbKkv4Yhh
QtNWfGQ2UIir7D81R0xc++sbu50FPqqlQrnbHNFvk0qK/VwbhL/wCtxAd8RT
O1U3XZxog1Q/8dZKZ0fM7xcOmRpqgyc3TyS37nBEkuoZl59NbbBmg+3KhT1E
fBUr9fUutMHLDaNrvMMc8WWGx70gzTYYfJkdOhHuiNNShy/ayLXBN3/7vvCT
jmh9xKfSXLwN5EuqLqdHO2LFj5EVJ+ZaIVwtZn1TkiPeXdDj12lrBQ11eYUN
1xzxrxhDpzykFbClK7qy0BHtF5/vMQ5sBbeAc28sbjjihLWKw5vdrRBz60vR
jtuO6KHGU42ltQJXvU41scoRR2cc9GRUWiFZw2PjxCtHzGJ+X1bGZUIRY3ly
ONMRtbfOfeHrYkLN/oYJfpYjbo7oxGMMJozeViuX7XJEJm/qYkUNEyw0Z3Ud
Bx2RUv2xMi2bCVOaGYaVU46oPrxTb+E/JvS3ofXq744YuWCmU7KDCfWHJreH
/HDEFmOuwQEnJiRX2gUbzjmiWoXVHRtrJqyR5XN7vYiOCis7YiibmCA46fZa
dAkdt2WfWdKqzoT5+ru+Fvx03BI/rhekzIS33ruOXROgI7/Jx89/pZhw/8aj
tD0idGw8FCIetpQJN0JFpS4up2NDwbA1l48J2RTfa42idNSN5mPt/MOA6DGx
cuVVxP7jezTuf2dAyOOALS5idPzcoqge/5UB+5Ke1cWK03HoZybrxDgDHLQO
to6uoWPel5zdD98xgLzQ5CwpSUdXgduhf4cZsIW9nktZS0fKmqA430EGyBxp
GStZR8fcKoHR+F4GfK5SFgiUo6PZyYuftBkMGIqNSMmVp+PNGh3xPS8Z0Ona
uaZVgY6b+pb1329iQM3P08paynTc7f7zWWk9A8paeu94qhDrtZfHuNQx4FqO
ln6KKh0Dj1oYrq9lwDlTLk6q0THiyLqK+YcMiFiu1yKnQccOM6fVax8w4ODr
eEdHTTrW5Tdfd6hkgHf5UF/URjo+kzfVLapggEvUFq8KLTp62UXGi91jgC09
eXREm47yNx3D8+4ywEzx3QExHTom1kV2kssYoPvNeIakS9RrXese/lIGKDel
nTyqR8eDVot/jdxmgOSlj4uv69Nx5tUnn4FbDBD2s0jq3kxHI2274M8lDPi7
JVOMfwtx/sLHaUmCvwlMZBsY0lGsKaXqv2IGfOgnK/gZ0bFSYHFc/U0GcG7l
lGRupaOG8/ItxgS3nZja9NKYjnObQi6ybjCggWrzaNaEjqUbFh04SfAD6Xxz
NTM6Pm+MSCMTXDIx07zDnI4vkm+xlQjOfUqzT7Ag4lnh/EOa4NTUou4aoGNB
h0W3NsExu3/v/IR0jPvP0Mid4FBd+tt1ZDoesuCbyiU4YFHJfqolHbl/9rb9
INiza2EqwoqOO5Q0rgQQ8V1RrD1505qOwQJhRlMEc4+ECXRQ6Fhr23Yilchv
fYN++pwNoad422ZLIn+PlV+lVe0If6dIGK0g9Mr2Ki12pNJR6q2t61eCB+7u
04ugEetNBLw/EPq62Y9Q2rfRMezKtTMSRD0yr+R1/nYg4p99YrqNqFfPZ3fC
LnR8OvdWPbecAdsTO4NPOBP1ut759uh9BlwcSPlzfTsdJXM5zn8JP3SpUePZ
LoTfhg+Y5RN+ob9szFPeQUfjuYeN62sYcEEiSs3BnY6nlMoW/3zMALavaWW4
B5GfRfnij08YsG3Jg1esXXRkzLolLmpgABVvfjvuTUfOZH2+NOH3xAt7ThXt
oaOFSU5bWisDWoZkBVk+dFzdHG0jxWaAzaksWSU/Oh7e+ivwv24GWNXG27bt
p2OGhqjbkyEGnBWy6p4NJPw42ct5+oYBje58XooH6Dhoeteo8z0DSD/Dj4Ud
IvpZSrBFg+hXC4PAfIVjdCza+V396i8GbC23nwmJpCPoN+/wlWTC8QXBqGun
iHkwnvDMaz0THtm/EGKepmNXo5f0PjkmbBk3l5c/Q8fsY/U/CjYwQV9dh8qI
o+Mt7y6lB0ZM0C4SK5C9QMd1WUeYOp5MOB3IH78njY7Dz525u/YwoUP/58Gb
6XQcOP1m7JI/E0KaBk21L9FRPVpOQjuYCbXvS/rNcoj5Etiq8/UcEyhqFis9
r9NxdsvlK+ceMMGrLPB0bjUdz9lr1O6VbIXUR02ea0foGNXSFvn2Yyu0RFXl
Wr+h4zELsTHhyVZYbHd94NhbOsru42/Sm2mFMF6MS8d7oh+HTy6L4GsDLz6y
feInwv/dzvFfpdpgE7XBdP4boZ9QnY2VXRuwXtetH17qhG+uuc5YFreBQEmZ
u+gyJ3xy5d2616VtgEfyskwFnfB7g23poftt8GBxpHi2sBM6Z8k6RdS1QZ6a
qbDTSidM6rnkt6mrDQ4EP/7dKOWEYa97sobn22D50kcDxRudUP2Q+wMLGxZ0
F1qY/9Jywt0Sdhck7VmQa/Gq0G6TExGP2cIInQXq4QOBE7pO+JM5PLttJwus
xuf+6Bk6YQbIK50/wIJTnaD4FJ2w7UyM961U4vdDLXEryE74XFXQ+OFFFiwX
cfq829IJZQeCjB5lEftb+VQtpjihsXuscGY+Cx5Vx1rb0pxQxH2O2XKXBZNX
Gfu7XZ0wbvRvnRyTBQ9NnNkqO5yw/3JvwwkWCyL7ufph7k5YvM7/FLODBcJi
E/NSu5xw7mRQ3LZ+FmyIXZHq5e2EodsELw6+Y4FX4PbKT4FOKF6VetNgngWq
ywYlTQ84oVfc0cU/F1gwcd33ZPJBJ8Sx8TsVfGyIeB1qpXPECZfR3SyFBdiQ
Rc/uCwl1whxj4e0eq9jw3xcF05dhThipdIU1IM4GlaTb19aGO2F0pM5/dAk2
VDbVBtRGOKFByDoF9fVsOOFtyRKJdELhJGZcggwbcKFV779TTmizyNDvjRwb
BHNdsspPOyFfVmK/viIb2g1fz/2LckIS//cfkcps+B/zyL7o
                    "]]}, Annotation[#, "Charting`Private`Tag$24062#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$24062#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 17->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$24226#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$24226#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 18->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$24390#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVl3k8lG8XxitlX6JIpV+SfQklWWacwwzGNpYoSSFbibRTqSQiW6lIUpSU
pYhElFRiBjO2ZJkha4rskaXS+7z/zHy+n3mW+1znOtc996YDgQ7ey5YsWXKP
+Pj/d7SFlMqSJfL4Ridp+aa5j2AX+0bWX0AeG1paHEt/fwSphgPS7RLyWHpP
K8Xx30d46JjP91xBHi3UVi2/xVsFpW60QTcreawvt96pK1kF30+dzahIkker
5a2f+bdVgenDLxsuaihg0XbPDV+PVsGS348lFl0UMXrjGfPgmSpw5l06ouOt
iFKCj2dVF6rgufjeqsOBipj1z/O/3sUqcFMWC+64rIiKLi4Nu/mr4a1TUFfR
U0V0mMgoP7K+GkKem2cdXlTE8QpKhYlJNcx7fyd3PFBCh54LP8NuVMNUo8qh
ou/KeLRaldeDzID4/sML5CllbFz//sQNEwao/HoWw/itjAdDdPurzRngvn5r
HkdUBaVMmHV6Dgxgexv8XLJdBQdeHfIy9mVA1oLleZtLKpjw4V7EjwQG7JP3
Txhcq4pOJMaG5iEGMIPySqWt1JB0ls9pXyYT3ofI+Bx3VEOhGorXgVwmlF2K
lmDtU0PN3Ue+HS5gwtMYn8MXj6phYFPGgdhyJlxP+2/DYKIanr+n1MnTyoQ9
jPjQFz1quCnBxrmZrwaGpQLN6afV8VrTsMvawBoQKtb8fPmBBpaIqr7Ks6mF
pMv2nlm5GljAkfd44FQLsvYnJlkvNfDUSzfZu/tqQXekWESqVgNnXVOWPgqo
hQNyRmZZUxrYz6FqCsfXQlm8dQmLsgV7a8/okRtrwc/30B3JwS14AMoFXVzq
wDu2KW+npBb+uxM8aRTJAtbpVnuxdVroch2yY66zQMeDO137nxaK9U5a9txh
wTLdrwYmylqo6bHR58FTFqR3z1VrGWqhaDS74HIzCzhbZbtFPLRQdeSnbf1G
NtA7jogxn2qhxtTJkHvv2KCrKHyURNVGrTtKBvxrG8C0ucL3UuxWbBYQ/har
2ASCtZMfa+q34Y6l1KG9rGYwyZHfeOi3Di4ZM1g/at4Cr1Ib872MdVFxn2tT
XeVnSA86Ty45tgNPjdffURZpA6P7WVoiqXoY++VTSx65HeQ0befXP9DDjyya
XIlJO6x4N/Ne9bEeMrPzVd+atwOr12Qn7bkejmcfNmbat4OLQtepyx/18KkU
zaXOux1OPRV/PT+ih2Imo62X49rhadlZ00GyPgb1lg8e57bDdatNojMm+ih0
36qW3NMOJzoZrTw0fVRYc02c92s7GCyuPrjJQR+zX9mmx4+1A9M4P9rVRx9H
hD1vXFjaAf3M/obmeH28mKLu06jYAevarF0quvWx21K2ZOJIB6Qd/nYhaEAf
a5eWWfKf6AD5JWEZmkP6WKBvekQmqAM0VUpG0qb0Mc7KycTgYgdQz226GLrC
AFOb3FStrnXAkY2/MozVDPDUDrJLWV4HvPdNG608bYA7R8UMEoY7wOyPvkTI
OQPk4bQMqYx1AOt6i65OqAH2YJHE28kOaC0VCH101QApqd+ets91wLDQSYmI
VAOs8ZQXa+XlwOrntB1mHwxwB6/kj6FNHDg4NxnKFDHErvU1S/UdOaB7zEdq
UMIQ//D3+AXu5sDyYU4uj7Qh7nhSp5/mwoEH3MpWIzlD3H72TeewOwc4bxPV
X+oaInel6RLtAA5YRei3P3AzxO6iX3yB4RxYt/gsoMLLEDVW30jRjeTA99Ny
PF2HDPGE9tHeX1c5EH5QaIv0SUPcoHLdzeMaB95YdV2OjzLEYxlpg513OLBF
4pLmuQJDlAte6uf1jAN/omc+JhcboveaZSKF+Ryo5fFzKX5tiOcvvSicLeCA
74xDxGSVIXrqf+zwK+ZAers815djiBfru9zG33LgiP2doxHdhjjkktn7+x0H
SLUivBkDhpj4ylFkSSUHOl7/0voyZogjfry649UckEhjXnHkIaG0ya9E33oO
9KwhyxznJ+GacZKWViMH8q4XFFwTIWHtiYfrJ5qI+sNSOmvXkDAo0rvU6TNR
n7f/VmN1EgYfEeYUczng8KWHsV+bhKGB0dV6XRyQ3e20L0SXhNn0/bkFX4j6
aUZRJUjCa6oZ2lG9HJhRW/lFw4mEW8Z756sHOTB1b92lbS4k1E2Sapr/xoEJ
MQV5fTcSxmbxpm0e4sDwT30/6iESMnOlZ/b+4MA3b6qI5RESChw2OOg3woGB
Nvpz2xMkxK1rsgJHOfDltecvl/MktDy11Gv/OAe4GkfuuIeRcPyjVp35BAfa
04JJPpEkrDrT3q40yYHmy3FhxxJIeEJfkls3xYGGmdsKQUkkIh8Ka6795ADL
9yEz5C4JQ7RzHCynOVBtVSIalUnCiJevlDJmOFBZ/r4gLoeE6r/aAox/ceCd
JsvxZj4Jt649YNJKcPmD1tnkIhLyW+x96DHLgbJVvSn3S0mo9JwR3U9wScQP
8qO3JFwMzp3bO8eBotmZnuxKEvLVCw7VElxwaEl4PpOEhR1DzlrzRH+4gkov
2YT+1damsQTn2kjWljWTsObtjtwvBGdVbAx410ZCmdG8SKUFDmRqq66s7iRh
/7niNh+CH2bovKjrJWFyokNyKsFpkrCraZDol1dkNZPg1EiL+dYfJIxbtcft
B8F35nemdk6Q8DWrzm35bw4kHd4PfTMkfFTW/3EVwTe7DvZ9WyBhBV9mzFqC
r9ueiBj9R8KLX1YVSBIc9/688s/lZNx7SGcrP8HR26Lq5gTIWNksKDxJPD8y
88aRRVEyapjeNWwkOHzNPfHlq8m48sdQeSbBl64+KRJYS8YvYwvXjhF84XfB
brH/yChyrjlvG8HnAt4srN5MRvGyk2tGiPqDu6vvrVMmo1vr1+oUgk/ZN6Gs
BhkPLaiUAcHHK7n9ClvJmGVnOsYh9A3cPnhFbQcZY3lI7v4E+z+ZUNEmEUyW
EJkm+uMbs+IoyYyMBRMBQoNEP73+iq0ysSJjxdvfu+wIPhC4rtjcjoyl5Wea
nhN+cN2p+cfBhYzmc7vMHQm/7KnST3N2IyMj6i3pNuGnXTuoJvu9yMgzrejU
SPjNbv2eqENHyBi3XKhfnvCjTZynWuAJMn5cjHdAwq+W/wLqTwaTMea8fIc9
4Wdqf9jq0DAyPii8tXE34Xe93KfpSUlkzExbJA9/50CbbG6a6V0yShyJV6oj
5ul0Uvb96TQydh3g2Z9BzNuLS49THbLJ+Dhg7In+AJFHzunJom+IemuX+/8l
5pXNvn+7/B0ZL8bPBycT8+xPuZfkX0XG+ZbTFaqdHMjZknKrtp6Mybddx3U6
OKCw4tb1K71EP4pX3u5u5sDHszeubR8k6rWLUNch8uPAxPX4gWEybqtV+H6x
gcgvblysyTQZ1fhIzD91HJApjIxa5DVCff/5bzEfiXxyOxd6Wt0I5WcTI/++
IPzfcuaigrYR6va77Ksk8tDOMvhCy3YjtPS5sTWUyMv47adCtoIRXunOafqS
wwEB4cDgMXsj7HEvv6/5gANLSg8c9QkywosvzHZtiCX8vsUjUDLECKdPMZY4
EHlt9MjtyMdQI3wVuTT8/BXCT9dc/eWijdDK/KdgaSgHfnnvOvgl1Qgl5/nb
3p/kwKiEpfuuD0b40pBrIb2XAy3+co1+DCNMb90z9v/95U31AlxkGeGC2cX0
Nzs5EHs2d2NWqxEqJ3pt2m7NAfU+4e75YSPs85SDhyQO+BU07Lu3ClAyr1jX
bz2Rp0JZ7AJpwOHDqyniazhg4B1Krt4A+PfFc7VnEkR9a7U3jCsB8jVaRlQK
EPMeeqMTSYAaRfE8frMdMGjrtHfAC3BR7EHw3cYOqM/WqJs7BJhD3tMaX9cB
xTy8hiKBgB45376cru6AiJLidbpnADdv0RiQf0Ps7xulOZFxgH57Bw7OPe4A
zzGOs1oxoJmW7ZOzZzvgqJmWWikP4seuUy6t0h2w/ZSUuDQvorEeW44p0QEL
GX9+neZHrAysepkv3AGXl9Z80BFBPGAQp+2+pAOS3ni4PJdCHLinZmD2rR3K
t968+kQF8W3qln3yL9pBcOOvb4m2iGsebxWTobRDxuzrR8fvIt4t6l27wrwN
YqXFKMvvI9pIn18/Rm6D0/oHehPTEW/fWcbfoNMGtHP8/5VmIrpE9kudkWuD
sUXH2//yEUPEHsKxv62gxzt2NfYj4qpP+i5Cha3AWi0b+HgU8Yf66nsvpFph
RjtcnwPGuHb3yQzDlhaQuyF0idJrjId+Ht16YX8znCzY3HKv3xj55wqCKp2a
oarRUGnuqzFGzXzeIGrTDAfF/NlPh43RWali8IVhM+THstZKTRtj27meHsra
ZiBFxhV+5zVBicR8+aufm8ApRGwgTt0Eh0eX7zPb2QSP7yrt+L7FBF0Whhw8
rZpgrgyiTbRN8KTHyTNRlCZInQ/Umt1OXB9zrPDHtiboO90Y4g4meNG3zUJa
sgmOHEuQ3OZggvHXDCXWdjRClM8q8/YgE3Q7Oek84dsIi0HJDt5nTXCPzLbO
u+6NcPLqhv1TIcTzTNJjHfY0gvtTpVPCYSa4zK4kudeyEfSmDDMw1gSFzCd2
R25phKHzXv+y0k0Q5O5cmRpvAPdrQ4K6GSYYYqRzo6SvAVrTj0hVZpqgxpk5
yVufG+BDZbBGV44J/td8lH3zdQOkCMTtFX9pgkdYdhP5UQ1gmfiy5EyNCXJe
WD3xU2qAd48NKnlZJijwXDYxf30D6L6qqL9Zb4JffkxIi6xsADluzddnn0yw
OmdWRWK+Hn7LflnV12WCef/Y3masenj6lPeo5ZQJbmhbP+gTVA9yb2POtU2b
YHO19U1yQD0kN6yM9Jo1Qc81VtManvUQPrXu/oU/JnjcU36tq209uOppsgp5
KejucaZvXLkeRD7uVl6/noL3q1QlV/SywbGttTdkAwX9L9pRxTrYkDLsdPfL
RgruJHt+0mpig7K4o+hDeQqOSwVblb1nA3W/3bTyFgpuDzlj8D2DDTHHGp5F
a1EwNmHTkvxUNjSH031HtlJQjM6XEpfIBvdca07+DgqqiRaF34hkQ8gc7Z2u
MQWjvz5lvfFnQ6UQ80wyhYL/BbrWUXzYxLyYb1swpeCcSYpEvxsbkk1NH5db
UnDF+qEiv51sKLphHEt1pKATY7Q7zZANI+oGzg6+FLT+5hWVt5IN27BUvOgQ
BS9nFPa8E2LD2Z16dZL+FFSf0PQb4WUD/1ldo46jhB6xvZbX/rJAnrFV3v0s
BZWEDDkrRlhwmFPQ9T6Egu8jNu7s/8aCwlGt25svUnBgW/gxTj8LcLWm4LfL
hD4hv9olO1ng6qE2ERBHwbtzyUMf2CzIOJmT3XCNgnaWdxQCa1kwHKniqX2D
go+P+53bzmBBcJ5S63QSBUuTn+StfM+CivePr+26Q0GsUMpWeMsC3s8KFq/u
UnBS5MGs42sW3Pq9+c25dAp6nHpSu6yYBVzRjFNdDyn4vZjmf+kFC+Tk5DQh
k4KbjwulritgwXOa7MNlOYQeTzb0pBLnydm9aXu9nlLwn8Ul8Ss5LDAK/E+y
Oo+CP0u2CEVnsaAuUSbq6gsKaplfS+h7xIKcTB9a90sKdl2X2wcZLIh6+Zx/
+ysK6pb93lD8gAU+VQvM6DIKtrSxe83SWUD9TL3a84box6JV8eR9Yj1f4y10
Kyi4y0Qlu/geC5bOtAvEvqfg8VfSzMRUFvQs31zbW0lB2im27LW7LHi7OiB6
RzXxe9zCu4cpLEiVL7GMYxJ+ktxZ3Eicj8/pLBXqr6Wgjly06FqCXahWdXps
Ci5nOrSdS2aBnmNiTHwDBVPXu/83f5sFUl7dVgNNFEzU9p68TvDMCRVhgxbi
ef9J7qcQ3HL5BOtaK+G3WbnjKwkuvFke+7Wd0LPB2HAuiQXXM/hsDLkUvFIu
z1ggOPCFvUhCFwVvtFzYLE1cT6+8yx7spmCuCs9+O4LVP32NI/VR8HCTV3gG
wYL9mvQbAxQ81rPrkTixvu9TZ0S/D1LQ+XBsXQrB1cs+1pOHKPjmyis+IOrJ
lBC9dvMHBQ3M430WCQ6Xc7YdGqVg4Pt3M+2EHge2PhSDCQr+EuCprCf0QpOR
hltTxPu283d2E3r+56B7fXiagoecL9OFCf3/eITa4Syx3kglZcc0wi/Halcm
zVPwQtuT0yVEv5IT9icYL1JQXF0gu5Ho7+kHWfa3l1Bxao9d1pVMFjgVTImP
LqMi/2/Y6fyEBRJNV24k81GROjTQR89lwURPo8OYABUfui3pP/GMBfUT61ZR
han4+O71qqJ8FsSszL85vpKKkiXcg9FFLPCTnd9puoqKJRV/qBtLWEDToqy+
K0nFoz37DRpLWbDcru2W2Toq3n1T+ORKBQsuXPuXeG8zFUdkNYXNWcR8pVns
+qlARS+1ce23DSwwzL8pZaFMxbapqC/2n1gwV690e1qdihuEpHgaOCw4JmqX
bKVLReOH6vObfrDA7r8U5wd6VMz8bPf5wjgLtmwZkJ41oOJXv2+Zcz+J+bQJ
vvMQqBggoreXQuSBV1x6yjyNqOfUpNZ2cTb4Xtu9KsyKimZZvjGjUmzwSxCN
FaRTcea4/AOGDBuOJoacX7+TimqZ7y73KLPh3D1nd/I+Ksrb5NY+MGHDhTSx
jio3KqavvPDIy4INoQ+q7ekHqOghuZ1Ks2PDlUwdipsvFYNK7rsc28+GG89W
Kl46RsV/GlFR5iFsSMxn3Bc4SUVt1iNdkXAiDwsurLlxmorDjpSXUzFsuP9y
hD/jHBXvLDhmyxD5m13O/PExgorrfafEh8rZ8I4dWsCfQkVPc0dRC756qGzY
oZqQSugdzPL8u7IeqpvGHq5No2Lr4NK0hnX1wPrsekv1ERUH6D+t2Fvqoa1L
L8g6j4oVG6QVVJ3rYWx0gnT9AxWl9bP+0p/Xg4yoB3PNDyq6nm1NOHKqASbE
JcZPjlLx74TAmfeXGuCjZKVk8zihX07MarX4Bji8QcEzdpqKnU4fl5s8aYAy
9aG/SxapWJy1amUIpwGcrY5tG15piqEh+pci5BrhVtSl+290TXFInDwydasR
RHgenvQIM8ULjSPP4pKagHe+YudkuCmuYK+tHkhrgsWxrq2XIk3xmTXzqml2
E4xx1k6mx5riqpPaLZvfNEFDYUJAT5Ipri8bemXf1wQJBy75uOWaYmlHareX
VjNIfnB33tdiii9kPK/NNzfDhksbSXsUzfD8vg39nltagF/BtdiBYYZP/8mq
fxVsg4NrwTK3xgzLB8Mjb0i2QY2I3BcelhlW7enhI8u2QfSvbyteNhL3czwX
ora3gTDzhNMajhkm8n4zmHdrA/HDMdPcETPM5ldnbSxqg3UFZVu9JczRI0/W
JMe5Hc5m3qsuX22Ohx91ZFQcaAfunVAXqTXmqNJValzv3w6pYWZhjPXmmCjS
WtQa2g4bHZubVBTM8T9VhnBCVjvIzw4dHdthjkr2HIXrv9pBg7w2P2ifOaK9
jlhXTAcUbj70e5m7OSbb7jmXltgBeoKl5vEHzHHVwtNdTmkdYNLm3PPI1xx3
Pt/5OqWwA3YdSxZvPmaOf9SruyPbO+BC5pqT6lfMsbD8XB5zEwd4Yn3flUSZ
I3iu3JuvyoGo4yXClBhzbFF+MHdlGwduwO7MPdfNUfiYqi+/KQcedyS1Xkkh
1h/K89LWlwMNIlL6vXnm2DglpMHO4oDjtHeEfwFR74Vvus+fc4DDedk0+8Ic
T9yLfXHpFQcGnjj5iZaaY8P0Y+9xBgfmjBPvGlaaY0ICxW7yKwdkT69eTGwz
x8UOZ2f//7iQ6epluYljjiVXHTo3K3BBlVKU9LTTHGnG/Y4MNS7orHTUrOw1
x1/y5PAmPS7Qcm66T/wwRwuLhQtj9lw49kWi0nIJDdNdW/8qhXKhutq1PGcZ
DWt8Uv9pRXBBJv9xieAKGl4TlXRXjOYC86LB01oBGiq/dHr9+SYXZDcdSLRc
RUNOUzKd8pgLpwWeXsuRpCGdFFyam8MF1uTMVUFpGr7HMxf/5XEh+MPVC7Uy
NOxLXHP3YAkXGj0LfC0Vaeg3YBFOZnBB0fq3R44ycf+NMsO/tVwI0TF1FVSj
YUrra8sn9VxQXtFhV6tJw3vpT0ZLP3Mh9PESA0t9Gj55llX2uY8LrfGWOjmG
NFQLk3s48JUL6kG3tgga0fDs0N2uzu9caDdX3lxrQkP7uhedUWNc0BqyFba0
piHL6HlRwxwXrjTd4c2h03ClpMuE8m8udJb2LxG0p+Emj5myw3+5EBUdNFPj
REOVr3EWeUs74cvx9+MqzjR062valsfTCTp7hYavutCwt/vW/O0VndCjlvbF
wo2GFj4KXioCnaC7eqg924OGAUX6mk2CnRD7Z+snAS8ausa5yHkKd0LfQAj7
kA8NX+7MtesW6QQ9djWj5iAN1/rZsk3FOiH+5coPKodpKL/NLzdpZScM3HN5
czWAqE9842KTeCdcOzL23OI4DS8kD9jwryZ+36WXm32Shod5Scd4JDvBAMIy
BYKIela/dhoi+LoSK+3QGRqS5SNEy6Q6YVBMKqXmHA097pTnnVrTCaQ5t1sq
F2io3hppISPdCTd6suOvhtKQROabekbwd+bPqKEwGm7TdnuturYTjArIly0i
aPhs9YtXNwi+dSfyfHYkDa0tFf9+JXj4UlOQQDQNC3U678qv6yQOsuuPH4ql
4TnduSd0gpMcvP1r4mlIK7yn40XwiEG+j0oCDUsEJxy9CTbZPO9+9SZRz0MJ
GQeCk4Uoe4cSabisU/meKsFjP2OdLJJpuG7drh9jxPs62x/supdCw1qPj13p
BNeUF++eTKWhwZhbDBBc/LDO2TSNhlOOWrx1RD2PInv23HlAw0tqZHcKwQn+
My6jGTQ8zhefm0XoccFe0NX4MQ0dL6guLBB6+etu3JeYRcMihXX7DQjes15n
/1AODf+76TXkQ+hrtsTCjfyMhhtcxfNCiX7ofN3nnpBPQxMp5beRqzphU+1x
j68FNJTe/VwtRKITRPMjD+gXEf4tKuDfT/Tzz81Uz7hiGgpUbvPVIPo9FFzg
1fuKhkZrjfYMi3bCRxOuz9VyGn6dFEANwj+FShO+XRU09E/jOL8g/JUmvOKQ
9gcaXh62t1Ei/He2dcvhjmqivnwH8Q7Cn76vKf4aNTSMdPyxfM3yTnBMdw64
VEdD81GaDGVZJ2j6hQWqNNLQ2O7YovcikQe2t4+eb6ZhvKnVqOsfLgjqPD3W
1ELDxnB+mskCFwb+fj5xpoOG+3ZYXW2f4UJKgkpwTR8NhZlV27aPEPNz2ujM
hq803HUw/uyDIS6c2rvz7LFvNPy9eLr8zyAX7BTOh6wdoeFV7+qLob1cWFHa
GHpohoarTmwdf0vM+9S9r5fKZ2mYtKlBLLOZCz1hC2HiCzTsOs58c7aBC2XW
8hGli0S+7BznmWFy4WhP0FUBfgtUP9wHSq+5sL8qNnqfoAVujtF7E0Pkj1XO
g5gCYQs0XVBy6nlB5M/Jurg94ha4TWZS3uUpF7h8G29kr7NAjdol22+kcsFM
szrFQsMCB7JfdW0+ywVnXppjo6YFvud0+Ww5xQW/rhqR3Vst8LOR83Wlo1yI
j2GHeu2wwDsTR2UHvbnw+VuLz0VjC9ylqlWWZMcFr/T+rS+dLJB5su13hxyR
n0HeI4bOFiihl7CrQ4bQi/4t84OLBR47ov2BKcWFp3+GpRvdLNAn3EI5WJAL
P52nFocPWeBQeGvR+kkOhIkvrZO9YIGBu5xmr77mwK3vYeFPQi1waU6JemIR
sT9VLDfactkCrzxP6E94xoHaAP4CwygL3K/YpO2exgHxWrHbu25YoMjXc58d
wjiQHvafZ+xjCzypftzjEbG/lf80/D1bT6ynJaDuzocOSGeVHNjZZIHZES9i
Ess6iHTZVpv3yQLnig23RBL7K2232h3vdgss2TrsZf2wAz6VrdvxqdcCvcvv
PXK/1AFDl+aP501b4PGbdqx35A6QXFky7LXOEpf3Hy3qy2+HAPWtnCZvS7yQ
E0yqOt8GpDGvlj0CVuiDhut1n7QAVV7aRuShFR67f1ctda4JikarNnk9ssJZ
1TdPTo41weaSE7/KHlthy4esBPuBJlhm2ZB2MNcKf/MNz0k3NsG7wCtTlUVW
+Oi68vqeJ01Afj19+yzDCl92H+92c24CXYemvm8jVsi9rTj2uLwRHq+/WGI0
boXmlwr/ahU1guRX9djESStcJaFa9z6nEaaDorZTflkhdUPP0OztRii8B1H3
/1lhethl0qvjjbBl6JmGk4Q1ZrDDfe+oNIJSaHTwhx3WeEqspPitQQO8Mcxc
YW1gjRcK2rX3KjeA3WzFjc8ka5y+svefsFQDBB+Zefrd2BrZZi5WBZP1wHR1
7xW1Ju7X1uxazK6Hg/q6lnvdieur2lIL/quHrKne9dNR1jivvPzpNWk2kPL+
ZJ2PsUbpmyuMh/jZ0HhojS5fvDV6u6Qs3TNPnD96rO3W3bRGvczDq88R5w9a
Q0k43rPGV0/Vh2qI8+/33LjR2AJrrI2Wv5mozAIVb/0KBY417nlXx/+PXgfx
cvSFy53WSO6b/PvPpA6mug9s7/tijRfN8nNW76iDNy6xuff7rdGzWGLHmY11
YGfXfXvNqDWa7Dp6VHOyFoINI44KLLFBqRwlkZ3JtdA1dyfXd5kNqpHav12P
qwWT4rzBquU2uPRGbk5fWC0Ia7e7hgnYoO2hrun3AbWQpqhm8VvCBoe/e0wE
UmuhWrxp06iCDX6Ea2qxMzWg1vDV1UrZBmOcw6YFRmrgeuzC7WxVGwwt3tx6
t68GXPjkRX00bdBY7tb474YaGPtzeuGLng1mcTc2PsutAcnvMp8arWzw8dDl
cY5PDfF/VltUk26D2WnH8u/ur4EvB8ws4uxs0ETmzquju2ogqyuwwsLJBiMs
XhXuNqsB0qcPuR/22yAzSe3uWqUa8Hp7MLzomA2uWhk5EDjChLGA4SDTkzZ4
PahIp2+ACUEb/A+3nrbBl4Lvrvt3MSE6JNBh7pwN6p/sP1dTz4R8g9OypCs2
6JMUFP2okAl6w7Or2FE2aHCvMLMtlwkf7pzh2x9jgzZ2+T/kMpnQMhcydvG6
DSadc+NblsyEheLLbypTbPCDcslQ3wUmhPuseO54zwb7P61ntAUzQUQqMuNr
mg1+y1UYGzjOBNlT0dF8mYS+D1OUab5MMNuW4GyVb4NC4wqvt9ozISH//nRz
pQ2qiz8quavChHVust89q22wb9XzRSkFJjwSfcidZtpgKVWZnSPLhOKAzA9S
9TaoNFkvJiPNhE61p9dd2m1QsEQ8WYGfCT5cjfAfHBvkDbh7xXs5E8aj84NC
uoh+Np1c/3YJE5YNF+6/32eD7b5R5qXzDFDOKlXvG7HBeH5byfYRBhTuNpQ9
MW6D7NPHH3YNMcCQr3zV8ikbDFhdM/17kAF0n3cLCrM2qHj/0lxYLwPaJE3G
iudt0NsvteDHFwa4VxH/nv/Y4G5FVwjoZMAJeQbz0FI6pmuQvpe1MeDPJ9qb
BR46btwjKRT5mQFXLtfmx/DSMU1nhYT/JwYk97GTngnRce51Cje0gQFyN2yj
jUTp+NN8PvM5mwG5xk3nG1bSkUrt8ZyvY8Db9BavSUk6KtJLaz4zGdBtvcnt
tDQdRczG+wMZDFgyH7Dn9zo6vj7FXCtXzQDZzLKdoRvouJM0cmTkIwOM7fno
K2TpODO39Ft9JQMO/N1Ji5ajY5VgQUTNBwaEZaebiCnQcaAxnd75ngEZTqOk
W0p0PJkTbMpH8MelBjvWqtIx+Vd3gOU7Bnx9dkX7vjodj6y+UJdZwQBel09q
mzXpuMFzwWMtwUq8sopZ2nT8YPxHJ/MtA2iF/rIaOnSMEFOjWRB8aH/pukJd
OoapbUlbQXC0IK/kDn06dk0/JXPKGZBT7CD2xpCOr2rpSgyC6w6kCRgb0XG7
8Gs3FsEjoiM81UjHwZ1HhocIFn6tt2hJoWN50NO3G4nnafhGzDWY0jFKyrsi
gGD6quYpRxodN8/cZX8iOLDiv9EOSzoebnestSfWe/3w4W/7begIETeTvhFc
sOZVb78tHc+927sqkai3uXJ550EHOi7SCza5EHr8DLRvHXWkY8bM7Ye6hH6r
Ze43Ht9NR8szq4JUCX11mMO1s3vo2HhfKXQ7ob/TyR1VIa50lFBrv7+7igGn
ZcMrlrrRcbRPueg60a8kVmPpFQ/i/TEbHvQQ/WyX98u77kPHt++WXvlYy4D5
xuIsyUN0fNw2B84sBqw7z5ORcpiOIVMPnZbVM8D1c+rtR0fp6Gm+UfpOEwPO
XxpKUDlBR02h+SsRhN/ua+jG5p2io/vgrc//92N3REPoq7N0dPm1KYndQfhn
q8w58nk69hetq11J+Fn2y8FTHy7SkXJ/wOMQ4fcDusv8WOF05F3xG136GTA4
qLOzJ57wT87dPTvGGMB385KNdwId6bRImtwkMW9Qbz58k44pOw5kbJom+n3b
lzSdTMdf/83I7lsg+meeosCfQfgxea6tko/Ik+nBjXGZdORaMz/QhZiwJX3b
OoksOgaeydw0KsqEo3MsUZlndJS3u13hKcWEn1n/ZjVLCL+c+yC9XZFJnGfM
0q+W0pGhgVErVZnQujyO1v+ajjngJfZHgwll7uvuJL2jo6zk8iU8ukwIld5u
8LeGjqaXD+SwzZggGuUXUttJx6N2KZvwMBOW6BbIy3fTcf8ac2Pxo0yY6p9l
ne+l48EI9cGJk0z4DBEbtAfpeOP7ir1cIh9TZ9Pe3h6nYz2jUMvlJhNUfT8v
8V5mi/Xs6atDb5kgIymT/Xa5Lc6tn9l6+yPxvsoD9tJ8tujm/K7evpYJk/9N
PKgTssU8DZmzo5+Z8KpVkLJV0ha7zbK7X48SeWqGEf+UbPHUmrUD9zfWwAGF
XIEUG1vstaN/YMfUQHDVfj9FO1uU/3KKE3azBuK9JeoKHWwx/OCqIMrdGnid
eSa2brctBnYcKR/MqYHVijSxvx62mD3K/VNQWwPVil9Xu58m3jeqowfCtaCi
vFFWMc0WY95KbHFMqoUJ1Zu6hRO26Ky6NNSrog5cm/9OnKXaoX9UQrwMbz1o
PBRP33DNDgUfZh1XlWmE+OJK1zU9dtjGk3tJyKgJhFcUtz9Ws0eZ2JvCfLrN
8OmBEXlO3R61eQ0SNxg0Q4oR44HFFnukXfAR3mrUDMrB7X4jWvb4WXWu1dGs
Gag/Fv5o69pjV1WcfdiuZjjfBJvK0R4dIv+Ehp5uhrF7NYc+OdnjWqc3I4ov
m+GlgUO9/G57/F74fRdPaTOEtHG2nna2x6ubmnS+vGkGQfGR39J77fHWzxDX
ax+bQTFcNH6/uz3avW5o6P7UDPv9dhYO+dnjsn2dw6SpZlDg65Qy9LdHr3jH
8GW/mmEkw+tcbIA9/uvY3FI93wxnu05RNY/a4/awI0+sln6CJLvk1pOn7FHO
l5JgtvIT7BuVNaw+bY+vy3gclq3+BPLR2Wlrgu0Rnx0cfrPmExRWlh0sO2uP
vtqMwi0bP8EZdwpbKMQedeVX//gq9wnwb532vvP2aB38VChV8RPwpzgm5V2w
R+MvpdL2qp+gQbdr4d9Fe8zk9ZFaseUT/A+J+uZH
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$24390#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 19->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$24554#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwVl3k8lG8XxitlX6JIpV+SfQklWWacwwzGNpYoSSFbibRTqSQiW6lIUpSU
pYhElFRiBjO2ZJkha4rskaXS+7z/zHy+n3mW+1znOtc996YDgQ7ey5YsWXKP
+Pj/d7SFlMqSJfL4Ridp+aa5j2AX+0bWX0AeG1paHEt/fwSphgPS7RLyWHpP
K8Xx30d46JjP91xBHi3UVi2/xVsFpW60QTcreawvt96pK1kF30+dzahIkker
5a2f+bdVgenDLxsuaihg0XbPDV+PVsGS348lFl0UMXrjGfPgmSpw5l06ouOt
iFKCj2dVF6rgufjeqsOBipj1z/O/3sUqcFMWC+64rIiKLi4Nu/mr4a1TUFfR
U0V0mMgoP7K+GkKem2cdXlTE8QpKhYlJNcx7fyd3PFBCh54LP8NuVMNUo8qh
ou/KeLRaldeDzID4/sML5CllbFz//sQNEwao/HoWw/itjAdDdPurzRngvn5r
HkdUBaVMmHV6Dgxgexv8XLJdBQdeHfIy9mVA1oLleZtLKpjw4V7EjwQG7JP3
Txhcq4pOJMaG5iEGMIPySqWt1JB0ls9pXyYT3ofI+Bx3VEOhGorXgVwmlF2K
lmDtU0PN3Ue+HS5gwtMYn8MXj6phYFPGgdhyJlxP+2/DYKIanr+n1MnTyoQ9
jPjQFz1quCnBxrmZrwaGpQLN6afV8VrTsMvawBoQKtb8fPmBBpaIqr7Ks6mF
pMv2nlm5GljAkfd44FQLsvYnJlkvNfDUSzfZu/tqQXekWESqVgNnXVOWPgqo
hQNyRmZZUxrYz6FqCsfXQlm8dQmLsgV7a8/okRtrwc/30B3JwS14AMoFXVzq
wDu2KW+npBb+uxM8aRTJAtbpVnuxdVroch2yY66zQMeDO137nxaK9U5a9txh
wTLdrwYmylqo6bHR58FTFqR3z1VrGWqhaDS74HIzCzhbZbtFPLRQdeSnbf1G
NtA7jogxn2qhxtTJkHvv2KCrKHyURNVGrTtKBvxrG8C0ucL3UuxWbBYQ/har
2ASCtZMfa+q34Y6l1KG9rGYwyZHfeOi3Di4ZM1g/at4Cr1Ib872MdVFxn2tT
XeVnSA86Ty45tgNPjdffURZpA6P7WVoiqXoY++VTSx65HeQ0befXP9DDjyya
XIlJO6x4N/Ne9bEeMrPzVd+atwOr12Qn7bkejmcfNmbat4OLQtepyx/18KkU
zaXOux1OPRV/PT+ih2Imo62X49rhadlZ00GyPgb1lg8e57bDdatNojMm+ih0
36qW3NMOJzoZrTw0fVRYc02c92s7GCyuPrjJQR+zX9mmx4+1A9M4P9rVRx9H
hD1vXFjaAf3M/obmeH28mKLu06jYAevarF0quvWx21K2ZOJIB6Qd/nYhaEAf
a5eWWfKf6AD5JWEZmkP6WKBvekQmqAM0VUpG0qb0Mc7KycTgYgdQz226GLrC
AFOb3FStrnXAkY2/MozVDPDUDrJLWV4HvPdNG608bYA7R8UMEoY7wOyPvkTI
OQPk4bQMqYx1AOt6i65OqAH2YJHE28kOaC0VCH101QApqd+ets91wLDQSYmI
VAOs8ZQXa+XlwOrntB1mHwxwB6/kj6FNHDg4NxnKFDHErvU1S/UdOaB7zEdq
UMIQ//D3+AXu5sDyYU4uj7Qh7nhSp5/mwoEH3MpWIzlD3H72TeewOwc4bxPV
X+oaInel6RLtAA5YRei3P3AzxO6iX3yB4RxYt/gsoMLLEDVW30jRjeTA99Ny
PF2HDPGE9tHeX1c5EH5QaIv0SUPcoHLdzeMaB95YdV2OjzLEYxlpg513OLBF
4pLmuQJDlAte6uf1jAN/omc+JhcboveaZSKF+Ryo5fFzKX5tiOcvvSicLeCA
74xDxGSVIXrqf+zwK+ZAers815djiBfru9zG33LgiP2doxHdhjjkktn7+x0H
SLUivBkDhpj4ylFkSSUHOl7/0voyZogjfry649UckEhjXnHkIaG0ya9E33oO
9KwhyxznJ+GacZKWViMH8q4XFFwTIWHtiYfrJ5qI+sNSOmvXkDAo0rvU6TNR
n7f/VmN1EgYfEeYUczng8KWHsV+bhKGB0dV6XRyQ3e20L0SXhNn0/bkFX4j6
aUZRJUjCa6oZ2lG9HJhRW/lFw4mEW8Z756sHOTB1b92lbS4k1E2Sapr/xoEJ
MQV5fTcSxmbxpm0e4sDwT30/6iESMnOlZ/b+4MA3b6qI5RESChw2OOg3woGB
Nvpz2xMkxK1rsgJHOfDltecvl/MktDy11Gv/OAe4GkfuuIeRcPyjVp35BAfa
04JJPpEkrDrT3q40yYHmy3FhxxJIeEJfkls3xYGGmdsKQUkkIh8Ka6795ADL
9yEz5C4JQ7RzHCynOVBtVSIalUnCiJevlDJmOFBZ/r4gLoeE6r/aAox/ceCd
JsvxZj4Jt649YNJKcPmD1tnkIhLyW+x96DHLgbJVvSn3S0mo9JwR3U9wScQP
8qO3JFwMzp3bO8eBotmZnuxKEvLVCw7VElxwaEl4PpOEhR1DzlrzRH+4gkov
2YT+1damsQTn2kjWljWTsObtjtwvBGdVbAx410ZCmdG8SKUFDmRqq66s7iRh
/7niNh+CH2bovKjrJWFyokNyKsFpkrCraZDol1dkNZPg1EiL+dYfJIxbtcft
B8F35nemdk6Q8DWrzm35bw4kHd4PfTMkfFTW/3EVwTe7DvZ9WyBhBV9mzFqC
r9ueiBj9R8KLX1YVSBIc9/688s/lZNx7SGcrP8HR26Lq5gTIWNksKDxJPD8y
88aRRVEyapjeNWwkOHzNPfHlq8m48sdQeSbBl64+KRJYS8YvYwvXjhF84XfB
brH/yChyrjlvG8HnAt4srN5MRvGyk2tGiPqDu6vvrVMmo1vr1+oUgk/ZN6Gs
BhkPLaiUAcHHK7n9ClvJmGVnOsYh9A3cPnhFbQcZY3lI7v4E+z+ZUNEmEUyW
EJkm+uMbs+IoyYyMBRMBQoNEP73+iq0ysSJjxdvfu+wIPhC4rtjcjoyl5Wea
nhN+cN2p+cfBhYzmc7vMHQm/7KnST3N2IyMj6i3pNuGnXTuoJvu9yMgzrejU
SPjNbv2eqENHyBi3XKhfnvCjTZynWuAJMn5cjHdAwq+W/wLqTwaTMea8fIc9
4Wdqf9jq0DAyPii8tXE34Xe93KfpSUlkzExbJA9/50CbbG6a6V0yShyJV6oj
5ul0Uvb96TQydh3g2Z9BzNuLS49THbLJ+Dhg7In+AJFHzunJom+IemuX+/8l
5pXNvn+7/B0ZL8bPBycT8+xPuZfkX0XG+ZbTFaqdHMjZknKrtp6Mybddx3U6
OKCw4tb1K71EP4pX3u5u5sDHszeubR8k6rWLUNch8uPAxPX4gWEybqtV+H6x
gcgvblysyTQZ1fhIzD91HJApjIxa5DVCff/5bzEfiXxyOxd6Wt0I5WcTI/++
IPzfcuaigrYR6va77Ksk8tDOMvhCy3YjtPS5sTWUyMv47adCtoIRXunOafqS
wwEB4cDgMXsj7HEvv6/5gANLSg8c9QkywosvzHZtiCX8vsUjUDLECKdPMZY4
EHlt9MjtyMdQI3wVuTT8/BXCT9dc/eWijdDK/KdgaSgHfnnvOvgl1Qgl5/nb
3p/kwKiEpfuuD0b40pBrIb2XAy3+co1+DCNMb90z9v/95U31AlxkGeGC2cX0
Nzs5EHs2d2NWqxEqJ3pt2m7NAfU+4e75YSPs85SDhyQO+BU07Lu3ClAyr1jX
bz2Rp0JZ7AJpwOHDqyniazhg4B1Krt4A+PfFc7VnEkR9a7U3jCsB8jVaRlQK
EPMeeqMTSYAaRfE8frMdMGjrtHfAC3BR7EHw3cYOqM/WqJs7BJhD3tMaX9cB
xTy8hiKBgB45376cru6AiJLidbpnADdv0RiQf0Ps7xulOZFxgH57Bw7OPe4A
zzGOs1oxoJmW7ZOzZzvgqJmWWikP4seuUy6t0h2w/ZSUuDQvorEeW44p0QEL
GX9+neZHrAysepkv3AGXl9Z80BFBPGAQp+2+pAOS3ni4PJdCHLinZmD2rR3K
t968+kQF8W3qln3yL9pBcOOvb4m2iGsebxWTobRDxuzrR8fvIt4t6l27wrwN
YqXFKMvvI9pIn18/Rm6D0/oHehPTEW/fWcbfoNMGtHP8/5VmIrpE9kudkWuD
sUXH2//yEUPEHsKxv62gxzt2NfYj4qpP+i5Cha3AWi0b+HgU8Yf66nsvpFph
RjtcnwPGuHb3yQzDlhaQuyF0idJrjId+Ht16YX8znCzY3HKv3xj55wqCKp2a
oarRUGnuqzFGzXzeIGrTDAfF/NlPh43RWali8IVhM+THstZKTRtj27meHsra
ZiBFxhV+5zVBicR8+aufm8ApRGwgTt0Eh0eX7zPb2QSP7yrt+L7FBF0Whhw8
rZpgrgyiTbRN8KTHyTNRlCZInQ/Umt1OXB9zrPDHtiboO90Y4g4meNG3zUJa
sgmOHEuQ3OZggvHXDCXWdjRClM8q8/YgE3Q7Oek84dsIi0HJDt5nTXCPzLbO
u+6NcPLqhv1TIcTzTNJjHfY0gvtTpVPCYSa4zK4kudeyEfSmDDMw1gSFzCd2
R25phKHzXv+y0k0Q5O5cmRpvAPdrQ4K6GSYYYqRzo6SvAVrTj0hVZpqgxpk5
yVufG+BDZbBGV44J/td8lH3zdQOkCMTtFX9pgkdYdhP5UQ1gmfiy5EyNCXJe
WD3xU2qAd48NKnlZJijwXDYxf30D6L6qqL9Zb4JffkxIi6xsADluzddnn0yw
OmdWRWK+Hn7LflnV12WCef/Y3masenj6lPeo5ZQJbmhbP+gTVA9yb2POtU2b
YHO19U1yQD0kN6yM9Jo1Qc81VtManvUQPrXu/oU/JnjcU36tq209uOppsgp5
KejucaZvXLkeRD7uVl6/noL3q1QlV/SywbGttTdkAwX9L9pRxTrYkDLsdPfL
RgruJHt+0mpig7K4o+hDeQqOSwVblb1nA3W/3bTyFgpuDzlj8D2DDTHHGp5F
a1EwNmHTkvxUNjSH031HtlJQjM6XEpfIBvdca07+DgqqiRaF34hkQ8gc7Z2u
MQWjvz5lvfFnQ6UQ80wyhYL/BbrWUXzYxLyYb1swpeCcSYpEvxsbkk1NH5db
UnDF+qEiv51sKLphHEt1pKATY7Q7zZANI+oGzg6+FLT+5hWVt5IN27BUvOgQ
BS9nFPa8E2LD2Z16dZL+FFSf0PQb4WUD/1ldo46jhB6xvZbX/rJAnrFV3v0s
BZWEDDkrRlhwmFPQ9T6Egu8jNu7s/8aCwlGt25svUnBgW/gxTj8LcLWm4LfL
hD4hv9olO1ng6qE2ERBHwbtzyUMf2CzIOJmT3XCNgnaWdxQCa1kwHKniqX2D
go+P+53bzmBBcJ5S63QSBUuTn+StfM+CivePr+26Q0GsUMpWeMsC3s8KFq/u
UnBS5MGs42sW3Pq9+c25dAp6nHpSu6yYBVzRjFNdDyn4vZjmf+kFC+Tk5DQh
k4KbjwulritgwXOa7MNlOYQeTzb0pBLnydm9aXu9nlLwn8Ul8Ss5LDAK/E+y
Oo+CP0u2CEVnsaAuUSbq6gsKaplfS+h7xIKcTB9a90sKdl2X2wcZLIh6+Zx/
+ysK6pb93lD8gAU+VQvM6DIKtrSxe83SWUD9TL3a84box6JV8eR9Yj1f4y10
Kyi4y0Qlu/geC5bOtAvEvqfg8VfSzMRUFvQs31zbW0lB2im27LW7LHi7OiB6
RzXxe9zCu4cpLEiVL7GMYxJ+ktxZ3Eicj8/pLBXqr6Wgjly06FqCXahWdXps
Ci5nOrSdS2aBnmNiTHwDBVPXu/83f5sFUl7dVgNNFEzU9p68TvDMCRVhgxbi
ef9J7qcQ3HL5BOtaK+G3WbnjKwkuvFke+7Wd0LPB2HAuiQXXM/hsDLkUvFIu
z1ggOPCFvUhCFwVvtFzYLE1cT6+8yx7spmCuCs9+O4LVP32NI/VR8HCTV3gG
wYL9mvQbAxQ81rPrkTixvu9TZ0S/D1LQ+XBsXQrB1cs+1pOHKPjmyis+IOrJ
lBC9dvMHBQ3M430WCQ6Xc7YdGqVg4Pt3M+2EHge2PhSDCQr+EuCprCf0QpOR
hltTxPu283d2E3r+56B7fXiagoecL9OFCf3/eITa4Syx3kglZcc0wi/Halcm
zVPwQtuT0yVEv5IT9icYL1JQXF0gu5Ho7+kHWfa3l1Bxao9d1pVMFjgVTImP
LqMi/2/Y6fyEBRJNV24k81GROjTQR89lwURPo8OYABUfui3pP/GMBfUT61ZR
han4+O71qqJ8FsSszL85vpKKkiXcg9FFLPCTnd9puoqKJRV/qBtLWEDToqy+
K0nFoz37DRpLWbDcru2W2Toq3n1T+ORKBQsuXPuXeG8zFUdkNYXNWcR8pVns
+qlARS+1ce23DSwwzL8pZaFMxbapqC/2n1gwV690e1qdihuEpHgaOCw4JmqX
bKVLReOH6vObfrDA7r8U5wd6VMz8bPf5wjgLtmwZkJ41oOJXv2+Zcz+J+bQJ
vvMQqBggoreXQuSBV1x6yjyNqOfUpNZ2cTb4Xtu9KsyKimZZvjGjUmzwSxCN
FaRTcea4/AOGDBuOJoacX7+TimqZ7y73KLPh3D1nd/I+Ksrb5NY+MGHDhTSx
jio3KqavvPDIy4INoQ+q7ekHqOghuZ1Ks2PDlUwdipsvFYNK7rsc28+GG89W
Kl46RsV/GlFR5iFsSMxn3Bc4SUVt1iNdkXAiDwsurLlxmorDjpSXUzFsuP9y
hD/jHBXvLDhmyxD5m13O/PExgorrfafEh8rZ8I4dWsCfQkVPc0dRC756qGzY
oZqQSugdzPL8u7IeqpvGHq5No2Lr4NK0hnX1wPrsekv1ERUH6D+t2Fvqoa1L
L8g6j4oVG6QVVJ3rYWx0gnT9AxWl9bP+0p/Xg4yoB3PNDyq6nm1NOHKqASbE
JcZPjlLx74TAmfeXGuCjZKVk8zihX07MarX4Bji8QcEzdpqKnU4fl5s8aYAy
9aG/SxapWJy1amUIpwGcrY5tG15piqEh+pci5BrhVtSl+290TXFInDwydasR
RHgenvQIM8ULjSPP4pKagHe+YudkuCmuYK+tHkhrgsWxrq2XIk3xmTXzqml2
E4xx1k6mx5riqpPaLZvfNEFDYUJAT5Ipri8bemXf1wQJBy75uOWaYmlHareX
VjNIfnB33tdiii9kPK/NNzfDhksbSXsUzfD8vg39nltagF/BtdiBYYZP/8mq
fxVsg4NrwTK3xgzLB8Mjb0i2QY2I3BcelhlW7enhI8u2QfSvbyteNhL3czwX
ora3gTDzhNMajhkm8n4zmHdrA/HDMdPcETPM5ldnbSxqg3UFZVu9JczRI0/W
JMe5Hc5m3qsuX22Ohx91ZFQcaAfunVAXqTXmqNJValzv3w6pYWZhjPXmmCjS
WtQa2g4bHZubVBTM8T9VhnBCVjvIzw4dHdthjkr2HIXrv9pBg7w2P2ifOaK9
jlhXTAcUbj70e5m7OSbb7jmXltgBeoKl5vEHzHHVwtNdTmkdYNLm3PPI1xx3
Pt/5OqWwA3YdSxZvPmaOf9SruyPbO+BC5pqT6lfMsbD8XB5zEwd4Yn3flUSZ
I3iu3JuvyoGo4yXClBhzbFF+MHdlGwduwO7MPdfNUfiYqi+/KQcedyS1Xkkh
1h/K89LWlwMNIlL6vXnm2DglpMHO4oDjtHeEfwFR74Vvus+fc4DDedk0+8Ic
T9yLfXHpFQcGnjj5iZaaY8P0Y+9xBgfmjBPvGlaaY0ICxW7yKwdkT69eTGwz
x8UOZ2f//7iQ6epluYljjiVXHTo3K3BBlVKU9LTTHGnG/Y4MNS7orHTUrOw1
x1/y5PAmPS7Qcm66T/wwRwuLhQtj9lw49kWi0nIJDdNdW/8qhXKhutq1PGcZ
DWt8Uv9pRXBBJv9xieAKGl4TlXRXjOYC86LB01oBGiq/dHr9+SYXZDcdSLRc
RUNOUzKd8pgLpwWeXsuRpCGdFFyam8MF1uTMVUFpGr7HMxf/5XEh+MPVC7Uy
NOxLXHP3YAkXGj0LfC0Vaeg3YBFOZnBB0fq3R44ycf+NMsO/tVwI0TF1FVSj
YUrra8sn9VxQXtFhV6tJw3vpT0ZLP3Mh9PESA0t9Gj55llX2uY8LrfGWOjmG
NFQLk3s48JUL6kG3tgga0fDs0N2uzu9caDdX3lxrQkP7uhedUWNc0BqyFba0
piHL6HlRwxwXrjTd4c2h03ClpMuE8m8udJb2LxG0p+Emj5myw3+5EBUdNFPj
REOVr3EWeUs74cvx9+MqzjR062valsfTCTp7hYavutCwt/vW/O0VndCjlvbF
wo2GFj4KXioCnaC7eqg924OGAUX6mk2CnRD7Z+snAS8ausa5yHkKd0LfQAj7
kA8NX+7MtesW6QQ9djWj5iAN1/rZsk3FOiH+5coPKodpKL/NLzdpZScM3HN5
czWAqE9842KTeCdcOzL23OI4DS8kD9jwryZ+36WXm32Shod5Scd4JDvBAMIy
BYKIela/dhoi+LoSK+3QGRqS5SNEy6Q6YVBMKqXmHA097pTnnVrTCaQ5t1sq
F2io3hppISPdCTd6suOvhtKQROabekbwd+bPqKEwGm7TdnuturYTjArIly0i
aPhs9YtXNwi+dSfyfHYkDa0tFf9+JXj4UlOQQDQNC3U678qv6yQOsuuPH4ql
4TnduSd0gpMcvP1r4mlIK7yn40XwiEG+j0oCDUsEJxy9CTbZPO9+9SZRz0MJ
GQeCk4Uoe4cSabisU/meKsFjP2OdLJJpuG7drh9jxPs62x/supdCw1qPj13p
BNeUF++eTKWhwZhbDBBc/LDO2TSNhlOOWrx1RD2PInv23HlAw0tqZHcKwQn+
My6jGTQ8zhefm0XoccFe0NX4MQ0dL6guLBB6+etu3JeYRcMihXX7DQjes15n
/1AODf+76TXkQ+hrtsTCjfyMhhtcxfNCiX7ofN3nnpBPQxMp5beRqzphU+1x
j68FNJTe/VwtRKITRPMjD+gXEf4tKuDfT/Tzz81Uz7hiGgpUbvPVIPo9FFzg
1fuKhkZrjfYMi3bCRxOuz9VyGn6dFEANwj+FShO+XRU09E/jOL8g/JUmvOKQ
9gcaXh62t1Ei/He2dcvhjmqivnwH8Q7Cn76vKf4aNTSMdPyxfM3yTnBMdw64
VEdD81GaDGVZJ2j6hQWqNNLQ2O7YovcikQe2t4+eb6ZhvKnVqOsfLgjqPD3W
1ELDxnB+mskCFwb+fj5xpoOG+3ZYXW2f4UJKgkpwTR8NhZlV27aPEPNz2ujM
hq803HUw/uyDIS6c2rvz7LFvNPy9eLr8zyAX7BTOh6wdoeFV7+qLob1cWFHa
GHpohoarTmwdf0vM+9S9r5fKZ2mYtKlBLLOZCz1hC2HiCzTsOs58c7aBC2XW
8hGli0S+7BznmWFy4WhP0FUBfgtUP9wHSq+5sL8qNnqfoAVujtF7E0Pkj1XO
g5gCYQs0XVBy6nlB5M/Jurg94ha4TWZS3uUpF7h8G29kr7NAjdol22+kcsFM
szrFQsMCB7JfdW0+ywVnXppjo6YFvud0+Ww5xQW/rhqR3Vst8LOR83Wlo1yI
j2GHeu2wwDsTR2UHvbnw+VuLz0VjC9ylqlWWZMcFr/T+rS+dLJB5su13hxyR
n0HeI4bOFiihl7CrQ4bQi/4t84OLBR47ov2BKcWFp3+GpRvdLNAn3EI5WJAL
P52nFocPWeBQeGvR+kkOhIkvrZO9YIGBu5xmr77mwK3vYeFPQi1waU6JemIR
sT9VLDfactkCrzxP6E94xoHaAP4CwygL3K/YpO2exgHxWrHbu25YoMjXc58d
wjiQHvafZ+xjCzypftzjEbG/lf80/D1bT6ynJaDuzocOSGeVHNjZZIHZES9i
Ess6iHTZVpv3yQLnig23RBL7K2232h3vdgss2TrsZf2wAz6VrdvxqdcCvcvv
PXK/1AFDl+aP501b4PGbdqx35A6QXFky7LXOEpf3Hy3qy2+HAPWtnCZvS7yQ
E0yqOt8GpDGvlj0CVuiDhut1n7QAVV7aRuShFR67f1ctda4JikarNnk9ssJZ
1TdPTo41weaSE7/KHlthy4esBPuBJlhm2ZB2MNcKf/MNz0k3NsG7wCtTlUVW
+Oi68vqeJ01Afj19+yzDCl92H+92c24CXYemvm8jVsi9rTj2uLwRHq+/WGI0
boXmlwr/ahU1guRX9djESStcJaFa9z6nEaaDorZTflkhdUPP0OztRii8B1H3
/1lhethl0qvjjbBl6JmGk4Q1ZrDDfe+oNIJSaHTwhx3WeEqspPitQQO8Mcxc
YW1gjRcK2rX3KjeA3WzFjc8ka5y+svefsFQDBB+Zefrd2BrZZi5WBZP1wHR1
7xW1Ju7X1uxazK6Hg/q6lnvdieur2lIL/quHrKne9dNR1jivvPzpNWk2kPL+
ZJ2PsUbpmyuMh/jZ0HhojS5fvDV6u6Qs3TNPnD96rO3W3bRGvczDq88R5w9a
Q0k43rPGV0/Vh2qI8+/33LjR2AJrrI2Wv5mozAIVb/0KBY417nlXx/+PXgfx
cvSFy53WSO6b/PvPpA6mug9s7/tijRfN8nNW76iDNy6xuff7rdGzWGLHmY11
YGfXfXvNqDWa7Dp6VHOyFoINI44KLLFBqRwlkZ3JtdA1dyfXd5kNqpHav12P
qwWT4rzBquU2uPRGbk5fWC0Ia7e7hgnYoO2hrun3AbWQpqhm8VvCBoe/e0wE
UmuhWrxp06iCDX6Ea2qxMzWg1vDV1UrZBmOcw6YFRmrgeuzC7WxVGwwt3tx6
t68GXPjkRX00bdBY7tb474YaGPtzeuGLng1mcTc2PsutAcnvMp8arWzw8dDl
cY5PDfF/VltUk26D2WnH8u/ur4EvB8ws4uxs0ETmzquju2ogqyuwwsLJBiMs
XhXuNqsB0qcPuR/22yAzSe3uWqUa8Hp7MLzomA2uWhk5EDjChLGA4SDTkzZ4
PahIp2+ACUEb/A+3nrbBl4Lvrvt3MSE6JNBh7pwN6p/sP1dTz4R8g9OypCs2
6JMUFP2okAl6w7Or2FE2aHCvMLMtlwkf7pzh2x9jgzZ2+T/kMpnQMhcydvG6
DSadc+NblsyEheLLbypTbPCDcslQ3wUmhPuseO54zwb7P61ntAUzQUQqMuNr
mg1+y1UYGzjOBNlT0dF8mYS+D1OUab5MMNuW4GyVb4NC4wqvt9ozISH//nRz
pQ2qiz8quavChHVust89q22wb9XzRSkFJjwSfcidZtpgKVWZnSPLhOKAzA9S
9TaoNFkvJiPNhE61p9dd2m1QsEQ8WYGfCT5cjfAfHBvkDbh7xXs5E8aj84NC
uoh+Np1c/3YJE5YNF+6/32eD7b5R5qXzDFDOKlXvG7HBeH5byfYRBhTuNpQ9
MW6D7NPHH3YNMcCQr3zV8ikbDFhdM/17kAF0n3cLCrM2qHj/0lxYLwPaJE3G
iudt0NsvteDHFwa4VxH/nv/Y4G5FVwjoZMAJeQbz0FI6pmuQvpe1MeDPJ9qb
BR46btwjKRT5mQFXLtfmx/DSMU1nhYT/JwYk97GTngnRce51Cje0gQFyN2yj
jUTp+NN8PvM5mwG5xk3nG1bSkUrt8ZyvY8Db9BavSUk6KtJLaz4zGdBtvcnt
tDQdRczG+wMZDFgyH7Dn9zo6vj7FXCtXzQDZzLKdoRvouJM0cmTkIwOM7fno
K2TpODO39Ft9JQMO/N1Ji5ajY5VgQUTNBwaEZaebiCnQcaAxnd75ngEZTqOk
W0p0PJkTbMpH8MelBjvWqtIx+Vd3gOU7Bnx9dkX7vjodj6y+UJdZwQBel09q
mzXpuMFzwWMtwUq8sopZ2nT8YPxHJ/MtA2iF/rIaOnSMEFOjWRB8aH/pukJd
OoapbUlbQXC0IK/kDn06dk0/JXPKGZBT7CD2xpCOr2rpSgyC6w6kCRgb0XG7
8Gs3FsEjoiM81UjHwZ1HhocIFn6tt2hJoWN50NO3G4nnafhGzDWY0jFKyrsi
gGD6quYpRxodN8/cZX8iOLDiv9EOSzoebnestSfWe/3w4W/7begIETeTvhFc
sOZVb78tHc+927sqkai3uXJ550EHOi7SCza5EHr8DLRvHXWkY8bM7Ye6hH6r
Ze43Ht9NR8szq4JUCX11mMO1s3vo2HhfKXQ7ob/TyR1VIa50lFBrv7+7igGn
ZcMrlrrRcbRPueg60a8kVmPpFQ/i/TEbHvQQ/WyX98u77kPHt++WXvlYy4D5
xuIsyUN0fNw2B84sBqw7z5ORcpiOIVMPnZbVM8D1c+rtR0fp6Gm+UfpOEwPO
XxpKUDlBR02h+SsRhN/ua+jG5p2io/vgrc//92N3REPoq7N0dPm1KYndQfhn
q8w58nk69hetq11J+Fn2y8FTHy7SkXJ/wOMQ4fcDusv8WOF05F3xG136GTA4
qLOzJ57wT87dPTvGGMB385KNdwId6bRImtwkMW9Qbz58k44pOw5kbJom+n3b
lzSdTMdf/83I7lsg+meeosCfQfgxea6tko/Ik+nBjXGZdORaMz/QhZiwJX3b
OoksOgaeydw0KsqEo3MsUZlndJS3u13hKcWEn1n/ZjVLCL+c+yC9XZFJnGfM
0q+W0pGhgVErVZnQujyO1v+ajjngJfZHgwll7uvuJL2jo6zk8iU8ukwIld5u
8LeGjqaXD+SwzZggGuUXUttJx6N2KZvwMBOW6BbIy3fTcf8ac2Pxo0yY6p9l
ne+l48EI9cGJk0z4DBEbtAfpeOP7ir1cIh9TZ9Pe3h6nYz2jUMvlJhNUfT8v
8V5mi/Xs6atDb5kgIymT/Xa5Lc6tn9l6+yPxvsoD9tJ8tujm/K7evpYJk/9N
PKgTssU8DZmzo5+Z8KpVkLJV0ha7zbK7X48SeWqGEf+UbPHUmrUD9zfWwAGF
XIEUG1vstaN/YMfUQHDVfj9FO1uU/3KKE3azBuK9JeoKHWwx/OCqIMrdGnid
eSa2brctBnYcKR/MqYHVijSxvx62mD3K/VNQWwPVil9Xu58m3jeqowfCtaCi
vFFWMc0WY95KbHFMqoUJ1Zu6hRO26Ky6NNSrog5cm/9OnKXaoX9UQrwMbz1o
PBRP33DNDgUfZh1XlWmE+OJK1zU9dtjGk3tJyKgJhFcUtz9Ws0eZ2JvCfLrN
8OmBEXlO3R61eQ0SNxg0Q4oR44HFFnukXfAR3mrUDMrB7X4jWvb4WXWu1dGs
Gag/Fv5o69pjV1WcfdiuZjjfBJvK0R4dIv+Ehp5uhrF7NYc+OdnjWqc3I4ov
m+GlgUO9/G57/F74fRdPaTOEtHG2nna2x6ubmnS+vGkGQfGR39J77fHWzxDX
ax+bQTFcNH6/uz3avW5o6P7UDPv9dhYO+dnjsn2dw6SpZlDg65Qy9LdHr3jH
8GW/mmEkw+tcbIA9/uvY3FI93wxnu05RNY/a4/awI0+sln6CJLvk1pOn7FHO
l5JgtvIT7BuVNaw+bY+vy3gclq3+BPLR2Wlrgu0Rnx0cfrPmExRWlh0sO2uP
vtqMwi0bP8EZdwpbKMQedeVX//gq9wnwb532vvP2aB38VChV8RPwpzgm5V2w
R+MvpdL2qp+gQbdr4d9Fe8zk9ZFaseUT/A+J+uZH
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$24554#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 20->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$24718#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$24718#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{40, 0.3453280145211532}, {
                    40, 0.22378792358829927`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{40, 0.28455796905472625`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{37.84807604734959, 0.28455796905472625`}, {40.,
                     0.28455796905472625`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {10., 0.1470244815587951}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {10., 0.1470244815587951}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedInitialSign\"", TraditionalForm], 
                    PlotRange -> {{10, 70}, {0.1470244815587951, 
                    0.4391110734433527}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0282\"", ShowStringCharacters -> 
                    False], -0.028239866651226173`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00291\"", ShowStringCharacters -> False], 
                    0.0029068622357156723`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {112.875, -8.64}, {Center, Center}, {
                    215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"2.151923952650404`", ",", "0.`"}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {112.875, -25.92}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {112.875, -43.2}, {
                    Center, Center}, {215., 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {112.875, -60.480000000000004`}, {
                    Center, Center}, {215., 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 225.75}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )]}, 
               Dynamic[$CellContext`i296$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Fit,
          StripOnInput->False], 
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i296$$], {1, 20, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->1.980473518371582,
                 AnimationTimeIndex->1.9120407104492188`,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Right}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8438358139086275`*^9, 3.8438358426837225`*^9}, 
   3.843835877279204*^9, 3.843835918588624*^9, 3.8438360799454117`*^9, 
   3.8438363102588143`*^9, 3.843836541366335*^9, 3.8438365980408297`*^9, 
   3.8438366542539835`*^9, 3.8438366911945367`*^9, {3.8438455577398596`*^9, 
   3.8438455833173018`*^9}, 3.8438478486879854`*^9, 3.843847900518881*^9, 
   3.8438498686606565`*^9, 3.8438501034118953`*^9, 3.8438506095471706`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"29f83eb1-ebb1-4ad7-8436-e44bdae84a79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedInitialSignSteps\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"pixelIterGraphics", "[", 
   RowBox[{"10", ",", "p", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "30", ",", " ", "lvlmax", ",", 
    RowBox[{"pyrfiab", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"(", "0.01", ")"}], "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.8438367140859222`*^9, {3.843837216841828*^9, 3.843837217026764*^9}, {
   3.8438450372087383`*^9, 3.8438450410522065`*^9}, {3.843845256034192*^9, 
   3.843845297903141*^9}, {3.8438500815055695`*^9, 3.8438500855681996`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"ad9f899c-9ef3-4647-bafd-5b00bedb5429"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.8438367322009573`*^9, 3.843837247508259*^9, 3.843845055857853*^9, {
   3.8438452615640273`*^9, 3.8438453061392965`*^9}, 3.8438456211106057`*^9, 
   3.8438478516419*^9, 3.84384790403448*^9, 3.843850116399948*^9, 
   3.843850614033615*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"bb29242f-0c49-4f92-a292-cbc66991627f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mode", "=", "\"\<ConstrainedSteps\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"pixelIterGraphics", "[", 
   RowBox[{"10", ",", "p", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "30", ",", " ", "lvlmax", ",", 
    RowBox[{"pyrfiab", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"(", "0.01", ")"}], "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", "mode"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8438452881173754`*^9, 3.8438452961491766`*^9}},
 CellLabel->
  "In[638]:=",ExpressionUUID->"7e4620b8-81d7-4550-b25e-cc10efb5e918"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i3717$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i3717$$ = 1}, 
     "\"max\"" :> {$CellContext`i3717$$ = 10}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i3717$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$444092#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$444092#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$444256#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$444256#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV2Hk8VF8UAHCRPdkS0ULJUkJSdveMZYYZy7wJKSUJaREiSrKmImuSJSXZ
SmUnFS32yMwwi6WUNpWSlJKKfvf3T32+n9e8d9+555x7XmregQxfQQEBgUv4
j///TrJfqi0goAPGAvUS2wLaET25SfWQuA5k/XC95xTUjpayvJUG5XQgoVcu
xS6kHV1zqRStWqsDYlFXr1odb0d3d9uN7abpgCzdqZCe0I4+HI0oenhRB1rX
i8rzLrcj22svVkRv2ACiBf1/zrDbkcCfUrn5HboAm70aW8w70LEPFwx3hOrD
DfmFN5mUTvTGbGBncslGmHvANJc82IUWPssef8w2gLnRnZ4T1U/Q3uS+iq0K
hnBiPfOipm0PMtRYFGRusxk03MV1GRNPkXX/w32xyVvAZURS98okE4l1T7U9
YRrBIclvedapbATl6qv2/zGGh3Eqnzqv9KGGfHalD8kUvMo616d29KMr4Sct
7gSbAats9xo3JgeZX7muL5VvDr2/DT0v3uUiVT3nWZVCc6jbVXXGuZmLhB79
eLyu1ByantusFXnMRd2vrLbaVZlDXujuioNdXOS+duRofJs5mE2NZSoOcFHI
Ldn7s5/NoYV25ezkdy4qvxdhO2ZhAce+l/05vZ6HUmlqi39YWUBLGLvuvS4P
BT/v5AvZWYA9ySbQ1oCHjOeX+KsxLCBoqnZoxpiHOkiVSTv9LIBbhFSNyTz0
qusNqz/VAkqj9tHXePGQ0oDDjocvLWBhxLdV5zJ46PLB91Hhby3AWNpTl3GB
h1YLxBXpfbSAk0bxFkuzeWiD9p3PBd8swKeVYGTl85DVCbXoGGFLaNnmszCw
jIcOrfpZRFpvCWc/xc+lNPHQw30FE61hllCewH7u+5aHbP6ayEWesITzZ/t2
do7xUHc6d4thjCUEbbKLWfuRh7h3xWOKEy3hqVTnzYEJHvogGSqXkG8JbvLs
avkZHpKrsjMit1iCwvuy05/E+Mjv11RMlxTC8TVoXL2OjwyD/ZaOySGYWb+t
zEaHjwTHh28KKSHw6prq8dblo4JnrXzL1QhMW0vuZxrw0eCDLJ36LQhW3+vZ
3WXKR/YJJoOFu/Hvj2rKRlH5SGn+dsBDHwS1G6cX+zjw0VjYaqGR/QgOFJfu
IDvxUZy/pK5SKAJS4uCrfwQf3aONxKeeRXDHftMweTsf6cjF6p2oRvDy8POu
tfv46HfSj7acBgRDm+x29vnzUZfQgR0N9xFcWSbudvwAH/n+YCRMtSP4qlYa
9yCAj64Mqj/bN4xgfKXMpxWhfHTW2ce6fAGAe+Z9J4MYPppVEJu8uA6AWqkr
15TFR7+cUh4t2wCglnrsxtRFPvp5Ru58vh5Ai0X6zJocPpqeXb75miHAx4qv
zVF5fPRlZOOJ25YAjps/qUgV8NHrEg/RNgZAXEOwV2oZH42+GB0kuwKs3Ton
m36dj14q+pU/2QaQY3k0I/UGHz1PDHJk7QTwLZz6F3uTj/gBCZnDfgC63zNa
rSr5qHtz5aqpCID0myraGxrw+x42nAo5CbB6jO33F7uz7G7Lz2iA0xPpiV13
+KhtWZvv31MApoKz8dvu8tGDucGboml4vQUvQulNfNS0xfNkUgZA1OXdQqLN
fHQ/8I2T1AWAd6URcfewG19NTMnlApREkt2VHvJRTbug8coigPD08qTKx3xU
NX9GvLAEQNE+uMOxhY8qjaSerbkOcM5hz/wH7Fs3FKO0bwPs45zyX9rGR6Up
Om2GdwAiLZydHDv4qLijOuvOXQCDG7xMDnbRvy37TJsA7l5Z8sqtk4+uBpMk
4DHA4474HJcuPspzdaPTegCM9+UX6XTz0YF0HutaL0CabfZUJrZJj4vzbxbA
rkFK3S/sQdjqdIMLkEqLyL/Xw0dlJ/p7BQYAFtu4tCk+5aOwBsLRfQjATO2C
7xFsBR26g+gLAN7dH0qqvXz01o/V4zmK75cSuCEEu67QidbwGuDJ0X8PW7EZ
io5U3/cAp+plfXYx+ShdkGrX+hVAwqqv6wiLj7wsnnQqfwcwWtz7pRpb75gd
5cgPgHpnlP8FmzlBJqv9Bhj1Njrvxcb5qdXRfuwvwA0HhZEs7IC9trbseYA/
z5bVdWEvGrK2iRYiwVEViqRmH84X+dZWvjAJGt90pjCwbzpZWeuKkaApdlXh
CeyIxMctCRIkSFsQQb6GTW0Dq5FFJLAIFIruwF727+FjQ2kSDPDf0z5gfzBB
pGRZEuyz2Voh2o/3P/TBozfyJPjXGlymjn2m0gLMlpKgfE+gMcJ2G296eF6J
BOHax7y3YWusNUfjyiQI0WzUCMD+sfv+A9IKEtze53E6Brstz9QydxUJDH6m
xGVgX+Ddbf6qRgLplyeWX8XeK2NiYadOAoYu4XoL24DW2FSgQQLxrya6DdiC
p43MZ7RIYK3vfb0Zu/9Rw32n9SRY/OdHWwt24Z/NZqUbcHx2qiW0Ywdtqb83
p0eCJC+Z8f8NwYamrgYk3P8mp1uxZW7V3r1lSIJPMR9LH2K/HDMwWWhEgq31
6xfcxa5Qq2n0MCFBQdOrhVXYUTs3GteakWD4mlFtMbZTdtUdCUsSKIRul8rG
XtGvZ+QNJPAwD1lyBvvzosqGu1Z4P0Srn4RiN1F0t8jaksDmtaWuF/a5uNv1
/hQSLBi0s7bH3tGss/mRPQmEfvwW18de9+tmnaIDXq9tbPwS7FmD9YaBTiQQ
5olW/8T71RVQXttBJ8HaqnuZfOyc69qbVm7Fz3vdrlOHvWWllkHvNhJkRmWd
9scW2V5Wrb6DBBP/qu0RNi9TY2PkThL8FhvolMcOFV+rv34PCXa/Hp+tx/nm
v0XWv34vCdRk01yisXfunStAfiQw7PUTJ2PbNPOkXQ6SYKfFrTM9OJ+Nxx9T
XgSQICFX0SUJW0exIto/iAQrONUxZGz54NOTkUdJcFf3sMAdXC8iV45oih4j
AetXittB7N/dnrszIkhw5OuA3Ars1+pGrJJonL+N71qP4XqrGXxfwUwkwbfn
nRtlcb2WCnPH3JNJEGyj9KYK13eewaOVb1JJ0HI8UcQJOy45J3UmkwTzl5/c
iMH9gAH2h1WvkKB1ruBcJ+4n5IDNpeVX8b9fyJ9hYJvmqb0wLCIB7/ia189w
/1k9Petof50EnvP/tozh/jRVVr7hSA0J3hRekRzB/ewt96Lv3zqc/9TA8y7Y
gwviL5++QwKfBU5FT1r56JGHh9SlJhIcGNfffwv3w3TpRROtHSSQGD5Y6fKI
j/TDA24pPCPBZENl6Mb7fKRevP1twQgJZq5znePu4fOyz3b5ulESjHycfsrG
/Vtg/cpky3f4/tdX1/o18hHrBfPgvkkSONrLbQ+r56PDZP31d4Ws4Fmh2Q4N
fF5sOrpUVknECg4lf0FeFfg8K/r7M0zMCkgRh9fl3Oaj2AVPWgylrKA8tUZO
8Baux6Y9O6qWWsHaN9sYD/D5dN8gM7FM2wqkY45fGSrkI7FVP99nOVuBat26
iaLzfNTr+Lx3mrACs/arnVcz+Oh8ZEvtVhcrMCJ6ey+l85HKcGq07HYreCKm
6Z2cyke6WZqKKd5W8NPy49NtSXzkIrmdfOoovr5I8n5OLK7fmfvFRy5hu/Mj
ew7zUZKStPXCK1Zw60Po/aP4/A418X6VddUKZE9KCa48hPfvhNjKuyVWwHq7
87b/flxv8y7Z/yqt4JN4R9nYXpz/Il8Sk9us4PJxh9On3fH5uUQ1sHTCCrb4
xTzwAj76vvGUyTCyhlpd4wc8CXx/52svdltZg4VxyfGl4vh8P/Qo/p2NNRRd
7KxyFcXnf9nf3q/21qAmrFjIEsLxXHHUW9TFGsp/0r5V/+WheXG/c4b+1rAh
zz9v0xceknhNGUlNt4b3LrDcls1DquclY61fWUOElnBzMJ4PT/vJUwbDbeDT
pkVlJEUekmzbpqWiYgvdi3xdD2VzEWOA/ypyhS3ccQ2eLs/iopxx10svVtlC
0uOmm+OZXKQh67L4mrotfDAoDAxI5yIrT/q0lq4thHAyimMSuSjil92jLSRb
6GjNjxs9wUXjOqbujH228F61UjJ/DxdthLuydfttITcuvEvIi4uObTXuUThk
C3ppAoIBnlwkErHFcijIFsSH385Ye3DR6k4Dda8IWziW8p680JWLduxZ/zUg
xRYM1nht7LPjoidZy88m1tpC8ZMQw5qNXHS9xM/uZb0tRO9dluGmz0Wn66vE
NjfagnCLadNfXbxenk3iaJMtSBl1JjrpcFHTkoAkow5b+DL2xkVMk4uqMpuT
3w3awkCyvNXAci5KLRJ1NHtmC33Psz7mqnBRQC0hlTFiC965E6meyly0jvMu
xfy1LZBbvr+YUOSiIrnFaZmfbGGq0ei9ujwXXczwzCDN20Knf4LejDgXhRZe
J7IFyHB9IkrxmRgXba3+JjshSAaJM2U6j0W5SKbv9PkcUTJs27NzPFOYixJl
KjMnZcgwnrtRxGUBF0Wm/cu6vIYMY/bBbqRZDtpRYO/2fS0ZjsRFhtr/4iCT
ysyl9lpkOBwuM7l1hoN+MjWzp3XIUCNwQzjoBwcFLqbn0LaQgRp2XLJ9ioO8
U67mzdqRoWh5tMy7cQ7yTdsmH0cjg8uR2BZBbP+MxckSTmRwnxMKXfORgw5n
RZ5U2UoGeV7p24D3HHT8sruXxS4yOITr+Wm+5aDIAumh9t1kyN777+SuNxwU
VdhBOHmTobgrsfbiaw46VWJovXsfGapXfjot94qD0m/LaMQGk6Fk7Kax/gsO
yqzsvCIeSobPp1SuR49w0MXqKMXzYWTwfhm9tf85B+XXfxYrOkGGxHHrgNhn
HFTW3PWpLYEMj2wTlooOcVD5w2gfx7Nk2F/txwoa5KBbj7eM8JLIUL48/PXI
AAfPk8XMsTQyVMhbabTwOehBb0y1WB4Z6gIdUmu5HPSYZbQuI58Mq9qC44yx
2/q+XFtWQIZUD4HJRxwO6ubtvLCumAybj4bB834O6h2Ql6otJQP57GedQGz2
UHeC2Q0cH4GPV4WxeSPG4Q4VZLiAzuta9HHQ4MvJSW4VGdbk9Dq/YHPQ8KtS
/121ZFgbfks0Hnv03ZIdhxvJYDAeTB1gcdCb9z39P++RQVn6/fPT2GMf42jR
zWTQfr5cwRT788RX8/QWMoSmv0+4ib9nJyfL6pXayXBOTLJjP/a3KU/dwk4y
RFMX3V+P/eO7Qpl2NxkeX6nxn+rloF8/nq6qeUqGe47t/few/8zE55iyyDBc
IDl3Bnt+1lS2tQ+//4jDJ3dsgb9TiTQuGayd6YUbsIXmrwty+WTwtxhZLYIt
IuB1YucQGQ58vRfy+ikHiQkqTr99huNbVZXdgi25kHko4AUZGjsSzpdiLxZJ
ePdjlAyjEQv8U7Flxcw9o96QIV/hk0oE9hKJ73yRMVwPL8Vr9mMrLip3TvuA
30d1re4ubOXFe7oUP5EhQW3hBRfsL7Jyk6ETZNDI+6ZIx25RaFXonyTD5f5C
CWfsi8tCzfW+keH3qzWBBPb+FWv3Jk+Twellkt02bHM1fuLHn2QoffUh1wtb
Zu2ZKvLs//tJ9wvAfqtlPFD0B+cz0V91ErtR5+OcwDwZDk7ERmZgJ+vnqXsK
UODoeNDT69hehjTafUEKcHZXF7ViGxr/DVYSpsAFH1fh/+Mjan4756goBbqk
A6eFcPyGkefDfnEKRB2TCdXGrrCWHtNbhK/X084wsN1owZvGZSjgJDEYWom9
znn1Doo8BW46O7q++X+/GJyYYgUKDLcX85Txfpfs2Mz0VKbA2FWrlgvYxzzH
pu8vx95023AA28E7W2XZKgpMb7XaugLn0/T+WX/OGgpEZhsW1mHjeS9NX4MC
Sz/W84VxfuYHezSkaFFgfk152w5s6+PNQnYbKPCzehNfGuf3+bOxV5q2UIBU
1762DOe/X7JB+zITCgjyB0OX4voxTX/zKcyMAqm5kxcSsV9l25psBAqEGwS5
nMD1pl8mzi2xp0Ba+sXuZFyfC2/e+y3oQAGrm0uuKeP6Haw4qOblhOPhyzO5
hR3d0HtYeSsFBnaNZg3jeme2Z4in7aRAbf++I3txf7j2xEr/sycF6nzIDxbj
/hHW+93Nfg8FLo6MFzZjr+C5Fgv5USBOk7JcA/efQ2+XoWOBFCi/kOOshvuT
pNC10D1xFEjK/W3VhPvdwtmHW6dOUaDptMTT6g8c9PfLiEHsGQpY6r/fcBP3
x8/Dy6auJuP1CpO8b3zC/aEmI2D0IgXu9i8e6p/koDTvWL/dN/H+8zkeXNyv
z7oX2E7e/v99Tx1a+JuDYpya1aOrKLDE7NMXoz8cFGQ6+/pKPQWYFUv0bsxx
ECEXvPvFQwqE6gR9qBXkIvkWL/ddXPy+HhL5PlJctKgxymiCTwFVjcmWrsVc
tLAif+nJIQq4KoRM68lw0XTuIDf/Bb5eeX6XKD6feMF04vkHCpR86socUuKi
bDWgesxRoHhv/2fhtVykErvKfLuGHehoexkRiIvKQ8RWj2jZgdQma3VBEheZ
+k2J7llvB0fE/xnXW+HzmdbK8de3A42NVx6rkfH8oLDv4DFTOxAW7CiWd+Si
peUVedlOdiDhrrTLFZ/vMhyLWV6YHay2u/1h7XF8/q/d2cDotAMOu1WwtJGL
1lssqwzfZQ/wqK+0ZRMPVa3Z/0fQyx6E+i6HsTbz0BaJu5RUb3tYaegX/syI
h2DAfbR4nz3EO1Z++2rGQy7BObL9wfZgwIhYJWvDQ5EliqE6p+0h42nlU1UX
HuqVWmryqsIeDrOP04gQHmJM+yYcqraHPnbQAuOjPDQ4XN83U2sPowujV64I
56HXZa4HFt+1B0Of4tDXETz0k5R1yazVHgZPHRh1j+OhlWFL5rMG7CEh/Kr+
ZDoPBb6Qa6UKUCEy4EJi1i0eauvY2VwuSIXLJd/7VSt4SLmy9I6EMBVKWYFi
5ZU81BFteqtbnAqjZUZrGmrw/dS8s6jyVFiqyzhb18hDzL3V+6gaVMi5p5Rp
28ZD6g5/9pRrUSE77uCW2+08FGFou1NiPRXsfzaHyHXykIbwEL1bj4rnq+Ey
3hMeiioVMKWaUMHAAflZsnhI96PzIqoDFZSXr3hwYYiHTvXlipQ7USFDJi2X
M8xDw3ffCEgQVDh14E2T9HM8PyaF/3jiSgXa3M2O6Bc89GJ9wQv73VSI3Su+
zfIND6Uc/lJlf4QKeR4eE/qfcbzcjG/eCKXC6mVKL0kTPGSM4krEw6nw9Udu
hzOeV99KL817coIKT+77ent/5SHzaot4+wQq5FocsPCe5qHP35Nd7XOoUGmV
ItT1B69nsNDtch4VwuIdMwvx/NvZ3LBtKp8KAlo7P4TP8dC1M6PbcwupsKBB
iqX8j4e2qRh6fiyn4nltj6iJIP5+FLDfbXGbCs9vGpr+wjZ4t8sro5IKB1yv
S9bh+XpR5RlvkzoqHD6jHK4mzEctVs/8EpupUK/c/aEfz+NVml/3jTzEz88l
JYaJ8dHlRcL7N7ZQoeD1zcL/5/djfN2DQx1U6J9YoOmA5/sNB+ICtdlU2H5p
699zi/hI2Tk76GQ/FX6pLuDJSeHvG8NbwX1cKjCKv89nYb+e44UcH6LCSDN9
U8Zi/H2doX3syWsq/JlMurhDho9Oh1keX/GOCtKKAkdasUM8tkYEv8f7Gbjo
mJYsHzmtPRm57DMVbJ9mfh3DNpM4fzLgCxUkPfduBzk+0posjXr8lQqJpiFD
WdhCd9kx+39QgT7xV3KzPB99vfwutnmGCoH0nroo7Bdxv+Nkf1Phi2L8njbs
nn3Sp3z/UsE4yUlKZAkfNTqoJ9ydx/GZ2FZrjV260eS01AIa9J994nQSO3Op
05k9QjSYKewdrsGO+eN9tl6YBhnRqYy32IdHwxPFxWgg5r+lWlYBf++3Jyft
kqBBZ+HklCm2fXnhuepFNDANeSvthb0lrSFZWJoGT1YjkVhs9dCelO2yNBj9
qc2+jC27fTT1tjwNPmxm+Tdgz1v8SFuwlAYOGtt7urE/r5bIcFWiQfjib9+G
sYdEV52/oUwDjmHb8Bh2x+dNmXPL8f1fzp78gl3XZ3eBWEWDNtfmgSnswoZd
WSVqNNg4YvzmK3bqpSMXZ9fg+zVdvPQJOzLmTLajBg0WmC74+wp7v29+TqEW
Xn/+tX8cbDdqde6PdTQ4p11S+BjbRq8jz34DDfZobRop//+6iJ0LWw/Ha/FT
rRRs/5EnUtsMaPCpR8/0AHZEHa1zxJAG9//pS1phJ5/rjfExosEb6rWsJdhX
vJ1NP5nQ4JWjG+cVjm+VSd/3YHMaGN5Y9eAGdovM1tu/LGngNsd2PoTNec/1
iybR4EZCXpw29tsHbqoiNjQwKnB0e4X3+2fW4FAymQYDqzVYmdjKNs8d8mg0
SFaqevwB54+OiqeImhMNWl8r2JzDtvz28mEZnQZEp/hJLWzvq28M6l1pUJe2
UH0rzsfQcN/PZu40qOx5mDf6fz47vS9p2UED2/7gIX/s8r/jSuzdNEibXP1o
vzQfNXEO9bt508DHkx/0GtcDs/zLuREfGqyw+/jbFXvK/dv8+H4aRJlfvLUB
14+gfmhj8CEaUAvePs/A9bZE9Gfwr8M0sNjwZ+arJB8Z18++FQ7F+RHx8V8B
rs8Y2QU9qlE0MK4sYz/G9X3+Q9ypshgamFks6ZsT4aPihwstdeNpMO2m/NJQ
5P///xKrNjtLA9aIx+YLC/lIuls62+08DRQlM2yUFvCRamEGfeQCDe51la7f
IID7yzF5CZ9sGhQc0bS2wP3ITUPxZHA+DY6a9S9xxv3qStzKvcmlNGCElDeZ
zOLzbfvV5fI3aPDLZ/qq1i8eatFfzc+9SYPAoohBuRkeevdirX1ZFQ3k7xQz
hnB/1DHboNdyjwbLJR0mdHH/vP/d7M8MkwY3f/QmCYzh+z+94721jwaXMxz/
NL/loZiSTd0VHBrEpu28GI77NXnb+lzfQRpYHXHY8XKUh/ruKRtxXuH3VTkc
GfuMh97Hzh6pmKbBO9I5kjybh7p3HB0Wn8HPu7pRKIvJQ7c2TZF8Z/9f709N
+V4eOvLug8zyeRp0vJm/vrCbh+bsBisSRR1AeF74c1MrD8nL3Bn3UXaA4bEH
KQkN+Pz8YMB4tNwBchiR2qw6fN4+rrirssoBKrXfeynU4vWHlJ7tX+MA8s8+
VGXj81F7IEsDNjjAp/MXjUOv8xC6EuqtAg7QmhMwn5bLQwd1DIb7fB3gpWT+
6oPH8XpmlH/v9ncA3RnJBDV8fke0CCl/OeAAUR0uQdxQHp6/eNslghxAOzr0
u14QDxWfOjZkFeEAAh4L1z3ww+fb8weDtakOsJy11t5sK54PUmgDWXccoNY8
iDegzUOmX3y428UdQbNb0+0ik4vk7lOuNUk6wsuBnOz2Hi4aP7MuaNViR7D3
Pcf81sVFeWpfJd/JOYJ6RsF6SisX/XE5YR203BHc1+mKD97hoqb7GTWn9Rxh
0NHwzOWrXGSZ+CC91tURLtTsNekL4iIrdSVHqWuOEN5s3319ERetjUk61mLk
BIO83OePzDlI09fk4dphJyj5kJISu60feT/wP1UX7Ay3vjtdV0vpQ58DxsNt
Q53hY02m5KvEPnR0xaGD/DBnPI+3Kl873YfORgYyfp1whpfuRVbaMX2owjRM
1fy0MzQK5ozSQvrQbEN8U2ueM4SqLMh+s70PpVdeme5vxfdfvf6Pn1Yf2k0/
UPNLgg6aWcWSi3vYKKg0Xc9sER3kTWca6V1sFPO34dZJKTp8vuPskdXORlev
C5UJytBBtSv2lPojNnotcPnSIgU63J//mbqjno38qlmnVFfRIWHsXJ3GVTY6
JLd5m90mOghVpLfbhbNRpL8HN8mQDhVaJfVPQ9ko5UEs0buZDibdZh2MI2xU
cYBJYxjj65K7nXwD2Ohryz7YaUEHJ4ck1eK9bBQSkqcdRKGD1NjQ30Q6G0Vw
//3J9qDDisRUJQEdfH39GnbbTjqs5pUXftXGz48jF0/tosOFlx7r3miykad+
igPNiw4XH7yzZK5hI1Ky8uV5H/w+KScym1TYSMxms6XvYTrcvtXx6rckG12s
PRBjEEuHH1Pa2ZLPWShNItVldxwdVp3jcoMGWejsnmqt5Hg6TKWS3Ie5LBQh
/Yv9LoEOxPRmk3u9LLTrYIJabhKOp4hT4e2HLKS+5mrLv0w6HO3Y/8unmIVq
zvMW9pbSwfpx66a1wSzU7K23Wf46HbyX8Zt5ASzUZZDou/0GHQKpcoXnDrDQ
i37zjnc36QD6dlGiPiwkKV98Zr6KDvZD+1+jbSzkk3lEQv8+HQ4pxHfWW7JQ
4N6npmFN+PdaNZubzfD6NmkcbGrG8fklsa7bmIXSOUM9do/oEN5xvGraAD9f
npSypx2vb0IyPlmThZZekJbJZNFhy5BA/RNZFlLz2Q9DbDqIv6EOrJNmIR3D
1qBV/XSwSXlwK2MRC1lxw/pucukwft87MkgUP3/Ji/NtQ3QIo3vOHZljoq4L
txR+vqGDcI/q35RxJuL4iJDN39HhnOipa7QPTPTC0CssbowOxl0y2tJjTDTN
lR9Y/JEOv5ljr8peMZGqwokczS90qHpkQ6gOMdHxLHuV7b/ogG505Os9YaJD
flevJc7SofKSW8ShTibyMprRvvebDgsOzF2uaGciu6FiY5U5Okio3Hlk1cJE
S1cIuI0sIODU1sna8vtMJPHFbURKiIDfN6iCcveYaO7BbR/LhQQ0jUjeiGpk
ordeHiEFIgR073ov5l/PRDXFDel7JAn4Y6PIOFHJRKVHpZTOLyIgT6KhSKqC
iXLJPgUtUgS8rRD3KrnFRDEfZCvWyBCwecmM2rsbTOSkE9DzbgmBvy/nJUqL
mehT7RqRAysJgD1+R/Qu4XicikjJW0XAaY3p2GV5TNTv2rekR5UAq16uqngu
E92biVqjs4aAJ6hBYfYiE501G4YvmgR8tVi8fHkmE0Uu2ti1UpuAxkzKmMF5
JgocOePsvI6A7U9XM5wzmMgterNnlQ4BfL8xxdw0JlJvTT9xZCMBOe0Nl4KS
mUjpwnvBIgMCBO7I19adYyJJX8skziYCipP3RM0nMdE3kc85hlsI2Oo7Y1KU
yERjA1aqvkYE1GtxdOfPMtHQ9dyyLGMCRInOUU/sR1RKw09TAtYSqgkbzzBR
ncoVC01zAhw+KkUWnWaiss/TbdssCJDdR5ioYKemXuM0IgJ0L9yQXp7ARHG7
Z3d8BAJeCu3aUHKKicL06a+XWWEPhSsbYu/qn/saYUNAkonkob3xTJSvdu9E
iS0B03cflQljPw8KE2GTCdhR2hB7O46JVB4ZZPymECAxv+TvDuwd0pMqa+0J
cH0ktGwxdp7nzVJnKgGJn8uHO2Lx+9zetzGCRsDPWAPrBGyluTVNxQ4EfIpu
cbHHdncYJbMcCah7Fycrj519Kb9v1omAkppLJ17HMBF/3H2nOp0AkTHDrDvY
S00V3jsR+P2iw7zOY7sm9gUfZxCw7+TZl0ewLwym/C3aiuM/en7JdmyuJvUM
04UAWmnzAlts+XARuVlXArJY+je2YDM6WvLXbCNgg8cSKV3sDIVoTSd3Arzt
0vXWY7N9zGqObScg/uJTuf+vy9TNmBftwPGzmWr8//fOQnWdvR4EtDE01P+/
fyojiPFrJ86/h5lu/z+fWagzstqTgMNJexgh2FJTH/Y57iaAWXNnWSa2A5R8
C/ci4JvRg4pG7HNpe05e20OAzrLL8m+xu1+sEOv1xvXjGklVwPGR0B0+P7OX
gBUT8a4O2PYnL65Y7UtA8ItnWxKxzz5lXHfwI0BB+9bXHuwuFelN4fsI2Pl0
ecISvD/ke2fsnu4nQFA5mnwHO0HchvPzAHbro3BZvN9t7gKeaocIePHYKjkY
23rmWEjYYQL8HpTts8b5EkfePH81kICqe8MG9dgtWVNne4IIWCLx5aMOzjcw
PHBFNQQ/r8BVXRfnY3S8hjYtlIBXb2Zv3sF+0P+69uhRAu4eW6lFwflsEezx
pDsc10f6WZFjON9NKxymQyMJmPeFHDVcP8fnxKILThLQsYwi8Ay70aFdvDsK
319p8eE8XG9GnyxWrYolQOt75N71qUxkqKVHfZJAwDtJy29ZuF5Dwj9xv58m
oEawrC0a13NNR9nulWfxflnKVATiet/oq3o0JAnHPz6euSeLiXSvyV5dkUaA
jJ5jXBruFzEHFp7Zk06A8im57BbcT/oMZgJKMgj4Vxbx6S/uN6Gtz802XCBg
Qs/I88wV3F/elg2Y5xJgKB7Z+L2IiRbdznsQk4fje+WI4p4SXG9HU0raLhHQ
eV3+Ka+UiQREQkIcrhDQ9d2dxMP9jaxpKb2zCOfrZFWaThUT5Uzq/ywoJqBc
3PERt5qJPt5ZM/KmhIBWzQ+Wp2qZKNlO/ObB6wRc2lggM9uA+91+LvnEbQLk
essDTR4wkeetA1F5d3B/uC2xX4bJRFWhu3xfNBLw5anoj3VsJlpgQXdYfY8A
999yxx36mai4d7NyeRMBe2BgazGfica/CDTcfUxAQHd1c+lL3D82Zk8M9hBA
9oqtnPrGRGkNrTsVR3F9vl55JGIlPn+ja/NsXxHgEaK+zkiNhQTtiwZDXuP+
IGDhObuGhcKexbmw3xIwttxAO1WbhTwFrBwSPxLgyZxl/TJkIV3qI7M/3wgY
jD2QxnRgIeZIk/JLYQYcLtax3xXDQmJlt9ylRBkwYTOx+HE8Pj+D8i+aiTGg
xHNZu/YZFmoQjJTLkWDASSk0JZ7KQlc0zSQIaQbUdKQwF+az0OHgu7MtSgzw
WFrcM9rIQlLCDYOl6xmgVSxtLf+ThbiFlha/dBgw6HTDPP43C+Vbdhba6zKg
LN608tc8C607Nnjgsz4DqPEnv88KsRH50++/G7cwIGlf5AkFKTaK6kNqzcAA
33UJ6j2r2OjL5Sf7Oa4MMLByuqRCYaN6UwZTfRsDkhOEyCX2eL4bGDYIc2fA
igg5h40ObCQh+/mPkgcDdhsu86QTbKRxanGqpxcDZJY/tSn3wPPYga01Hw8w
wHDDUGh3EButFX2+1OwQAw7e/eh/LISNPhf5nEgOYMD455YzWmF43hs5aqMX
xACy6E2TtBN4PqPn8EOPMmCpscuysNNstGtC1awjjAH6G24t3pzIRupJNwoU
jzHgss2ppT/PsVFN6z3/exEM+JadTkRlsNFxL+teyUgG5NfURNleYCOY69m4
6yRe/239msXZeB7Mc7lYEcWAobAFH4dy2Yi1ZeT3v2gG6PxTUS3LZ6P/AImx
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$444420#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$444420#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$444584#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$444584#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$444748#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$444748#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV2Hk8VF8UAHCRPdkS0ULJUkJSdveMZYYZy7wJKSUJaREiSrKmImuSJSXZ
SmUnFS32yMwwi6WUNpWSlJKKfvf3T32+n9e8d9+555x7XmregQxfQQEBgUv4
j///TrJfqi0goAPGAvUS2wLaET25SfWQuA5k/XC95xTUjpayvJUG5XQgoVcu
xS6kHV1zqRStWqsDYlFXr1odb0d3d9uN7abpgCzdqZCe0I4+HI0oenhRB1rX
i8rzLrcj22svVkRv2ACiBf1/zrDbkcCfUrn5HboAm70aW8w70LEPFwx3hOrD
DfmFN5mUTvTGbGBncslGmHvANJc82IUWPssef8w2gLnRnZ4T1U/Q3uS+iq0K
hnBiPfOipm0PMtRYFGRusxk03MV1GRNPkXX/w32xyVvAZURS98okE4l1T7U9
YRrBIclvedapbATl6qv2/zGGh3Eqnzqv9KGGfHalD8kUvMo616d29KMr4Sct
7gSbAats9xo3JgeZX7muL5VvDr2/DT0v3uUiVT3nWZVCc6jbVXXGuZmLhB79
eLyu1ByantusFXnMRd2vrLbaVZlDXujuioNdXOS+duRofJs5mE2NZSoOcFHI
Ldn7s5/NoYV25ezkdy4qvxdhO2ZhAce+l/05vZ6HUmlqi39YWUBLGLvuvS4P
BT/v5AvZWYA9ySbQ1oCHjOeX+KsxLCBoqnZoxpiHOkiVSTv9LIBbhFSNyTz0
qusNqz/VAkqj9tHXePGQ0oDDjocvLWBhxLdV5zJ46PLB91Hhby3AWNpTl3GB
h1YLxBXpfbSAk0bxFkuzeWiD9p3PBd8swKeVYGTl85DVCbXoGGFLaNnmszCw
jIcOrfpZRFpvCWc/xc+lNPHQw30FE61hllCewH7u+5aHbP6ayEWesITzZ/t2
do7xUHc6d4thjCUEbbKLWfuRh7h3xWOKEy3hqVTnzYEJHvogGSqXkG8JbvLs
avkZHpKrsjMit1iCwvuy05/E+Mjv11RMlxTC8TVoXL2OjwyD/ZaOySGYWb+t
zEaHjwTHh28KKSHw6prq8dblo4JnrXzL1QhMW0vuZxrw0eCDLJ36LQhW3+vZ
3WXKR/YJJoOFu/Hvj2rKRlH5SGn+dsBDHwS1G6cX+zjw0VjYaqGR/QgOFJfu
IDvxUZy/pK5SKAJS4uCrfwQf3aONxKeeRXDHftMweTsf6cjF6p2oRvDy8POu
tfv46HfSj7acBgRDm+x29vnzUZfQgR0N9xFcWSbudvwAH/n+YCRMtSP4qlYa
9yCAj64Mqj/bN4xgfKXMpxWhfHTW2ce6fAGAe+Z9J4MYPppVEJu8uA6AWqkr
15TFR7+cUh4t2wCglnrsxtRFPvp5Ru58vh5Ai0X6zJocPpqeXb75miHAx4qv
zVF5fPRlZOOJ25YAjps/qUgV8NHrEg/RNgZAXEOwV2oZH42+GB0kuwKs3Ton
m36dj14q+pU/2QaQY3k0I/UGHz1PDHJk7QTwLZz6F3uTj/gBCZnDfgC63zNa
rSr5qHtz5aqpCID0myraGxrw+x42nAo5CbB6jO33F7uz7G7Lz2iA0xPpiV13
+KhtWZvv31MApoKz8dvu8tGDucGboml4vQUvQulNfNS0xfNkUgZA1OXdQqLN
fHQ/8I2T1AWAd6URcfewG19NTMnlApREkt2VHvJRTbug8coigPD08qTKx3xU
NX9GvLAEQNE+uMOxhY8qjaSerbkOcM5hz/wH7Fs3FKO0bwPs45zyX9rGR6Up
Om2GdwAiLZydHDv4qLijOuvOXQCDG7xMDnbRvy37TJsA7l5Z8sqtk4+uBpMk
4DHA4474HJcuPspzdaPTegCM9+UX6XTz0YF0HutaL0CabfZUJrZJj4vzbxbA
rkFK3S/sQdjqdIMLkEqLyL/Xw0dlJ/p7BQYAFtu4tCk+5aOwBsLRfQjATO2C
7xFsBR26g+gLAN7dH0qqvXz01o/V4zmK75cSuCEEu67QidbwGuDJ0X8PW7EZ
io5U3/cAp+plfXYx+ShdkGrX+hVAwqqv6wiLj7wsnnQqfwcwWtz7pRpb75gd
5cgPgHpnlP8FmzlBJqv9Bhj1Njrvxcb5qdXRfuwvwA0HhZEs7IC9trbseYA/
z5bVdWEvGrK2iRYiwVEViqRmH84X+dZWvjAJGt90pjCwbzpZWeuKkaApdlXh
CeyIxMctCRIkSFsQQb6GTW0Dq5FFJLAIFIruwF727+FjQ2kSDPDf0z5gfzBB
pGRZEuyz2Voh2o/3P/TBozfyJPjXGlymjn2m0gLMlpKgfE+gMcJ2G296eF6J
BOHax7y3YWusNUfjyiQI0WzUCMD+sfv+A9IKEtze53E6Brstz9QydxUJDH6m
xGVgX+Ddbf6qRgLplyeWX8XeK2NiYadOAoYu4XoL24DW2FSgQQLxrya6DdiC
p43MZ7RIYK3vfb0Zu/9Rw32n9SRY/OdHWwt24Z/NZqUbcHx2qiW0Ywdtqb83
p0eCJC+Z8f8NwYamrgYk3P8mp1uxZW7V3r1lSIJPMR9LH2K/HDMwWWhEgq31
6xfcxa5Qq2n0MCFBQdOrhVXYUTs3GteakWD4mlFtMbZTdtUdCUsSKIRul8rG
XtGvZ+QNJPAwD1lyBvvzosqGu1Z4P0Srn4RiN1F0t8jaksDmtaWuF/a5uNv1
/hQSLBi0s7bH3tGss/mRPQmEfvwW18de9+tmnaIDXq9tbPwS7FmD9YaBTiQQ
5olW/8T71RVQXttBJ8HaqnuZfOyc69qbVm7Fz3vdrlOHvWWllkHvNhJkRmWd
9scW2V5Wrb6DBBP/qu0RNi9TY2PkThL8FhvolMcOFV+rv34PCXa/Hp+tx/nm
v0XWv34vCdRk01yisXfunStAfiQw7PUTJ2PbNPOkXQ6SYKfFrTM9OJ+Nxx9T
XgSQICFX0SUJW0exIto/iAQrONUxZGz54NOTkUdJcFf3sMAdXC8iV45oih4j
AetXittB7N/dnrszIkhw5OuA3Ars1+pGrJJonL+N71qP4XqrGXxfwUwkwbfn
nRtlcb2WCnPH3JNJEGyj9KYK13eewaOVb1JJ0HI8UcQJOy45J3UmkwTzl5/c
iMH9gAH2h1WvkKB1ruBcJ+4n5IDNpeVX8b9fyJ9hYJvmqb0wLCIB7/ia189w
/1k9Petof50EnvP/tozh/jRVVr7hSA0J3hRekRzB/ewt96Lv3zqc/9TA8y7Y
gwviL5++QwKfBU5FT1r56JGHh9SlJhIcGNfffwv3w3TpRROtHSSQGD5Y6fKI
j/TDA24pPCPBZENl6Mb7fKRevP1twQgJZq5znePu4fOyz3b5ulESjHycfsrG
/Vtg/cpky3f4/tdX1/o18hHrBfPgvkkSONrLbQ+r56PDZP31d4Ws4Fmh2Q4N
fF5sOrpUVknECg4lf0FeFfg8K/r7M0zMCkgRh9fl3Oaj2AVPWgylrKA8tUZO
8Baux6Y9O6qWWsHaN9sYD/D5dN8gM7FM2wqkY45fGSrkI7FVP99nOVuBat26
iaLzfNTr+Lx3mrACs/arnVcz+Oh8ZEvtVhcrMCJ6ey+l85HKcGq07HYreCKm
6Z2cyke6WZqKKd5W8NPy49NtSXzkIrmdfOoovr5I8n5OLK7fmfvFRy5hu/Mj
ew7zUZKStPXCK1Zw60Po/aP4/A418X6VddUKZE9KCa48hPfvhNjKuyVWwHq7
87b/flxv8y7Z/yqt4JN4R9nYXpz/Il8Sk9us4PJxh9On3fH5uUQ1sHTCCrb4
xTzwAj76vvGUyTCyhlpd4wc8CXx/52svdltZg4VxyfGl4vh8P/Qo/p2NNRRd
7KxyFcXnf9nf3q/21qAmrFjIEsLxXHHUW9TFGsp/0r5V/+WheXG/c4b+1rAh
zz9v0xceknhNGUlNt4b3LrDcls1DquclY61fWUOElnBzMJ4PT/vJUwbDbeDT
pkVlJEUekmzbpqWiYgvdi3xdD2VzEWOA/ypyhS3ccQ2eLs/iopxx10svVtlC
0uOmm+OZXKQh67L4mrotfDAoDAxI5yIrT/q0lq4thHAyimMSuSjil92jLSRb
6GjNjxs9wUXjOqbujH228F61UjJ/DxdthLuydfttITcuvEvIi4uObTXuUThk
C3ppAoIBnlwkErHFcijIFsSH385Ye3DR6k4Dda8IWziW8p680JWLduxZ/zUg
xRYM1nht7LPjoidZy88m1tpC8ZMQw5qNXHS9xM/uZb0tRO9dluGmz0Wn66vE
NjfagnCLadNfXbxenk3iaJMtSBl1JjrpcFHTkoAkow5b+DL2xkVMk4uqMpuT
3w3awkCyvNXAci5KLRJ1NHtmC33Psz7mqnBRQC0hlTFiC965E6meyly0jvMu
xfy1LZBbvr+YUOSiIrnFaZmfbGGq0ei9ujwXXczwzCDN20Knf4LejDgXhRZe
J7IFyHB9IkrxmRgXba3+JjshSAaJM2U6j0W5SKbv9PkcUTJs27NzPFOYixJl
KjMnZcgwnrtRxGUBF0Wm/cu6vIYMY/bBbqRZDtpRYO/2fS0ZjsRFhtr/4iCT
ysyl9lpkOBwuM7l1hoN+MjWzp3XIUCNwQzjoBwcFLqbn0LaQgRp2XLJ9ioO8
U67mzdqRoWh5tMy7cQ7yTdsmH0cjg8uR2BZBbP+MxckSTmRwnxMKXfORgw5n
RZ5U2UoGeV7p24D3HHT8sruXxS4yOITr+Wm+5aDIAumh9t1kyN777+SuNxwU
VdhBOHmTobgrsfbiaw46VWJovXsfGapXfjot94qD0m/LaMQGk6Fk7Kax/gsO
yqzsvCIeSobPp1SuR49w0MXqKMXzYWTwfhm9tf85B+XXfxYrOkGGxHHrgNhn
HFTW3PWpLYEMj2wTlooOcVD5w2gfx7Nk2F/txwoa5KBbj7eM8JLIUL48/PXI
AAfPk8XMsTQyVMhbabTwOehBb0y1WB4Z6gIdUmu5HPSYZbQuI58Mq9qC44yx
2/q+XFtWQIZUD4HJRxwO6ubtvLCumAybj4bB834O6h2Ql6otJQP57GedQGz2
UHeC2Q0cH4GPV4WxeSPG4Q4VZLiAzuta9HHQ4MvJSW4VGdbk9Dq/YHPQ8KtS
/121ZFgbfks0Hnv03ZIdhxvJYDAeTB1gcdCb9z39P++RQVn6/fPT2GMf42jR
zWTQfr5cwRT788RX8/QWMoSmv0+4ib9nJyfL6pXayXBOTLJjP/a3KU/dwk4y
RFMX3V+P/eO7Qpl2NxkeX6nxn+rloF8/nq6qeUqGe47t/few/8zE55iyyDBc
IDl3Bnt+1lS2tQ+//4jDJ3dsgb9TiTQuGayd6YUbsIXmrwty+WTwtxhZLYIt
IuB1YucQGQ58vRfy+ikHiQkqTr99huNbVZXdgi25kHko4AUZGjsSzpdiLxZJ
ePdjlAyjEQv8U7Flxcw9o96QIV/hk0oE9hKJ73yRMVwPL8Vr9mMrLip3TvuA
30d1re4ubOXFe7oUP5EhQW3hBRfsL7Jyk6ETZNDI+6ZIx25RaFXonyTD5f5C
CWfsi8tCzfW+keH3qzWBBPb+FWv3Jk+Twellkt02bHM1fuLHn2QoffUh1wtb
Zu2ZKvLs//tJ9wvAfqtlPFD0B+cz0V91ErtR5+OcwDwZDk7ERmZgJ+vnqXsK
UODoeNDT69hehjTafUEKcHZXF7ViGxr/DVYSpsAFH1fh/+Mjan4756goBbqk
A6eFcPyGkefDfnEKRB2TCdXGrrCWHtNbhK/X084wsN1owZvGZSjgJDEYWom9
znn1Doo8BW46O7q++X+/GJyYYgUKDLcX85Txfpfs2Mz0VKbA2FWrlgvYxzzH
pu8vx95023AA28E7W2XZKgpMb7XaugLn0/T+WX/OGgpEZhsW1mHjeS9NX4MC
Sz/W84VxfuYHezSkaFFgfk152w5s6+PNQnYbKPCzehNfGuf3+bOxV5q2UIBU
1762DOe/X7JB+zITCgjyB0OX4voxTX/zKcyMAqm5kxcSsV9l25psBAqEGwS5
nMD1pl8mzi2xp0Ba+sXuZFyfC2/e+y3oQAGrm0uuKeP6Haw4qOblhOPhyzO5
hR3d0HtYeSsFBnaNZg3jeme2Z4in7aRAbf++I3txf7j2xEr/sycF6nzIDxbj
/hHW+93Nfg8FLo6MFzZjr+C5Fgv5USBOk7JcA/efQ2+XoWOBFCi/kOOshvuT
pNC10D1xFEjK/W3VhPvdwtmHW6dOUaDptMTT6g8c9PfLiEHsGQpY6r/fcBP3
x8/Dy6auJuP1CpO8b3zC/aEmI2D0IgXu9i8e6p/koDTvWL/dN/H+8zkeXNyv
z7oX2E7e/v99Tx1a+JuDYpya1aOrKLDE7NMXoz8cFGQ6+/pKPQWYFUv0bsxx
ECEXvPvFQwqE6gR9qBXkIvkWL/ddXPy+HhL5PlJctKgxymiCTwFVjcmWrsVc
tLAif+nJIQq4KoRM68lw0XTuIDf/Bb5eeX6XKD6feMF04vkHCpR86socUuKi
bDWgesxRoHhv/2fhtVykErvKfLuGHehoexkRiIvKQ8RWj2jZgdQma3VBEheZ
+k2J7llvB0fE/xnXW+HzmdbK8de3A42NVx6rkfH8oLDv4DFTOxAW7CiWd+Si
peUVedlOdiDhrrTLFZ/vMhyLWV6YHay2u/1h7XF8/q/d2cDotAMOu1WwtJGL
1lssqwzfZQ/wqK+0ZRMPVa3Z/0fQyx6E+i6HsTbz0BaJu5RUb3tYaegX/syI
h2DAfbR4nz3EO1Z++2rGQy7BObL9wfZgwIhYJWvDQ5EliqE6p+0h42nlU1UX
HuqVWmryqsIeDrOP04gQHmJM+yYcqraHPnbQAuOjPDQ4XN83U2sPowujV64I
56HXZa4HFt+1B0Of4tDXETz0k5R1yazVHgZPHRh1j+OhlWFL5rMG7CEh/Kr+
ZDoPBb6Qa6UKUCEy4EJi1i0eauvY2VwuSIXLJd/7VSt4SLmy9I6EMBVKWYFi
5ZU81BFteqtbnAqjZUZrGmrw/dS8s6jyVFiqyzhb18hDzL3V+6gaVMi5p5Rp
28ZD6g5/9pRrUSE77uCW2+08FGFou1NiPRXsfzaHyHXykIbwEL1bj4rnq+Ey
3hMeiioVMKWaUMHAAflZsnhI96PzIqoDFZSXr3hwYYiHTvXlipQ7USFDJi2X
M8xDw3ffCEgQVDh14E2T9HM8PyaF/3jiSgXa3M2O6Bc89GJ9wQv73VSI3Su+
zfIND6Uc/lJlf4QKeR4eE/qfcbzcjG/eCKXC6mVKL0kTPGSM4krEw6nw9Udu
hzOeV99KL817coIKT+77ent/5SHzaot4+wQq5FocsPCe5qHP35Nd7XOoUGmV
ItT1B69nsNDtch4VwuIdMwvx/NvZ3LBtKp8KAlo7P4TP8dC1M6PbcwupsKBB
iqX8j4e2qRh6fiyn4nltj6iJIP5+FLDfbXGbCs9vGpr+wjZ4t8sro5IKB1yv
S9bh+XpR5RlvkzoqHD6jHK4mzEctVs/8EpupUK/c/aEfz+NVml/3jTzEz88l
JYaJ8dHlRcL7N7ZQoeD1zcL/5/djfN2DQx1U6J9YoOmA5/sNB+ICtdlU2H5p
699zi/hI2Tk76GQ/FX6pLuDJSeHvG8NbwX1cKjCKv89nYb+e44UcH6LCSDN9
U8Zi/H2doX3syWsq/JlMurhDho9Oh1keX/GOCtKKAkdasUM8tkYEv8f7Gbjo
mJYsHzmtPRm57DMVbJ9mfh3DNpM4fzLgCxUkPfduBzk+0posjXr8lQqJpiFD
WdhCd9kx+39QgT7xV3KzPB99vfwutnmGCoH0nroo7Bdxv+Nkf1Phi2L8njbs
nn3Sp3z/UsE4yUlKZAkfNTqoJ9ydx/GZ2FZrjV260eS01AIa9J994nQSO3Op
05k9QjSYKewdrsGO+eN9tl6YBhnRqYy32IdHwxPFxWgg5r+lWlYBf++3Jyft
kqBBZ+HklCm2fXnhuepFNDANeSvthb0lrSFZWJoGT1YjkVhs9dCelO2yNBj9
qc2+jC27fTT1tjwNPmxm+Tdgz1v8SFuwlAYOGtt7urE/r5bIcFWiQfjib9+G
sYdEV52/oUwDjmHb8Bh2x+dNmXPL8f1fzp78gl3XZ3eBWEWDNtfmgSnswoZd
WSVqNNg4YvzmK3bqpSMXZ9fg+zVdvPQJOzLmTLajBg0WmC74+wp7v29+TqEW
Xn/+tX8cbDdqde6PdTQ4p11S+BjbRq8jz34DDfZobRop//+6iJ0LWw/Ha/FT
rRRs/5EnUtsMaPCpR8/0AHZEHa1zxJAG9//pS1phJ5/rjfExosEb6rWsJdhX
vJ1NP5nQ4JWjG+cVjm+VSd/3YHMaGN5Y9eAGdovM1tu/LGngNsd2PoTNec/1
iybR4EZCXpw29tsHbqoiNjQwKnB0e4X3+2fW4FAymQYDqzVYmdjKNs8d8mg0
SFaqevwB54+OiqeImhMNWl8r2JzDtvz28mEZnQZEp/hJLWzvq28M6l1pUJe2
UH0rzsfQcN/PZu40qOx5mDf6fz47vS9p2UED2/7gIX/s8r/jSuzdNEibXP1o
vzQfNXEO9bt508DHkx/0GtcDs/zLuREfGqyw+/jbFXvK/dv8+H4aRJlfvLUB
14+gfmhj8CEaUAvePs/A9bZE9Gfwr8M0sNjwZ+arJB8Z18++FQ7F+RHx8V8B
rs8Y2QU9qlE0MK4sYz/G9X3+Q9ypshgamFks6ZsT4aPihwstdeNpMO2m/NJQ
5P///xKrNjtLA9aIx+YLC/lIuls62+08DRQlM2yUFvCRamEGfeQCDe51la7f
IID7yzF5CZ9sGhQc0bS2wP3ITUPxZHA+DY6a9S9xxv3qStzKvcmlNGCElDeZ
zOLzbfvV5fI3aPDLZ/qq1i8eatFfzc+9SYPAoohBuRkeevdirX1ZFQ3k7xQz
hnB/1DHboNdyjwbLJR0mdHH/vP/d7M8MkwY3f/QmCYzh+z+94721jwaXMxz/
NL/loZiSTd0VHBrEpu28GI77NXnb+lzfQRpYHXHY8XKUh/ruKRtxXuH3VTkc
GfuMh97Hzh6pmKbBO9I5kjybh7p3HB0Wn8HPu7pRKIvJQ7c2TZF8Z/9f709N
+V4eOvLug8zyeRp0vJm/vrCbh+bsBisSRR1AeF74c1MrD8nL3Bn3UXaA4bEH
KQkN+Pz8YMB4tNwBchiR2qw6fN4+rrirssoBKrXfeynU4vWHlJ7tX+MA8s8+
VGXj81F7IEsDNjjAp/MXjUOv8xC6EuqtAg7QmhMwn5bLQwd1DIb7fB3gpWT+
6oPH8XpmlH/v9ncA3RnJBDV8fke0CCl/OeAAUR0uQdxQHp6/eNslghxAOzr0
u14QDxWfOjZkFeEAAh4L1z3ww+fb8weDtakOsJy11t5sK54PUmgDWXccoNY8
iDegzUOmX3y428UdQbNb0+0ik4vk7lOuNUk6wsuBnOz2Hi4aP7MuaNViR7D3
Pcf81sVFeWpfJd/JOYJ6RsF6SisX/XE5YR203BHc1+mKD97hoqb7GTWn9Rxh
0NHwzOWrXGSZ+CC91tURLtTsNekL4iIrdSVHqWuOEN5s3319ERetjUk61mLk
BIO83OePzDlI09fk4dphJyj5kJISu60feT/wP1UX7Ay3vjtdV0vpQ58DxsNt
Q53hY02m5KvEPnR0xaGD/DBnPI+3Kl873YfORgYyfp1whpfuRVbaMX2owjRM
1fy0MzQK5ozSQvrQbEN8U2ueM4SqLMh+s70PpVdeme5vxfdfvf6Pn1Yf2k0/
UPNLgg6aWcWSi3vYKKg0Xc9sER3kTWca6V1sFPO34dZJKTp8vuPskdXORlev
C5UJytBBtSv2lPojNnotcPnSIgU63J//mbqjno38qlmnVFfRIWHsXJ3GVTY6
JLd5m90mOghVpLfbhbNRpL8HN8mQDhVaJfVPQ9ko5UEs0buZDibdZh2MI2xU
cYBJYxjj65K7nXwD2Ohryz7YaUEHJ4ck1eK9bBQSkqcdRKGD1NjQ30Q6G0Vw
//3J9qDDisRUJQEdfH39GnbbTjqs5pUXftXGz48jF0/tosOFlx7r3miykad+
igPNiw4XH7yzZK5hI1Ky8uV5H/w+KScym1TYSMxms6XvYTrcvtXx6rckG12s
PRBjEEuHH1Pa2ZLPWShNItVldxwdVp3jcoMGWejsnmqt5Hg6TKWS3Ie5LBQh
/Yv9LoEOxPRmk3u9LLTrYIJabhKOp4hT4e2HLKS+5mrLv0w6HO3Y/8unmIVq
zvMW9pbSwfpx66a1wSzU7K23Wf46HbyX8Zt5ASzUZZDou/0GHQKpcoXnDrDQ
i37zjnc36QD6dlGiPiwkKV98Zr6KDvZD+1+jbSzkk3lEQv8+HQ4pxHfWW7JQ
4N6npmFN+PdaNZubzfD6NmkcbGrG8fklsa7bmIXSOUM9do/oEN5xvGraAD9f
npSypx2vb0IyPlmThZZekJbJZNFhy5BA/RNZFlLz2Q9DbDqIv6EOrJNmIR3D
1qBV/XSwSXlwK2MRC1lxw/pucukwft87MkgUP3/Ji/NtQ3QIo3vOHZljoq4L
txR+vqGDcI/q35RxJuL4iJDN39HhnOipa7QPTPTC0CssbowOxl0y2tJjTDTN
lR9Y/JEOv5ljr8peMZGqwokczS90qHpkQ6gOMdHxLHuV7b/ogG505Os9YaJD
flevJc7SofKSW8ShTibyMprRvvebDgsOzF2uaGciu6FiY5U5Okio3Hlk1cJE
S1cIuI0sIODU1sna8vtMJPHFbURKiIDfN6iCcveYaO7BbR/LhQQ0jUjeiGpk
ordeHiEFIgR073ov5l/PRDXFDel7JAn4Y6PIOFHJRKVHpZTOLyIgT6KhSKqC
iXLJPgUtUgS8rRD3KrnFRDEfZCvWyBCwecmM2rsbTOSkE9DzbgmBvy/nJUqL
mehT7RqRAysJgD1+R/Qu4XicikjJW0XAaY3p2GV5TNTv2rekR5UAq16uqngu
E92biVqjs4aAJ6hBYfYiE501G4YvmgR8tVi8fHkmE0Uu2ti1UpuAxkzKmMF5
JgocOePsvI6A7U9XM5wzmMgterNnlQ4BfL8xxdw0JlJvTT9xZCMBOe0Nl4KS
mUjpwnvBIgMCBO7I19adYyJJX8skziYCipP3RM0nMdE3kc85hlsI2Oo7Y1KU
yERjA1aqvkYE1GtxdOfPMtHQ9dyyLGMCRInOUU/sR1RKw09TAtYSqgkbzzBR
ncoVC01zAhw+KkUWnWaiss/TbdssCJDdR5ioYKemXuM0IgJ0L9yQXp7ARHG7
Z3d8BAJeCu3aUHKKicL06a+XWWEPhSsbYu/qn/saYUNAkonkob3xTJSvdu9E
iS0B03cflQljPw8KE2GTCdhR2hB7O46JVB4ZZPymECAxv+TvDuwd0pMqa+0J
cH0ktGwxdp7nzVJnKgGJn8uHO2Lx+9zetzGCRsDPWAPrBGyluTVNxQ4EfIpu
cbHHdncYJbMcCah7Fycrj519Kb9v1omAkppLJ17HMBF/3H2nOp0AkTHDrDvY
S00V3jsR+P2iw7zOY7sm9gUfZxCw7+TZl0ewLwym/C3aiuM/en7JdmyuJvUM
04UAWmnzAlts+XARuVlXArJY+je2YDM6WvLXbCNgg8cSKV3sDIVoTSd3Arzt
0vXWY7N9zGqObScg/uJTuf+vy9TNmBftwPGzmWr8//fOQnWdvR4EtDE01P+/
fyojiPFrJ86/h5lu/z+fWagzstqTgMNJexgh2FJTH/Y57iaAWXNnWSa2A5R8
C/ci4JvRg4pG7HNpe05e20OAzrLL8m+xu1+sEOv1xvXjGklVwPGR0B0+P7OX
gBUT8a4O2PYnL65Y7UtA8ItnWxKxzz5lXHfwI0BB+9bXHuwuFelN4fsI2Pl0
ecISvD/ke2fsnu4nQFA5mnwHO0HchvPzAHbro3BZvN9t7gKeaocIePHYKjkY
23rmWEjYYQL8HpTts8b5EkfePH81kICqe8MG9dgtWVNne4IIWCLx5aMOzjcw
PHBFNQQ/r8BVXRfnY3S8hjYtlIBXb2Zv3sF+0P+69uhRAu4eW6lFwflsEezx
pDsc10f6WZFjON9NKxymQyMJmPeFHDVcP8fnxKILThLQsYwi8Ay70aFdvDsK
319p8eE8XG9GnyxWrYolQOt75N71qUxkqKVHfZJAwDtJy29ZuF5Dwj9xv58m
oEawrC0a13NNR9nulWfxflnKVATiet/oq3o0JAnHPz6euSeLiXSvyV5dkUaA
jJ5jXBruFzEHFp7Zk06A8im57BbcT/oMZgJKMgj4Vxbx6S/uN6Gtz802XCBg
Qs/I88wV3F/elg2Y5xJgKB7Z+L2IiRbdznsQk4fje+WI4p4SXG9HU0raLhHQ
eV3+Ka+UiQREQkIcrhDQ9d2dxMP9jaxpKb2zCOfrZFWaThUT5Uzq/ywoJqBc
3PERt5qJPt5ZM/KmhIBWzQ+Wp2qZKNlO/ObB6wRc2lggM9uA+91+LvnEbQLk
essDTR4wkeetA1F5d3B/uC2xX4bJRFWhu3xfNBLw5anoj3VsJlpgQXdYfY8A
999yxx36mai4d7NyeRMBe2BgazGfica/CDTcfUxAQHd1c+lL3D82Zk8M9hBA
9oqtnPrGRGkNrTsVR3F9vl55JGIlPn+ja/NsXxHgEaK+zkiNhQTtiwZDXuP+
IGDhObuGhcKexbmw3xIwttxAO1WbhTwFrBwSPxLgyZxl/TJkIV3qI7M/3wgY
jD2QxnRgIeZIk/JLYQYcLtax3xXDQmJlt9ylRBkwYTOx+HE8Pj+D8i+aiTGg
xHNZu/YZFmoQjJTLkWDASSk0JZ7KQlc0zSQIaQbUdKQwF+az0OHgu7MtSgzw
WFrcM9rIQlLCDYOl6xmgVSxtLf+ThbiFlha/dBgw6HTDPP43C+Vbdhba6zKg
LN608tc8C607Nnjgsz4DqPEnv88KsRH50++/G7cwIGlf5AkFKTaK6kNqzcAA
33UJ6j2r2OjL5Sf7Oa4MMLByuqRCYaN6UwZTfRsDkhOEyCX2eL4bGDYIc2fA
igg5h40ObCQh+/mPkgcDdhsu86QTbKRxanGqpxcDZJY/tSn3wPPYga01Hw8w
wHDDUGh3EButFX2+1OwQAw7e/eh/LISNPhf5nEgOYMD455YzWmF43hs5aqMX
xACy6E2TtBN4PqPn8EOPMmCpscuysNNstGtC1awjjAH6G24t3pzIRupJNwoU
jzHgss2ppT/PsVFN6z3/exEM+JadTkRlsNFxL+teyUgG5NfURNleYCOY69m4
6yRe/239msXZeB7Mc7lYEcWAobAFH4dy2Yi1ZeT3v2gG6PxTUS3LZ6P/AImx
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$444912#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$444912#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 7->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$445076#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$445076#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 8->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$445240#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$445240#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 9->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$445404#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$445404#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 10->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
uq4=
                    "]]}, Annotation[#, "Charting`Private`Tag$445568#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
VmIz0iIV1xzBpl9dIYwdaEI+0hpJgtm40V/TeH1LRla+PhhLglODB+s+YBdc
7lOVSyDBeAPNqBPbGN2MfpJMAjKJdf4edvf3Y10BKSTIrVa7nYsdkmuxVSqd
BPPkc3nR2Mt3rkxsukyCCDMdZzfskh/venyvkEC5ZxdvBzapsFJHMh/fn92O
jaLYKtq0eaViEiRMuru9xfcn9HTmmUY5CU7mpj8rwx6h56eaVJHghBJ7byj2
6yELZ2odCRZom/X1sGuOfFVyu0+C4xJphGmcp0tCGcN+TSQ4tnnJ0TvY7mr9
x049J8F0t1qkCjap4ZTZ5VckiFnFNevGeV1P0VhezMC/v+yqQQL2SGBU7pMe
EihF7r/Jwvk/Wi3VPD9Kgpy30ulkXC+upg9PiUyRgOJ4soqH64vA2GOn8IsE
SQbLJ/ywBSar+vUFTeFSQcjwcVyf6XpWAmFypmC0vywkDNfvkeejHfGKpgD3
hIuGcX3v2pV56cJ6U+Crn5lwwVaOGtxQtdUU6l9OjWzF/eFWU8zOEVNT0A1N
lSnD/STdVnXFjIUpPCFIKy3g/hPe95InRDWF/netxrb/70d/ZQNVnUyhd6b4
7pAzH7Wb16Z6+2P/DU1+j/vXre5dzgcPmoLciIuqHPYF30WlmDBT+LIr+D8r
Gh+5nLa+fSXGFLy3brYuxP1vqOMjszvdFFLlBJ6txf3yuUdq7lCmKRQ9iK7X
w/208pvOvslcU6DnbK3eSeWjUIn4KckbeP++2tW7cf9dpK2Ws35gCnn1317v
xv17Nd/Os+W9Kfj0vrtRYILzdvBzfNSwKXhUR2WfNcb1L5B0Q/sr3n/MWqFQ
Iz7atvXBaNGUKUh8tKbpGPCRRazqyYSlZrDYEp2VqoPzt372hrmmGQjncpSz
1fnoR31Gx7y2GZQ6fzpkpcZHkVTNsTv6ZtDkJ759eiMfJYbvNdxgZgZMX885
S1U8j9pedyxxNANSmVthsxIftQQUjbVFmsEhjdCYxZV8ZLloIh0XawZy4Te9
Ilbg/GVwDPUTzODYoaVFXyT4iNMomlCaYgbxW/Ud20X56It4hPTpfDMQi+n4
6irER9J1VCOrVjOQ/OC2q2uGh/znfiR0SCLwmg3Z79DDQ/rh/vIj0ggod63z
d/B4aMm33iqh1Qhso1/ZS3F4qOhdG89sA4J9j/fvaGfyUM+TbK37hgiatrNq
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
GRfBzjSbfdWwH+9n7T5ns3c47zve1xL8qLCx4cWHNlyvdzd2ZD8JoIJtpLKb
FXa3SN6+9hC8X7mCn+a4vlexTee5kfjvQ9jrZHE/uP5C/b1HNBVS++7MJfBw
/3u48kV/LBWSX8Q++4b7B61gKONTAhXabjI23cf9JT3g9JaZVHzfbh671HA/
WucZuiL6AhVWb4l7Fd3FRbft3KYXL1KhpPWU4RsWF/23Y+tT4WwqUP6YCvgx
cT9b/M9NtogKVZsoxyL+w+/n4/dNc4up0DJwnF33Bt/nUOFG5VIqXKk/p/8N
90Ob9rCJjTepoOKKhF1e4bxmyJ7Vq6eCv+KPRSHcX5epeTc4vaSCd3xVMO8J
7vdrkE3VKyr8k3y08PMxF72U3DAg9B/er37YkpXY52Y/L73PogJVlxlnivu9
WMfRXQq9VEiPaTaJw/Ni5cHz0+9GqbDZ52tDIp4nYT6h5/QnqFC48yohqoaL
WM6Oyhd+UEEoTtkq+DaeNyQFS7NZKvxpr5yjVnGR7Iobmdf/UUHDU+vLFzy/
Vt9p0vWTtoZLV2PZ9QW4nsoK2h/LWgP/ULt9Uj4Xvb2a4CmvYA0nbGX3OuB5
mJdklfRSyRqspV7Q3+fi+eDS3bVVzRo8bRnxw3iebvj1NWzcyBpOFyhNxqVw
kabpmtqo3daw0JtEGjvCRXUbg34v2WsNE5TUUHo4FxmKNVLS91vDv6/0qbrD
XAR898HSAGuQW7ScDgrB+QrPleoOt4b8wi9LH/lxUVyZQoTWGWuIlFJJHHLD
80NS3mSoxho8HPe9JxBw/U77nQ65Yw3yC+avbIzxPOy93/Wr3hrW2mtudzfk
og8Vu4JXNFrDAxXz0IO6XDRrnn2N2GYNJc+vfj+qgfMSKfs3m28NlXqCi5KK
XHR4QLrNRsAGAh2bYg//4qDn7d6Pby2xgYKAllS3GQ5SrC1/ILbUBt5vLD9v
+pOD2k8Sql+L2oCauW2A0AQHrVPdn20jYwNpk643Ikc4iOF7J8BG3QY4O86v
WeRw0PavNAkbOxuIbFjvllrHQaM/03ZZ59pAa8qjvvF9HGSp3Z5nvc0Wcpli
G8Lr2aj5J/H3L4YtWO2UjP7Z140Oaun2dvnZwcS70mu2Yt2IMH6A4yFqD8Hv
CE7fNbuQdDOl5JG4PbxRuH2EuaULfTurEbZ+hT20aoSP3lPrQnmqk+KfpO3h
J0/796n1Xei3Syw5TNkeXno4TOrKdKFHzZfuntG2h5tZ1Iv8BRYyS3mSUb/L
HnIIs46ub1hI3rV4j7y7PSTGqwgc6mCh8Q3JWtGe9jBeXZp4+gULFT6y7jDz
sYeON78lH7Ww0L8Jzr9XgfYwuqG6Ad1joaeu30MHY+3Bt9W+sLSAhSw2rbaX
LLEHK1WP4//CWeju2AvVA6X2cP14rrnfYRZSfXB0tqncHr7M7zTvDGEhARtm
UWCVPUzTbKduBLDQk8Nnptru2cM/1cKTIbtZiNg8fSXmpT3w13qFHLJmIX2n
rg+fR+1BP+LLfcpGFipVOvnAbMIeii+4k3+rsJDMJ6207B/2cDfeIObOOhaa
ijpnQJ61h7DH2VNqiixUV4DOFf6zh92n049oS7GQ1tfb23ZJO8DHP7WVF/8x
kVpC6vFWIwew3iGY7vCEiZqIZUvtCA7AttPdrNjERA6/Wi5zSQ7QKKsrM3af
iSJDZ6q/mDsAy9JB5OZtJmr33ju0ws4B5Pw6A2IKmMjfxNDGa68DdOWfW3I+
nokWpun84f0O8KHWVY4Vw0TpdQcPhPo5gGfffcm1UUzUsLk4PjHYAf5T7mEz
DjPRMnmJ+ooIB0iOSWi4jN81y6eGlKbPOYDu9SV9N6yYiFCzWHnivAO8js3K
OkhmIkaQguHydAd42x/9gghMNDtoR1fMdIBbrIl7MyZMZMV8kAwFDjBU6/2G
tY2JRqoujKXdcYAc274+TQUmigmojJG/5wANT90DTsoy0YqNbcuvNzjAvq3f
F99JMZFh3pxqfbMDZIctCa2TYKIz53xd375wAHc5ZuDLJUy02c+kRa3XAbRq
k17en2SgtA0OC6f6HGDCra3x2TgDTb7fb/BhwAHIZp/FeaMM1OSZVlX40QEe
VFaPKXxlIAf6+ysKYw4QZDwfJfiBgeolp7uPTeDzkVpPcBxkoNVvRFZwfjiA
2BTzys0BBvqwUzc5Y9YBWmvLyRHvGCiSeDpMVIAGaO/PbUe4DPRu7mpVwBIa
9DSRCpZzGAgaakZeCNNg7+eHH8u6GUhsR493kigNPK+tlf3DZKDD46NXBsVp
sEtuUqKBwUCcKkG22QoauFu9WojqZKACdU3r39I0SL/ry5Z/w0BLhlGyhxwN
bAdXdP58xUD+xS4tDxRooHkr6+3bDgbSUY43iFDG3/9LyPpZOwM9l+pSHVOj
gXEzyelvKwNtZX7ytt1Cg1zJc/WbsNPTFq7c1KABpX2Xr8szBnJfvmmFvzYN
yml2/zFbGOjxc2Pr5zto8FnaJ0sJe0OSffIGfRqcV+3oCHvCQKOLkQsDxjRQ
WRaeZfSYgRybzhuYEmmQz8gj3HzEQA1R18OumdLg6svx4E3YSgb3q+YRDdy+
DWndbGaghKlXI24WNAh78/q0Efan2gHVBku8nwPmR5hNDGRz6Ke3LIUGRib5
o2HYNRoiuUesabCGuWNCCVvmizKbZUsDl1vuEaxGBp5HO1ZoO9AgkBYQmY7d
t9/K+gKdBm8t7k3swjZX8Ur+7kSD7aI5verY5f2HW6x30WBE3XeHILb4teSF
CjcapKgcGR9+yEBh7lcNlnnSICdmjUQ3NleuJuyANw0uNtYmd2AT2K1VrXto
8Gffeaf/uyiDP6KyjwY+c0vCurCFHUZVT/ri8xc8xP+IHSQuuLvfjwaSgiqn
/mEzOuRyiYE02Bd35NAm/Pt6ZzTYV4Np0PirKcMJO5eMVsyF0CD7F+1zCvYf
ARdr18M0iBY4d/A19v4ngcn3wmnwNadRQRafx+ihb1E7I2iw7kmxaSj2sbUh
B3mR+PMBqjwb++9/Y3sComnw0zcmzwKf97m4w05zsTT4+ECw7RG2tNaPnSnx
NPDYeeucOb6va++OmCgm0mA+Eg2zsGsIkSqkMzSwC98NK/H9G3/7JdN5Dudn
5QndJ9jPrkYv33OeBn9/NxRE4bxw5uLGT2bQYEtIRasoztfuyr9DqzJxnp5P
H/qAPeKWwC3OpsG0fOqxFziP8w2nHrXl0SDGsSnu1nMGSvJfWudSQAOzlaOH
ql8wkIT82RufimgwEJZZ+BDne92x1NTlZTSA12HFEzj/lnqX3G1raXDiZJkv
H9cP44O0Xd8dGqxY9vyMBq43t8tZ6NA9nMfT9bVnWQwU/OOK+sVGGhgo6s36
sBkoo7ZwuruNBn7k6fNn3zKQoo/KF992GrQRe2U0cL3fWFHybrqDBsSk0QBe
H873obJWeQYNpErb3Oxwv+jTrM7w7KGB6afYtOrPuD7fbUv+3kuDoDmh6nzc
byZSa6Pi+mnAqpHZk/Md1/O3u3sKP+Dzr/3lXT7BQJsrG7U+jNJA4rbUotEc
A9W5EVWOTtBALFl+5OgCztvyxzLCUzTwdf67pXGRgez8ny6o/aJBw+nSfB9B
JjK57Dt8T4AOwx9Sw5XEmciHHnx3TowODMajU1QVJgorz9AmStBh+7ngMNGN
TJSw2FB9QpIOb23TJ7vVmOh6pVDFklV08G7+cfGkJhN9ECi4JiFHB4dHpDQz
Izxf7jCTVdbTwYx29pQ9Hc+j5bOCvip0yLX0OpblzERndyufLFOlQ0xQ2oWP
rkxUKRoUrbGJDlvEn8rl7Wair/uWhOpvpYOddmJ7wEEmCpE2cKPq0UFTeOXd
k+eYKC7Qi5OqTwfXlFj+zjQmuvAk0bHTgA62vloNMhlMVBPMsHUypgNrQDa5
/QoTTbYGgLcpHdKPyd04W8FER4/mbQ2j0GGjZvRseAeeL5x/v6940YGfMHPt
3XIWOqq5kfXcmw6HLT6YiYuxUEiSVemP3XR4zfd+byrBQnt0LtjZ7qVDTulX
yepVLGSepljw9wAdgDfMrlrDQiKWBmZ+oXT4oBBzxVCLhXLqgxN0E+kgJjxc
4OeMnz8uc4U7y+lQ/YdzO/0mCz3er20gU0kH801FJ8qqWahDN8XP4yYdjm+b
E2ipZaGBblL7pyo6OANBduE+C4nLlJ79W0eHO2wDsYxWFjqQeURMp5kOjqva
1xr34eenrJWrMpl0SH2ntmOvVBeKzrZW8pijg+6FpiibpC60u/vPZIylI6x0
GT/mG9CNtpdIXV970RFcOhJjGnex0cWGNm+FQUf4dFdNdt6TgySXNvSUazqB
5dEUNGfJRZxiM9M5LSf41dz7b5jKRflmL4uttztBOsNoJcsOv88c7wke1XGC
PIs6sWIXLrL6vrC4w9AJ5v/yBLcf4KL4LqT6GJxgW/qg52QSF40XvApi73KC
+h1iyxfw+8x9ghNjk5sThGQMPahsxc/n/F7dSHcnmLbI19+F33/EpEZ/r/Zy
grIs18SKTi5ST16RvmevE9ieUprR6eOiPcHOd78GO8Gc05ta9hwXqS3vkyeG
4O/XE9DbvchFozcOxKYdcoLt25Jh+B8XxfQfs9QOc4JqL9lv35bxUA49lxdx
zAl80GXhXlke2j2mQmyPdAJ+fFwAbTUPbUq9WaRw3AkuNH7Xa1XiobttTYFN
MU4wJjU9V7SBh6L3kjvF45xAr9Lzq5g6D8GfNzt2n8Dr1xjSPbqVh0TyXHJq
4p0gyTW0q0eLh5iG/Qv/TjqB+ucvT4k6PPQ/T4SDJQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$445568#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{44, 0.31305761433345214`}, {
                    44, 0.32613581534584346`}}], 
                    RGBColor[1, 0, 0], 
                    PointBox[{44, 0.3195967148396478}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{44, 0.3195967148396478}, {
                    44, 0.3195967148396478}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {14., 0.16739929220966743`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedSteps\"", TraditionalForm], 
                    PlotRange -> {{14, 74}, {0.16739929220966743`, 
                    0.3655473148758124}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00371\"", ShowStringCharacters -> 
                    False], -0.0037060538724211865`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.00672\"", ShowStringCharacters -> False], 
                    0.006723969103393963, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -8.64}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {116.55, -25.92}, {Center, Center}, {
                    221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {116.55, -43.2}, {
                    Center, Center}, {221.99999999999997`, 16.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {116.55, -60.480000000000004`}, {
                    Center, Center}, {221.99999999999997`, 16.}]}}, {}}, 
                    ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 233.1}, {-69.12, 0}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )]}, 
               Dynamic[$CellContext`i3717$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Fit,
          StripOnInput->False], 
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i3717$$], {1, 10, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->163.18982219696045`,
                 AnimationTimeIndex->3.189822196960449,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Right}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8438453352131104`*^9, 3.8438456250677214`*^9, 
  3.8438478550698175`*^9, 3.843847906787243*^9},
 CellLabel->
  "Out[639]=",ExpressionUUID->"1b62b4a4-90af-48aa-a226-263b46a0d4e2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
CellContext->Notebook,
Magnification:>0.7 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6df05553-658b-4d4c-b25a-e420fbb2c73a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 436, 7, 68, "Title",ExpressionUUID->"db62e516-81ba-4d70-b1b1-9cd33c91d768"],
Cell[CellGroupData[{
Cell[1041, 33, 207, 4, 47, "Section",ExpressionUUID->"78b447b1-9527-4a44-8f25-13c25c5e9101"],
Cell[1251, 39, 950, 24, 47, "Input",ExpressionUUID->"73bb8eb7-fd63-4382-a987-e4763fd2c07f"],
Cell[2204, 65, 2043, 38, 101, "Input",ExpressionUUID->"8e037178-fa87-40a0-a24d-b460c488efbd"],
Cell[4250, 105, 764, 18, 88, "Input",ExpressionUUID->"17e8648f-4974-4529-81b4-a9cf0e6c6f42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5051, 128, 330, 5, 47, "Section",ExpressionUUID->"1bff5a9f-0ef9-4eb9-a97f-cc3b0be84b3d"],
Cell[CellGroupData[{
Cell[5406, 137, 2323, 64, 211, "Input",ExpressionUUID->"1f69a44f-8be3-4b10-b578-417791e2468b"],
Cell[7732, 203, 80573, 1340, 70, "Output",ExpressionUUID->"e37495dc-8731-4908-9bec-eac7b611f800"],
Cell[88308, 1545, 940, 20, 70, "Output",ExpressionUUID->"1247c6f7-2c77-4474-8afb-425e2f9fc725"],
Cell[89251, 1567, 794, 14, 70, "Print",ExpressionUUID->"5c579fd5-a733-4e57-a76c-c8a76301e836"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[90094, 1587, 338, 5, 39, "Section",ExpressionUUID->"d27acb04-c6fd-4944-8227-118c1ff153a7"],
Cell[CellGroupData[{
Cell[90457, 1596, 446, 7, 32, "Subsubsection",ExpressionUUID->"b38d52a6-6120-4727-a325-de50a59d758d"],
Cell[90906, 1605, 1894, 43, 89, "Input",ExpressionUUID->"cb786676-2541-46c2-a080-ee0f48f60b08"],
Cell[92803, 1650, 701, 18, 74, "Input",ExpressionUUID->"6ea70fb8-085a-46ce-a6db-87a5d0ee1215"]
}, Closed]],
Cell[CellGroupData[{
Cell[93541, 1673, 551, 8, 27, "Subsubsection",ExpressionUUID->"62b14247-7735-4ebb-aa4c-bce57988dad4"],
Cell[CellGroupData[{
Cell[94117, 1685, 616, 18, 21, "Input",ExpressionUUID->"c917c1cb-7859-4fb2-b27e-567e8a406602"],
Cell[94736, 1705, 98460, 1636, 70, "Output",ExpressionUUID->"9987662b-09fe-4175-a1e7-5eead3d4ce6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193233, 3346, 670, 19, 21, "Input",ExpressionUUID->"4197093e-6336-4dc6-900f-fb248b8cc750"],
Cell[193906, 3367, 40480, 686, 70, "Output",ExpressionUUID->"04b34ca8-35a9-4dc5-b881-418943a44bf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234423, 4058, 729, 22, 21, "Input",ExpressionUUID->"299dfc2c-b67e-4ef4-be9a-89baf073b6b1"],
Cell[235155, 4082, 18369, 323, 70, "Output",ExpressionUUID->"7f9e472c-f874-4687-85f1-749bf2622fb0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[253573, 4411, 503, 7, 27, "Subsubsection",ExpressionUUID->"9c505c31-94a6-4052-b7df-b3725127238a"],
Cell[254079, 4420, 694, 18, 74, "Input",ExpressionUUID->"4f0ef374-c6e6-429c-a633-c384f90ef0ce"],
Cell[254776, 4440, 421, 8, 21, "Input",ExpressionUUID->"63d8c9a3-e7fb-4f1e-98cf-5e99960797b8"],
Cell[255200, 4450, 629, 15, 34, "Input",ExpressionUUID->"363e1a28-ff19-4521-a087-a9ef2cc7e061"],
Cell[CellGroupData[{
Cell[255854, 4469, 5173, 134, 263, "Input",ExpressionUUID->"788522ba-e6d0-4785-bdd8-038a8bbe2c9b"],
Cell[261030, 4605, 30628, 573, 343, "Output",ExpressionUUID->"2c95ebd7-1aed-421b-b928-3c82d444693a"],
Cell[291661, 5180, 30827, 580, 343, "Output",ExpressionUUID->"ee9e319e-da3f-4568-935c-25150c3be2be"],
Cell[322491, 5762, 31025, 584, 344, "Output",ExpressionUUID->"82eb3d6f-1af7-47e1-be0c-bc1c8f61ec81"],
Cell[353519, 6348, 30991, 584, 344, "Output",ExpressionUUID->"5293eb1d-a59c-4171-8156-25313ee6cc3a"],
Cell[384513, 6934, 31022, 584, 344, "Output",ExpressionUUID->"8647d770-d315-47b7-8f46-228296ab50a4"],
Cell[415538, 7520, 30658, 574, 343, "Output",ExpressionUUID->"c18d0ed4-afb3-4ff0-87da-827a0f0e4ea4"],
Cell[446199, 8096, 30798, 578, 344, "Output",ExpressionUUID->"90793950-6d1f-443b-8460-a308f34a7f2a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[477046, 8680, 625, 9, 32, "Subsubsection",ExpressionUUID->"a41d9d9d-3293-446b-a45e-95ab4521322d"],
Cell[477674, 8691, 321, 7, 21, "Input",ExpressionUUID->"d16c2f78-3c94-4279-b731-2615b3162271"],
Cell[CellGroupData[{
Cell[478020, 8702, 2049, 38, 47, "Input",ExpressionUUID->"3fab5e98-4cce-4a1f-849f-99e703fa495d"],
Cell[480072, 8742, 886876, 15757, 416, "Output",ExpressionUUID->"29f83eb1-ebb1-4ad7-8436-e44bdae84a79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366985, 24504, 965, 24, 34, "Input",ExpressionUUID->"ad9f899c-9ef3-4647-bafd-5b00bedb5429"],
Cell[1367953, 24530, 380, 7, 23, "Output",ExpressionUUID->"bb29242f-0c49-4f92-a292-cbc66991627f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1368370, 24542, 777, 21, 34, "Input",ExpressionUUID->"7e4620b8-81d7-4550-b25e-cc10efb5e918"],
Cell[1369150, 24565, 445265, 7932, 415, "Output",ExpressionUUID->"1b62b4a4-90af-48aa-a226-263b46a0d4e2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

