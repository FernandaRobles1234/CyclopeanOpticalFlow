(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2097935,      38226]
NotebookOptionsPosition[   2086410,      38035]
NotebookOutlinePosition[   2086964,      38055]
CellTagsIndexPosition[   2086921,      38052]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Little Tests", "Title",
 CellChangeTimes->{{3.836408933336395*^9, 3.836408939343516*^9}, 
   3.8364092608930736`*^9, {3.839597016893468*^9, 3.839597019185139*^9}, 
   3.8396001415844855`*^9, {3.840547036727909*^9, 3.8405470374003563`*^9}, {
   3.8431583610963435`*^9, 3.8431583669555917`*^9}, {3.8435589181641517`*^9, 
   3.8435589198932934`*^9}, 
   3.843744422167187*^9},ExpressionUUID->"db62e516-81ba-4d70-b1b1-\
9cd33c91d768"],

Cell[CellGroupData[{

Cell["Start", "Section",
 CellChangeTimes->{{3.8400383593859367`*^9, 3.8400383615886106`*^9}, {
  3.8433207191908846`*^9, 
  3.8433207198782096`*^9}},ExpressionUUID->"78b447b1-9527-4a44-8f25-\
13c25c5e9101"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Add", " ", "to", " ", "path", " ", "packages"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"packageDirectory", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<1DPackage\>\"", 
        ",", "\"\<*\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$Path", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"$Path", ",", 
       RowBox[{"FileNames", "[", "packageDirectory", "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8437444304820337`*^9, {3.843744475443145*^9, 3.843744489249152*^9}, {
   3.84374460430722*^9, 3.843744614114832*^9}, {3.8437451879521313`*^9, 
   3.8437451890826197`*^9}, {3.8437453266046667`*^9, 3.8437453290342407`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"73bb8eb7-fd63-4382-a987-e4763fd2c07f"],

Cell[BoxData[{
 RowBox[{"<<", "\"\<ReadSintel`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<pyramid1d`\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<pyramidalStereoAll`\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\"\<OverConstrained\>\"", ",", 
     "\"\<SemiConstrained\>\"", ",", "\"\<Constrained\>\"", ",", 
     "\"\<ConstrainedInitialSign\>\"", ",", "\"\<ConstrainedNewMethod\>\"", 
     ",", "\"\<ConstrainedPickierFunction\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"\"\<pyramidalCyclope1D\>\"", "<>", "met", "<>", "\"\<`\>\""}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"met", ",", "methods"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8405470666010065`*^9, 3.8405470721952195`*^9}, {
   3.840550195734952*^9, 3.840550216899179*^9}, {3.8417693956828256`*^9, 
   3.8417694295737267`*^9}, 3.8417694792252483`*^9, {3.8423558358531294`*^9, 
   3.842355838266631*^9}, {3.843139686906508*^9, 3.8431397006034536`*^9}, 
   3.8431400354897623`*^9, {3.8431583092259803`*^9, 3.843158312433055*^9}, {
   3.8431587050542717`*^9, 3.8431587088646235`*^9}, {3.8432405156973643`*^9, 
   3.8432405180756235`*^9}, {3.8432434086403227`*^9, 3.8432434521650333`*^9}, 
   3.8435781970825057`*^9, 3.8435786572990074`*^9, {3.843745725318043*^9, 
   3.843745730794486*^9}, {3.8437501550408554`*^9, 3.843750161634801*^9}, {
   3.843750230642497*^9, 3.8437503524543705`*^9}, {3.8437504375112853`*^9, 
   3.8437504386938276`*^9}, {3.843755017106989*^9, 3.84375503403273*^9}, {
   3.843755426452015*^9, 3.843755445994274*^9}, {3.8438346833502474`*^9, 
   3.84383468782578*^9}, 3.843835196563305*^9, {3.8438498338643837`*^9, 
   3.843849837390987*^9}, {3.8438505820282726`*^9, 3.843850585529437*^9}, {
   3.843851080665611*^9, 3.8438510924880347`*^9}, {3.843917874644593*^9, 
   3.84391788967353*^9}, {3.843919464270398*^9, 3.8439194690819983`*^9}, {
   3.844258411683423*^9, 3.8442584146673145`*^9}, 3.844258734579767*^9, 
   3.84426385350611*^9, 3.8442668082773514`*^9, {3.844780498357904*^9, 
   3.8447805041423593`*^9}, {3.8449446421268377`*^9, 3.844944649113989*^9}, {
   3.844944993663724*^9, 3.844945009436464*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8e037178-fa87-40a0-a24d-b460c488efbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Declare", " ", "path", " ", "for", " ", "SINTEL", " ", "Data", " ", 
    "depending", " ", "on", " ", "user"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"baseSINTEL", "=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "$UserName", ",", "\[IndentingNewLine]", "\"\<fieri\>\"", ",", 
      "\"\<D:\\\\MastersMathematica\\\\Data\\\\Sintel\>\"", ",", 
      "\[IndentingNewLine]", "\"\<roys\>\"", ",", 
      "\"\</home/roys/datasets/SINTEL-stereo\>\""}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8437446388681035`*^9, 3.8437446932344007`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"17e8648f-4974-4529-81b4-a9cf0e6c6f42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data", "Section",
 CellChangeTimes->{{3.8396005056192665`*^9, 3.839600506650977*^9}, {
   3.8396006430435266`*^9, 3.8396006454493484`*^9}, 3.8396009902260947`*^9, {
   3.839601775074339*^9, 3.839601775891445*^9}, {3.8437453621624937`*^9, 
   3.8437453624275274`*^9}},ExpressionUUID->"1bff5a9f-0ef9-4eb9-a97f-\
cc3b0be84b3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "downscaling", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}], "=", 
     RowBox[{"read", "[", 
      RowBox[{
      "baseSINTEL", ",", "\"\<bamboo_1\>\"", ",", "\"\<0001\>\"", ",", "r", 
       ",", "\"\<clean\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "44"}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "102"}], "}"}], " ", "arbitrary", " ", "size", " ", 
      "to", " ", "make", " ", "the", " ", "method", " ", "faster"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nx", "=", 
     RowBox[{"170", "/", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ny", "=", 
     RowBox[{"300", "/", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ImageTake", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"ny", ",", 
          RowBox[{"ny", "+", "44"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", 
          RowBox[{"nx", "+", "102"}]}], "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageDimensions", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ia", ",", "ib", ",", "id", ",", "io"}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"MinMax", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", "id", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<max dv=\>\"", ",", " ", "max"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843745436013342*^9, 3.843745445266261*^9}, {
   3.8437454795752115`*^9, 3.843745636648714*^9}, 3.8442584513876195`*^9, {
   3.8442678037667413`*^9, 3.844267808172227*^9}, {3.8442680916621*^9, 
   3.8442680954422073`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1f69a44f-8be3-4b10-b578-417791e2468b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJwcl3dUzv//h4W0hIaGCmloaChb9/VGZGVFJHtlVWREIg3tPSSSoiKVolCa
mhIlUVZIsveW9fnd398fd+fc531O7/u8Xs/n43Fd2qu32Dl179at23Zp8R+7
Vbsmbtu2ymN+r/99WbfK2dLC+X8PTcSf9eKPrKiQ3F/dBcVVf9myIIHJzRLC
0Cm3eLp5KDGGMpha90bhWC/m1CmT3W7AuTmaeMzSQKrYhEenejGp7anIsao3
OT8kaVjYJfryTJbDA63obTCRxofDqR0wmBqVWYTE2DLy7CISdy/jfcIIHh3r
QdyxVtEjAyvCUvypLIjly5YEdjQm4v8ukfbGo3wdF8vJc54sXxTIrtQQzmjE
IVGwhjmCLxn94nHf4Mn7RdM46mSNwfBwtvYKovisD8M3bmVF8BIKJ1nQvWUT
F7JXsaTWj4nfQlilHMx5l+lsHmnEvK/GWDu4MP2TP3MM1Zjt2Aefg7DUbh2j
NvkwW+MA23uFot4SQc7mcCa0R9G6PpYcg0Q+njrD0LEnUfLKpqEymsNKPnTT
z6R6t6wg9fstH6XGCssPDxQmbvmDZKSpsHdMH+FhuxdmUkdo2lrFzRfdBYs/
DRjLF9Esc5Up0dkY5KXQqhPBzbJNeMqbsWa8E/82lbFh4A+C3xditrOSfQ/1
hP6TqjCw3kHHxeHcG66D8xtVWqfrIbIdhHPoQDSLB5Oo1pMN9t3Y/k8JT3Nl
FkR2p1jaiAs7HPCXGMoafS0OLNemd5kRCe7z2ezsiYa5OymZY3EP7UXPlzbs
nB+KKO4gNsaJ2AYcZ1pTOgvWnuJ20HHCCo4yrdKbIh0fThsfxu9wFE/7HGSK
TxYnAg7x5X0Qx9bu41LQTDS2DODly0082BBDcVEKMb/CeXN1JlrL52C7eiLz
ioMI7p1JyLc9BPyO4KJGMHsOueKy14tpU1ezswy0mo0J9zBDdvEIdFcupkl3
CxnBvjzYGsTBN6Fsa44gOvokQyKj0dqcxKHEApyeJFF5eB3hVQL2ioncvNuJ
7zxJISxzslB6dJxwNu8NS7fLC6OGi4RxE2rwKCulbelpJG6W8qf2GfNL8xgu
XQk301ALvsj0z2n8i/FlOBuYM/8cm3/kUv70FgOvNaNy8wif3JSFl79usLNu
C/e2WPB72XDMJg2hZrU27tN12bRbn3ltKlwL7ofDU0VOG6lSrmpIcIQSsx7L
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
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
pwqWG4w5fv6byPbsOD5aLkPWT44ZPWX5XioQH7mBDbf3oN68n3mRuxEeuqDr
5c/LPkkoxSfyNyqTRy25dMjlM9/kK/c7ZYVDZzPpGu+LheFhVtydQXT2aBw2
jiXx70C6Pg1Af6k+G+MG03FkMKO1++A+uB/9u/SoUplDktdxDl5q5mXqN+w0
3qD2M5X1U7wwWhGA0h4/Vi7agMNzKxROzuDttk3YO3iSFSNmnZBEdPYWMLvq
Bi8rk7j1vbuQ+ERSKNm/iT7VVnTE2vIoaBw1xRM41+Eg7ns1IiaOxuScOK8S
Q5k7PYP+3/OIcTnLNvGsRJ6vxFa9lvPza8RuWYuvxXXGTbmPwr67rJ3fxYmW
Tpr3PyB4SRhvPNbwsXQin3y3kdq+icNbViK/05KFH0x4Z72Tqr1H8RIdIvf4
Qyz63yPq0k+iM/sKRePLmPA6hbgPBeJ5TUcjJ51BiyKRcljBfDexr3eoiv11
EG5ze+Gv/09UWa/PpypxTixZzeph3lg3BxH5OwLrSaHcUvAjMiCAMUVe1Ju7
EaIQw93h2cRL5RDS6yKnZb7w9+0vhjoHoXckkfN/ziKv0MzTxm8oCneZKT5z
q9ijmnxMuBc8H30JI0Lz+1Ab3ofHq1UYYClCdV4oPhNfsFa+jnf3W7Ab9gjb
J0GklzsyxN8F0ZadOGTN5nTxEtxGRzD1ci6arWl8GlXAzOhK1lpd46NbNpeO
SQinrTp5edcY+e2qFDTJkWy4F73hvkhMHcWtjKmodNhxQkOcTUtSGRyaK65R
EaXfznF25yW0H9TS/+sVrLXreNv7OpqdL6h4/5Edmx7Rkt1LMPXt4spCTwLk
5tH9ojMPt21nlMFOvvY5wLimmfweOhT5+7Mx0NlP1Hmx8+9KZd67DhQ3fiNw
xH2ubtcU6qSUhYqsZPZXic8t3ovla3K4HJbMvs8HkbEZzISBOrzab8pW/YF0
HO9F7yZTDMau5VqsAzc3OoprcwCdDE8S+wUQkxWOaW0kKXmVnDLNpi1+L6+D
EhkUc5Kw/Q1kpkoI9in3GCO9AxXnWvYX9hG2NxsIpV66wmKbB6hMsUFtggXB
lgYEnDTl31VNnOersHZpp2jJQRmku5vwW0PsBMG5hPgF8/Byvjh/6jgYE4IY
EziyRmB1hR3uU2bxuHAvX2OyyBxWi4F+C5sXP8Ut9xFvhn8jpPMxvZoa+JDy
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
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyNvGVcVQnf/U2DiaKiAoqKhYWKBYisn4odmGN3jd3d7dg5tiIqJ/beBxCl
G0Hs7sYOUExCfNbc44vrM/c91/N/sWdz8Ai6115rfdc5OFVHTOk5xsLMzGyG
Hf/Tc/gcmT59+LxeNn89GD18omfjiX/9Yn0eY3lERplglmhChzSeD5tgmmfC
sKUmRK7k4yEm6LxNyBMTZvqa0NjaBNdCDQ0tTXjzXkN0goZD8RpqpWl4GajB
Yb4G5+Ua5i7SUNFfw05fDZN4NqumoXm+im3mGtYWqmj5XsXyrir8EjXI81B4
HwuDx64wDK0ThhlbQ/FcF4JZB01YPUhDve0qhm5TMWi4ikwfFbMeKij5SsF2
JxXlshQccVexqo6KIT1VHNqq4jGfszpHwRpXBXM6KuhlpqJDhoJxixTkb1Ng
1VZB2yNGrJpnxMspRoRtV3A78zgC3JLhvP4dzF9m4W3/jyhskIPsjTl4tzIH
7exyYDv1I5roPiD4QhYOJbxFmRqvcG7NU7QPfYRpYXH4rbEOx44YsCTUgJxo
A2qdMuDYMwN2XdGj+S4Dbhbo8WCaHo1G6bHOSw8v6HHFRw+bUvx8vg7lLPTI
57lYqg5m8To04fl9rAl6atOFh+M2EzIXmjB3mQmzF5ng6W/CilYmLKI2F6jR
FgsTEn5oWG5D3R5r2BKlYXKShr68xrqtGkwLNbxepuECNVrTWoNrKw05bTV0
qKzB6ruKhcU1WFfQMK66iqu7TdBWhGNw05OwL3cSxSPC8bZMOLr4ncCoWmGI
sgnFn0dM+FaRX1uvoqG3ijolVZRxUWHOa137soIpRVQkOKhoXUpFiKWKiXxO
0EIV85ap+EING5hTq0wFDskKzu1Q8J56tYaCld0VrE8wIocabX1nxIStBnx0
vIFP2z+hQkAO3EZ9xojgLxhU6yscbb9iZb8vmFDuM2pNzYHU+IiWtbIxqNJb
NMQLrNx8H4dGaSjeRY87PgY8OWNA3A4DOlGnis5GuAfpUWhnwO25BmSv0cOi
jR4fWulRpa0eMz30aPpDB/WnDiWs9Ah9pEPpGB1uJeqwLkmHOgn8+1MXz3he
f2ryZrEJI3i+MN+EDa1NsKE2/aiRWTUTqudrMDc3Ic7MhBZXNWTGalhAbZrQ
OxepidViDQGr6JMRGkr6aHgiGpbSO5mWGvrY0VefVWyfomJj9xAkR55CjUoR
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
aimOJw==
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
9v8BNexoPA==
      "], {{0, 45.}, {103., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag[
     "Real32", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{103., 45.},
    PlotRange->{{0, 103.}, {0, 45.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.8451308707943773`*^9, 3.845136407632846*^9, 
  3.8451396440236487`*^9, 3.8451423036268177`*^9, 3.845142425706299*^9, 
  3.845648633386898*^9, 3.845717596165865*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9d31968d-7aef-4d21-a576-e25fe9c61ee2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", "45"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8451308707943773`*^9, 3.845136407632846*^9, 
  3.8451396440236487`*^9, 3.8451423036268177`*^9, 3.845142425706299*^9, 
  3.845648633386898*^9, 3.8457175961668615`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d6e9677b-ecd4-48a9-b587-f6035ac54c5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"max dv=\"\>", "\[InvisibleSpace]", "12.595175743103027`"}],
  SequenceForm["max dv=", 12.595175743103027`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8451308707993646`*^9, 3.8451364076378317`*^9, 
  3.845139644029633*^9, 3.8451423036318045`*^9, 3.8451424257123165`*^9, 
  3.8456486334367647`*^9, 3.845717596167859*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"75975480-1ed9-46d8-9cee-0e1500d7c1f0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Tests", "Section",
 CellChangeTimes->{{3.8396005056192665`*^9, 3.839600506650977*^9}, {
   3.8396006430435266`*^9, 3.8396006454493484`*^9}, 3.8396009902260947`*^9, {
   3.839601775074339*^9, 3.839601775891445*^9}, {3.8432444128743267`*^9, 
   3.8432444151784225`*^9}},ExpressionUUID->"d27acb04-c6fd-4944-8227-\
118c1ff153a7"],

Cell[CellGroupData[{

Cell["Little Functions", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.843308066803094*^9, 
   3.8433080681141663`*^9}},ExpressionUUID->"b38d52a6-6120-4727-a325-\
de50a59d758d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pyrfi", "[", 
   RowBox[{"ia_", ",", "ib_", ",", "row_", ",", "lvlmax_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pyrfia", ",", "pyrfib"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pyrfia", "=", 
      RowBox[{"pyrFuncGen", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageData", "[", "ia", "]"}], "[", 
         RowBox[{"[", "row", "]"}], "]"}], ",", " ", "lvlmax"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"pyrfib", "=", 
      RowBox[{"pyrFuncGen", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageData", "[", "ib", "]"}], "[", 
         RowBox[{"[", "row", "]"}], "]"}], ",", "lvlmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pyrfia", ",", "pyrfib"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.84313892088904*^9, 3.8431390761722784`*^9}, {
   3.8431392570148835`*^9, 3.843139273697956*^9}, {3.8431590848455114`*^9, 
   3.84315912015506*^9}, {3.843159154421751*^9, 3.843159154684618*^9}, 
   3.843159972594839*^9, {3.843224134943307*^9, 3.8432241373889875`*^9}, {
   3.843238887570883*^9, 3.8432388887128267`*^9}, {3.843244470687603*^9, 
   3.843244471083666*^9}, {3.843245943522396*^9, 3.843245953156348*^9}, 
   3.8432471526931915`*^9, 3.8432472029964914`*^9, 3.843247273562867*^9, {
   3.8432484084228573`*^9, 3.8432484087823677`*^9}, {3.8433081379635553`*^9, 
   3.843308241907001*^9}, {3.8433083959863462`*^9, 3.843308396126707*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"cb786676-2541-46c2-a080-ee0f48f60b08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvlmax", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyrfiab", "=", 
   RowBox[{"pyrfi", "[", 
    RowBox[{"ia", ",", "ib", ",", "row", ",", "lvlmax"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.843746040554737*^9, 3.8437461051324205`*^9}, {
   3.8437555812868156`*^9, 3.843755582637147*^9}, 3.8437556660876565`*^9, {
   3.843756798752108*^9, 3.8437568007775183`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6ea70fb8-085a-46ce-a6db-87a5d0ee1215"]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: Same", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.8454643298482103`*^9, 
   3.845464333805129*^9}},ExpressionUUID->"2931c04b-3c5d-4a0c-a94b-\
f98aa5a365f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "values", " ", "for", " ", "v0"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "See", " ", "list", " ", "of", " ", "values", " ", "for", " ", "v0"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "listv0", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.845130956044901*^9, {3.845132051480414*^9, 3.8451320672553697`*^9}, {
   3.845135633109228*^9, 3.845135648879689*^9}, {3.845138054072262*^9, 
   3.845138055446104*^9}, {3.845138253435388*^9, 3.8451382736072054`*^9}, {
   3.8451383432348137`*^9, 3.8451383453702445`*^9}, {3.8451394048897595`*^9, 
   3.845139426703129*^9}, {3.845139512548291*^9, 3.845139526438867*^9}, {
   3.8453954796392555`*^9, 3.8453954800381427`*^9}, 3.8454637215925055`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"ed904c62-5c3c-4df6-92dd-c3816a6e6b33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvlmax", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic", "=", "ib"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pyrfiac", "=", 
    RowBox[{"pyrfi", "[", 
     RowBox[{"ia", ",", "ic", ",", "row", ",", "lvlmax"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.843835334624956*^9, 3.843835368578481*^9}, 
   3.8438450809974666`*^9, {3.843845211153522*^9, 3.843845212205433*^9}, 
   3.843849999355584*^9, 3.8439133712817597`*^9, 3.8439150398074837`*^9, 
   3.843920580641367*^9, {3.84417755355663*^9, 3.844177556440915*^9}, 
   3.8441775980956836`*^9, 3.844185689541815*^9, 3.8442590654010983`*^9, {
   3.844264282770895*^9, 3.8442642829936075`*^9}, 3.844264689727025*^9, 
   3.844264759196179*^9, 3.8442648198219194`*^9, {3.8442653211294727`*^9, 
   3.844265323598428*^9}, 3.84426549222948*^9, 3.8442661429774175`*^9, 
   3.8442662959391413`*^9, 3.8442663743948307`*^9, {3.844266420007477*^9, 
   3.8442664202792425`*^9}, 3.844266941374533*^9, 3.844267844960446*^9, 
   3.84426788446496*^9, 3.8442681175776176`*^9, {3.844368944036168*^9, 
   3.8443690311697803`*^9}, {3.8443834765707*^9, 3.8443834927578487`*^9}, 
   3.844383708867654*^9, {3.8443838609163*^9, 3.844383890175245*^9}, 
   3.844384066585294*^9, 3.8443846075492935`*^9, {3.844386019469968*^9, 
   3.844386020533064*^9}, 3.844386065403781*^9, {3.844386164351085*^9, 
   3.8443861669567623`*^9}, 3.8443862732643504`*^9, {3.8443867111875257`*^9, 
   3.8443867347645273`*^9}, 3.844420540102929*^9, 3.844420621313531*^9, 
   3.8444209632245502`*^9, {3.844421164855092*^9, 3.8444211725503883`*^9}, 
   3.844427010165151*^9, 3.844434237766187*^9, {3.844434404740629*^9, 
   3.84443445745266*^9}, {3.8444344888363104`*^9, 3.844434503908309*^9}, 
   3.844435008094733*^9, {3.8444351348099775`*^9, 3.8444351381313066`*^9}, {
   3.844435816423999*^9, 3.844435817902401*^9}, {3.844445010509431*^9, 
   3.8444450570148573`*^9}, 3.844448122790785*^9, 3.8447804324213314`*^9, {
   3.8447805823751144`*^9, 3.844780635418126*^9}, {3.8447807179314127`*^9, 
   3.8447807249948177`*^9}, {3.8447808219580584`*^9, 3.8447808251560745`*^9}, 
   3.844874740281625*^9, 3.8449450409249034`*^9, 3.8449573103636007`*^9, {
   3.844957427716659*^9, 3.8449574284526105`*^9}, {3.844958347970345*^9, 
   3.844958348249477*^9}, 3.8449614930870266`*^9, {3.8451310171451325`*^9, 
   3.845131022311571*^9}, {3.845131967543418*^9, 3.845131976815094*^9}, {
   3.845135870894712*^9, 3.8451358836747785`*^9}, {3.8451362206463413`*^9, 
   3.845136221019266*^9}, {3.8451363564744167`*^9, 3.8451363600240307`*^9}, 
   3.8451364130148687`*^9, {3.845137971969864*^9, 3.8451379798998938`*^9}, {
   3.8451392805271573`*^9, 3.845139326518052*^9}, {3.84513936784133*^9, 
   3.8451393685114594`*^9}, {3.845139481150041*^9, 3.8451394814264073`*^9}, {
   3.845139552042735*^9, 3.845139553524257*^9}, {3.8451396728015957`*^9, 
   3.84513968232996*^9}, 3.845139759017121*^9, 3.8453958468823376`*^9, 
   3.845395944937338*^9, {3.8453959985190125`*^9, 3.8453959990429273`*^9}, {
   3.8453963956832376`*^9, 3.845396399264204*^9}, {3.845396773130649*^9, 
   3.845396800333284*^9}, {3.8453968786656914`*^9, 3.8453968821129246`*^9}, 
   3.845396971098918*^9, {3.8453970148698516`*^9, 3.8453970407525625`*^9}, 
   3.845397073797025*^9, {3.8453973872551537`*^9, 3.84539738771657*^9}, {
   3.845398075208515*^9, 3.8453980784020033`*^9}, {3.8454644154565334`*^9, 
   3.845464427678025*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c8ebe2d7-2e87-40ed-861d-8e40b78f1660"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"depthp", "=", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stereoDepth", "[", 
      RowBox[{"listv0", ",", "ia", ",", "ic", ",", "lvlmax", ",", 
       RowBox[{"{", 
        RowBox[{"lvlmin", ",", "lvlmax"}], "}"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"p", ",", "p"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"row", ",", "row"}], "]"}], ",", "0.001", ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1", ",", "1", ",", 
     RowBox[{"3", ";;", "4"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.845464346847506*^9, {3.845464377681811*^9, 3.845464379126988*^9}, {
   3.845464439415188*^9, 3.8454644710336256`*^9}, {3.845464543720005*^9, 
   3.845464560665977*^9}, {3.8454657910068607`*^9, 3.845465834144024*^9}, {
   3.8454757155119805`*^9, 3.8454757158488235`*^9}, {3.845475771598921*^9, 
   3.8454759208299713`*^9}, {3.8454795805770383`*^9, 3.845479582254462*^9}, {
   3.8454796148910737`*^9, 3.845479633752892*^9}, 3.845479668422963*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"66fedd79-651d-4e34-afb9-f0dd89f8e698"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.9984366036428125`"}], ",", 
     RowBox[{"-", "1.1793170325032856`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.234590078321242`"}], ",", 
     RowBox[{"-", "0.3032122464588541`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.258312204636068`"}], ",", 
     RowBox[{"-", "1.2738924517505021`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.9933808845954046`"}], ",", 
     RowBox[{"-", "2.5736014347156235`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9765111695822677`"}], ",", 
     RowBox[{"-", "3.5980201848122793`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8423886442113897`"}], ",", 
     RowBox[{"-", "1.2679348093737801`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.127814019931441`"}], ",", 
     RowBox[{"-", "0.8521950161789641`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.346634049203709`"}], ",", 
     RowBox[{"-", "0.48935406492212863`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.7518305220725585`"}], ",", 
     RowBox[{"-", "2.1314775346389516`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.699595390476306`"}], ",", 
     RowBox[{"-", "3.1926707575838176`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.1675771753675486`"}], ",", 
     RowBox[{"-", "3.660457609848064`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.158839968411984`"}], ",", 
     RowBox[{"-", "4.67248778631695`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3705426721218932`"}], ",", 
     RowBox[{"-", "5.470801274676199`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.3100527728133224`"}], ",", 
     RowBox[{"-", "4.740424350688478`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.4609077259788785`"}], ",", 
     RowBox[{"-", "4.457299755328489`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2353074419884615`"}], ",", 
     RowBox[{"-", "4.707882731027374`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.537185297320309`"}], ",", 
     RowBox[{"-", "1.2325172881041553`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.146050822693702`"}], ",", 
     RowBox[{"-", "1.5697073696383077`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8334434214839517`"}], ",", 
     RowBox[{"-", "2.90210055799449`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.935364030108871`"}], ",", 
     RowBox[{"-", "2.7748349524905187`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.794043474093809`"}], ",", 
     RowBox[{"-", "1.7753520404028786`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.922917883472467`"}], ",", 
     RowBox[{"-", "0.3037661874113443`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.018423845307831`"}], ",", 
     RowBox[{"-", "1.216430556356077`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8223567171270054`"}], ",", 
     RowBox[{"-", "2.400640554047105`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.8662003040619233`"}], ",", 
     RowBox[{"-", "3.357850124973113`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8475086674006473`"}], ",", 
     RowBox[{"-", "4.375514798186701`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6829430088709542`"}], ",", 
     RowBox[{"-", "5.543779302587224`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.38455637023498446`"}], ",", 
     RowBox[{"-", "5.954909769382337`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454657992245145`*^9, 3.8454680209071445`*^9, {3.845475806909154*^9, 
   3.8454759228957043`*^9}, 3.8454794923493333`*^9, 3.845479585103529*^9, {
   3.845479618994472*^9, 3.845479636034543*^9}, 3.8454796748631325`*^9, 
   3.8456486351377306`*^9, 3.845717598901464*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d13b59f6-14c7-4b03-8d8a-6c59248ce0a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pyrflowp", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrFlow1D", "[", 
      RowBox[{"10", ",", "p", ",", "listv0", ",", " ", 
       RowBox[{"pyrfiac", "[", 
        RowBox[{"[", 
         RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
       RowBox[{"0.001", "*", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8454793593993645`*^9, 3.8454793806020203`*^9}, {
  3.8454794182629094`*^9, 3.8454794336108274`*^9}, {3.845479720364106*^9, 
  3.8454797246074953`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9e136436-f3c4-4e46-9b17-dbae6f69b21c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.998061563344581`"}], ",", 
     RowBox[{"-", "1.1793314055815958`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.234629719703144`"}], ",", 
     RowBox[{"-", "0.3032122461292415`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.258315216714783`"}], ",", 
     RowBox[{"-", "1.2738924763094075`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.9989077142095524`"}], ",", 
     RowBox[{"-", "2.5735874593604504`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9739090347730783`"}], ",", 
     RowBox[{"-", "3.5980275353133417`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8469138256726634`"}], ",", 
     RowBox[{"-", "1.2679391606169859`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.126661669974945`"}], ",", 
     RowBox[{"-", "0.8522549495367191`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.341653670184092`"}], ",", 
     RowBox[{"-", "0.4895845358475019`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.751838344725986`"}], ",", 
     RowBox[{"-", "2.1314764839162472`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.699593240290793`"}], ",", 
     RowBox[{"-", "3.192670850626215`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.167629221402812`"}], ",", 
     RowBox[{"-", "3.6604404248786637`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.1560567872608876`"}], ",", 
     RowBox[{"-", "4.672439378214226`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3675861628538069`"}], ",", 
     RowBox[{"-", "5.470910523679496`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.31005277155299`"}], ",", 
     RowBox[{"-", "4.740424412961458`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.460907364784925`"}], ",", 
     RowBox[{"-", "4.457299755451129`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2353074417444283`"}], ",", 
     RowBox[{"-", "4.707882731777868`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.555707891071781`"}], ",", 
     RowBox[{"-", "1.1863875454140662`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.147515746398217`"}], ",", 
     RowBox[{"-", "1.569588424239011`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8228756946353326`"}], ",", 
     RowBox[{"-", "2.9065878430099845`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.988433038279459`"}], ",", 
     RowBox[{"-", "0.6221860606509042`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.240028972987761`"}], ",", 
     RowBox[{"-", "2.5093906992772745`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.921887987530858`"}], ",", 
     RowBox[{"-", "0.30377183957834364`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.02223520725496`"}], ",", 
     RowBox[{"-", "1.2161245513347971`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8221516831175544`"}], ",", 
     RowBox[{"-", "2.4006407010987423`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.865961096513705`"}], ",", 
     RowBox[{"-", "3.3578487437691`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8473397312214348`"}], ",", 
     RowBox[{"-", "4.375518187999255`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6829429817166179`"}], ",", 
     RowBox[{"-", "5.543779302765115`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3655063481685002`"}], ",", 
     RowBox[{"-", "5.961519099521663`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.845479382096519*^9, 3.845479443439096*^9, 
  3.845479726489481*^9, 3.8456486364807744`*^9, 3.8457176002589645`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"3f4a9234-5ab1-41b6-a2b6-5f46669dd73c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iterp", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PyrFlow1DIter", "[", 
      RowBox[{"10", ",", "p", ",", "listv0", ",", " ", 
       RowBox[{"pyrfiac", "[", 
        RowBox[{"[", 
         RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
       RowBox[{"0.001", "*", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "1", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845475917509387*^9, 3.8454759257286816`*^9}, {
  3.8454794400127316`*^9, 3.8454794596879053`*^9}, {3.8454797278328977`*^9, 
  3.845479729235962*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"5aa41624-21ff-4a92-a47e-c96a29cc086f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.9992904209884625`"}], ",", 
     RowBox[{"-", "1.179314595697561`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.234636632568359`"}], ",", 
     RowBox[{"-", "0.3032122469807494`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.258300579865724`"}], ",", 
     RowBox[{"-", "1.2738924533274445`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.9972730194376607`"}], ",", 
     RowBox[{"-", "2.5735813599629735`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9728142340918562`"}], ",", 
     RowBox[{"-", "3.5980177099744175`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0352891078053839`"}], ",", 
     RowBox[{"-", "4.533570818048763`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7953344204603245`"}], ",", 
     RowBox[{"-", "3.5753492648904235`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.343749920288728`"}], ",", 
     RowBox[{"-", "0.4895170872794587`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.751829144778187`"}], ",", 
     RowBox[{"-", "2.1314778603612683`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.6995949957155196`"}], ",", 
     RowBox[{"-", "3.1926731873238436`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.1676225635513777`"}], ",", 
     RowBox[{"-", "3.6602701503183397`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.1575467019557815`"}], ",", 
     RowBox[{"-", "4.672250421835703`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3670873667590455`"}], ",", 
     RowBox[{"-", "5.470433467656032`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.310052586525642`"}], ",", 
     RowBox[{"-", "4.740424027208712`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.4609078405899663`"}], ",", 
     RowBox[{"-", "4.45729975591044`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2353074419693937`"}], ",", 
     RowBox[{"-", "4.707882731032966`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.146463169746434`"}], ",", 
     RowBox[{"-", "1.5695271506429125`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8229447104378145`"}], ",", 
     RowBox[{"-", "2.9132033248718603`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.766538741938604`"}], ",", 
     RowBox[{"-", "1.7395472723723153`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "18.027575626389698`"}], ",", 
     RowBox[{"-", "1.7691370609549453`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.922562322186229`"}], ",", 
     RowBox[{"-", "0.30376962672042024`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.01763388622715`"}], ",", 
     RowBox[{"-", "1.2164508247386867`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8222602408205995`"}], ",", 
     RowBox[{"-", "2.400639969776574`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.865849115936203`"}], ",", 
     RowBox[{"-", "3.3578555734522633`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8476357333249849`"}], ",", 
     RowBox[{"-", "4.37551464736292`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6829429769907187`"}], ",", 
     RowBox[{"-", "5.543779312988267`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3860113025034844`"}], ",", 
     RowBox[{"-", "5.954055605927271`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845475927207075*^9, {3.845479444905833*^9, 3.84547946395405*^9}, 
   3.845479730958583*^9, 3.845648637917222*^9, 3.8457176016585407`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"864a93f7-0b2a-4ca6-89a6-b8791996d241"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: All packages", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}},ExpressionUUID->"c661ae9a-342e-4077-a3a5-\
f84e16812c76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "move", " ", "the", " ", "image", " ", "so", " ", 
    "intermediate", " ", "cyclopean", " ", "image", " ", "haves", " ", 
    "bigger", " ", "reach"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dis", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ic", "=", 
    RowBox[{"move", "[", 
     RowBox[{"ib", ",", "dis"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steps", "=", "1"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8449449787025995`*^9, 3.844944982914404*^9}, {
   3.844945015514289*^9, 3.8449450839081793`*^9}, {3.844945237326069*^9, 
   3.8449452557996674`*^9}, 3.8449453671035566`*^9, {3.844957342263509*^9, 
   3.844957354485817*^9}, {3.8451319283515463`*^9, 3.845131953025*^9}, {
   3.8451319912315383`*^9, 3.8451320077055206`*^9}, 3.8451321916331325`*^9, {
   3.845132284677415*^9, 3.845132306833476*^9}, 3.845135555142886*^9, {
   3.845136199986763*^9, 3.845136203277469*^9}, {3.8451379770829535`*^9, 
   3.8451379980119925`*^9}, {3.845138784281433*^9, 3.8451387856930003`*^9}, {
   3.8451391053747787`*^9, 3.8451391059874*^9}, 3.8451392492559786`*^9, {
   3.8451393288673277`*^9, 3.845139339424567*^9}, {3.84513960567037*^9, 
   3.845139606473217*^9}, {3.8451398511720915`*^9, 3.845139852145792*^9}, {
   3.8451400814083085`*^9, 3.8451400822235956`*^9}, 3.8451404866056356`*^9, 
   3.8451405908794966`*^9, 3.8451407810488353`*^9, {3.84514087079233*^9, 
   3.8451408763658123`*^9}, {3.845141030442355*^9, 3.8451410325402*^9}, 
   3.8453954659328356`*^9, {3.845396034947715*^9, 3.845396039933103*^9}, {
   3.845396093516551*^9, 3.845396094014565*^9}, {3.845396387883806*^9, 
   3.8453963898529606`*^9}, {3.8453965381925464`*^9, 3.8453965412231326`*^9}, 
   3.845396707209521*^9, {3.845397115585616*^9, 3.8453971956824627`*^9}, 
   3.845397381132434*^9, {3.845398066418298*^9, 3.8453980696040215`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"197b8b89-971f-4105-94e0-7b049062a299"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pwqWG4w5fv6byPbsOD5aLkPWT44ZPWX5XioQH7mBDbf3oN68n3mRuxEeuqDr
5c/LPkkoxSfyNyqTRy25dMjlM9/kK/c7ZYVDZzPpGu+LheFhVtydQXT2aBw2
jiXx70C6Pg1Af6k+G+MG03FkMKO1++A+uB/9u/SoUplDktdxDl5q5mXqN+w0
3qD2M5X1U7wwWhGA0h4/Vi7agMNzKxROzuDttk3YO3iSFSNmnZBEdPYWMLvq
Bi8rk7j1vbuQ+ERSKNm/iT7VVnTE2vIoaBw1xRM41+Eg7ns1IiaOxuScOK8S
Q5k7PYP+3/OIcTnLNvGsRJ6vxFa9lvPza8RuWYuvxXXGTbmPwr67rJ3fxYmW
Tpr3PyB4SRhvPNbwsXQin3y3kdq+icNbViK/05KFH0x4Z72Tqr1H8RIdIvf4
Qyz63yPq0k+iM/sKRePLmPA6hbgPBeJ5TUcjJ51BiyKRcljBfDexr3eoiv11
EG5ze+Gv/09UWa/PpypxTixZzeph3lg3BxH5OwLrSaHcUvAjMiCAMUVe1Ju7
EaIQw93h2cRL5RDS6yKnZb7w9+0vhjoHoXckkfN/ziKv0MzTxm8oCneZKT5z
q9ijmnxMuBc8H30JI0Lz+1Ab3ofHq1UYYClCdV4oPhNfsFa+jnf3W7Ab9gjb
J0GklzsyxN8F0ZadOGTN5nTxEtxGRzD1ci6arWl8GlXAzOhK1lpd46NbNpeO
SQinrTp5edcY+e2qFDTJkWy4F73hvkhMHcWtjKmodNhxQkOcTUtSGRyaK65R
EaXfznF25yW0H9TS/+sVrLXreNv7OpqdL6h4/5Edmx7Rkt1LMPXt4spCTwLk
5tH9ojMPt21nlMFOvvY5wLimmfweOhT5+7Mx0NlP1Hmx8+9KZd67DhQ3fiNw
xH2ubtcU6qSUhYqsZPZXic8t3ovla3K4HJbMvs8HkbEZzISBOrzab8pW/YF0
HO9F7yZTDMau5VqsAzc3OoprcwCdDE8S+wUQkxWOaW0kKXmVnDLNpi1+L6+D
EhkUc5Kw/Q1kpkoI9in3GCO9AxXnWvYX9hG2NxsIpV66wmKbB6hMsUFtggXB
lgYEnDTl31VNnOersHZpp2jJQRmku5vwW0PsBMG5hPgF8/Byvjh/6jgYE4IY
EziyRmB1hR3uU2bxuHAvX2OyyBxWi4F+C5sXP8Ut9xFvhn8jpPMxvZoa+JDy
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
    "], {{0, 45.}, {103., 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{103., 45.},
  PlotRange->{{0, 103.}, {0, 45.}}]], "Output",
 CellChangeTimes->{
  3.845130870915064*^9, {3.845131936002123*^9, 3.8451319415878115`*^9}, {
   3.8451319806161737`*^9, 3.845132008681752*^9}, 3.845132192857412*^9, 
   3.845135556093134*^9, 3.8451359407469296`*^9, 3.8451362246105785`*^9, 
   3.8451363282009616`*^9, {3.8451363874650755`*^9, 3.845136416235072*^9}, 
   3.8451380009165516`*^9, 3.845138788619785*^9, 3.8451388965634847`*^9, 
   3.845139110771559*^9, 3.845139252604742*^9, 3.84513930293213*^9, {
   3.8451393350932393`*^9, 3.845139371620303*^9}, 3.8451394502582383`*^9, 
   3.8451394846075697`*^9, {3.845139520230359*^9, 3.8451395576801095`*^9}, 
   3.8451396441991796`*^9, 3.8451396837278094`*^9, 3.845139803572116*^9, 
   3.8451398603935375`*^9, 3.8451399118968782`*^9, 3.8451400855280976`*^9, 
   3.845140489594086*^9, 3.845140593554908*^9, 3.8451407840164337`*^9, 
   3.8451408792434816`*^9, 3.8451409821235437`*^9, 3.845141035376128*^9, 
   3.845142303703643*^9, 3.8451424257721233`*^9, {3.845395469019182*^9, 
   3.845395485449824*^9}, 3.8453958508315005`*^9, 3.8453959483403873`*^9, 
   3.8453960022693863`*^9, 3.845396043716463*^9, 3.8453960976672287`*^9, 
   3.8453964022105265`*^9, 3.845396438034293*^9, 3.845396544336933*^9, 
   3.8453967097550683`*^9, {3.845396777433261*^9, 3.845396803908635*^9}, 
   3.845396885878937*^9, 3.8453969750565767`*^9, {3.845397022208046*^9, 
   3.845397044261247*^9}, 3.8453970776858892`*^9, {3.845397147089485*^9, 
   3.8453971991129913`*^9}, 3.8453973935006876`*^9, 3.8453980819542007`*^9, 
   3.845648637979292*^9, 3.8457176018368917`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"09bc5473-314a-43a3-b02d-fa52a6f0b6aa"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvlmax", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pyrfiac", "=", 
    RowBox[{"pyrfi", "[", 
     RowBox[{"ia", ",", "ic", ",", "row", ",", "lvlmax"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.843835334624956*^9, 3.843835368578481*^9}, 
   3.8438450809974666`*^9, {3.843845211153522*^9, 3.843845212205433*^9}, 
   3.843849999355584*^9, 3.8439133712817597`*^9, 3.8439150398074837`*^9, 
   3.843920580641367*^9, {3.84417755355663*^9, 3.844177556440915*^9}, 
   3.8441775980956836`*^9, 3.844185689541815*^9, 3.8442590654010983`*^9, {
   3.844264282770895*^9, 3.8442642829936075`*^9}, 3.844264689727025*^9, 
   3.844264759196179*^9, 3.8442648198219194`*^9, {3.8442653211294727`*^9, 
   3.844265323598428*^9}, 3.84426549222948*^9, 3.8442661429774175`*^9, 
   3.8442662959391413`*^9, 3.8442663743948307`*^9, {3.844266420007477*^9, 
   3.8442664202792425`*^9}, 3.844266941374533*^9, 3.844267844960446*^9, 
   3.84426788446496*^9, 3.8442681175776176`*^9, {3.844368944036168*^9, 
   3.8443690311697803`*^9}, {3.8443834765707*^9, 3.8443834927578487`*^9}, 
   3.844383708867654*^9, {3.8443838609163*^9, 3.844383890175245*^9}, 
   3.844384066585294*^9, 3.8443846075492935`*^9, {3.844386019469968*^9, 
   3.844386020533064*^9}, 3.844386065403781*^9, {3.844386164351085*^9, 
   3.8443861669567623`*^9}, 3.8443862732643504`*^9, {3.8443867111875257`*^9, 
   3.8443867347645273`*^9}, 3.844420540102929*^9, 3.844420621313531*^9, 
   3.8444209632245502`*^9, {3.844421164855092*^9, 3.8444211725503883`*^9}, 
   3.844427010165151*^9, 3.844434237766187*^9, {3.844434404740629*^9, 
   3.84443445745266*^9}, {3.8444344888363104`*^9, 3.844434503908309*^9}, 
   3.844435008094733*^9, {3.8444351348099775`*^9, 3.8444351381313066`*^9}, {
   3.844435816423999*^9, 3.844435817902401*^9}, {3.844445010509431*^9, 
   3.8444450570148573`*^9}, 3.844448122790785*^9, 3.8447804324213314`*^9, {
   3.8447805823751144`*^9, 3.844780635418126*^9}, {3.8447807179314127`*^9, 
   3.8447807249948177`*^9}, {3.8447808219580584`*^9, 3.8447808251560745`*^9}, 
   3.844874740281625*^9, 3.8449450409249034`*^9, 3.8449573103636007`*^9, {
   3.844957427716659*^9, 3.8449574284526105`*^9}, {3.844958347970345*^9, 
   3.844958348249477*^9}, 3.8449614930870266`*^9, {3.8451310171451325`*^9, 
   3.845131022311571*^9}, {3.845131967543418*^9, 3.845131976815094*^9}, {
   3.845135870894712*^9, 3.8451358836747785`*^9}, {3.8451362206463413`*^9, 
   3.845136221019266*^9}, {3.8451363564744167`*^9, 3.8451363600240307`*^9}, 
   3.8451364130148687`*^9, {3.845137971969864*^9, 3.8451379798998938`*^9}, {
   3.8451392805271573`*^9, 3.845139326518052*^9}, {3.84513936784133*^9, 
   3.8451393685114594`*^9}, {3.845139481150041*^9, 3.8451394814264073`*^9}, {
   3.845139552042735*^9, 3.845139553524257*^9}, {3.8451396728015957`*^9, 
   3.84513968232996*^9}, 3.845139759017121*^9, 3.8453958468823376`*^9, 
   3.845395944937338*^9, {3.8453959985190125`*^9, 3.8453959990429273`*^9}, {
   3.8453963956832376`*^9, 3.845396399264204*^9}, {3.845396773130649*^9, 
   3.845396800333284*^9}, {3.8453968786656914`*^9, 3.8453968821129246`*^9}, 
   3.845396971098918*^9, {3.8453970148698516`*^9, 3.8453970407525625`*^9}, 
   3.845397073797025*^9, {3.8453973872551537`*^9, 3.84539738771657*^9}, {
   3.845398075208515*^9, 3.8453980784020033`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"73e7948b-5c82-455c-aead-83be09f9aed4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p0", "=", "46"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pyrfiac", "[", 
        RowBox[{"[", 
         RowBox[{"lvlmin", ",", "1", ",", "1"}], "]"}], "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{
       RowBox[{"pyrfiac", "[", 
        RowBox[{"[", 
         RowBox[{"lvlmin", ",", "2", ",", "1"}], "]"}], "]"}], "[", "x", 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "103"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.844780823398777*^9, 3.844780864481429*^9}, {
   3.844780895497785*^9, 3.8447808958901777`*^9}, {3.844781070911272*^9, 
   3.844781097411128*^9}, {3.844874746344429*^9, 3.844874754500001*^9}, 
   3.844957318448719*^9, 3.8449574385190783`*^9, 3.8449576506006556`*^9, {
   3.8449654904980683`*^9, 3.844965490608654*^9}, {3.8449694626846924`*^9, 
   3.8449694627705927`*^9}, {3.844969525441289*^9, 3.844969535419387*^9}, {
   3.8449695834994297`*^9, 3.8449695838443813`*^9}, {3.8451310260293684`*^9, 
   3.845131040153788*^9}, {3.845131977880904*^9, 3.8451319791497326`*^9}, {
   3.8451321693393326`*^9, 3.845132173212121*^9}, {3.8451392864088783`*^9, 
   3.8451392929767504`*^9}, {3.8453964100724974`*^9, 
   3.8453964174531755`*^9}, {3.8453973099043846`*^9, 3.8453973137345605`*^9}, 
   3.8454655963862715`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"00295c08-4f02-48d3-b5f0-3482cf085308"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "values", " ", "for", " ", "v0"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "See", " ", "list", " ", "of", " ", "values", " ", "for", " ", "v0"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "listv0", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.845130956044901*^9, {3.845132051480414*^9, 3.8451320672553697`*^9}, {
   3.845135633109228*^9, 3.845135648879689*^9}, {3.845138054072262*^9, 
   3.845138055446104*^9}, {3.845138253435388*^9, 3.8451382736072054`*^9}, {
   3.8451383432348137`*^9, 3.8451383453702445`*^9}, {3.8451394048897595`*^9, 
   3.845139426703129*^9}, {3.845139512548291*^9, 3.845139526438867*^9}, {
   3.8453954796392555`*^9, 3.8453954800381427`*^9}, 3.8454637215925055`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"20288f23-6d39-439b-adf3-e85e690fd618"],

Cell[BoxData[
 RowBox[{
  RowBox[{"seeAllLine", "[", 
   RowBox[{"listv0", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "103", ",", "steps"}], "]"}], ",", 
    RowBox[{"pyrfiac", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", "0.001", ",", 
    "\"\<ConstrainedNewMethod\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.844957212272694*^9, {3.844957409609321*^9, 3.844957414522792*^9}, 
   3.844957511013838*^9, {3.8449612512934155`*^9, 3.844961278106824*^9}, {
   3.844961495858921*^9, 3.8449615461329374`*^9}, {3.844969606581788*^9, 
   3.8449696069317403`*^9}, {3.84496964428543*^9, 3.8449696451983967`*^9}, {
   3.844969683936313*^9, 3.844969684107342*^9}, {3.844969739528669*^9, 
   3.8449697398443003`*^9}, {3.84496982192001*^9, 3.8449698224589205`*^9}, {
   3.8449701241663513`*^9, 3.8449701243237915`*^9}, {3.8449702286604834`*^9, 
   3.8449702289435406`*^9}, {3.8449702710186977`*^9, 3.84497027175492*^9}, {
   3.8449704087754555`*^9, 3.8449704090845623`*^9}, 3.844970501742416*^9, {
   3.8449710035210905`*^9, 3.844971003643005*^9}, {3.844971230747134*^9, 
   3.844971231789382*^9}, {3.844971406247786*^9, 3.8449714080839267`*^9}, 
   3.845130967771509*^9, {3.845131101710151*^9, 3.8451311068660393`*^9}, {
   3.8451315853178415`*^9, 3.845131586173402*^9}, 3.845131691316324*^9, 
   3.845132089119191*^9, 3.845135626203733*^9, 3.8451363215581455`*^9, {
   3.8451363719646454`*^9, 3.8451363722214403`*^9}, 3.8451380592593513`*^9, {
   3.8451407513350525`*^9, 3.8451407543547664`*^9}, {3.845140829186371*^9, 
   3.8451408479936976`*^9}, {3.8451409124789486`*^9, 3.845140919447158*^9}, 
   3.8454637142765913`*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"f1498f64-b1da-4085-9dfb-71260303bc03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ress", "=", 
   RowBox[{"lineTest", "[", 
    RowBox[{"listv0", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "103", ",", "steps"}], "]"}], ",", 
     RowBox[{"pyrfiac", "[", 
      RowBox[{"[", 
       RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", "0.001", ",", 
     "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8449624768098354`*^9, 3.8449624893307667`*^9}, {
   3.844969746746155*^9, 3.8449697470526047`*^9}, {3.844969828656689*^9, 
   3.8449698287981095`*^9}, 3.8449701307514524`*^9, {3.844970182081689*^9, 
   3.844970182352219*^9}, {3.844970275062023*^9, 3.844970276285968*^9}, {
   3.844970454706994*^9, 3.844970454986899*^9}, 3.844970515372762*^9, {
   3.8449710592359676`*^9, 3.844971059365196*^9}, {3.844971266082902*^9, 
   3.8449712667573757`*^9}, {3.8451310911752243`*^9, 3.845131115916382*^9}, 
   3.8451311659574676`*^9, {3.845131573857024*^9, 3.845131574878517*^9}, 
   3.845131689174919*^9, 3.845132146988409*^9, 3.845136324393732*^9, {
   3.8451363745029745`*^9, 3.8451363747019625`*^9}, {3.8451364806729703`*^9, 
   3.8451364910350065`*^9}, 3.8451385177684135`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"fb67bc7e-6668-4004-954b-95cb622050ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"ress", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<converged\>\""}], 
      "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845138406157796*^9, 3.8451385342014685`*^9}, {
  3.845139722186507*^9, 3.8451397281948185`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"0cd99050-d99d-40af-8856-7c0f9d47de3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "res", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.84496396369814*^9, 3.8449640382040253`*^9}, {
   3.8449645617418475`*^9, 3.8449645988046894`*^9}, {3.8449651963472424`*^9, 
   3.8449652771615458`*^9}, {3.844965309539303*^9, 3.844965377404595*^9}, {
   3.844965423809651*^9, 3.8449654477235227`*^9}, {3.844970146524085*^9, 
   3.8449701524921684`*^9}, {3.8451311782174673`*^9, 3.845131181205984*^9}, 
   3.8451352813320985`*^9, {3.845135601867341*^9, 3.8451356040257072`*^9}, {
   3.8451365008356295`*^9, 3.845136503367072*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"dc39717c-a480-4a7f-95f5-a116d40551f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"realp", "=", 
   RowBox[{
    RowBox[{"res", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "-", 
    RowBox[{"res", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8451311908646097`*^9, 3.8451312033849564`*^9}, {
   3.845131249718588*^9, 3.8451312804158416`*^9}, {3.8451316465247355`*^9, 
   3.845131647653704*^9}, 3.8451316859284205`*^9, 3.8451318484787903`*^9, {
   3.845135616922982*^9, 3.8451356179077625`*^9}, 3.845136377356323*^9, {
   3.8451385529521537`*^9, 3.845138556381322*^9}, {3.845138978064131*^9, 
   3.8451389805730247`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"11c3177c-826b-465f-9ecf-39df3cb7c9eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"index", "=", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Round", "[", "realp", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Amount", " ", "of", " ", "cyclopean", " ", "index", " ", "capacity"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "index", "]"}]}], "Input",
 CellChangeTimes->{{3.845131306816571*^9, 3.8451313495928364`*^9}, {
   3.845131401329198*^9, 3.845131431356414*^9}, {3.84513147178335*^9, 
   3.8451314831865683`*^9}, {3.845131659744075*^9, 3.8451316801922617`*^9}, {
   3.8451352766196957`*^9, 3.8451352781746616`*^9}, 3.845135608686784*^9, {
   3.8451356555940175`*^9, 3.8451356765984716`*^9}, {3.845136312068974*^9, 
   3.845136317892008*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"cfc8aa59-e21d-4395-8233-2f8ed42219c2"],

Cell[BoxData[
 RowBox[{"{", "39", "}"}]], "Output",
 CellChangeTimes->{
  3.8451356408917475`*^9, 3.8451360017188015`*^9, {3.8451362901416626`*^9, 
   3.8451363414552383`*^9}, 3.8451363885127983`*^9, 3.8451365087762785`*^9, 
   3.8451380256295958`*^9, {3.845138372374931*^9, 3.8451383735282583`*^9}, 
   3.845138558961218*^9, 3.84513879464715*^9, 3.8451389025882263`*^9, 
   3.8451391222936773`*^9, 3.845139264655962*^9, {3.8451393102840595`*^9, 
   3.8451393454853587`*^9}, 3.845139375588217*^9, 3.8451394597740917`*^9, 
   3.8451394934467325`*^9, {3.845139526531022*^9, 3.8451395340985713`*^9}, 
   3.8451395653895707`*^9, 3.8451396528282833`*^9, 3.845139736194334*^9, 
   3.8451398088958254`*^9, 3.845139870474354*^9, 3.845139921972472*^9, 
   3.845140109852787*^9, 3.84514051528961*^9, 3.845140619777351*^9, 
   3.8451407899555073`*^9, 3.8451408860359955`*^9, 3.8451409929051075`*^9, 
   3.8451410453762765`*^9, 3.8451423130034533`*^9, 3.845142435670253*^9, {
   3.845395474349062*^9, 3.845395493600197*^9}, 3.8453958614117537`*^9, 
   3.8453959574279146`*^9, 3.845396011546301*^9, 3.845396062300512*^9, 
   3.8453961160779667`*^9, 3.8453964150039196`*^9, 3.8453964510693946`*^9, 
   3.8453966049915543`*^9, 3.8453967339624596`*^9, {3.8453967886559496`*^9, 
   3.8453968181258774`*^9}, 3.845396899034291*^9, 3.845396992180357*^9, 
   3.845397032525222*^9, 3.845397063173734*^9, 3.845397098014841*^9, {
   3.845397158194538*^9, 3.8453971856450925`*^9}, 3.845397249647565*^9, 
   3.845397489930913*^9, 3.845398090569066*^9, 3.8456486461637774`*^9, 
   3.8457176106041937`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"66e23c78-d87a-44bf-8649-24e487215e44"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"realPV", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"realp", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"res", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ")"}]}], "+", 
        "dis"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8451323571812153`*^9, 3.845132638071472*^9}, {
   3.845133300046059*^9, 3.8451333049123898`*^9}, {3.845133595902032*^9, 
   3.8451335988592143`*^9}, {3.8451352939910483`*^9, 3.8451353195889573`*^9}, 
   3.845135777776389*^9, 3.84513607814515*^9, 3.8451389859064164`*^9, 
   3.8451390313853817`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"729489da-4d21-499e-878c-f44ce47313e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"combinePV", "[", "realPV_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "srtDistinctPV", ",", "newPV", ",", "i", ",", "c", ",", "sum", ",", 
      "solution"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"srtDistinctPV", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"realPV", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newPV", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"realPV", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"realPV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "2", "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}], ",", "First"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newPV", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", "p"}], ",", 
           " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sum", "=", 
             RowBox[{
              RowBox[{"newPV", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "sum"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"c", "=", 
             RowBox[{"c", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"i", "=", 
             RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"solution", "=", 
             RowBox[{"{", 
              RowBox[{"p", ",", 
               RowBox[{"sum", "/", "c"}]}], "}"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "solution"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "srtDistinctPV"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845132733234625*^9, 3.845132820188223*^9}, {
   3.845132879103628*^9, 3.845132934917967*^9}, {3.84513308297602*^9, 
   3.845133186556543*^9}, {3.8451332514490433`*^9, 3.8451332623363733`*^9}, {
   3.8451333828282757`*^9, 3.8451333913246403`*^9}, {3.845133515126255*^9, 
   3.845133583740221*^9}, {3.8451336137799644`*^9, 3.845133669952588*^9}, {
   3.8451337092872643`*^9, 3.8451337106470327`*^9}, {3.84513374457069*^9, 
   3.8451337564233155`*^9}, {3.8451337879942913`*^9, 3.845133809244244*^9}, {
   3.8451340327199574`*^9, 3.8451340750854273`*^9}, {3.845134130674059*^9, 
   3.845134139841926*^9}, {3.8451343005806227`*^9, 3.8451343108974705`*^9}, {
   3.8451349010034075`*^9, 3.8451350148219666`*^9}, {3.845135048290571*^9, 
   3.84513518021828*^9}, 3.845135505728201*^9, {3.8451397747878838`*^9, 
   3.8451397962707977`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"e5409b02-159a-4478-bef1-be758d9e3493"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resPV", "=", 
  RowBox[{"combinePV", "[", "realPV", "]"}]}]], "Input",
 CellChangeTimes->{{3.8451328249540977`*^9, 3.845132833872941*^9}, {
  3.845135204258841*^9, 3.8451352114375954`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"31b7e4f2-368f-4943-9011-91773f87022f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"97\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"5.1780892214764`\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\
\", \\\"5.493836654400353`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"9\\\", \\\",\\\", \\\"5.532187443968962`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"5.537802302564497`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"9\\\", \\\",\\\", \\\"5.563666474529035`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"5.5671224217997155`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"9\\\", \\\",\\\", \\\"5.57140975032475`\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"16\\\", \\\",\\\", \
\\\"6.829502617849668`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"16\\\", \\\",\\\", \\\"6.829792058694125`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"16\\\", \\\",\\\", \
\\\"6.835831137145846`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"86\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
does not exist.\"", 2, 58, 1, 29571933127268079946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8451351328333225`*^9, {3.845135165287744*^9, 3.845135182448058*^9}, 
   3.8451352214677114`*^9, 3.8451353277471075`*^9, 3.84513568656522*^9, 
   3.8451357827825065`*^9, 3.8451360017884855`*^9, 3.8451362902384*^9, 
   3.845136341582699*^9, 3.845136388644646*^9, 3.8451365157503834`*^9, 
   3.8451380257076607`*^9, 3.845138377111602*^9, 3.845138563711619*^9, 
   3.8451387947420907`*^9, 3.8451389026624174`*^9, 3.845139122377141*^9, 
   3.8451392647289753`*^9, {3.845139310358713*^9, 3.8451393455531774`*^9}, 
   3.845139375661095*^9, 3.8451394598688383`*^9, 3.8451394935329666`*^9, {
   3.845139526596237*^9, 3.8451395341688957`*^9}, 3.8451395654588027`*^9, 
   3.8451396529220324`*^9, 3.8451397430202837`*^9, 3.8451398089527073`*^9, 
   3.8451398705393176`*^9, 3.845139922034305*^9, 3.8451401099508705`*^9, 
   3.8451405153664026`*^9, 3.8451406198401823`*^9, 3.845140790010354*^9, 
   3.8451408861107965`*^9, 3.84514099298964*^9, 3.845141045440201*^9, 
   3.845142313071316*^9, 3.845142435722018*^9, {3.8453954744108963`*^9, 
   3.8453954936563015`*^9}, 3.845395861479229*^9, 3.8453959574892592`*^9, 
   3.8453960116038923`*^9, 3.845396062361349*^9, 3.8453961161393595`*^9, 
   3.8453964150248995`*^9, 3.845396451127797*^9, 3.845396605073209*^9, 
   3.845396734042221*^9, {3.845396788718562*^9, 3.8453968181857033`*^9}, 
   3.84539689909821*^9, 3.845396992251359*^9, 3.8453970325912056`*^9, 
   3.845397063250904*^9, 3.845397098068945*^9, {3.845397158255876*^9, 
   3.8453971857009425`*^9}, 3.845397249722357*^9, 3.845397489987197*^9, 
   3.845398090633599*^9, 3.8456486462226195`*^9, 3.8457176107014065`*^9},
 CellLabel->
  "During evaluation of \
In[58]:=",ExpressionUUID->"e1d70956-5a8e-4796-a5aa-d6b2a9d98439"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "5.1780892214764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5.5443375079312185`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "6.851732901950595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "7.050477189767097`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "6.9182075743066695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "6.943190171579336`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "6.722958054335629`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "6.749308980938851`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "6.604164781271612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "6.241111513219886`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "5.749731541430319`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "5.450572159055047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "5.5261171331248615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "5.449578250248612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "5.321963620930455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "5.295556055760578`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "5.334545849610312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "5.407586888293626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", "5.372560176729625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "5.249032300632171`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", "2.659469827210852`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "9.815327347702047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "9.79164009274419`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "9.688989481507157`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", "9.612386360432303`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", "9.417868703932115`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "9.595010068080784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "7.02548611843023`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", "5.325016833739554`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"79", ",", "5.331477936106976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "5.315817570644591`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "5.614638762592838`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "5.271200940995978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"94", ",", "5.294519741746596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95", ",", "5.3032516680362605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "5.257196743153853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", "5.228860496491114`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"102", ",", "5.214548314688898`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"104", ",", "2.22864045155023`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.845135165297717*^9, 3.845135182468005*^9}, 
   3.845135221487697*^9, 3.8451353277678614`*^9, 3.8451356865851665`*^9, 
   3.8451357827997074`*^9, 3.8451360018054934`*^9, 3.8451362902563868`*^9, 
   3.8451363421254663`*^9, 3.845136388929104*^9, 3.8451365157643466`*^9, 
   3.845138025724615*^9, 3.845138377129593*^9, 3.8451385637295694`*^9, 
   3.8451387947603693`*^9, 3.8451389026783752`*^9, 3.8451391223911147`*^9, 
   3.8451392647449*^9, {3.845139310373709*^9, 3.845139345568138*^9}, 
   3.845139375675063*^9, 3.845139459882802*^9, 3.845139493547927*^9, {
   3.8451395266102333`*^9, 3.8451395341838555`*^9}, 3.84513956548178*^9, 
   3.845139653040371*^9, 3.84513974303225*^9, 3.8451398089666443`*^9, 
   3.8451398705537195`*^9, 3.845139922048457*^9, 3.845140109966816*^9, 
   3.845140515384391*^9, 3.8451406198571725`*^9, 3.845140790026313*^9, 
   3.8451408861275673`*^9, 3.845140993005622*^9, 3.8451410454560947`*^9, 
   3.845142313081545*^9, 3.8451424357335634`*^9, {3.845395474428571*^9, 
   3.8453954936702967`*^9}, 3.845395861492195*^9, 3.8453959575014873`*^9, 
   3.8453960116168585`*^9, 3.845396062377307*^9, 3.845396116155159*^9, 
   3.845396415039238*^9, 3.8453964511403203`*^9, 3.84539660508681*^9, 
   3.8453967340551863`*^9, {3.8453967887315307`*^9, 3.845396818203657*^9}, 
   3.8453968991131697`*^9, 3.8453969922663193`*^9, 3.8453970326051702`*^9, 
   3.845397063263872*^9, 3.8453970980831194`*^9, {3.845397158269843*^9, 
   3.84539718571391*^9}, 3.8453972497386875`*^9, 3.8453974900037727`*^9, 
   3.845398090647564*^9, 3.845648646230736*^9, 3.845717610707387*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"151f9a9b-5f67-48da-b6a6-c50dc9a84df9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"resPV", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.845395702839487*^9, 3.8453957151118746`*^9}, 
   3.845465746580802*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"6618a8b5-0659-4832-a35f-782ae41684dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ImageData", "[", "id", "]"}], "[", 
      RowBox[{"[", "row", "]"}], "]"}], ",", "resPV"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Real\>\"", ",", "\"\<Rounded\>\""}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "110"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.84513521354147*^9, 3.845135218935948*^9}, {
  3.84513571791074*^9, 3.8451357405617447`*^9}, {3.8451365444843388`*^9, 
  3.845136598189943*^9}, {3.8451366786470613`*^9, 3.8451366834272747`*^9}, {
  3.84513862264989*^9, 3.845138635715087*^9}, {3.845138714654355*^9, 
  3.845138758456955*^9}, {3.8451389364795847`*^9, 3.8451389409914246`*^9}, {
  3.8451390605353*^9, 3.845139073299205*^9}, {3.845139834569928*^9, 
  3.8451398384447975`*^9}, {3.845139900767601*^9, 3.8451399036513624`*^9}, {
  3.8451404087832737`*^9, 3.845140412131701*^9}, {3.8451406360777583`*^9, 
  3.8451407414724636`*^9}, {3.845140813576899*^9, 3.845140815896311*^9}, {
  3.845397511084762*^9, 3.845397519520184*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"7c26200f-b0a4-405e-a838-662e9bcbf064"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztlv1TVFUYxy9MJiWNzACxblC3JYlxVuWlkJdYzgaiIAguQcDkzkaz1liT
CjEwBXhhALH3yQEUc2YxSVEiS9sAG7lmNWEpY6CTprC1NJUjs6DWjNMPxH3u
+XL+hmZ2f9hnPvt9vuc599xznj2PVmyzOQMlSYoMkCQt6p+ZjPkvxwVfOOM/
UHxlBhykRXZtGhyiRXn2D3CYFj0TC2yg/M4/wZGkN3jBMvHaSbBJi64MD/gx
LTpCFziG8g9cBsdqUfH+C15B+R/awWbSB3dEcF6lRXVk8iHOccS90+B4eh7n
OXAC6RvPgxNpvGOD4CeIqw+Cn6RobgEn0XwSKsBraD3qU8HJNP5AMDiF6ode
NXJOpfF/6wankf+sE/wUcVY0OF2LrvfuLuNsofF/nX2QcwZxYxPWh5G/a5iz
QuzZPQrdSvUvfQOdWPrZDf1pqicPQSdWg49Cz6To7oFOzGb7oWeRP6APOrFj
7BPoa4nfHoBO7FrxAfRs0pcehE6suA9BX0f6c23QiVkbWFpPem8zdJ2374Se
Q/UKFOjESsKCnkv5hlroxJ6/aqBvID1+QSd2xVdCz9OivHsbdGJl83bo+ZSf
0wpd57b10DdqUT2yh79fhVj5rtPE9QKKhrporhM7krdwlgppvL21nBkxe38n
8onlA02cVT2/owH+TVT/TCX8xPLrTviJJW8J/MSOl9fBb6Px+h6Gn1gy3uTz
V4iVoE85q8Rs1IrnK6J6p/I4M2JXzR1+nhRi5fvMMO7X82/gfUvP0PwvpHBm
xJ7WNVhvXb8ex1kllodWw19M9XZBZ8V6NMOvc+Pj8BN77ouFv4TmVwZmxCzT
BL/O9Y/AT6w2yfA/S/xVFPw6H46An9gxA1Z1vcsAfynF+8Pg17lmKfzEaloI
/Do/D10qo/m3BMGv85nF8BO7qqCrZXq9e8X/QdOS0kWb3fz9zPf/2cRzo1tW
ol/FsfzkN46ZXxL9uPnutdzjiZGcE9mXpan7LX2iH4fbbx8a+1b007KA4aiC
KdE/A6cbrubOif7ZOhZtProVbGFDk8O+3/8xcLay9Klg1+AczpeV9TSfHqk4
L/rX5bdMVaeN0LNYjOVwuv1H0a/2dV4ZP54j+lFtY0zGx6tEf/m7/ObqPSWi
v7TMPVBt7xb95Z6KtK1KvegPrVU/2ALnsF75LOLdqai92Ys4F7Li8SUdld3i
vF4M7b2yqV2c1zsDJ1PPOsR5rFtef/LNFHH+DD8Fem9dMvF6NpbinIjtiUO+
jR356LWgZUasfxErtDQkXczD+y1ilhOnbr9aJM7XSL+z35kpzof7a/n6C9V8
veb3e5035MQX4WK/ThRsaO9YKfZr6We3unYlif0W5bO22xeL/ZZt9L1YfoOv
x/x+U6W+dz7/BetTzmr2+3ZYxwM4++83kv9+47/f+O83PN9/v5H89xv//cZ/
v+H5/9/7zX/ksk6G
    "], {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
        116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
        130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142}]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
        69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
        86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
         103}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
        116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
        130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
        142}]}, {}, {}, {}}}], {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {105.18, 5.255897521972656}], 
            Offset[{0, 0}, {105.18, 5.255897521972656}], 
            Offset[{0., 0.}, {109.7922448979592, 5.255897521972656}], 
            Offset[{0., 0.}, {109.7922448979592, 5.255897521972656}], 
            Offset[{0., 0.}, {114.40448979591838`, 5.255897521972656}], 
            Offset[{0, 0}, {116.58448979591837`, 5.255902660769584}], 
            Offset[{5., 1.1102230246251565`*^-15}, {116.58448979591837`, 
             5.255902660769584}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             5.255902660769584}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             5.255902660769584}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {105.18, 5.255897521972656}], 
            Offset[{0, 0}, {105.18, 5.255897521972656}], 
            Offset[{0., 0.}, {109.7922448979592, 5.255897521972656}], 
            Offset[{0., 0.}, {109.7922448979592, 5.255897521972656}], 
            Offset[{0., 0.}, {114.40448979591838`, 5.255897521972656}], 
            Offset[{0, 0}, {116.58448979591837`, 5.255902660769584}], 
            Offset[{5., 1.1102230246251565`*^-15}, {116.58448979591837`, 
             5.255902660769584}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             5.255902660769584}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             5.255902660769584}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{35., 6.500000000000008}, {116.58448979591837`, 
             5.255902660769584}], 
            Offset[{35., -6.499999999999992}, {116.58448979591837`, 
             5.255902660769584}], 
            Offset[{10.000000000000002`, -6.499999999999997}, {
             116.58448979591837`, 5.255902660769584}], 
            Offset[{9.999999999999998, 6.500000000000003}, {
             116.58448979591837`, 5.255902660769584}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Real\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{22.5, 4.9960036108132044*^-15}, \
{116.58448979591837, 5.255902660769584}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {106.18, 2.22864045155023}], 
            Offset[{0, 0}, {106.18, 2.22864045155023}], 
            Offset[{0., 0.}, {110.2922448979592, 2.22864045155023}], 
            Offset[{0., 0.}, {110.2922448979592, 2.22864045155023}], 
            Offset[{0., 0.}, {114.40448979591838`, 2.22864045155023}], 
            Offset[{0, 0}, {116.58448979591837`, 2.2286385303475336`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             2.2286385303475336`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {106.18, 2.22864045155023}], 
            Offset[{0, 0}, {106.18, 2.22864045155023}], 
            Offset[{0., 0.}, {110.2922448979592, 2.22864045155023}], 
            Offset[{0., 0.}, {110.2922448979592, 2.22864045155023}], 
            Offset[{0., 0.}, {114.40448979591838`, 2.22864045155023}], 
            Offset[{0, 0}, {116.58448979591837`, 2.2286385303475336`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{10., 2.220446049250313*^-15}, {116.58448979591837`, 
             2.2286385303475336`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{54., 6.500000000000012}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{54., -6.499999999999988}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{10., -6.499999999999998}, {116.58448979591837`, 
             2.2286385303475336`}], 
            Offset[{10., 6.500000000000002}, {116.58448979591837`, 
             2.2286385303475336`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Rounded\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{32., 7.105427357601002*^-15}, \
{116.58448979591837, 2.2286385303475336}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 72.4}, {All, All}},
  ImageSize->{530.1818181818193, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 110}, {0, 20}},
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8451352195709596`*^9, 3.845135223443914*^9}, 
   3.845135336791871*^9, 3.8451356993883276`*^9, {3.8451357304000435`*^9, 
   3.845135741097856*^9}, 3.845135787861822*^9, 3.845136001875271*^9, 
   3.845136290322178*^9, 3.8451363423349066`*^9, 3.8451363895508976`*^9, {
   3.8451365190802417`*^9, 3.8451365466260858`*^9}, 3.8451366010142703`*^9, 
   3.845136684887759*^9, 3.845138026037951*^9, 3.845138378730776*^9, 
   3.8451385655479393`*^9, {3.8451386291865892`*^9, 3.8451386361651926`*^9}, 
   3.8451387199122677`*^9, 3.8451387589508142`*^9, 3.845138794969776*^9, 
   3.845138902891901*^9, 3.845138941691286*^9, {3.845139066028308*^9, 
   3.845139073723988*^9}, 3.8451391224978275`*^9, 3.8451392648505845`*^9, {
   3.8451393105023623`*^9, 3.8451393457017803`*^9}, 3.8451393758196373`*^9, 
   3.8451394599994884`*^9, 3.845139493648658*^9, {3.845139526707945*^9, 
   3.84513953428658*^9}, 3.8451395655954423`*^9, 3.8451396534387875`*^9, 
   3.845139745333743*^9, {3.845139809117235*^9, 3.845139838997607*^9}, 
   3.84513987065841*^9, 3.845139922698036*^9, 3.84514011059018*^9, 
   3.845140412808576*^9, 3.8451405155334644`*^9, {3.845140619964358*^9, 
   3.845140741967126*^9}, {3.8451407901195683`*^9, 3.8451408162864943`*^9}, 
   3.8451408862338266`*^9, 3.845140993132249*^9, 3.8451410455738716`*^9, 
   3.8451423132341366`*^9, 3.8451424358287954`*^9, {3.845395474916549*^9, 
   3.8453954937670355`*^9}, 3.845395861628916*^9, 3.845395957629054*^9, 
   3.845396011741915*^9, 3.84539606251678*^9, 3.845396116282989*^9, 
   3.8453964151840286`*^9, 3.8453964512760735`*^9, 3.8453966052353573`*^9, 
   3.8453967342230377`*^9, {3.8453967888649607`*^9, 3.8453968183342743`*^9}, 
   3.845396899249183*^9, 3.8453969923975544`*^9, 3.845397032748518*^9, 
   3.8453970634034643`*^9, 3.845397098242694*^9, {3.8453971584871073`*^9, 
   3.8453971858466964`*^9}, 3.84539724988307*^9, {3.845397490178619*^9, 
   3.8453975204399023`*^9}, 3.8453980909102926`*^9, 3.8456486464740515`*^9, 
   3.8457176121186695`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"36b9e8b6-88d7-423d-998a-ae40ff7cd778"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: Compare", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.845141428005622*^9, 3.8451414288548203`*^9}, {
   3.8454812383031034`*^9, 
   3.845481239383356*^9}},ExpressionUUID->"68f7a216-4cdd-4933-b5d6-\
81d305ab631b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"combinePV", "[", "realPV_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "srtDistinctPV", ",", "newPV", ",", "i", ",", "c", ",", "sum", ",", 
      "solution"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"srtDistinctPV", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"realPV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", "0.5"}], "]"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newPV", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"realPV", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", "0.5"}], "]"}],
              ",", 
             RowBox[{"realPV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "2", "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}], ",", "First"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newPV", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", "p"}], ",", 
           " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sum", "=", 
             RowBox[{
              RowBox[{"newPV", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "sum"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"c", "=", 
             RowBox[{"c", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"i", "=", 
             RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"solution", "=", 
             RowBox[{"{", 
              RowBox[{"p", ",", 
               RowBox[{"sum", "/", "c"}]}], "}"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "solution"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "srtDistinctPV"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.845646003161044*^9, {3.8456466956296406`*^9, 3.8456467114972744`*^9}, {
   3.8456468060544343`*^9, 3.845646815321391*^9}, {3.8456471892064734`*^9, 
   3.8456471912963343`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"8412ca1a-4a94-47e0-9b4b-563eb6e979f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creating", " ", "list", " ", "of", " ", "values", " ", "for", " ", "v0"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rangev0", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listv0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"1", "-", "r"}]}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "r"}], ",", "r"}], "}"}], "*", "#"}], "&"}], "/@",
         "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.75"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.75", ",", "0.25"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.6"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}], "*", "#"}], "&"}], "/@", 
        "rangev0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "See", " ", "list", " ", "of", " ", "values", " ", "for", " ", "v0"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "listv0", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8451414694926567`*^9, {3.8453976786142545`*^9, 3.84539768312141*^9}, 
   3.8454798283523817`*^9, 3.8456455922906227`*^9, {3.8456475523814945`*^9, 
   3.845647553810485*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d652239d-c262-46e8-b2f5-1344ff6140d8"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJzV0b9LQlEUB/CHlj9I6pVJglFajQ2BLUHQFBENQVOtRbUUkSA0hksQtbhE
0RBFtjW33QNBLQauuSS4aIuCEhYPLN873wf3gH9AB+Tw9Z577+e9l9g8WNv2
GIax9ffr9Jo/dZSrTFJ8sHV+svGgTveTc9ZnggrpbP7Fe69WctXGXXGcjovT
fb7HW5U53EuvfsRoZuF1eXH9Rj3N175+yiNES89msPdaOeeF+bwL3j/A+7M8
7+f5M15vK2c9w7nGOaUMUXDCDSfccMINJ9xwwg0n3HDCDSfcurPtOuGWXqem
SM8TIsdFHhU5KvKwyKbIAZENketdnLL+ixvnog+JbooeEj0geo/ohugtpfe6
6CXRZeHcMe4e7jFxD96fxedExP14vibnftIdeJ6K0u8pCX9B6XOy4IQbTpzn
fmfSnZZwtoSzKZx14awIZ0k4C128+M5Rest3KkSXdkXoyu5BStoVpt2dTvl4
zqRZ+38v5Xmf/lwB3v+tkjznzDeUM28pZ73K6w3O75zLXbx4f6brhBtOuOGE
G0649fdpEJxwwwm37qy6Tril9BdmrpBg
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-10., 0}, {-10., 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.845647573325015*^9, 3.8456476026069627`*^9}, 
   3.8456478375446467`*^9, 3.845648043062451*^9, 3.8456486465049706`*^9, 
   3.8457176121935244`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"0664d9b8-89c4-40b5-96b3-691012d1e838"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initial", " ", "Values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dis", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic", "=", 
     RowBox[{"move", "[", 
      RowBox[{"ib", ",", "dis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"row", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyrfiac", "=", 
     RowBox[{"pyrfi", "[", 
      RowBox[{"ia", ",", "ic", ",", "row", ",", "lvlmax"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steps", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lvlmin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lvlmax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e", "=", "0.001"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8451414855395308`*^9, 3.8451415147837024`*^9}, {
   3.84514155817483*^9, 3.8451415832657137`*^9}, 3.8451429090033464`*^9, {
   3.8453976979555454`*^9, 3.845397729656056*^9}, 3.845398096956464*^9, {
   3.845479833544014*^9, 3.8454798398289585`*^9}, {3.8454804596641054`*^9, 
   3.8454804646912217`*^9}, {3.845645645340351*^9, 3.845645689078352*^9}, {
   3.845645746369255*^9, 3.845645748888305*^9}, 3.845646945372448*^9, 
   3.845647001626442*^9, 3.845647227069825*^9, {3.8456475436424093`*^9, 
   3.8456475977907915`*^9}, {3.845647829219774*^9, 3.845647834217044*^9}, 
   3.845648037228164*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"d8beb953-fbf3-457a-93a5-2ca626b899c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Stereo", " ", "Depth", " ", "result"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"depth", "=", 
     RowBox[{
      RowBox[{"stereoDepth", "[", 
       RowBox[{"listv0", ",", "ia", ",", "ic", ",", "lvlmax", ",", 
        RowBox[{"{", 
         RowBox[{"lvlmin", ",", "lvlmax"}], "}"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "103", ",", "steps"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"row", ",", "row"}], "]"}], ",", "e", ",", 
        "\"\<ConstrainedNewMethod\>\""}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "depth", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.84514145626128*^9, 3.8451414994587107`*^9}, {
   3.845141596352518*^9, 3.845141599552962*^9}, 3.84514176256717*^9, {
   3.8451418451249585`*^9, 3.8451418455160213`*^9}, {3.8453977342197638`*^9, 
   3.845397736049758*^9}, {3.8454645713400493`*^9, 3.845464571597879*^9}, {
   3.8454800579127645`*^9, 3.8454801086247873`*^9}, {3.8454804126380405`*^9, 
   3.845480419781508*^9}, {3.8454814871279783`*^9, 3.8454814876604447`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"7b29039b-7608-498c-8acd-3cd9dbf17960"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"511", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.845142384153716*^9, 3.845142512554991*^9, 
  3.8451428701977587`*^9, 3.845143001213559*^9, 3.845143135380541*^9, 
  3.845396221645858*^9, 3.845397818079277*^9, 3.845398186362797*^9, 
  3.845464704077677*^9, 3.845480115838975*^9, 3.845480441205123*^9, 
  3.8454814929561625`*^9, 3.8456441905751543`*^9, 3.845644303796252*^9, 
  3.845645542501583*^9, 3.8456457696759787`*^9, 3.845645822667469*^9, 
  3.8456458562609253`*^9, 3.8456467351695833`*^9, 3.845646826917967*^9, 
  3.8456469590732923`*^9, 3.845647010658229*^9, 3.845647187141968*^9, 
  3.845647235113364*^9, 3.845647576235612*^9, 3.8456476163662777`*^9, 
  3.8456478604606905`*^9, 3.845648076237139*^9, 3.845648677011789*^9, 
  3.8457176366545396`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"97d6464f-9e24-4a0d-8211-1699afb6867c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"-", 
   RowBox[{"depth", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8454801390578794`*^9, 3.8454801446290846`*^9}, {
  3.845480195734948*^9, 3.8454802133331485`*^9}, {3.8454814955010223`*^9, 
  3.8454814957923913`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"01f58c89-6585-4466-8f93-66d72ce71845"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdmXlYjen/x8/YsiSNZC2SJkOhzVia4W2pUHGytNNp3+tsnU5nqcOkySga
2SkhSUjIUiqHwpeSLNEYcoShIokhJL9+19wf1zWdf1wvn+fzvJ/Xfd/P43lu
Y/2ilwb24HA4X7/jcP7/z39/rbM5//3hv9i3G+t24yHdeHg3NujGRt3YuBub
dGPTbvxjN57Yjc278eRubNGNLbuxVTe27sY23XgqttWnOg6vJs+fUMrvKUws
I54G/QubU0IuE0/HXYcXHap3xDMw+LK2yxxXQ8YzYaPyGZj7iNgWP7cviHZz
Hc34Z2y6827bxV3EvyDf5nOgdiHxLExc6F2anU88G2evKTg6mcQAx6FIWpTG
WAW8Hl1xpjaJ6nPgLMpK046j+hw8GSgf88iL6nMRpIXrnwyoPhedSerPq47Q
9c7DnaRLBl/3MVbNQ2FVuPrZB6rP/+/4qeYjeUpVgOd6qttBrcOt7nuY+u1Q
N7tiQfVJqttj3KyAoseFVLf/7/k4Dmjm7tsfXkB1B1TmywMO5lP/AkyrlTmd
OUr1BSi8N01hRsxZCFVvXq2IfFQLISnqjH6VR/VFiDtSv3dMLtUXQXJiXHJF
NtUdEdjWmqH1zd8RDW/nd9rupboT1Ft0r6fsp7oTNrzW9157iOrOEMuT1tR9
u35n1B3q++gr+XIWY96MP4f5fLv+xXiedE7/6x9UX4L7E+uV8kCqL0HyMu+d
s3aPYnUubMoX2x0ewdYfuMjgnupr8oHVVVw0/PL+tGMVYzUXllEPHG5+63fB
y8BhG/XljOHSNd5VzpIw6nfBddfUrF7+1O+CPvKEOY0+1L8Ukzk+ejuJsRRP
/W/MT/Kl/qWwyDHjRQdS/1KMHomIY5HUvwzf+eckz5BQ/zJwVqs7apOofxl+
KM8V122m/mW4M8s2uW4P9S9HSqQXv/9+6l+OsZ8u1V8lP9Vy9Fr+vuXGeupf
jvu8Qv4B8uWsgMehzTY6AupfAfPhyfG/f/NfgYyNvB7Lg6l/BSpfHNa/H0T9
rsh/XdRzNdXhiotth8w0IdTvigvGPoZXQqnfFaZz93lW0vEcN7yYpF9lGUD9
btCEHYWaxlPlhr8chhyz9qJ+N3x89XDIUFfqd8egU/tClVzqd4c0v8fheEfq
d8ea+B2XUx2o3x1PTeftaJhL/R7wXKDzS5Mt9Xuwv2c/lQfKD2rCN/agfg94
pHlO3ZE5lB3nCRnG/6plwhieuP/it5lJTfos3xM9h/+zvzidsdqza72srRP/
Poz1e2Hi2jGyxpGM4QUDo+aS49sZq7xQETdrgtNuxmovBN7OHbSlH+V7Y+CI
SbJTSez88EZJ48k/52ygfG8s7nzbvieH8r3xqdDFJeU8Y85KWDVF+l6vpv6V
eKK7RWcdsWolwstdeLVq6l+Jy6O5eV6HqX8V2nptjbi1mfpXQeXopd6RTP2r
sBsDkmoOUv8q5NpZN5hJ6Pp9oPNa+72ejMbPB/Ya/YxHA6jfB/OeTXNJG0z9
Pih5Z9R/wxLK5+Fuek7xxWjWb8RDi5PvyVNadD08tJU5p28SsjqPh4x//rDz
FjFW8bD6TWPr4FXs+CwejLHdxN6N8nh47pc+ylTAjtfwUHtFElXGp+v3xfqi
BTWT6HxGvpihHzTtEPnBFy0XEz3PSynfF8+V6x/l15GfLz6ucR8tjGH1LF9k
G74wUX5bL774O9nkTWc5ey/R+ILnfPbqsBt6LN8PCS9SJ6lGMjbyw5R9go4/
hzKGHyaMLX2S28yY54eHIy9HJM6m/C5estfScgrl+8GkfmKV5RnGaj+capux
eetX8vdDuLtJkuoF5fvjcQ2vPvMx5ftjVXDVK7d8yvdH/62j4NKXrV+eP3rN
Pmfn+4rG3x+nNcI7g0op3x9vZx8zFtL4qf3RIU2p9DagfH/sKfwt/LudNP8B
8NY1Lp2bxtgoABXh5RX1MTT/AdgqVTzfEsyYFwDHMpMD7v7kHwBNnNQ9O5zm
PwB5j86c8OfT+AdAb3xgbbacsSYAom0G+dYiyg/E9Oahmg10fqNALHDMGruV
zo9AvNa6FZIxlb1H8gLh7eEaUCCk/EDsMtg49b415Qcixe7ryl0yyg+Ens+l
B6bTKD8Qbqb9ti10oudHEIZohY/YFkj5QRg6plx2js6PILiNqlc7R5F/EOY0
bh0XFUn5QXj15ZYmOILyg4CLXrv6eFN+EAx2P7vczKX8IJxMHPQymvI4wdDh
jRnY8ZzygyFzrunxehCt/2CUndBefMyW1n8wZvLuDqkNofkPRnrZbMfh99n6
zgpG6VjdPUe30/wHY8+ZnzYoP1F+MPYO+72ipZ3yQ7DypmVR8T+UH4It6xeO
aW4j/xB2HPvxQtDwzFBxjM6nCoFTX4vUTx2UHwL+unnWUZnkH4Lr/eKfek6h
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
/8fXJCDMT+K1Vv/lv9yawLw5nP8DUmF9DA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 511.}, {0, 19.699755595604756`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.845480210362842*^9, 3.845480214060118*^9}, 
   3.845480441292263*^9, 3.8454814970210643`*^9, 3.845644190681063*^9, 
   3.8456443038749437`*^9, 3.8456455425823526`*^9, 3.8456457697659607`*^9, 
   3.845645822755471*^9, 3.845645856341711*^9, 3.8456467352541256`*^9, 
   3.8456468270017457`*^9, 3.8456469591651006`*^9, 3.8456470107230873`*^9, 
   3.845647187227215*^9, 3.8456472351956234`*^9, 3.84564757633127*^9, 
   3.845647616882908*^9, 3.845647860532465*^9, 3.8456480763021736`*^9, 
   3.845648677093006*^9, 3.8457176368210526`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"c2208d29-435d-4580-8e51-8de5e9db8330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"conDepth", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"depth", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<converged\>\""}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posConDepth", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"conDepth", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "5"}], "]"}], "]"}], "-", 
       RowBox[{"conDepth", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"conDepth", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "+", "dis"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posConDepth2", "=", 
   RowBox[{"combinePV", "[", "posConDepth", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"posConDepth", ",", 
     RowBox[{
      RowBox[{"ImageData", "[", "id", "]"}], "[", 
      RowBox[{"[", "row", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"posConDepth2", ",", 
     RowBox[{
      RowBox[{"ImageData", "[", "id", "]"}], "[", 
      RowBox[{"[", "row", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.845481451687462*^9, 3.8454815100068088`*^9}, {
   3.8456442829187994`*^9, 3.8456442831804914`*^9}, {3.8456451808653*^9, 
   3.845645329354642*^9}, {3.845645791965313*^9, 3.84564579326553*^9}, 
   3.845645910060821*^9, {3.845646028299403*^9, 3.845646066702243*^9}, {
   3.8456461225276403`*^9, 3.845646125123427*^9}, {3.84564703604235*^9, 
   3.845647037153287*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"3d678280-4605-421e-a7bc-f0df0782ccff"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"473\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"7.186052113971695`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7.193758198336828`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"7.201264553579356`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"7.631674643845812`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"462\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 79, 2, 29571933127268079946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.84564682707819*^9, 3.8456469592527895`*^9, 
  3.845647010755035*^9, 3.845647187248702*^9, 3.8456472352391243`*^9, 
  3.845647576379401*^9, 3.845647616906845*^9, 3.8456478605913057`*^9, 
  3.845648076320084*^9, 3.845648677153844*^9, 3.845717636832056*^9},
 CellLabel->
  "During evaluation of \
In[77]:=",ExpressionUUID->"5d543409-e3e2-4c06-a164-4db1fc63f783"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
GgSP+ydLJJty0B1v3wxyPuHH/cWyxB+yJTpaiL/P0fOD3pH4LkhYNJiTeG59
0ShfTfIZWuLWmkny0eq57hKoxcG1x6Izn5H8vXL/HSsg/Ci4b36dRfj5tPTP
yn+qHAS+vF0hRjB95s2HZ4h8ZX3qloMEvx6ryZoifGkvi/W7RfgKXKfaSTPm
oHnX0Xxrkl8HWmy2O3AwHvAz9c5tNqY3j7TLeHOwZfNCW2nSTyHVuu03QjlQ
dxM3Z90j9s8LR3pEcFC9W3DFwRY2vq157352JwfhPM9Dx/6n79ndtGELB2Ur
NJp3NrKRmnR36CCfA7+h4K9pdWz8yzeWyyH4WFmwAp18L3fcPBlSgSR+1x1t
B5rZ+CM4xuEWcjAmxPTPI+ctG3Y1j2rbQePUjlBfYl/orvj71bPtcYm1L3qf
uRJuLdrM2CjPxcvgDMWrimzY57ilrFrKxcjCNxZlq9gYHltWH7+ci1fmESts
1NnI+BVdyVnGRUrv1MMaIk+weuYZpsjF6NRLJluJjYMJpZ4HF3MhvodHzZ/J
xo8VDs89Y+1gmnl8MvIVG2eXTB1zErWDr8M2nwRSP+aOU7PPXONgkucuWVPN
RtIFV/W95zlwVLNR3nuHja/8dTFPP3HAMT8fq0W+JxudkewV/nbI7vljdaOL
DbcOJa5XPRc//HI1b3ey4Cid3Kshx4VZ0zVpPQU23JXyfUSnudhmkDfn3xUW
eJsfeaZd5eJUMC/44QcWgl5ozTo1ywFyLxfu8Slgwb9cjSMl5IBzC6J9J8+z
kMofy9go7IAgq31x/TksCBbVXdTN52LHmeMy039Y6Nt2Kz5PzAGzJ1MerEll
IR+a7eJ5XMQrvRmWns9G85vZLjZ2XIQPnv4WzWOjZu27Fml7LpZ/UdqU68zG
yoUbpKI4XGyvcVfWdmGD9uh+8+h6Luxllbc+d2Oj3uToaJUxF54pyuPW7mzY
td2kLZrpgOuBB+yvFLGgHkrT1C7nQqzL2+nRAAu+qnd9xWS4uBdy8PWPBWw8
Geqp0KnlonVB1WetZyxMrvwzEDrGxeQvZVGpy0T/xOb3X+8Q+yWx8lvesrDR
oeetDJF7vVa4IVHKgsTsfzq8Bi4CmV9/fexg4XXzC9blMXvMOMcPCRJVQkD6
9E+3IS66PkVuDCF8rbz6/SIt3QEztOrsrH/JwMxk2+WHGQ7I9lS+bXxBBpzW
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
+z9Hzq3E
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91F1si1EcBvCTXswyxCY1E+v6YqimtW4187HaweZrZVvNcIF34iNbJpsr
u5m9WJSFjsWNhaQ6SYMLq7AownuFSYj4uJBJ9GKJuJCM+LgSvM97ni7Z/vn1
Oc85p1+bt78zctAhhDj8/9ea9s9kjfW3bWKWVA9g5rkKlXOtmfGWMc/HTB4p
UnZiTrwrUcbjWnmBW7kY/UCMuWZNMzRCz7em7LhKl2JePE0vQr6gg/Zg/6Ew
7UX+dAntw3Q76KXW1HPeu5QDOD8vQZdb06hppytw314vHUS/9nax8jJ4n5t5
JfqxnDnKy5HvmcrXqwr3PfGFXgH/uEevxHmJUXoVpusxvRr77zXpaty/IU2H
MBM36TXY71eCrsH6Dw9pifMrnisbcLzlBvO1cP9d5rbD15mvs6asv8YcNtMp
5uuxfvwyczgzPca8Fv2+C8zh+OcB5nXW1O+fYQ6LO1HmG3D/K9nctnGK+Ub0
K3uZw/FBg/kmnP+mhzlsvDjGfDNyfzdzWKvO5luwX2EXc9h41cm8Huv7+XwM
2PzqYB7G/cZK1PfLgGX0UqnKt2L/Z+cWqhzWDx1XFtvgT7eYw2LyAfMGa2Z+
PmEOa0O0aMR9h0eVJWw2Jrkelt8GlU07f9nNfhOsNbMPG/4y9uF4VyH7sPb9
I59fBPfz9ShLOB4JKRuw8EXV98m0fdLjVP3t6Lfx/ZCwOFDF1xs2zgaVTdvB
7P+vZpw3EGDf9ms/+7D+djH7cGamh/0dyMeZS1iOaezbTrnZh7U0c9GC+5yf
y77tptnsw1pdEfuwaGUudmJ9Xz77sD4yg31YpJibsHl0Gvu74MgU9m0X5LIP
6620aTsn+/ndjfXtf9X7IWE9KtiH5aM/Kjft9cnfTvkPMD/8Vg==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 103.12873182277806`}, {0, 19.699755595604756`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.845644303958601*^9, {3.845645185424651*^9, 3.845645198170255*^9}, {
   3.845645263806698*^9, 3.8456452938739476`*^9}, 3.845645330545596*^9, 
   3.8456455428145313`*^9, 3.8456457698405795`*^9, 3.8456458228362617`*^9, 
   3.845645856413074*^9, 3.8456459110003824`*^9, 3.8456460680334463`*^9, 
   3.8456461269095116`*^9, 3.845646735301846*^9, 3.845646827071208*^9, 
   3.845646959245803*^9, 3.8456470107490177`*^9, 3.8456471872776246`*^9, 
   3.8456472353004694`*^9, 3.8456475764302654`*^9, 3.8456476169457426`*^9, 
   3.8456478606780734`*^9, 3.845648076361971*^9, 3.845648677281513*^9, 
   3.8457176368609476`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"df104d1b-052b-45cd-9aa4-9d3a10cb4c49"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1kntIk2EUh2cEghRp6YxcuuWUDLNM5j35edeal3mZm/rH0MxSoXkhK8uN
CDWpaBVNZKXOXFoihIVmWFNLi1RUylygYKgUOlNGzkAkw/d88PLx8PzOeQ/n
+wQ5F1LydnA4nPCt8/+9/fBg/3BAMzvOwzbzcaQg9HeB6SDjQ6jBrftuGlfG
QpzL1oo/jpI/jJfDhcZ5K7E3alKz68N0LoyPIzdAnu9lIO8LoeXAaFMTsQg+
/crE6XLK+yO7rkdrLnRmHIT+/vHGuF4nxsG4eZZrWmshDoF5XmCxenAZn8Te
ts+qvHLyYRjS9dtllpEH5r5/UE5M7NtmNbBcLMkqbiEfjp/m13XNuY6MI+Cu
NassRponEhUTXhI3JfWPwoJOkVD5hbE6CmeKK0qqJslHY27TVl0STj4aWVeC
GwMXqX8MXJfaZ+8tko9Bw9rqi+FImicWux38NZ1y8rEwV0+5NV2k/nEwV2WZ
GjXk41D7TutSGkJ8CtH+0srNPsqfRlHDt3KexZ2xGIPCkZk/3R4sL4ZU9MZZ
epQxJwGdzaoxvS/5BBiTB33cO/2YT0RPUv2IRuHJfCJqr1m75nupPglr9pWl
ildUn4SVriGB1kQ+GQah6qoqhtVzJIgz5V8aUzAPCXqtJXZiMDZK4PlMZRO2
IGT5FKx0808FPWWsToFO0bDxVspn+VRkqfVPvk7TvtMg0q++D6N9IQ3VLpm8
9mraVxqKFZ8etd6l750Oz1DDjyIhY6TjTjy3KqCK8lu+oyegb4j9T5Bijmtz
LHYXeSnWd+ofDKyz+41SLP2StHctM1ZnYPKyrsXWj+WNGYgvcUrWzdC8MtT9
3X/iOWheGYz869rlHKqXYWa8wNsxivrLoOzA+VYD5eXIu7FR5iygeeSIEN1u
bQuk++QI8djzeMrJAf8AN2wYVw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91F1si1EcBvCTXswyxCY1E+v6YqimtW4187HaweZrZVvNcIF34iNbJpsr
u5m9WJSFjsWNhaQ6SYMLq7AownuFSYj4uJBJ9GKJuJCM+LgSvM97ni7Z/vn1
Oc85p1+bt78zctAhhDj8/9ea9s9kjfW3bWKWVA9g5rkKlXOtmfGWMc/HTB4p
UnZiTrwrUcbjWnmBW7kY/UCMuWZNMzRCz7em7LhKl2JePE0vQr6gg/Zg/6Ew
7UX+dAntw3Q76KXW1HPeu5QDOD8vQZdb06hppytw314vHUS/9nax8jJ4n5t5
JfqxnDnKy5HvmcrXqwr3PfGFXgH/uEevxHmJUXoVpusxvRr77zXpaty/IU2H
MBM36TXY71eCrsH6Dw9pifMrnisbcLzlBvO1cP9d5rbD15mvs6asv8YcNtMp
5uuxfvwyczgzPca8Fv2+C8zh+OcB5nXW1O+fYQ6LO1HmG3D/K9nctnGK+Ub0
K3uZw/FBg/kmnP+mhzlsvDjGfDNyfzdzWKvO5luwX2EXc9h41cm8Huv7+XwM
2PzqYB7G/cZK1PfLgGX0UqnKt2L/Z+cWqhzWDx1XFtvgT7eYw2LyAfMGa2Z+
PmEOa0O0aMR9h0eVJWw2Jrkelt8GlU07f9nNfhOsNbMPG/4y9uF4VyH7sPb9
I59fBPfz9ShLOB4JKRuw8EXV98m0fdLjVP3t6Lfx/ZCwOFDF1xs2zgaVTdvB
7P+vZpw3EGDf9ms/+7D+djH7cGamh/0dyMeZS1iOaezbTrnZh7U0c9GC+5yf
y77tptnsw1pdEfuwaGUudmJ9Xz77sD4yg31YpJibsHl0Gvu74MgU9m0X5LIP
6620aTsn+/ndjfXtf9X7IWE9KtiH5aM/Kjft9cnfTvkPMD/8Vg==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 103.}, {0, 19.699755595604756`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.845644303958601*^9, {3.845645185424651*^9, 3.845645198170255*^9}, {
   3.845645263806698*^9, 3.8456452938739476`*^9}, 3.845645330545596*^9, 
   3.8456455428145313`*^9, 3.8456457698405795`*^9, 3.8456458228362617`*^9, 
   3.845645856413074*^9, 3.8456459110003824`*^9, 3.8456460680334463`*^9, 
   3.8456461269095116`*^9, 3.845646735301846*^9, 3.845646827071208*^9, 
   3.845646959245803*^9, 3.8456470107490177`*^9, 3.8456471872776246`*^9, 
   3.8456472353004694`*^9, 3.8456475764302654`*^9, 3.8456476169457426`*^9, 
   3.8456478606780734`*^9, 3.845648076361971*^9, 3.845648677281513*^9, 
   3.8457176368878746`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"54fe6bca-5375-489c-8138-18e2486c1dfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"line", " ", "test", " ", "result"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ress", "=", 
     RowBox[{"lineTest", "[", 
      RowBox[{"listv0", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "103", ",", "steps"}], "]"}], ",", 
       RowBox[{"pyrfiac", "[", 
        RowBox[{"[", 
         RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
       RowBox[{"e", "*", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "ress", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.845480239975604*^9, 3.8454802835833693`*^9}, {
  3.845480425218912*^9, 3.845480431903786*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"61a673ff-4425-4b10-b364-68f619bd807d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"511", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.845480287045913*^9, 3.8454804441833844`*^9, 
  3.8456440905153065`*^9, 3.8456441935754657`*^9, 3.8456443068015146`*^9, 
  3.845645545742682*^9, 3.845645778380546*^9, 3.84564583131996*^9, 
  3.845645864865485*^9, 3.8456467441673822`*^9, 3.8456468363336573`*^9, 
  3.8456469672748237`*^9, 3.8456470150736947`*^9, 3.845647191419653*^9, 
  3.8456472395664167`*^9, 3.8456475796740828`*^9, 3.8456476311721444`*^9, 
  3.8456478848589134`*^9, 3.8456481100703673`*^9, 3.8456487100239916`*^9, 
  3.8457176614760027`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"5e673ecc-af2a-4de5-acc1-86670069baca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Total", "[", "#", "]"}]}], "&"}], "/@", 
   RowBox[{"ress", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8454802905743895`*^9, 3.8454803830245957`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"00a0d659-723b-42c1-9340-9438df40ff4b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
jWMXLXSj/aMERprB3uG/yL8EHwM2fXz0lvaTEmivq/2idodxvgRwunvvUud9
Skd8tW5J4nnG1RKUX2n70yyL/EvQR9fglRbdh7RK0DZ9fYlTCPmX4rf4TM8Z
58i/FK/XLDp/muZXXwrvlkyjIDqfmEoR0a1h3gMn2h9LYcyXjEzpQfWXwmSN
a1OfUrovkMLNwXphz/2M+VIYqGvfCfxB9ZfiTXXecP961l+yFKuCXG1rg9nf
ITKkaEvf2t+cztP5UhR8kKS6OZN/Kb7Gn6uppvNktRR3h/yIfDeX/Eth06vP
W+M0A+ZfCv24hqKpnecPGaweq51SFbK4hgzzbPvULab7MH0ZXtx+NoVzkvzL
8C36QfPUPPIvQ7FrzS5Lel/sZdjkX2PsMIzqL4PC/eG0vJFUfxn8e4W1cfSp
/jLsebp6Z7IW+Zdhr1O/ixssaT8vw3LN+T0cPtH7L8Pnt0eX9u68z5LB6WXe
BRXSr5ZhguSI1cw3dN8jQ+9p/Hvcfxi3yiC2K99TpEn+o+FfkT2i/jeqfzTy
rLUHPKb66Efj2hT3SVO/MzaNhvmWB3Ua7fT9R6OvUrXi1DuqfzT2/hjy7TuN
lxuNqrTqmar0/fCjMdnSNugfOi8qotHzk6b7ECPyH41LJw+8TyHOiEbvqOzT
kS5U/2g8+Ste9+pf9P1HQ+ysnxRN46+ORsaSioa6NvIfjSL1he8fNZH/aAy6
vulw1l06/8bg6Ap3I0/qTyMGjY384Kpq8h+Dmecu3A6oIv8x0LhSn3q2nPzH
IItr02OLkvzHoGjtM/GVi+Q/BnriGWlcWr/4MWjwXGS2ozv5j0Ho9OCODQX5
j8HjS68HbJ9H/mMQonJ4Rh2dL/NjcDUkJX/4Yqp/DL7c/ulVvJD8x8A6KHn7
kyX0/segJmltr/uu9P3HwCItzEON7nc4cjTLvUaWC6j+cgycuGqAM91n6cuR
9sJ5VOpUev/l0NHWy2v9SP7lWGVbaybo9C/HP6M8TmVsJf/yjt+LtcJpnuRf
Dq30sVfPONL3L8dK80fmH5Jo/ZOj57f4uWHzaP2X45KFVq4jtc+XY1na8IHb
g6j+cgxR6Tu3NIrWfzkc7Svr/iZukkNS47jthYDqL8ehR7qxT32p/rHwvqnW
rfErW580YtHfZMrrY7rkPxbT7oz5JqD7XdNYTFROr7rZeT8cC91Ka4/VT8h/
LOacKjRPrST/sTBNkfY1oPnhx+KMzZ2hH86T/w49lS/nr5SS/1j4leuJK6h9
Rix4W2y8g4nzY9FulNy+qYT8x0JjeKnLuQvkPxb3dD9U2D4k/7Ew626y3dSA
6h+LdLVdbnV0f82Jw8yJbwe/86b6x+H3KQXqk+aT/zjMaXTWWkPrl2kc1uqM
3idUp/UvDgdz4vUGqNL6Fwdtg4FiezVa/+Jwf227VIX0+XHw8Dix/iqt14o4
NBUtL5SRfnIceKO6r8mh38eMOMT88hRtpPUtPw7NweWOZ26S/zj4jv11KIHm
ozoOfKdHqbrfXv3v7/hNcQjmafccQPPbGsd8czj/B35JdlY=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 511.}, {0, 19.67317257136371}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8454803149082127`*^9, {3.8454803480615935`*^9, 3.845480383407384*^9}, 
   3.8454804442695866`*^9, 3.845644091009365*^9, 3.845644193654209*^9, 
   3.8456443068900385`*^9, 3.8456455458255916`*^9, 3.845645778471551*^9, 
   3.845645831404254*^9, 3.845645864945341*^9, 3.8456467442523375`*^9, 
   3.845646836413016*^9, 3.8456469673543777`*^9, 3.845647015150403*^9, 
   3.8456472396371374`*^9, 3.845647579753016*^9, 3.845647631238023*^9, 
   3.8456478849309225`*^9, 3.845648110154363*^9, 3.845648710104178*^9, 
   3.845717661521186*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"9228d599-15b5-4c7c-8611-5047ac7774e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"conRess", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"ress", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "\"\<converged\>\""}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posConRess", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"conRess", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}], "-", 
       RowBox[{"conRess", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Total", "[", "#", "]"}]}], "&"}], "/@", 
        RowBox[{"conRess", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], "+", "dis"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posConRess2", "=", 
   RowBox[{"combinePV", "[", "posConRess", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"posConRess", ",", 
     RowBox[{
      RowBox[{"ImageData", "[", "id", "]"}], "[", 
      RowBox[{"[", "row", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"posConRess2", ",", 
     RowBox[{
      RowBox[{"ImageData", "[", "id", "]"}], "[", 
      RowBox[{"[", "row", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8456440721792374`*^9, 3.845644082740939*^9}, {
  3.845644117570322*^9, 3.845644171980603*^9}, {3.845644291724221*^9, 
  3.845644291921338*^9}, {3.8456453603957343`*^9, 3.8456455302161055`*^9}, {
  3.845645807339415*^9, 3.845645807923504*^9}, {3.845647047275038*^9, 
  3.8456471589729853`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"252eb628-4656-4f59-8474-3ef3c0847f62"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"471\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"7.186052113971695`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7.193758198336828`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"7.201264553579356`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"7.631673563350078`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"460\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 87, 3, 29571933127268079946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8456470950630255`*^9, 3.8456471210229893`*^9}, 
   3.845647159908918*^9, 3.8456472396566963`*^9, 3.8456475797998905`*^9, 
   3.845647631256973*^9, 3.8456478849887395`*^9, 3.8456481102032323`*^9, 
   3.845648710161027*^9, 3.8457176615331535`*^9},
 CellLabel->
  "During evaluation of \
In[85]:=",ExpressionUUID->"2cd68742-4707-43be-903c-d802576b3504"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Wvx+wgF9Mkryi9kUor8EFNx454Cud+k6+RZkfq6xD+oLtUfypMbEIzIUrg2O
X5jmZQ+FsuhjY1003PZfsLTb2R70S2t2qDTQMGdZpaQ4zx4jFbYzpz+kYeFP
h1m5Y/ZYEDTVl9lDYV/t8Y2uDx1wMEe+4xypd3PMM/d3A44QsRoDhvMp+H59
v2XHsCNy7IXnd50l66vYnmBb54Denl95RpsoTB/56hWq7ISkJOPS5asohEm4
lFyxdcK3n+VyFSwKrpv40i2JTqiIWCssIrjCRn+KRI4D9ko+jo//SyGzNKz+
/lEHCMwi1Vrs6dB66Gqknu4A3b0q73PJvN2+tSd35JgDfknE6ztb0WGg9l9U
8nkHNB+R8nZ7Q8EysMX6+G0HyAs7tD4fpaBgkJwzZuuMosMDCndesyG8POQs
VeIIv9XZj41zKHgb/LSyO+wI05MWAafI/la5Mu6eHO+I/U+0jE84Usi5ub1z
dLcjGkuV5jUtozCwqeNZeqYjZM40Zj0l/T6z7fvU9cWO2DR0piMni0LQcGhw
72NHfH4g7FQuIf236sKX2cXOUErdM9NZjw2tz2p+3sZOaCpd1rVjiybOCsy2
sMScsS4lU0bhBhvOVf7uGhpLoVHTXBjnoY5+N5Nfd++4wD49V9rzkjFqpWgF
N2tc0DRzUZpsnjGCWY41z1qdMa3KPFDOiA3e/sxbPVXOCGJnaksYspG7fnzq
obcucD64aGV3ujH8qxi22764oGaeg9e9/9j4aP5u79YJF7h/e3k6nuAIDb3t
elN4SPnooyt9no269CnFV2V4qBWdOPic4JkrU5/qy/Mw/XdKSkU+Gzqtaxze
03loFDhlXytgw91zaaoag4ePL6XO5l1gIzhh50pDNR4+HL/4779C4l+ut3e5
Jg/i/c7NTRfZ2Ltk0DVTm4cL7/TvSRaxEWqz7+VlPR6mFL+3dLrMxuSi3rT9
BjwsqAhdkV7MBvtpbsbgAh7GksKHyq6wseFI2KRmEx7Mdxf13r7Kxk7DLj/t
RTxYTlhYHbvGRuQxiWoncx5S6xXC/a6z4USvknSx5OH5PvPQNwSf/Kz+4ow1
D3M+HLQYJvpndHUPz7PhIY7xcsH7EjZsOOeGn9vy4JA6u6++lI259m0Vcg48
HMm9OCftJhvXLiQ/vODIg7/KkDhusfFQ3PGPuBMPXdMmj20huGRTYMsI8S+0
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
FtFX7H9Plej/3+T5PyPtoI8=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91F1si1EcBvCTXswyxCY1E+v6YqimtW4187HaweZrZVvNcIF34iNbJpsr
u5m9WJSFjsWNhaQ6SYMLq7AownuFSYj4uJBJ9GKJuJCM+LgSvM97ni7Z/vn1
Oc85p1+bt78zctAhhDj8/9ea9s9kjfW3bWKWVA9g5rkKlXOtmfGWMc/HTB4p
UnZiTrwrUcbjWnmBW7kY/UCMuWZNMzRCz7em7LhKl2JePE0vQr6gg/Zg/6Ew
7UX+dAntw3Q76KXW1HPeu5QDOD8vQZdb06hppytw314vHUS/9nax8jJ4n5t5
JfqxnDnKy5HvmcrXqwr3PfGFXgH/uEevxHmJUXoVpusxvRr77zXpaty/IU2H
MBM36TXY71eCrsH6Dw9pifMrnisbcLzlBvO1cP9d5rbD15mvs6asv8YcNtMp
5uuxfvwyczgzPca8Fv2+C8zh+OcB5nXW1O+fYQ6LO1HmG3D/K9nctnGK+Ub0
K3uZw/FBg/kmnP+mhzlsvDjGfDNyfzdzWKvO5luwX2EXc9h41cm8Huv7+XwM
2PzqYB7G/cZK1PfLgGX0UqnKt2L/Z+cWqhzWDx1XFtvgT7eYw2LyAfMGa2Z+
PmEOa0O0aMR9h0eVJWw2Jrkelt8GlU07f9nNfhOsNbMPG/4y9uF4VyH7sPb9
I59fBPfz9ShLOB4JKRuw8EXV98m0fdLjVP3t6Lfx/ZCwOFDF1xs2zgaVTdvB
7P+vZpw3EGDf9ms/+7D+djH7cGamh/0dyMeZS1iOaezbTrnZh7U0c9GC+5yf
y77tptnsw1pdEfuwaGUudmJ9Xz77sD4yg31YpJibsHl0Gvu74MgU9m0X5LIP
6620aTsn+/ndjfXtf9X7IWE9KtiH5aM/Kjft9cnfTvkPMD/8Vg==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 103.12872462949557`}, {0, 19.67317257136371}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8456443069614325`*^9, 3.8456454325448046`*^9, {3.8456454939834194`*^9, 
   3.8456455458944073`*^9}, 3.8456457785134926`*^9, 3.845645831491716*^9, 
   3.8456458650178223`*^9, 3.845646744323295*^9, 3.845646836472253*^9, 
   3.845646967419439*^9, 3.8456470151853123`*^9, {3.8456470950570693`*^9, 
   3.8456471210160084`*^9}, 3.8456471599567614`*^9, 3.845647239697586*^9, 
   3.845647579867709*^9, 3.8456476312998896`*^9, 3.84564788508648*^9, 
   3.8456481102671003`*^9, 3.8456487102438045`*^9, 3.8457176615650682`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"ec08976f-d16a-4cdd-8591-7d6e1038d155"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9kg0s1GEcx69aUyEkRXG4Xmb0chHmHH2d013lvJx7ocVKcXaFVjMvbbmh
lmyJWVo1xSZluhS97Mp1dbm0RnpZsqSkIktXo4zNVs3z89/++++zz/f5/X/P
73m8U7PlaXM5HE7kv/f/d+Zxh+MZc8XAC3fMsBd8tUKrtteDMQ/inJ4yzwou
49V4WVMke9ZJ3gd6n5zykQniDfA/kmWt9CHm45F4fLToMvEmtHg8f15bSxwI
dUS4fEf+SsZB2DaVIjYGL2Mcgt+Sx/ukbS6MBbh2LPGK9SJxKOxkk4JrIsqH
4eCWD2GPNeTDkaHxOpp/gDwQvWqXH7/beYZ1gLZcb1PYTD4CE81cf1fuUsYi
GOpvu56zWc7yIhTdHagMeUv1I/HbMvTFsp9YjJvtolrefFZPJ0ZQcdW6+y3k
o9B/6mmBIpyxLgojpSFafT/9bysK7de/+TVMfitiuDnJVU7UnwSyC5mjP2LJ
S9Cm1/odyqb6UnQJGvqmHNyYl0LV4tR6i0d+O7zNnY06hRfjaKSfrLJzbl3D
8tEYXGyomHecMUcGw6GhJ6V88jJEVdYtVDYFMB+D3Lp35sNTa5mPwR2ney4O
Rlofi+6UmqAbs/VjIekw/zz9njgOi1KnQr+JGJviMB4cZskepPXxAO+AtaRz
9QwjHuUPHlj4EsrHo9dW2uFoZZ4jR7vo6t7kesY6OZo60/OGXdh+TQngdnnb
5vbRvBVoCp9IQRebDxSY5p7vKdlD81WgOvPMgrJudv4cJVa4CXrTnrmyvBJR
zhsD7xRQXgnfYvXHRUZ2v0xK1CjsHp4QsvODCn9erdVM21NeBYP6dbXQlrFJ
hdg53LKxMepPjQChVPu9gfJqJBj5X231PJZXQxV/trxk9v4kouPS5J9q0H4S
8clOrbmexbwuEa2f23mXPRkjCV4ZAcpH3lQ/CXn9jbt7NlM/Sdg5IPc0C5fg
L1ACGUs=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91F1si1EcBvCTXswyxCY1E+v6YqimtW4187HaweZrZVvNcIF34iNbJpsr
u5m9WJSFjsWNhaQ6SYMLq7AownuFSYj4uJBJ9GKJuJCM+LgSvM97ni7Z/vn1
Oc85p1+bt78zctAhhDj8/9ea9s9kjfW3bWKWVA9g5rkKlXOtmfGWMc/HTB4p
UnZiTrwrUcbjWnmBW7kY/UCMuWZNMzRCz7em7LhKl2JePE0vQr6gg/Zg/6Ew
7UX+dAntw3Q76KXW1HPeu5QDOD8vQZdb06hppytw314vHUS/9nax8jJ4n5t5
JfqxnDnKy5HvmcrXqwr3PfGFXgH/uEevxHmJUXoVpusxvRr77zXpaty/IU2H
MBM36TXY71eCrsH6Dw9pifMrnisbcLzlBvO1cP9d5rbD15mvs6asv8YcNtMp
5uuxfvwyczgzPca8Fv2+C8zh+OcB5nXW1O+fYQ6LO1HmG3D/K9nctnGK+Ub0
K3uZw/FBg/kmnP+mhzlsvDjGfDNyfzdzWKvO5luwX2EXc9h41cm8Huv7+XwM
2PzqYB7G/cZK1PfLgGX0UqnKt2L/Z+cWqhzWDx1XFtvgT7eYw2LyAfMGa2Z+
PmEOa0O0aMR9h0eVJWw2Jrkelt8GlU07f9nNfhOsNbMPG/4y9uF4VyH7sPb9
I59fBPfz9ShLOB4JKRuw8EXV98m0fdLjVP3t6Lfx/ZCwOFDF1xs2zgaVTdvB
7P+vZpw3EGDf9ms/+7D+djH7cGamh/0dyMeZS1iOaezbTrnZh7U0c9GC+5yf
y77tptnsw1pdEfuwaGUudmJ9Xz77sD4yg31YpJibsHl0Gvu74MgU9m0X5LIP
6620aTsn+/ndjfXtf9X7IWE9KtiH5aM/Kjft9cnfTvkPMD/8Vg==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 103.}, {0, 19.67317257136371}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8456443069614325`*^9, 3.8456454325448046`*^9, {3.8456454939834194`*^9, 
   3.8456455458944073`*^9}, 3.8456457785134926`*^9, 3.845645831491716*^9, 
   3.8456458650178223`*^9, 3.845646744323295*^9, 3.845646836472253*^9, 
   3.845646967419439*^9, 3.8456470151853123`*^9, {3.8456470950570693`*^9, 
   3.8456471210160084`*^9}, 3.8456471599567614`*^9, 3.845647239697586*^9, 
   3.845647579867709*^9, 3.8456476312998896`*^9, 3.84564788508648*^9, 
   3.8456481102671003`*^9, 3.8456487102438045`*^9, 3.845717661586012*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"a8463cff-7d58-4aca-9fb8-78cfc9b85709"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: Errors", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.845649337295001*^9, 
   3.8456493401772623`*^9}},ExpressionUUID->"38be7124-f2ad-4f53-871f-\
a008cb16aa21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seeAllLine", "[", 
  RowBox[{"listv0", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"50", ",", "60", ",", "steps"}], "]"}], ",", 
   RowBox[{"pyrfiac", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"e", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
   "\"\<ConstrainedNewMethod\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.845647731900875*^9, 3.8456477637186613`*^9}, {
  3.845647932746371*^9, 3.845647966537753*^9}, {3.8456481630072017`*^9, 
  3.845648166339446*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"7d8586d6-0add-4499-9eb4-d02ad2c746ee"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
imI=
           "]]}, Annotation[#, "Charting`Private`Tag$4739#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0P/r3xbR
           "]]}, Annotation[#, "Charting`Private`Tag$4739#2"]& ]}}, {}}, {
      PointSize[0.01], 
      LineBox[{{50., 0.1416332870721817}, {50., 0.23066651821136475`}}], 
      GrayLevel[0], 
      PointBox[{50., 0.18614990264177322`}], {Arrowheads -> Small, 
       ArrowBox[{{60.04816230348706, 0.18614990264177322`}, {
        40.507394556865414`, 0.18614990264177322`}}]}}, {
      PointSize[0.01], 
      LineBox[{{50.2, 0.14225320229785418`}, {50.2, 0.23702631351526113`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{50.2, 0.18963975790655765`}], {Arrowheads -> Small, 
       ArrowBox[{{50.2, 0.18963975790655765`}, {50.2, 
        0.18963975790655765`}}]}}, {
      PointSize[0.01], 
      LineBox[{{50.4, 0.14352741437681585`}, {50.4, 0.2414729739403613}}], 
      GrayLevel[0], 
      PointBox[{50.4, 0.19250019415858857`}], {Arrowheads -> Small, 
       ArrowBox[{{60.142041289763334`, 0.19250019415858857`}, {
        49.31439844727255, 0.19250019415858857`}}]}}, {
      PointSize[0.01], 
      LineBox[{{50.6, 0.1450928010570107}, {50.6, 0.24470909205828578`}}], 
      GrayLevel[0], 
      PointBox[{50.6, 0.19490094655764822`}], {Arrowheads -> Small, 
       ArrowBox[{{60.17879755477898, 0.19490094655764822`}, {
        49.34937873556453, 0.19490094655764822`}}]}}, {
      PointSize[0.01], 
      LineBox[{{50.8, 0.14658624008638252`}, {50.8, 0.24743726044065453`}}], 
      GrayLevel[0], 
      PointBox[{50.8, 0.19701175026351853`}], {Arrowheads -> Small, 
       ArrowBox[{{60.21194065530088, 0.19701175026351853`}, {
        49.38057404838733, 0.19701175026351853`}}]}}, {
      PointSize[0.01], 
      LineBox[{{51., 0.14764460921287537`}, {51., 0.25036007165908813`}}], 
      GrayLevel[0], 
      PointBox[{51., 0.19900234043598175`}], {Arrowheads -> Small, 
       ArrowBox[{{60.243715595130126`, 0.19900234043598175`}, {
        49.410376171141316`, 0.19900234043598175`}}]}}, {
      PointSize[0.01], 
      LineBox[{{51.2, 0.14799725709489706`}, {51.2, 0.2540077882366744}}], 
      GrayLevel[0], 
      PointBox[{51.2, 0.20100252266578572`}], {Arrowheads -> Small, 
       ArrowBox[{{60.27629975354602, 0.20100252266578572`}, {
        49.44075566601125, 0.20100252266578572`}}]}}, {
      PointSize[0.01], 
      LineBox[{{51.4, 0.14774341603271116`}, {51.4, 0.25822135250237227`}}], 
      GrayLevel[0], 
      PointBox[{51.4, 0.20298238426754173`}], {Arrowheads -> Small, 
       ArrowBox[{{60.309188206929754`, 0.20298238426754173`}, {
        49.47126571889102, 0.20298238426754173`}}]}}, {
      PointSize[0.01], 
      LineBox[{{51.6, 0.14707478923704548`}, {51.6, 0.2626693767366091}}], 
      GrayLevel[0], 
      PointBox[{51.6, 0.2048720829868273}], {Arrowheads -> Small, 
       ArrowBox[{{60.34141311663333, 0.2048720829868273}, {49.50094735258025, 
        0.2048720829868273}}]}}, {
      PointSize[0.01], 
      LineBox[{{51.8, 0.14618307991862758`}, {51.8, 0.2670204732198115}}], 
      GrayLevel[0], 
      PointBox[{51.8, 0.20660177656921952`}], {Arrowheads -> Small, 
       ArrowBox[{{60.371358248441766`, 0.20660177656921952`}, {
        49.52845784349955, 0.20660177656921952`}}]}}, {
      PointSize[0.01], 
      LineBox[{{52., 0.14525999128818512`}, {52., 0.2709432542324066}}], 
      GrayLevel[0], 
      PointBox[{52., 0.20810162276029587`}], {Arrowheads -> Small, 
       ArrowBox[{{60.398012383234025`, 0.20810162276029587`}, {
        49.55288384044478, 0.20810162276029587`}}]}}, {
      PointSize[0.01], 
      LineBox[{{52.2, 0.1444702361585334}, {52.2, 0.2741867366287094}}], 
      GrayLevel[0], 
      PointBox[{52.2, 0.2093284863936214}], {Arrowheads -> Small, 
       ArrowBox[{{60.420165094142845`, 0.2093284863936214}, {
        49.57305378801679, 0.2093284863936214}}]}}, {
      PointSize[0.01], 
      LineBox[{{52.4, 0.1438705657508386}, {52.4, 0.2768215555585874}}], 
      GrayLevel[0], 
      PointBox[{52.4, 0.210346060654713}], {Arrowheads -> Small, 
       ArrowBox[{{60.43862656138492, 0.210346060654713}, {49.58985963033934, 
        0.210346060654713}}]}}, {
      PointSize[0.01], 
      LineBox[{{52.6, 0.14349074088835448`}, {52.6, 0.27899875074579666`}}], 
      GrayLevel[0], 
      PointBox[{52.6, 0.21124474581707559`}], {Arrowheads -> Small, 
       ArrowBox[{{60.45538845826904, 0.21124474581707559`}, {
        49.60515011831265, 0.21124474581707559`}}]}}, {
      PointSize[0.01], 
      LineBox[{{52.8, 0.14336052239433478`}, {52.8, 0.2808693619140927}}], 
      GrayLevel[0], 
      PointBox[{52.8, 0.21211494215421373`}], {Arrowheads -> Small, 
       ArrowBox[{{60.471497510715885`, 0.21211494215421373`}, {
        49.619742296219954`, 0.21211494215421373`}}]}}, {
      PointSize[0.01], 
      LineBox[{{53., 0.1435096710920334}, {53., 0.28258442878723145`}}], 
      GrayLevel[0], 
      PointBox[{53., 0.21304704993963242`}], {Arrowheads -> Small, 
       ArrowBox[{{60.489412360103834`, 0.21304704993963242`}, {
        49.63594235151601, 0.21304704993963242`}}]}}, {
      PointSize[0.01], 
      LineBox[{{53.2, 0.1439228074491309}, {53.2, 0.2842596633464801}}], 
      GrayLevel[0], 
      PointBox[{53.2, 0.2140912353978055}], {Arrowheads -> Small, 
       ArrowBox[{{60.50967411030773, 0.2140912353978055}, {49.65447746511116, 
        0.2140912353978055}}]}}, {
      PointSize[0.01], 
      LineBox[{{53.4, 0.14440399051101535`}, {53.4, 0.28586946660315204`}}], 
      GrayLevel[0], 
      PointBox[{53.4, 0.2151367285570837}], {Arrowheads -> Small, 
       ArrowBox[{{60.52961062678507, 0.2151367285570837}, {49.67237539922464, 
        0.2151367285570837}}]}}, {
      PointSize[0.01], 
      LineBox[{{53.6, 0.1447121389675017}, {53.6, 0.28735291182607214`}}], 
      GrayLevel[0], 
      PointBox[{53.6, 0.2160325253967869}], {Arrowheads -> Small, 
       ArrowBox[{{60.547062689198036`, 0.2160325253967869}, {
        49.68813978140645, 0.2160325253967869}}]}}, {
      PointSize[0.01], 
      LineBox[{{53.8, 0.14460617150840488`}, {53.8, 0.2886490722840653}}], 
      GrayLevel[0], 
      PointBox[{53.8, 0.21662762189623508`}], {Arrowheads -> Small, 
       ArrowBox[{{60.559522069523375`, 0.21662762189623508`}, {
        49.69923590244165, 0.21662762189623508`}}]}}, {
      PointSize[0.01], 
      LineBox[{{54., 0.14384500682353973`}, {54., 0.2896970212459564}}], 
      GrayLevel[0], 
      PointBox[{54., 0.21677101403474808`}], {Arrowheads -> Small, 
       ArrowBox[{{60.562233661404726`, 0.21677101403474808`}, {
        49.701800299710065`, 0.21677101403474808`}}]}}, {
      PointSize[0.01], 
      LineBox[{{54.2, 0.14229672377081884`}, {54.2, 0.2904059330845066}}], 
      GrayLevel[0], 
      PointBox[{54.2, 0.2163513284276627}], {Arrowheads -> Small, 
       ArrowBox[{{60.55402556352165, 0.2163513284276627}, {49.69433905959076, 
        0.2163513284276627}}]}}, {
      PointSize[0.01], 
      LineBox[{{54.4, 0.14026604188054545`}, {54.4, 0.290565386588222}}], 
      GrayLevel[0], 
      PointBox[{54.4, 0.21541571423438372`}], {Arrowheads -> Small, 
       ArrowBox[{{60.53562262666571, 0.21541571423438372`}, {
        49.67774785552274, 0.21541571423438372`}}]}}, {
      PointSize[0.01], 
      LineBox[{{54.6, 0.1381668408511204}, {54.6, 0.28993506164954536`}}], 
      GrayLevel[0], 
      PointBox[{54.6, 0.21405095125033288`}], {Arrowheads -> Small, 
       ArrowBox[{{60.508423105943436`, 0.21405095125033288`}, {
        49.65320871212255, 0.21405095125033288`}}]}}, {
      PointSize[0.01], 
      LineBox[{{54.8, 0.13641300038094462`}, {54.8, 0.28827463816091914`}}], 
      GrayLevel[0], 
      PointBox[{54.8, 0.21234381927093188`}], {Arrowheads -> Small, 
       ArrowBox[{{60.476010839743175`, 0.21234381927093188`}, {
        49.62374995795886, 0.21234381927093188`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55., 0.13541840016841888`}, {55., 0.28534379601478577`}}], 
      GrayLevel[0], 
      PointBox[{55., 0.21038109809160233`}], {Arrowheads -> Small, 
       ArrowBox[{{60.43940533989237, 0.21038109809160233`}, {
        49.590580106724545`, 0.21038109809160233`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55.2, 0.13554569452512694`}, {55.2, 0.2811077372901182}}], 
      GrayLevel[0], 
      PointBox[{55.2, 0.20832671590762256`}], {Arrowheads -> Small, 
       ArrowBox[{{60.402067430268886`, 0.20832671590762256`}, {
        49.556500609968985`, 0.20832671590762256`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55.4, 0.13695263621538367`}, {55.4, 0.276353752812011}}], 
      GrayLevel[0], 
      PointBox[{55.4, 0.20665319451369735`}], {Arrowheads -> Small, 
       ArrowBox[{{60.37227377304684, 0.20665319451369735`}, {
        49.52930336125552, 0.20665319451369735`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55.6, 0.13974575261668692`}, {55.6, 0.27207465559208854`}}], 
      GrayLevel[0], 
      PointBox[{55.6, 0.20591020410438773`}], {Arrowheads -> Small, 
       ArrowBox[{{60.35938192333144, 0.20591020410438773`}, {
        49.51746757303498, 0.20591020410438773`}}]}}, {
      PointSize[0.01], 
      LineBox[{{55.8, 0.14403157110653425`}, {55.8, 0.26926325864197576`}}], 
      GrayLevel[0], 
      PointBox[{55.8, 0.206647414874255}], {Arrowheads -> Small, 
       ArrowBox[{{60.372416583344716`, 0.206647414874255}, {49.52940328961101,
         0.206647414874255}}]}}, {
      PointSize[0.01], 
      LineBox[{{56., 0.1499166190624237}, {56., 0.2689123749732971}}], 
      GrayLevel[0], 
      PointBox[{56., 0.2094144970178604}], {Arrowheads -> Small, 
       ArrowBox[{{60.42151445873427, 0.2094144970178604}, {49.57436007616137, 
        0.2094144970178604}}]}}, {
      PointSize[0.01], 
      LineBox[{{56.2, 0.15726327023102948`}, {56.2, 0.27161389433201616`}}], 
      GrayLevel[0], 
      PointBox[{56.2, 0.21443858228152282`}], {Arrowheads -> Small, 
       ArrowBox[{{60.51592671284364, 0.21443858228152282`}, {
        49.66007712170952, 0.21443858228152282`}}]}}, {
      PointSize[0.01], 
      LineBox[{{56.4, 0.1649572838357319}, {56.4, 0.2763560134014506}}], 
      GrayLevel[0], 
      PointBox[{56.4, 0.22065664861859124`}], {Arrowheads -> Small, 
       ArrowBox[{{60.64366640514209, 0.22065664861859124`}, {
        49.77495963727634, 0.22065664861859124`}}]}}, {
      PointSize[0.01], 
      LineBox[{{56.6, 0.17164026546908873`}, {56.6, 0.2817260055992573}}], 
      GrayLevel[0], 
      PointBox[{56.6, 0.22668313553417302`}], {Arrowheads -> Small, 
       ArrowBox[{{60.78391314719883, 0.22668313553417302`}, {
        49.90167279077593, 0.22668313553417302`}}]}}, {
      PointSize[0.01], 
      LineBox[{{56.8, 0.17595382072365687`}, {56.8, 0.2863111443430926}}], 
      GrayLevel[0], 
      PointBox[{56.8, 0.23113248253337476`}], {Arrowheads -> Small, 
       ArrowBox[{{60.90422656895226, 0.23113248253337476`}, {
        50.00845524122442, 0.23113248253337476`}}]}}, {
      PointSize[0.01], 
      LineBox[{{57., 0.1765395551919937}, {57., 0.2886987030506134}}], 
      GrayLevel[0], 
      PointBox[{57., 0.23261912912130356`}], {Arrowheads -> Small, 
       ArrowBox[{{60.945170702280514`, 0.23261912912130356`}, {
        50.05114323811669, 0.23261912912130356`}}]}}, {
      PointSize[0.01], 
      LineBox[{{57.2, 0.17249623483136467`}, {57.2, 0.28833000689594696`}}], 
      GrayLevel[0], 
      PointBox[{57.2, 0.2304131208636558}], {Arrowheads -> Small, 
       ArrowBox[{{60.880477784822524`, 0.2304131208636558}, {
        49.989476457640706`, 0.2304131208636558}}]}}, {
      PointSize[0.01], 
      LineBox[{{57.4, 0.1647512670578689}, {57.4, 0.2880625880791041}}], 
      GrayLevel[0], 
      PointBox[{57.4, 0.22640692756848652`}], {Arrowheads -> Small, 
       ArrowBox[{{60.7775201198983, 0.22640692756848652`}, {49.89710183196526,
         0.22640692756848652`}}]}}, {
      PointSize[0.01], 
      LineBox[{{57.6, 0.1546892196523133}, {57.6, 0.2916080305565671}}], 
      GrayLevel[0], 
      PointBox[{57.6, 0.2231486251044402}], {Arrowheads -> Small, 
       ArrowBox[{{60.69960555208657, 0.2231486251044402}, {49.8254936711841, 
        0.2231486251044402}}]}}, {
      PointSize[0.01], 
      LineBox[{{57.8, 0.1436946603955057}, {57.8, 0.3026779182848171}}], 
      GrayLevel[0], 
      PointBox[{57.8, 0.2231862893401614}], {Arrowheads -> Small, 
       ArrowBox[{{60.70107021023612, 0.2231862893401614}, {49.82661279884475, 
        0.2231862893401614}}]}}, {
      PointSize[0.01], 
      LineBox[{{58., 0.13315215706825256`}, {58., 0.32498383522033686`}}], 
      GrayLevel[0], 
      PointBox[{58., 0.2290679961442947}], {Arrowheads -> Small, 
       ArrowBox[{{60.84163230818543, 0.2290679961442947}, {49.95269805308127, 
        0.2290679961442947}}]}}, {
      PointSize[0.01], 
      LineBox[{{58.2, 0.12430905679807244`}, {58.2, 0.36051175035783245`}}], 
      GrayLevel[0], 
      PointBox[{58.2, 0.24241040357795246`}], {Arrowheads -> Small, 
       ArrowBox[{{61.32771288552789, 0.24241040357795246`}, {
        50.45231375623922, 0.24241040357795246`}}]}}, {
      PointSize[0.01], 
      LineBox[{{58.4, 0.11786382409932693`}, {58.4, 0.40434517284490634`}}], 
      GrayLevel[0], 
      PointBox[{58.4, 0.26110449847211664`}], {Arrowheads -> Small, 
       ArrowBox[{{62.41350597652101, 0.26110449847211664`}, {
        51.529904556950555`, 0.26110449847211664`}}]}}, {
      PointSize[0.01], 
      LineBox[{{58.6, 0.11437770283308794`}, {58.6, 0.44984199686739085`}}], 
      GrayLevel[0], 
      PointBox[{58.6, 0.2821098498502394}], {Arrowheads -> Small, 
       ArrowBox[{{64.08126077039375, 0.2821098498502394}, {52.94384424828293, 
        0.2821098498502394}}]}}, {
      PointSize[0.01], 
      LineBox[{{58.8, 0.114411936860428}, {58.8, 0.49036011661111195`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{58.8, 0.30238602673577}], {Arrowheads -> Small, 
       ArrowBox[{{58.8, 0.30238602673577}, {58.8, 0.30238602673577}}]}}, {
      PointSize[0.01], 
      LineBox[{{59., 0.11852777004241943`}, {59., 0.5192574262619019}}], 
      GrayLevel[0], 
      PointBox[{59., 0.31889259815216064`}], {Arrowheads -> Small, 
       ArrowBox[{{68.4996358901105, 0.31889259815216064`}, {57.92421909467461,
         0.31889259815216064`}}]}}, {
      PointSize[0.01], 
      LineBox[{{59.2, 0.1269887380848735}, {59.2, 0.5313230532324033}}], 
      GrayLevel[0], 
      PointBox[{59.2, 0.32915589565863834`}], {Arrowheads -> Small, 
       ArrowBox[{{68.6265539334735, 0.32915589565863834`}, {
        58.026274838883374`, 0.32915589565863834`}}]}}, {
      PointSize[0.01], 
      LineBox[{{59.4, 0.13886754407255633`}, {59.4, 0.5270710578425238}}], 
      GrayLevel[0], 
      PointBox[{59.4, 0.33296930095754007`}], {Arrowheads -> Small, 
       ArrowBox[{{68.64861821512238, 0.33296930095754007`}, {
        58.05431884242556, 0.33296930095754007`}}]}}, {
      PointSize[0.01], 
      LineBox[{{59.6, 0.15293918293497444`}, {59.6, 0.5084467336389863}}], 
      GrayLevel[0], 
      PointBox[{59.6, 0.33069295828698037`}], {Arrowheads -> Small, 
       ArrowBox[{{68.62055131090477, 0.33069295828698037`}, {
        58.02266181621749, 0.33069295828698037`}}]}}, {
      PointSize[0.01], 
      LineBox[{{59.8, 0.16797864960163247`}, {59.8, 0.4773953741685144}}], 
      GrayLevel[0], 
      PointBox[{59.8, 0.3226870118850734}], {Arrowheads -> Small, 
       ArrowBox[{{68.55100437344231, 0.3226870118850734}, {57.96743091939052, 
        0.3226870118850734}}]}}, {
      PointSize[0.01], 
      LineBox[{{60., 0.18276093900203705`}, {60., 0.43586227297782904`}}], 
      RGBColor[1, 0, 0], 
      PointBox[{60., 0.309311605989933}], {Arrowheads -> Small, 
       ArrowBox[{{60., 0.309311605989933}, {60., 0.309311605989933}}]}}}, {
    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {50., 0.11391972575157357`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {50., 0.11391972575157357`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
     PlotRange -> {{50., 60.}, {0.11391972575157357`, 0.5317197582401278}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8456479911308975`*^9, {3.8456481429669876`*^9, 3.8456481722523565`*^9}, 
   3.845648715847958*^9, 3.8457176642682695`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"251bf124-a57f-4cf4-a27d-d7826fee58c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"lineTest", "[", 
   RowBox[{"listv0", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"58", ",", "58", ",", "steps"}], "]"}], ",", 
    RowBox[{"pyrfiac", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
    RowBox[{"e", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
    "\"\<ConstrainedNewMethod\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8456481964911985`*^9, 3.845648212530233*^9}, 
   3.845649284572899*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"30d017c6-f31f-4a27-a1c9-de7390199a3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "2.8440604219404966`"}], ",", 
    RowBox[{"-", "8.046620048794773`"}], ",", "\<\"converged\"\>", ",", 
    "58.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8456482132010536`*^9, 3.8456487160434356`*^9, 
  3.84571766434902*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"904bc1b6-890e-471c-873b-03653cd09f2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "pixelIterGraphics"}]], "Input",
 CellChangeTimes->{{3.8456482282228856`*^9, 3.8456482495823374`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"cafb94a8-1f7c-439f-b610-3dede35b8d86"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\nMakes plots for the intermediate solutions of a \
pyramidal level\\nInput\[Rule] [i, p0, listv0, prange, maxlvl, pyrfunctions, \
threshold, mode]\\nOutput-> list with the dimensions of: {lvls*i, Plot of \
flineia and flineib with solution v1 and v2}\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"pixelIterGraphics", "[", 
                    
                    RowBox[{
                    "i_", ",", "p0_", ",", "v0_", ",", "prange_", ",", 
                    "lvlmax_", ",", "pyrfunctions_", ",", "threshold_", ",", 
                    "mode_"}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "iter", "}"}], ",", 
                    RowBox[{
                    RowBox[{"iter", "=", 
                    RowBox[{"PyrFlow1DIter", "[", 
                    
                    RowBox[{"i", ",", "p0", ",", "v0", ",", "pyrfunctions", 
                    ",", "threshold", ",", "mode"}], "]"}]}], ";", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"oneLevelPixelIterGraphics", "[", 
                    RowBox[{
                    RowBox[{"lvlmax", "-", "j", "+", "1"}], ",", 
                    
                    RowBox[{"iter", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], ",", "p0", ",", "prange", ",", 
                    RowBox[{
                    RowBox[{"pyrfunctions", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "j"}], ";;", 
                    RowBox[{"-", "j"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", "mode"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", 
                    RowBox[{"Length", "[", "iter", "]"}]}], "}"}]}], "]"}], 
                    "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"pixelIterGraphics", "[", 
                    
                    RowBox[{
                    "i_", ",", "p0_", ",", "prange_", ",", "lvlmax_", ",", 
                    "pyrfunctions_", ",", "threshold_", ",", "mode_"}], "]"}],
                     ":=", 
                    RowBox[{"pixelIterGraphics", "[", 
                    RowBox[{"i", ",", "p0", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", "prange", ",", 
                    "lvlmax", ",", "pyrfunctions", ",", "threshold", ",", 
                    "mode"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Notebook$$15$717581`pixelIterGraphics\
\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\nMakes plots for the intermediate solutions of a \
pyramidal level\\nInput\[Rule] [i, p0, listv0, prange, maxlvl, pyrfunctions, \
threshold, mode]\\nOutput-> list with the dimensions of: {lvls*i, Plot of \
flineia and flineib with solution v1 and v2}\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {3., 5.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {3., 5.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\nMakes plots for the intermediate solutions of a pyramidal level\nInput\
\[Rule] [i, p0, listv0, prange, maxlvl, pyrfunctions, threshold, mode]\n\
Output-> list with the dimensions of: {lvls*i, Plot of flineia and flineib \
with solution v1 and v2}\n", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`pixelIterGraphics, \
{$CellContext`pixelIterGraphics[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`v0, 
          Blank[]], 
         Pattern[$CellContext`prange, 
          Blank[]], 
         Pattern[$CellContext`lvlmax, 
          Blank[]], 
         Pattern[$CellContext`pyrfunctions, 
          Blank[]], 
         Pattern[$CellContext`threshold, 
          Blank[]], 
         Pattern[$CellContext`mode, 
          Blank[]]] :> 
       Block[{$CellContext`iter}, $CellContext`iter = \
$CellContext`PyrFlow1DIter[$CellContext`i, $CellContext`p0, $CellContext`v0, \
$CellContext`pyrfunctions, $CellContext`threshold, $CellContext`mode]; Flatten[
           Table[
            $CellContext`oneLevelPixelIterGraphics[$CellContext`lvlmax - \
$CellContext`j + 1, 
             
             Part[$CellContext`iter, $CellContext`j], $CellContext`p0, \
$CellContext`prange, 
             Part[
              Part[$CellContext`pyrfunctions, 
               Span[-$CellContext`j, -$CellContext`j]], 
              1], $CellContext`mode], {$CellContext`j, 1, 
             Length[$CellContext`iter]}]]], $CellContext`pixelIterGraphics[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`prange, 
          Blank[]], 
         Pattern[$CellContext`lvlmax, 
          Blank[]], 
         Pattern[$CellContext`pyrfunctions, 
          Blank[]], 
         Pattern[$CellContext`threshold, 
          Blank[]], 
         Pattern[$CellContext`mode, 
          
          Blank[]]] :> $CellContext`pixelIterGraphics[$CellContext`i, \
$CellContext`p0, {0., 
         0.}, $CellContext`prange, $CellContext`lvlmax, \
$CellContext`pyrfunctions, $CellContext`threshold, $CellContext`mode]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Notebook$$15$717581`pixelIterGraphics"], False]]], "Output",
 CellChangeTimes->{3.845648250015463*^9, 3.845648716144166*^9, 
  3.8457176645584803`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"bde7623f-5128-4fea-83b1-704e024b7f2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"pixelIterGraphics", "[", 
   RowBox[{"10", ",", "58", ",", "listv0", ",", "10", ",", "lvlmax", ",", 
    RowBox[{"pyrfiac", "[", 
     RowBox[{"[", 
      RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
    RowBox[{"e", "*", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
    "\"\<ConstrainedNewMethod\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8456482569269705`*^9, 3.8456483113901205`*^9}, {
  3.84564862629633*^9, 3.845648628647685*^9}, {3.845649008896493*^9, 
  3.8456490134261503`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"632c03db-274e-451b-b076-d9d0aed9dfa7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i103$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i103$$ = 1}, 
     "\"max\"" :> {$CellContext`i103$$ = 40}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i103$$], 1, ""}, 1, 40, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i103$$], {1, 40, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->0.,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$6315#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6315#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    ArrowBox[{{63.51186263364565, 0.26500246259747495`}, {
                    52.7926576777025, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.51186263364565`"}], ",", 
                    RowBox[{"-", "5.2073423222974995`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$6493#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6493#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89179441337529, 0.26500246259747495`}, {
                    52.93311619406401, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.8917944133752895`"}], ",", 
                    RowBox[{"-", "5.066883805935987`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$6657#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6657#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89502592060677, 0.26500246259747495`}, {
                    52.938420623989124`, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.89502592060677`"}], ",", 
                    RowBox[{"-", "5.061579376010874`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$6821#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6821#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505199911027, 0.26500246259747495`}, {
                    52.93862569814813, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.89505199911027`"}], ",", 
                    RowBox[{"-", "5.061374301851869`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$6985#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6985#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505221304424, 0.26500246259747495`}, {
                    52.9386336327564, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.895052213044237`"}], ",", 
                    RowBox[{"-", "5.061366367243603`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$7149#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$7149#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505221479946, 0.26500246259747495`}, {
                    52.93863393976688, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.895052214799467`"}], ",", 
                    RowBox[{"-", "5.061366060233117`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 7->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV13k4VVsUAPAbEqVJJdEgiTKUp0HzXtLg7Gu4aZJEikeqqwyFZjJLSSmZ
kqmQpAgV1bkyzzdDyctUMpUilHjLX/f7ffd8Z5+9ztprrbPwkL2xtQiHw5Ec
x+GM/S70OibK4ejBl75/DdZ6Coi4ZbZIIbpP3yDJ5bKAdK2XELk+Tg9Oeqcs
yfQQkMzeGI6SqB6s8j3kru0uILwDH/5uF9eDZ+Nnp2tfEJDzK+ngVSk96Jne
umKTq4B8aFbpXjBHDxb1RrlYHReQm6SlhmjpweU7qmrz9ghIjjL/SZatHhgk
8CVrFwvIb98yq1thetA8i+no/cMSVaM5Cc6lejB6rd/cvIYlUze7/LgiysDM
lsML5qSxpGjGUPNeMQaUejX3hj1miVeba/XC8QwIvfPq5qFHfM48TRdn4Il4
QdaiVJb0lJ8/9VGSgTyjvF9aKSwpPeD5W30aA2vXrXW1SGSJv+t1kZK5DMgU
5F/uvceSCY+TpSeuZmC/p18D5yZL3Kp3dLai36twY6/cYElX/y82V5sB+SaD
Ejl01TodZ+e1DJQP5G5cHcyScMG72k8bGJDd3ZJ4MoglWnUj4c90GfAq8K/6
fYUl5qM8FesdDKw84O+215sllQt/jRJjBo4wi8O+e7Fky5awOrmdDBzlrlzo
h17q2+ZbsYuBN9/3mud4sqRP2q1rvQnu12JztNpllvgqxzyWtmDgS4EEf84l
ljw16F//6hgDc4I8tumeYUnKnEaZW8dxfZe/Ep1uLHnQ9rb3OJ+B7V90tYLR
keduJ8ifYOBuUXVWqytLfB6un3HakYGrzwyiA1xYYjbZvUPDjYGoaLm+b84s
ESudEhrmzYDqifAX409ivG8PODr4MPCM/zU2+wRLhqw+GTK+DJg49gzao3uG
H4sN+DGQMPKy9YM9S+rUd58wDmTAWf11eSafJckBYdslbzLwZ3/BLO9jLNmt
v+TXqXsMGAkOOJ+yZQnwrQ6SGAY+TAjbsBGteu1u0YRYBhYIaq3F0ByhbNTt
OAb0+eWNwTZ4v/2Setn3GbD8u4r/7F+WiBztCP2bwoDa/er5061Z0h2gLPb2
EQPTasfNarTC50k5xA9MZeBy+DL7JPTDH+83L0hjICBNlLcdbeJW3AnpDJhd
kMv3OMySR77JGy8/ZyB2Y0/81EMsuZPUnqD/goE1q0Y7my1ZcrlUSXrWSwa0
mibfykCbTo/4HJfDQMG82AUWaPHQK1fzXzPwOEJr5OlBjO99ftPEAgZWmBZL
OVmwZHtRIrcaXTGQ+soArdX1OT2skIF4m+AGFfQETQs/9WIGTnuW6X80Z0na
M6MVhmUM1GuESxugJfM1PYOEDOys9jGCAyxJXBtUa/eOgda0sK/z0PrJvUu3
1DAgZ8vjDJux5FpQWtmvWgZcyebYLLSM2UpZsw+4/qwXRevQmWU37FY1MOAk
Y2w4F22q0/9iykcGngrKjUb2syRCOcPydSMDojKLS1m0Uq92knIzA69Hk9J3
od8evv13FK3U9FN9HdqmZtCovgXX1zuySAGd+Dyrz7+NgYzrFwK7TVnyj9f6
Tb3tmH+BZZaB6KrBsGtFXxkwnzZQcxrtdHS4OaYDr/92vcQSncl76b2ni4Gh
tPy12uhN8qTy+TcGonNDFdr3seTTlahFN78z4B9dGfEOfYnDOcXvZeBn5ptw
Fi1oeyW38CcDq50cFaLR/5osPP4bPSXwctw1tETxpdzqPgYOFPYmX0RzUzdb
ef1i4NA1D91D6C7FmAyLAaxP14eqdqIDb4pKrh3EfIjmt21FV7kJHnYOMfCu
ejBYDe3UrcTJ+80A97iF5gL0rIOexpF/GFjGseXNQJts3TbA+8vAupFxc/+a
sOT3s3hGdYSBg/+15v9Ah6lOCBcdZaAnTmqwHb0hwqanAd0idS/5P3Tj1ALI
4FDQKS9tq0FfdF8SfHUcBc79zJgytGK/T5utCIXFxv6f36Kt3zN+8mIUrov7
/8lEixskNvSh670ky9LQ93MnLi8bT+GCQFr5IZpqHb2UIE7holu56H10V2xx
9cUJFP47bGsTgw6cra5sKkHh9nrxHVHo5X4BLiskKTx4UfkqDF0x3FUkNZGC
9L2fGbfRDvYG8z6jq+NvrAhBi60ZN5o6iUJ749ldN9AhnPRPZ6Tw+aCp4zp6
SaHtm22TKez/1vwrCJ0dNDd2+hQK76bEuIxZ37TCswHt+2bziTE3Kl62SZhK
YcKylo9jPtGpzThMo1DnFPd67H4iTztVN06nEJidKD+23o2zUVIS0hTSFGd2
3UQrb93ZU4WurhBZMfa8mZMnVETMoHCu/db3O2PxqMl+bDuTAlzpU4pEN0Ty
g1fMohDfvLYiGs23UXQeQW+Q8v0Rh+Zo1uwplKEQpCEakIgOGvRdc2M2BS27
wvBHY+/n9UY5C1mMV9uwUjr6qW/vn6VzKPiwOUrP0duM4z72oU1UNMNfo+vk
9uXmylG4v9LBvwBt1yIV7SdPQXRq/I9y9HDSK/fdcykM1XdV1qIVNi7Z1jmP
wpdy7aGx/Ekb36CSMZ/CgM55nbH82lJ2VfLSAoyPlpnIMNrWYqBEZiGFlQsO
90zD/Ey99HbnZiWM9/iNjoDeTN1WTV5M4c2O/zwM0ELpZbPr0O1rFKfsRw/G
3Hx/XIXCJJsp106j4a2VZagqBQVlBYOMsfMRKKtrpYb7X26zLB9ttbdEabk6
heZve/3q0D7tK9oFGhR2Kz9PG0aXTxS1/65J4TtdUkjxvB+szuA9/4eCXZ+Z
hwX6R5idlpcWhc6TW7Kc0DIaVf3yKymsPp16+y7a3Cj67HZtCvzA8KUj6J5g
4he5kULOREFqBdYjCXFtvvUmCv0jtbFdaEWXZcbqhAKZXDRdEuvfbrN5ctmA
+WGat0cX/ULpz4N3uhRiO92vvUT7pWcUSlHMN7ejjQVYb2NVUh5Wo79Gitp3
oXNC44LucCmctj3uNg3rde+5G/uWGGB+lGiJmKJNtjl81eVR+CXxre4HWrlW
Q/LMHgrunedz1mO/AGZxt85eCrc6qifaoE2fz62UMMF4yPZUX0dfiZoUGrKP
gsznnoZOdJ/N1yVpZhQynAJKY7D/vBmM1ft6iMK9AZ8tatjPzOXm+uy1p9Cy
eqZVKPbLZR+1dy0/QWFnMFyvR49G7VSYcJLCoqCOvXLYX+8u9s/McKCwpX9P
YgS6WfN3+6xTFHaNdNsnYT+22V7HCM9SSJH8fbfFDs+b041JO/wohKQ/fpyP
/R+0U2uX+FN4aV4zVx7ng+m/i2M4ARRsS5yUxuaFtAuiG1KvUHjqmiM5B+eL
fj+HY1ODKHzKbtJ0csB5LJpXWnqLQkCp/kw9nEc8yqSu0jisT60N22xw3tny
5UzHjHgKjWTj3Xy0GKdz60e0hvcyryVncV78p3DY/j6F4BNbBzvRfjc87W4m
UbAoL3dxPY/n0XRk66fHFELZRxMe4TwV9fnbsHMOBaUXVsTTB/Nt1NyE5OL/
GQlHBtAKsmVPJF5RKNvlo2Tny5J7TLJd2GsKjjNi9Xf4sSQ+2bbulYCCa3bF
EeUAnC8cmp5MKqawImNvX+dVljwfqbKLrqVQE9qq3nYL+73tvyln6iioFy2v
cLqN/bFyqHd3PQX9bjXF8aE4b8QquE78QCFTtqFK5Q5LXCjf27ERz+OBqKPO
4SxZHSIZu7WNwkR+SeQ/0RhPDfj49QeFw5NvqS9PwvnpVrWC4CcF46If/UL0
PY6NVWQfhVOfVBzPJOP+q690Gv/C87mY9S16iO/P9cPQ8yEKD4/oqJ/EeVoj
75RMIIcLrsmn7T6lY38we2ikNYULbReiu7a/RttfvikxlQujCxOlxr1hSYL7
/g+NaPbyaGM2Ov6+pI3/dC6YpKuHaQrwfPRZn2+dyYWOpnfOSvmYXwHzH4bI
c+H+oYAajVKW3H5xdeKfJVwwrarcU1CP9WCuQx6ry4WTetb1Sv24f8/wO/5b
uDBk+5/KMNq25639zq1csOkqlBX+wnnqlbxcyzYufJZIbPIcxP5mlccXoVx4
Ip08eex7wzNJVlaHxwXlDYdz20QExH1drl2OGReK3Yan6E0XkLMmUtOynLnw
mJb7di0XkMVvsg+3J3EhbXPR9lo3AWlK2BRwppELuv7qpT+KBMT4ec1LvVn6
oKBl0u6unkcyNPddlOHqgzujea0uJI9oKD6erXdOH+JC+veoir4l+3TmZT55
og9J/s2ta9zfktsN5hoen/VBZyS5JXhcPimu91uxU9YACucTrV1e+eSJWPHm
A4YGcMDho37j/AKSkvRJufiiAVAVkOp6WkDML06c6fjMAHIl1stEWhQSkWfz
r8t3GwBP0Kw9fmoRyToi0aaywBDkkioHDLOKyGIqrsPfbQivnPte97oUk9j4
+pOyPobgMT2gQ1qrhMy2vrWCzTKEgDjx4gXdJYTsODKS8M0QckxfaInmlBK3
rGmR3xcagdLdoxfUvMqInVHJNkcTI2gIlyv2sSonxy0PCPb5G4Hq/mvLVeZW
kMPv6qrgpRFE+O3ZpuJZQaactu2w/GkE86zuDnoOVBCbon+P/pTmgVxY5tKv
lpVk4YlFn42X8UB0yGn91+pK8m7b7gdaDA+izo++jdSpIsEfevdsOcSDP4qd
oB5XRdS8ZSUdz/HAmp3Z8s/kalL6/UFcdQgP2iObhsqPVBNb/1S/p494cP5o
5YZ7udWkcYOOU1oRD+rpm8U7ZYTEPHmDXnMLD2Iyh4OtDwrJ3U8zc41becDP
91a/aykkzTO7V7Fo9sMirfeHhMTmXMSi2DYeaMzw8NC3FpIThiMj1l948POR
r7aqnZC4f89N/9rBg8Y1sxMLHYUkYaXuot5eHvRu0WwN8RKSDlv5O5Y/8H7z
JkXkeAuJesTPaVVoze6Q7DYfIUkdHzuS9pMHU/npilr+QpJdI/beqR+v78iK
Yq8KSYnL22uDgzy4agPShbeFZMrDyAlHhnhw2OHNr8+hQsJrOnW+Hm15LG+9
WJiQvGNUjmX/5sGo2ubPGyKEpFHOZ/vZYR6klLxJj48WEgWjgzld6DzdwZDc
e0JyyGPNqgN/eUDjQ2pqY4TkS2e74qYRHhSoiZwQjxcSVYXXoSnoSgOmcG6C
kBzbFTptwSgPju7rvqB1X0hSfE56X0XPN0wK3v5ASL6/YEZG0afUQMwsUUj+
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$7313#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$7313#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505221481387, 0.26500246259747495`}, {
                    52.93863395164593, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.895052214813874`"}], ",", 
                    RowBox[{"-", "5.061366048354068`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 8->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$7477#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$7477#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505221481399, 0.26500246259747495`}, {
                    52.93863395210556, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.895052214813988`"}], ",", 
                    RowBox[{"-", "5.06136604789444`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 9->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$7641#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$7641#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505221481399, 0.26500246259747495`}, {
                    52.93863395212335, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.895052214813988`"}], ",", 
                    RowBox[{"-", "5.061366047876655`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 10->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
Bzl252Q=
                    "]]}, Annotation[#, "Charting`Private`Tag$7805#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$7805#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.18177926588239796`}, {
                    58, 0.348225659312552}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.26500246259747495`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{63.89505221481399, 0.26500246259747495`}, {
                    52.938633952124036`, 0.26500246259747495`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1511403844974846}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1511403844974846}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1511403844974846, 
                    0.372218846664024}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0104\"", ShowStringCharacters -> False], 
                    0.010418120145447345`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0132\"", ShowStringCharacters -> False], 
                    0.013244671204794523`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.895052214813988`"}], ",", 
                    RowBox[{"-", "5.061366047875967`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "4"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 11->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$7969#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$7969#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.74836432554297, 0.2571919567683739}, {
                    53.195247196355524`, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.748364325542973`"}], ",", 
                    RowBox[{"-", "4.804752803644479`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 12->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$8133#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8133#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.53244852070433, 0.2571919567683739}, {
                    52.235571490805576`, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.532448520704326`"}], ",", 
                    RowBox[{"-", "5.764428509194422`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 13->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$8297#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8297#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.52935407625497, 0.2571919567683739}, {
                    52.173385005152596`, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.5293540762549656`"}], ",", 
                    RowBox[{"-", "5.826614994847401`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 14->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwd13k4VN8bAHBfytaGJCVZIktRlqJF5xXVuGcwlChbyh5ZKklpIbKHLG1o
IWTLEqHQnUlZSxkpkijahShCvzO/P+aZ5/PHPffe97zve96rsN/H0oWfj49v
mvx4/wrhXgJ8fAxIaFz0Re4zBwk6VfE3EC82V9x1+hMHfdskzJ/4HwOEgr8G
9Qxy0P3hW3xKAgzISZyevjrAQSz7rukdggw48lKJu/ADB53Spf5cmMuAA3I3
MsZ7OKirT+W73BIG9Jy1cz3fzkHJqL8DaTNg9slN7KYaDqpZeai00p0B6XV3
DM5Ec9BkZKtz6lUGiFgJ01LWHKRuviT7aAsDyh8OhMbJc9CCrYEjsQIm4Hmp
LU+6n42EivMlRNebwGpldll5DhuVmY5tqvMyAZSgJXvNg42smKrjATeJmQ+6
l2uwkciTtWEJ7SZgY9Xhq/qbRv4+prIDohRAkb1Lch2NflxEUekGFCwJ2rjk
VCKNhAX1DrlsoaDSVUivPYFGioGalqsRBfGfDxeqE1vZyS6tAgp6C/XyOi/Q
6IHS31yuEQXhWcUf9WNpFHWvvGEuRYFT7aq7ohE0WvlKQ+TEbgoGuk+pjwfT
yGHpsghrHwq+n3ih+d9BGmm+1du1xpeCHze1DZ09afQvY6e8kB8FV1XdO594
0Oi6cvT9cn8KrFO1UuPdadS3dvLTogAKCsYsDqi60shtR6dJ+0kKSlju6X5O
NPI9kjTHIooCT+tPH7xtaAR6d1+pRlMg0Jd+vM+aRuKTTbf4Yij4O1v2pjVx
yWmBzXdjKXBzMrtrtJtGY1H+XgsSKAjbc7lVcReNgm6wWlpSKaj57HNi2pxG
oa1zL1BZFOx1WtalwqCR8eCJLwtvU6BvX/GyYgeNZvF93faW+MDtP3sYxOFa
DVM+ORS05I+IHdxO4pMU5pmcRwHL0VmnwphGCXtntvUWU1A62yDD05BGGQND
U0drKNAquF8Fm2i075+DDaol62+0UOrfSCN56dZS4ToKxALKVMKJb5rke159
RJ4/3HG6ZQONbue7d9ZxKJj7bvCHsz6NCvzfl85poqB1aR26u45G1TMvPG+8
oiBY/BzUrqWRtrtr4YlOCuhL8YE+xHfaJoatXlPwqzj9sDzxlUz546JdFFgG
FpadW0OjQOrQ+cM9FLx2U/LdrUmj9Skimds+UtDtcUdfbjWNCv9dG5QboMBC
uvVN1yqy/x5rV00SG7cV7rhMvGizdUnhJwoaISVUivjX+8y6xd8ooNTCEpaq
k/3QgLefRyjor1jhb6JKI/XUl/KcUQoOSklNShDf5HNzTv9FwczvM7veqpD4
vYz9ajlOgbdiUcgRYt/jXRPVExR4qIy15a+k0ae+QwYpkxSYF+v8PUnsyOQ/
6/uX5GvQ00lTYjM5NWHlaQoW5vafGlGmkcbjAKk4PgzXI91zthFnaorudf8P
g7TC+4RlxMsupaVt5cewuizW6pcSjeYe5Cj9FsCwPc/P+zbxFzEJnX1CGAx/
fvsmSbw/KCtgozCGyGOx90ZW0OhNv36VpAiG4nJk10bcUO5o2CCKoWnj020J
xDl2Beba8zFIeg+nyPDscy5ZeAGGhxfFu/iIs0Nsu3qINecO/RlQJPudI+IW
LU6sVs6+x3N1b76TBAbZz5F+6cRZrRUjegsxJGgNTZ4nzvzlcuqDJIaGxK03
7XkWMuBULcLwtX7pIxPiW0slRROkMLCqbB6uJ74JdLKBNIYri96YL+R55+Wu
hUswvLskNMhPfMPVV+ELsaKEj/2oAqnXmOUFKTIYbGXrPnfwnDE24rUMw93G
i3yNxBklzfpGshhqM4/+eUic/vjWqSXLMayrfNNWwnNnEGeImL1IPzaH568W
ovVyGKSe8q/KIE6bUWVdkyf3f1uUl0J8TZwvxV8BQ6Nz2YILPCu96mIoYjjv
GWYdwbNeoYLcCgxPp1JDQ4ivUmFuY8Qb1JySgomv2NsVNClhiJi2ijrOs6/O
6A1lDM7nv7oE8BwquiFwJYbT7SkqR4gvp7w/ZaaC4dxI8zN/4ku59zlKqhiU
h/gd/+8HF0T/Es/vLOD+389cWW1qGIaqturyrk/tM0jJVscQlLX+BG/9lDHJ
7uBVGGyyZu7w7p8i/E1h12oMBk8XcHjPlyLDdlPXwMCVeVfPe/5kzSsFfJoY
nhe8L+W9X5Kh32gHcXd0TDTv/ZN2MTYUrMGQw95llsqzm9zp0LUYPu4vmuLF
72LQOGePFln/mHhqLnFibIvoWm0MLvN/ypbxfD2TJaiDQWh9XUItz6UnUrqJ
O/6OjzQRJ9RbdpfoYgj2Ftn6mjj+G5+743qSr9HJeeM8/3tVsE4Pg5PlRL0g
yY8LEkWjc/QxGE/NfbGYOE7f/vT9DSR+mtKVm3nGuo/jNmJALyaSWcSxDnPm
uGzCQF1wdHYhjjlXmSJugEEsJvpVAs+p8d2DxMqDm4JziaPvuCnWbMHASDSW
oomjni8q9AQM3gt0lMaJI5b5P2YbYbBSsnzgQeonMOzalWhjDMz0xo/hxO4/
6n12bsPACRQfyCTeUSeztH87hi1Lwr36iQWdHx/ip8h6cd5XPUk9jzcPGTUS
xyRWh8URD6xbuiQRY9CNfmZSSlwv5MNWMMWgpPR43z/isDxpaUMWhhtBJu03
SP84Imn0XdgCw8pctdRmYudgb/o5scG+J+v/EBub0177dpJ60q6YZ0n606zR
g49O78bw+UujkhjpbyEbaz1r7Eh/ed9BlZN+6H/rMwq3x2C5TVxwiHj/XMlF
Zg4YBPf+uaWqRiPDHvfat44YLBwZkenEfCESktP7MWQ5Ws5KJv32dIPLw00e
GBa4Ky4oIP37kHZ8ooAnhjshuQq/iB2uVrk1EY8fbV62WYNGW7wXSNh6kevv
OrW2Es+IVboG+WA4MbVK7R85D07azBWrPIrhw/JdYjFaZH6QsG1JCMBQni60
8jNxQ1NulOcxDPnPnHbt0KaRFNoxe9lxDMtf/ZgS1KFRsXLI5KmTJH+D8qIu
6pL4jvz+YBxK+pNwEX+fHtn//O03Zc+R+q5M6WKR803HNdlxnDjtQEV7HfGZ
19pvssNJP14foZZJzkOZOu9nolEYtNuzPQPJecqK7a98Ho9hZqCnzBqR/dyu
fSw3gbyPqVxjJ3Ea31ndkEQMS8bVhWyB9PPDy4t0kjCcSY+Y3E/O57C9ezJT
UjG047SXZ4xoVKXyLM4unfSTeasrf5HzXpmuOvApD0PFs54bdRZkPmqzu1uS
j6F6fYmfnSWNLN/PTJ0sIP1a1Yk1QXyGzyhFvAjDvuKuTevJvNG9penpxhIM
MnEiHQ/IPJJU3aURex/D34nj3tO2NBK4N/Vb6zGp5/4Nb8zcSH/ipBtPEY/O
7DGeR+ajte2QUF+P4WJ3VkMzscPoOXXbp6R/D1Aq5mS+qtKaZ3+uCUOra/wG
J2+SP4WydEcb6U/XN4pVH6bR++wtMSd6MMQbX9JjnCXzmfDsR7vfkfpIiaQN
Qsj+ujeNafViUA85kqMbSiNpNRvHT+8xOPivPr8yjMT3jp+21UcSj9ev05ZG
0qgmP7NT8xuGS09ephmT+fFKsahy3wQGe/sYq1s3yfks3rbn4STJ58gQ7ce3
yDzhnxp36S/J34fLgj5l0qhNW+mP2TSGWVHaWCebzKdlBk3VfEwof3OJ/00e
jQLKff2ShZiQbz+h43WPxLe64yFjERNs5S3nZzfQSPVx7y85KSZwX/uJDTfS
aLr1y6rfxPwWeqc3N5PztW/mcpY0E+z6YzNftZJ8FlEJ4F/GhO+h+2Xk2mmU
Z3NM84EiE+ZI+imM9pB6HF+csWYtE2y8HFpKxmhUvnbPGSnMBJHqMZlcFTY6
GV++/R1xyIC86Do1Ntr6c+G8HCYTetA2I1qdjVqLWi9vMGPC9VmcpF4yn3/U
NC61s2CCasKtnNW6bCSpsWbgpjUTvsTo6/IbspG/2mzmGmcmTLFV32bYspGG
YvFiRjATBF6lRsYmsdEeQ9n7paVM2C7lqyVMvhcudTtohA4w4YOGlO2ZMg5q
eh2ls1PaFMR+7BZyt3qMSmc1bbU3MwWObmK69sJ6VJjXu7LpjCkUN3Iynjyv
Rw5nRCUPV5hCy0+9tIbcJ4i/YnmizHdTGD4m8c474imq9BD+qCJnBnFa/ZbP
HBqQMiVoeMjKDJziLnKuMxtR5u3XftIRZtDrKz/updmEFruk6rArzaB7+u2v
yfnNCFl4zGQPmYGmS9D5gdktKKhSLP2ngjkoJ688JjjUgjzNm7cftjGH6h2R
ew/8aEXeTvacPdHm0CLSEP6v5xk6wO18AQ/NwaVyKN7M9Tmaf8z9i9OoOThM
zJKeGHyO3BpdD45KsOBvjm9EklMbUvBdMWCpyYJKAepsx8c2xN1ulattwgJN
qvbjJvcX6GLX8G7j/SzoexHGvNb3Aq06Ly1yOJgFzYXU3gPuL1HLz9yslyks
uDfHmY4beInco+9GlRWxYODinKrCA+2oZ7PhkZJGFvTfLvpt/r0dOeRvZvT1
s0DV00arzoeLrvdK1lp+YMHVrZTnHH8u6pP8vo5NnJc42Lr7CBe5BaetyPxI
1mcel/kRyEW+ZjMzLoNk/XkUZ3kIF4X8rL33+QsLBIZV3CKSuChb12jF8DAL
aq/ODw+u5KIv7jJXnEZYwKccYN9azUWr00bFXhD71mgekKvhoruzM2dKRsn1
3MGJRzQXVXXMenNkjAWRAY27RZq5qDmwPv7PHxYIVnT2Xu/hovkF6UIeEyx4
hbZk/+rlItb7gFOviVWzdqQx+rmIa6LiVTXJAo/7V6SHB7moZ2nEjpNTLOAO
JJoZD3ORvPm+mm/EGze4J10e5aL9ofrr7KdZYNIaJTo0xkWDXz8pbplhwbHD
cyOuTHKRuvyjy4XECm+TL/yc4iKvXZfF5P6x4OzmR0+2/+Oiwgi/8xeInWpu
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$8461#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8461#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.529308915899, 0.2571919567683739}, {
                    52.16043512363321, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.529308915899001`"}], ",", 
                    RowBox[{"-", "5.839564876366785`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 15->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$8625#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8625#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.52930825673755, 0.2571919567683739}, {
                    52.15778127600652, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.5293082567375516`"}], ",", 
                    RowBox[{"-", "5.842218723993483`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 16->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwd13k4VN8bAHBfytaGJCVZIktRlqJF5xXVuGcwlChbyh5ZKklpIbKHLG1o
IWTLEqHQnUlZSxkpkijahShCvzO/P+aZ5/PHPffe97zve96rsN/H0oWfj49v
mvx4/wrhXgJ8fAxIaFz0Re4zBwk6VfE3EC82V9x1+hMHfdskzJ/4HwOEgr8G
9Qxy0P3hW3xKAgzISZyevjrAQSz7rukdggw48lKJu/ADB53Spf5cmMuAA3I3
MsZ7OKirT+W73BIG9Jy1cz3fzkHJqL8DaTNg9slN7KYaDqpZeai00p0B6XV3
DM5Ec9BkZKtz6lUGiFgJ01LWHKRuviT7aAsDyh8OhMbJc9CCrYEjsQIm4Hmp
LU+6n42EivMlRNebwGpldll5DhuVmY5tqvMyAZSgJXvNg42smKrjATeJmQ+6
l2uwkciTtWEJ7SZgY9Xhq/qbRv4+prIDohRAkb1Lch2NflxEUekGFCwJ2rjk
VCKNhAX1DrlsoaDSVUivPYFGioGalqsRBfGfDxeqE1vZyS6tAgp6C/XyOi/Q
6IHS31yuEQXhWcUf9WNpFHWvvGEuRYFT7aq7ohE0WvlKQ+TEbgoGuk+pjwfT
yGHpsghrHwq+n3ih+d9BGmm+1du1xpeCHze1DZ09afQvY6e8kB8FV1XdO594
0Oi6cvT9cn8KrFO1UuPdadS3dvLTogAKCsYsDqi60shtR6dJ+0kKSlju6X5O
NPI9kjTHIooCT+tPH7xtaAR6d1+pRlMg0Jd+vM+aRuKTTbf4Yij4O1v2pjVx
yWmBzXdjKXBzMrtrtJtGY1H+XgsSKAjbc7lVcReNgm6wWlpSKaj57HNi2pxG
oa1zL1BZFOx1WtalwqCR8eCJLwtvU6BvX/GyYgeNZvF93faW+MDtP3sYxOFa
DVM+ORS05I+IHdxO4pMU5pmcRwHL0VmnwphGCXtntvUWU1A62yDD05BGGQND
U0drKNAquF8Fm2i075+DDaol62+0UOrfSCN56dZS4ToKxALKVMKJb5rke159
RJ4/3HG6ZQONbue7d9ZxKJj7bvCHsz6NCvzfl85poqB1aR26u45G1TMvPG+8
oiBY/BzUrqWRtrtr4YlOCuhL8YE+xHfaJoatXlPwqzj9sDzxlUz546JdFFgG
FpadW0OjQOrQ+cM9FLx2U/LdrUmj9Skimds+UtDtcUdfbjWNCv9dG5QboMBC
uvVN1yqy/x5rV00SG7cV7rhMvGizdUnhJwoaISVUivjX+8y6xd8ooNTCEpaq
k/3QgLefRyjor1jhb6JKI/XUl/KcUQoOSklNShDf5HNzTv9FwczvM7veqpD4
vYz9ajlOgbdiUcgRYt/jXRPVExR4qIy15a+k0ae+QwYpkxSYF+v8PUnsyOQ/
6/uX5GvQ00lTYjM5NWHlaQoW5vafGlGmkcbjAKk4PgzXI91zthFnaorudf8P
g7TC+4RlxMsupaVt5cewuizW6pcSjeYe5Cj9FsCwPc/P+zbxFzEJnX1CGAx/
fvsmSbw/KCtgozCGyGOx90ZW0OhNv36VpAiG4nJk10bcUO5o2CCKoWnj020J
xDl2Beba8zFIeg+nyPDscy5ZeAGGhxfFu/iIs0Nsu3qINecO/RlQJPudI+IW
LU6sVs6+x3N1b76TBAbZz5F+6cRZrRUjegsxJGgNTZ4nzvzlcuqDJIaGxK03
7XkWMuBULcLwtX7pIxPiW0slRROkMLCqbB6uJ74JdLKBNIYri96YL+R55+Wu
hUswvLskNMhPfMPVV+ELsaKEj/2oAqnXmOUFKTIYbGXrPnfwnDE24rUMw93G
i3yNxBklzfpGshhqM4/+eUic/vjWqSXLMayrfNNWwnNnEGeImL1IPzaH568W
ovVyGKSe8q/KIE6bUWVdkyf3f1uUl0J8TZwvxV8BQ6Nz2YILPCu96mIoYjjv
GWYdwbNeoYLcCgxPp1JDQ4ivUmFuY8Qb1JySgomv2NsVNClhiJi2ijrOs6/O
6A1lDM7nv7oE8BwquiFwJYbT7SkqR4gvp7w/ZaaC4dxI8zN/4ku59zlKqhiU
h/gd/+8HF0T/Es/vLOD+389cWW1qGIaqturyrk/tM0jJVscQlLX+BG/9lDHJ
7uBVGGyyZu7w7p8i/E1h12oMBk8XcHjPlyLDdlPXwMCVeVfPe/5kzSsFfJoY
nhe8L+W9X5Kh32gHcXd0TDTv/ZN2MTYUrMGQw95llsqzm9zp0LUYPu4vmuLF
72LQOGePFln/mHhqLnFibIvoWm0MLvN/ypbxfD2TJaiDQWh9XUItz6UnUrqJ
O/6OjzQRJ9RbdpfoYgj2Ftn6mjj+G5+743qSr9HJeeM8/3tVsE4Pg5PlRL0g
yY8LEkWjc/QxGE/NfbGYOE7f/vT9DSR+mtKVm3nGuo/jNmJALyaSWcSxDnPm
uGzCQF1wdHYhjjlXmSJugEEsJvpVAs+p8d2DxMqDm4JziaPvuCnWbMHASDSW
oomjni8q9AQM3gt0lMaJI5b5P2YbYbBSsnzgQeonMOzalWhjDMz0xo/hxO4/
6n12bsPACRQfyCTeUSeztH87hi1Lwr36iQWdHx/ip8h6cd5XPUk9jzcPGTUS
xyRWh8URD6xbuiQRY9CNfmZSSlwv5MNWMMWgpPR43z/isDxpaUMWhhtBJu03
SP84Imn0XdgCw8pctdRmYudgb/o5scG+J+v/EBub0177dpJ60q6YZ0n606zR
g49O78bw+UujkhjpbyEbaz1r7Eh/ed9BlZN+6H/rMwq3x2C5TVxwiHj/XMlF
Zg4YBPf+uaWqRiPDHvfat44YLBwZkenEfCESktP7MWQ5Ws5KJv32dIPLw00e
GBa4Ky4oIP37kHZ8ooAnhjshuQq/iB2uVrk1EY8fbV62WYNGW7wXSNh6kevv
OrW2Es+IVboG+WA4MbVK7R85D07azBWrPIrhw/JdYjFaZH6QsG1JCMBQni60
8jNxQ1NulOcxDPnPnHbt0KaRFNoxe9lxDMtf/ZgS1KFRsXLI5KmTJH+D8qIu
6pL4jvz+YBxK+pNwEX+fHtn//O03Zc+R+q5M6WKR803HNdlxnDjtQEV7HfGZ
19pvssNJP14foZZJzkOZOu9nolEYtNuzPQPJecqK7a98Ho9hZqCnzBqR/dyu
fSw3gbyPqVxjJ3Ea31ndkEQMS8bVhWyB9PPDy4t0kjCcSY+Y3E/O57C9ezJT
UjG047SXZ4xoVKXyLM4unfSTeasrf5HzXpmuOvApD0PFs54bdRZkPmqzu1uS
j6F6fYmfnSWNLN/PTJ0sIP1a1Yk1QXyGzyhFvAjDvuKuTevJvNG9penpxhIM
MnEiHQ/IPJJU3aURex/D34nj3tO2NBK4N/Vb6zGp5/4Nb8zcSH/ipBtPEY/O
7DGeR+ajte2QUF+P4WJ3VkMzscPoOXXbp6R/D1Aq5mS+qtKaZ3+uCUOra/wG
J2+SP4WydEcb6U/XN4pVH6bR++wtMSd6MMQbX9JjnCXzmfDsR7vfkfpIiaQN
Qsj+ujeNafViUA85kqMbSiNpNRvHT+8xOPivPr8yjMT3jp+21UcSj9ev05ZG
0qgmP7NT8xuGS09ephmT+fFKsahy3wQGe/sYq1s3yfks3rbn4STJ58gQ7ce3
yDzhnxp36S/J34fLgj5l0qhNW+mP2TSGWVHaWCebzKdlBk3VfEwof3OJ/00e
jQLKff2ShZiQbz+h43WPxLe64yFjERNs5S3nZzfQSPVx7y85KSZwX/uJDTfS
aLr1y6rfxPwWeqc3N5PztW/mcpY0E+z6YzNftZJ8FlEJ4F/GhO+h+2Xk2mmU
Z3NM84EiE+ZI+imM9pB6HF+csWYtE2y8HFpKxmhUvnbPGSnMBJHqMZlcFTY6
GV++/R1xyIC86Do1Ntr6c+G8HCYTetA2I1qdjVqLWi9vMGPC9VmcpF4yn3/U
NC61s2CCasKtnNW6bCSpsWbgpjUTvsTo6/IbspG/2mzmGmcmTLFV32bYspGG
YvFiRjATBF6lRsYmsdEeQ9n7paVM2C7lqyVMvhcudTtohA4w4YOGlO2ZMg5q
eh2ls1PaFMR+7BZyt3qMSmc1bbU3MwWObmK69sJ6VJjXu7LpjCkUN3Iynjyv
Rw5nRCUPV5hCy0+9tIbcJ4i/YnmizHdTGD4m8c474imq9BD+qCJnBnFa/ZbP
HBqQMiVoeMjKDJziLnKuMxtR5u3XftIRZtDrKz/updmEFruk6rArzaB7+u2v
yfnNCFl4zGQPmYGmS9D5gdktKKhSLP2ngjkoJ688JjjUgjzNm7cftjGH6h2R
ew/8aEXeTvacPdHm0CLSEP6v5xk6wO18AQ/NwaVyKN7M9Tmaf8z9i9OoOThM
zJKeGHyO3BpdD45KsOBvjm9EklMbUvBdMWCpyYJKAepsx8c2xN1ulattwgJN
qvbjJvcX6GLX8G7j/SzoexHGvNb3Aq06Ly1yOJgFzYXU3gPuL1HLz9yslyks
uDfHmY4beInco+9GlRWxYODinKrCA+2oZ7PhkZJGFvTfLvpt/r0dOeRvZvT1
s0DV00arzoeLrvdK1lp+YMHVrZTnHH8u6pP8vo5NnJc42Lr7CBe5BaetyPxI
1mcel/kRyEW+ZjMzLoNk/XkUZ3kIF4X8rL33+QsLBIZV3CKSuChb12jF8DAL
aq/ODw+u5KIv7jJXnEZYwKccYN9azUWr00bFXhD71mgekKvhoruzM2dKRsn1
3MGJRzQXVXXMenNkjAWRAY27RZq5qDmwPv7PHxYIVnT2Xu/hovkF6UIeEyx4
hbZk/+rlItb7gFOviVWzdqQx+rmIa6LiVTXJAo/7V6SHB7moZ2nEjpNTLOAO
JJoZD3ORvPm+mm/EGze4J10e5aL9ofrr7KdZYNIaJTo0xkWDXz8pbplhwbHD
cyOuTHKRuvyjy4XECm+TL/yc4iKvXZfF5P6x4OzmR0+2/+Oiwgi/8xeInWpu
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$8789#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8789#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.529308247116404`, 0.2571919567683739}, {
                    52.1572393312446, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.529308247116402`"}], ",", 
                    RowBox[{"-", "5.842760668755405`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 17->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$8953#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$8953#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.52930824697597, 0.2571919567683739}, {
                    52.15712874102002, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.529308246975969`"}], ",", 
                    RowBox[{"-", "5.842871258979981`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 18->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$9117#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9117#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.52930824697391, 0.2571919567683739}, {
                    52.15710617715424, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.529308246973915`"}], ",", 
                    RowBox[{"-", "5.842893822845757`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 19->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$9281#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9281#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.52930824697389, 0.2571919567683739}, {
                    52.15710157356024, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.529308246973892`"}], ",", 
                    RowBox[{"-", "5.842898426439758`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 20->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
rU37rwP9fGAy8484/IJl46hAB/ofC/lSGQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$9445#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9445#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1642162864535088}, {
                    58, 0.35016762708323906`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2571919567683739}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{63.52930824697389, 0.2571919567683739}, {
                    52.157100634317565`, 0.2571919567683739}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.1416457141802933}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.1416457141802933}, DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.1416457141802933, 
                    0.43152173919438397`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0126\"", ShowStringCharacters -> False], 
                    0.01263657747586943, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0243\"", ShowStringCharacters -> False], 
                    0.024296595778059163`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.529308246973892`"}], ",", 
                    RowBox[{"-", "5.842899365682435`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "3"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 21->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV2Xk41F0UB3BJspSyZEnKlqTI0kLhnmSZGTOM9ldUpEKyZSlUKiSkRUTI
kqXFGqIsaQapkBlkSZLKniiUsrynv+rzzPSb+7v33O8990nB3m3nUV4eHp7O
+Tw8//5UCHHBv1HggJCDnvzyGsJv94z3FbpXeN/ACqkaMrxNgPfmPAoMmTVp
SErUkJKxezzK8ynQN7/i7uziGsK0fT9jxk+B/jvPlt6fV0PObaT9vraIAquf
g+bR/mryvmfNt1UyFGDn8U28LKgm0eTzO6JNAXrpFav1xtWkQsW14KkjBaa+
DxULUaqI+X0dtWAn/PzIdM9J4yrStnYqmelMgbDyF8e5UEV+rA+K7DtBgXj3
FWlJelVEReeO0zI3CiS0DH43X1dFrpKaVR7eFCh+XiA2LlJFbPavjFC9SIF3
ulv8q1rZZKD9M+84OohStfJoM5v4HHhw5vklCpy7ep0qwGGT6wc3Ht8bTIFV
82Kt975mkyoHmlFQKAWyorZ5ipWzyToPn98fIykQG5b4ROwem/y50uBwO54C
2l8Wh3l7sMmSotYPBxMo8Frqg3moK5sod3fvVUmkwK5Sl8S7J9iEsfknpegu
zneLlfi7o2yS3COl3pRCAdYg18jDmk1Mt9lNiNynQJ5ZtvdhYzY5cMzZ9R1a
oFXINm87m7jfONWX+IACD3u22vMRNonrC25f/4gCn8diBkr02GQ46mE5LYcC
T4K7vuzewCY3h38GhxRS4OaG+zsPy7JJptTMLKOIAou6C2FSmk3KjPhPL3tC
AWWZjI7rkmzyNVbaOa0Y5//+s03Nomyia2JgwXpGgXmN5hduCbBJV2KI5Gwl
BQxsNTTm/2IRNUuZTO96Cuhl9tdltrLI5GtTAYsGCgCR+17YwiIvTL2cVN5S
QOrRx5yXTSyy3/DtutZGfF7V7uGZtywSoh6cp9tMgetHvt/LqmWRz8JjT/92
UGAgyU59cSmL5FxeKdv8ngKJ9yr4PZ6yiN98ekBWJwWcb1aJdRSziNjfDEPb
Lgps+CV6v7SQRWDQhl3xiQJqpqmLynJYJKG2tu5CPwV0QeLro3ss4mg8qW49
QIGLyuYvD6WyiE6l0jXtQQpsFTb1kE5hkdfF56w+D1HgeXrDvNi7LDKVsfGd
8XcKjPgut34bxyJVivZb5EYpYN92+Pn9WBa5fvda7AR6oOb3k5DbLKIaM2id
8YMCPBIORsxoFtkbnPxx4SQFNrZKLZG5wSKK8xqgG71ItMNc8jqLfAv4m1Ly
C9/Pwf+r1DUWCfLa6+A0RYGalakSqldZ5PGRRQOvp/H3zdwy/a+wyBKj0z+u
zqfCn4JLNQMXcbziUz37+Khga5pntxkd8vVMk8ICKpxNHHYJucAis6H+hUX8
VKjOfF+uGcgiI2/P+XwQpMK6q0H52WdZ5GHK3LFMISqsz5DftAx97FTgPg9h
KoQlWc+cD2CRLsmLugsWU0Fj+3eTQ/4sUm8b/Gf9UirUJEesMj7DIqEb+Icm
0fZygprVp1nEeN7l95WiOL7o/P+o6LK00LLd4lQYDa3vsfZlkayh8HMBklTI
eKe4MdUb16N8kZupFBXeRY16b0MrX7t6aKk0FdIdT6e3euH6aV+DNBkq9Byb
KZZGh5+5yVu3Aj+XbBAr92QRU3Pxn9FyVHAas1U7ieaVu/X50EoqHJvbxCeP
9quMrvq5igq9rAUDVz1YZPNNyaJyeSow5+QHKOgfR26nX1agQlXAm2h+tPPC
uBBZJSokU5Z9vOLOIirtMr5f0WNybe6W6J6Hd47nKlNBxsgjTgptbZFA2aFC
hcagk3G5biwiKS+nt3gNFYzVxo+eR3PHEte2oo+sjy2wQlOjk4ROrKWCx+7z
ZTOuLMJ3XP7vRjUqUOb1urSiK3VThmbR8dL5oQXoACHFztp1VHhv6yl0E63b
mVp3cz0VAm+VDnuix7OVym3UqfD7/Eq1vei882nZKhpUKPu8vnwb2sVq9d1R
NLl0OlkJraqUEflsAxV+KkQ1LEZ/GVc5H6RJBYtLIkZ/TrJIck2mm4UWFdjO
ARP9aJtY1cPS2rje8a6f29HSzg+YPeg37T789ejmbWrbs3SoYNKv8h8LfX3x
Iy2fjVTIClv67ima/nGdImyiwsmgat8C9ML8LDGhzVSYF9eqm4v2a7Ia+oJu
CpWbzUIPT0yyn2/B+RXavjEbfUg6IeGOLhU2pu9v/vd97tbt3t56VLjS49da
iDa27WUwt1LhNK1icxm6+Hy4yrptVDh+VG+oGq2Wqjm3QJ8KxaW8Ixx0QlVL
azf6dYumbjd6SZ9fXqkBFfj0O1ij6IuC8ldiDHG/+Cy7PP/f/K6rtvMgVPAS
mTorjT5u4byVDlRwC49P3oDucF8ivmY7FWR9xPspaHpU4dA8Iyp07vVlOKC1
22YTindQQXGF7d4UdPqfe943jangKrpomIWWlqNanDShwr6V84J60TN2UXOK
ZlS4liyVpIP14h6k2zaDvqdyTMIW3ZPxIa+NQoUPX3e7h6Jrh9bYR9Jw/2ud
rPyC3iZSv9XJnAoODeyMZVifOZqe4sZ0KsjVSOynoKO8y6qmGFTQ7Zube4w+
OMdcc9SKCnUdHvcSsP45CpNzZCcVtuqKyb9HGxvHty3fhe+rY6cpi/tp7ZWv
Vxp3U6FS+ehoEnpczG942370B//1padY5IrKvXyxQ1S4ORcfqu3DItMUStg3
9Js1T3gvo11PfLOvPYz1eqovpRO9O2+LxDl7XJ+4AZ1wzIeVW+t8Bo5SIXLB
5y/jmB+FjIltlS5UECqycx3H/MmR6ZK8fZIKG3yF1PZiPj34WjN20pUKu72e
Rpeg756NzZR1p8J+P54j5zHPQrO3ifueooKj5pKVEuexnhdfHFT3o4KBnLjt
bsxLvnqRuPjLVJiuaNrEi/k6G/vrlGcozk+TlOlJ9JRDtwX1ChVMf0tsakOP
TOfz/QqjQsjbpdHZYSzStn6P+85IKjxTH0rfE4H5FhFvJhhNhcQLIjujMc/3
0FUnfVKp4EvXEE7H8wBcHQ6Te1RI2XLaYAqtdj359cI0KojUiiXSY1iEp1k6
KTadCgu+zjSMorMOCFKe3afCgaMCThp43tw+a/L44gMqPG7U8fBHX0y6sML8
Iebj1JaAl+h9n6dG3z+iguTNyGAbPK94TwzGzeRQoWUDp/HMHTxvIlT4anKp
8OvjygMV6LYce9fIPCoEH6svnxfPItk/OoxWPaaC9nzRX0Ho/X5vhqCICg2N
kWkBCSyyI2HhXsEnOL9hxLYYrVGxo5KD/qLdzh5F8/GW3bIvwTywDQ8+lMgi
uVeyDIJKqaBz0sx0PZ6ndx71Z9LLME/G49sPoIPqlcWWlVNh8JLd6BW0tWhi
b3oFFfSq50d9QpvotDNdn+N+P2skIZzEIpp7lpVursT8f1M2XwfNH3f12ssX
VIjif6hyDj327NXUNRYVPiXN2qagOzsXOOxnU4Hj/5afjc6XP6c7UEWFV2/u
Fs1LxjwwepaaX02F4cyp5yvRIQ6Ti/xq8LyIuWK8FW1z3/WTUC0Vos/Oq3ZB
m71+aN6EdvhgUn0JrT3cWxT/CvNV/jQlDr1CREne4TW+r18NMxu9UPNQ2Po3
VLBcdaj7OfqHVfz4ODpph/tUI7rzVOvB8joqaMqq3u1Gv4wWfxVcTwXRjsLG
EfTjYksdiwbM50LjqL/oxPbwRMm3VJj4sKCfH/uV0L8vF35Ei4WrcJaiT8nx
eWY2UqHoezNTBn2QQKcbhwoDhDjJo6l2Aaa6XCpU5EatUEFvvFSSx9OE++EU
z0k19Mr08eWv0KcrCmzU0YIvNYNvNFPBr/r9Nw30Q70brc4tVFidbiC1AU3P
Gltr/I4KsRKvHvz7/sjKnQFyrVRQrze5/+951288bphEm4T6L/v3e9p84gqN
bVTYPqc1vgrd5HPq1IN2fP6Qptm//stroKn6YgfOFz+ILkFL2myUtnmP+Sm4
Zg8fuqThlvOmTvw8O3vZb5wP6+0TZSIf8HzIit8ziJ4u2LOkH73heYnU+3/z
pfLE7kUXzndS3cHXaMM4ycI7H3G/8Cepl6C7hX35vbqpsCfnV0gaWnlsyyOV
HiqY37P+chpdcyR2Zg4dcmT822H08Xe/Lds/Y35Tda6aoR+WPh0P/4r78cTz
20vRdI3lZkd7qVC/PEHgJ9bbSLJfnGEfFYRb9Jc3o7VCthmO9WO/whxQu4nm
/o6//noA8yUoaIMb2uvEdM+9QVyf+7zdNHQJs/zy3mHsp+7XWM7ifjCUJZzS
71SYrDMp2YPuvpqkFD1KBZ66RidV9AUeHh/XMSrcDgn4MIX7r+pr5XKFn1QY
Et8jGYc2zzNyCJmkgnNLj+wr3K/DiveeHPpFBa1f5utvoiOj5wvq/abCmSTx
ZdZorl9V9tAUFWYdP/j1/ssDE9NfzBkqbFPR+TqG+fGnOIOqNovrwXLkf4yO
V1uYMH8O8yZ3q6QHumtJLTzhoUG2A3fRMObR0Q5qmCwfDT77P7jXgnnl6caQ
6xWiQfvNkt4zmHd8uvPm8oRpoKt4+MYGdAxPUbf/IhrUyh/y+oJ5+ezGijRR
ERpM5LsNm6N5C4fUDERp0Caq9UX0Fovc+H1F95YUDTy1vwz7Y7+dd6Fml5Ey
DY7TL+u2heN6RJGwuwY00LoW76CJ54EA/xbXo4Y0eFbZurj2HPbnpzV2ric0
6DWlXDyE3mMjt/wZ0MD3Or3lKp4nZcp/H7TsoEFw09VD/XgehRU9ebWIRgPx
H8yeGDyvVFrVBf330uDc3trwfjw/gbr62/Z9NHCqji47i7YuXcER2E+DA5de
TYuhryYJx8X8R4PEdYMFBngejx8fUH1sg/PVX6p7C/sB1u80yoA9DZ5+mz1j
dgL38/IVofvcaMA/MFbd4oD5+2HL7g3uNNiq1uDriJ5L2iW/0IMGaltpEX+P
YD+3OrzkiScNEtQX9CuiezT/9C/zoYH15oonPnZYz2Zt1OYAGgye+Cu26SD2
l0Ljy7LO0mCoyG/TW1ucn/olPZfO0UDBZU2vE/rhTjM/nUAahAcNTyfbYP3Y
Pnl48xINRnVt6ZIHsF/xuiVsFUaDDPrt5lX78f235LWqhtNAxDdKvmofi4j+
eXOPJ4IGax7RVJzQj8/P18+7SgPW7Xqnor0sMhHm6bLkBg2M9trK7duD/WEK
s77+Ng14FhyJfbGTRWgOLnHpsTRw7yuq8UTLrgk9ejYO58PDqkMZXZb1fGZ9
PA2WfjIpC7fC87xYQyPiLg1WCNgUOzBZ5FLDomu0dBrUiUwPmVhgf9PnPyie
QYPfJR/6hNB8PEMmH9AJBoqcRgaeB1qvpt3u4+/TsrwOocNuBTtHP8L1i8s1
CKXjfsoerz6YRYPd26N6dqMX1RxRUM3G9XgUFqKIjvy1ve1ZDg3O615trjTH
+rSeNenOx/EdqasRRO88dTLlwWMaBBjrpXbR8D4b0TntWUADylvnyEL0rfJn
BQuKaFCyezzlCHrPu7VL3qL1rpTU66Mlv8c6xz6hwbsOGXEpdKy8r8K6EhpI
USN+NlBZ5D+93oBx9J0kwags9PKde9rKn+J6hUzvDkcnXNK5xiylQYu/LJWO
tk1IHZQpowGwC85roFcWiZp+Rm9bcueTKDqp9/u0dwUNYlTXanZSWOTw3MH9
5DkNmjcYKrDR8tINBQKVNLiZdcb0EfqTpsESLlr17umUW+hUapZz/AsaGHwr
1zqPPmIvW+PAokGBzd5JZ7Syf5iCBhvXN9diZB86I8uxrbKKBruEbnptQh+v
btUJq8b6iJ3kUUGrdple21VDgyXLRsqk0AOTRYMrXuL77gjOFEI/XLLatBdd
31v7fNaMRU6o3krJraXB5RfVfOPo9dvnz5x+RYPCmFDvQfTwf577jV7TYOPa
laI96GzPTwXCb2gwvC3qXQfaNZy5pAVddWO8qhmtkfbc+W4dDZK/Wbx/i/5e
plFzvJ4GR8VypevQeS2JCloNNJhiKQS8QnuMLDr7B01YBXy1aO2FAW3st1if
TR75L9E/Vw3pXG2kwekSxwv/Pi/Utb62l0ODzZvST71Ge1u9GlzFxfpatPFy
PXqzs67pANqFR7GUg/51MTPlcRMNcpv9RVrRJfGSM/7NNOgztwj8gD5TGLzf
pIUG06oZS76it9aPF4i8owFX43rpN/Sfr0eWtKEt5GUu/UKXznKdU1ppsLOS
cZQX51Pb8ViOfxvWe2mi25J/88uZGtvTToOcnlK2HFpx29VNmh24Ps6eh9XR
d9Lkzwi9x98LDjc2RIuJFJZ9QbOcOK5M9BVfM57nnbg/qCJdR9Cnaa6XT3XR
4ExddEgkerRg3hvGR1yvVq/ydLSjXLSIajcN1uWc2liB3jdaGt35iQatV6c+
/EA3/GfZ/qQH339WQmQJ1qspu2fFjc80KBc6c2Y9enOMYJrJV8yzqh0zzuic
uYS+Vb00MGk3FI9AqzhprvuDNvrv0aEc9DL9fY9z+mlg7zTv9iR6/FNapdQw
DdJ9n9tG435zMdfl+4Eevn5kQSX6S+Ebs7pvNGAUvm4fQjdd/tEQ+B3Xv1+I
zwz3+2N1+DDwA8+jYnd9YcwHtdtN8lU/adDVQFMl6FSe4w53x2mQdU1vixf6
RtPVoZ2TOH+dZ59+QrufeT9VOoXzt+u5+mvMo/4eV4OYP3jeHbFZuhDz6xCd
94L7XxqUlR5a9C/fLFatFVg9Q4OaZSzzKrR6tY9kJI85iMmJ17y1ZJE0DSFr
x3nmwL+KZ+cyzMcVsYmJRrzm0C6Q/u0AetGJKuVf883hyRFiOYweXCqmc3ih
OZR8boqTwby9b5NtqS1iDotPOxmk70a7BUULLDGH0S1jd6fQmRcPvO9CM0IK
f1pgnmfcFzweLmoOXjb/eU6j08aPnvsiYQ7HGhel2eN5kByxMjtG1hz+601p
s7bGPCu7JvRX1RxCTMsv/jiMfnuMyVlrDokJb8WP4Pl1u8cgJlPNHFaMnTnV
jI4RGFbYvd4cLJR47zy1x/zcTdHL3mAOgZGcI1fxfLw+zON4aLM5hF37OfCf
I/bPKzyr2TvMYWdJQNk5PH9PByfcCTc2h4x5C5/MoB1Hatx2mZiDk5XXjn/n
t1ml7PLPpuZgPwuS5/D+y+9Q7cpLQx9NuRDixSLBj6SltzPx/eW9k/KxH7i4
9blzhY05SMis9HW+wCIB+xctfeptDlkOyre0sV9ZzXp2pP+ROairL+VZ+QLz
MtMwwr/LHEQUJSsKhjFfBBa82PvRHA5rT3a6fMN/7/hmQqvbHGT5cgpWj7CI
9Nr9h/o/4foZJQfGfGcR5kMP7T1fzWHHJdfDXj9YpCIrrU1j2BzGfmX5rPqN
+zFfaHXPlDnwXQudUJ7PJv2inP/K/5iDw/WV6hz0Zs/bkbF/zWGK73hnAB+b
cLSVf1vMmAPPXaE73AVsIlBo8KaUhw4SQ/7/+Qqwic8Td4/ohXQYqZ+nmraY
TXaWviunLKODVbzH3wApNlGt7h5fJUmHTSMPLotKs8lMw+C6X+g98wp3pqPv
98zGpUvT4WtLRuJrGTaZFVzjw7uCDmVbBjjCK9jk0X5fjTJFOvi3jwodl2eT
QPsLR6OU6DApkJw8gt7rEp7grEwHrdyavd4KbMIbmCQko0KHkPrPKwIV2WR/
5ste77V0kLYi78OU2YRvUippgyYdZNzCfU+psknHnMI7fi06uH1epDWMzhVc
v7gLLRT8aPjIWjaxlgP/CB06PCp/YM9UY5M8Y8d9A5vpIMAXISG3nk1so0qW
3DOgg0f3r95LG9hEO5Fl6mdIh/55mV1DaIHMurNWhA4qC2We7dRkk8Jn3UNz
QIdEtVwJOS02EeoRqLUxpkNHc7BSmjabPNH8L1DSnA5v8odnz2xik4DrT0w/
ohOEbya9QhuNii++T6cDc/EVDenNbNKQ2xCnZ0GHiGYj0cforxrGBTZWdNi8
sLqibQubPIxMObN6J77vptaMVbps4j4yS0bQa+71ux9FT2c/rTu/mw6dwt1p
39AS6ht6U/fR4W4aj92oHs5PRETWif10yHccVtfYyibJwwOeG//D+V4Q3OiM
Xp+VNldtTYfoqKjr3egd65bLDNjSoe3OAk75Nnz/cN+P+QfpsLF4i/wPdMNg
c7rfIToQ4yrd1fo4vw+vaS+yo0NQAPv5ZbTn2gX0DQ50ePxH74+BAZvoXrEX
+4320Frl5Iie7X/eVnmUDkoei6JvoMPu+x3deZwOAa0tct1opkDbOllHOug6
JPouMGQTScdNPz6j+Wt2hK5Fp6wZPeftTAeelvm1J9HHLjNMDE/QYVu/wPhV
9Pq+h8ILXeiQncBuzEKXZByNjT2J9VykGdOLPsfPPmjnSoeY8w3+8wibGB+T
X63mhvNR/FtYFt24+n1+qTsdrm19tZqGjgnWPR3kQQe7YeusQ2ibr9GGDE86
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$9609#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
qCDDD8aWyVT8flWLhdzZlWT4t3nZQQg7jvA6y/cDGbwaSPI3cXzcYtPIxlW4
flQy9CpwPE+PJ0wdqCaDbFDd2G8cb3n1yJB1NWT4I3hFdRf2+uAnKn3YB3j2
n1PG+Rnsf9iR/xHP4yy27UGcv9IDPm7+tbh+VQ8mSuH8OtMdS47U4fhtiJpu
wfVBkrxmurGeDJfbhEwCbrHQ3huX/w1jj94RcD+E66lX8PTJ0EZcXw9MLc/e
ZKEiC8JX689kWH9x+90mXJ8hRZoPURMZYoRVvqk4sZCOkUrjeDMZrsmR97Tg
+s6JFTTQZZBB6/XhhJOWLOQ/zvdrZxue147NckevspCF+trIOWzg9VASu8JC
ogO/el504PlZPapWZspC9yS7riwzyTCz87Cd9hmc7xsta9q68bz2dmNVnWKh
ozWf0jJ6yJD+6sGUEhXn16J47GwvGQ47/0j8qo/7OSPaOXeADG9vdGu8PMFC
B/+ECD5ik+HInrCVQjUW2kj0LzL7Qoao+M7gt6osVDPu8Yd3iAxynS2Vz5RZ
SEHxgq/lNzIYkBP8C6RZaPXbXaHbJ/D80FtdVMzNQk2mNtVD2NdKBkx01rFQ
1JqiuaxJMlySDI1oWI2/f5p87vg0GcbM2Vpvl3qQ8YTnDtNZ3C/dfP1SEz0o
Z3d3WsIiGT5kzNdfb8bz+umzEol1FLjZFFHlHdCD3l3j+rpXjAL7b9B4r893
o2OXb61wiFOA4wznB+mZblRq9H1bD7aFdoRF/49uVKlbRwiUpACC29sIX7pR
rfSjnGlpChwf3Gu+6XM3av+y/vY7eQrAkYXKGy+60ZTx+i3EYxSo2ENrLiB1
I8dTbvJSahSQSbv175ZuN/qpN6L9F9vJ2ocDNLvR/JFPt96oU2A+lryx60g3
Wt76sH+LBgUWeMrj9+/uRjyMdZm9uhR4aT2Tl/CHiaQJ6zTsDSmwtNtl8sUr
vF9H1o+qnqWAeYpAlHEGE3F9DQzlPEeBoBPbZrelMtH4nS3DUUYUeCBkeDwj
jokKCsUfVptQwDQ3IUwikIm0JNSahK9QgH5TS+q+LRMV2a+4DGFfeYNqi6zx
eaL0w67X5hRYZ5q4deYqE/Gd03M8aUGBHqsANR9TJmoPNNxib00B7qjNO/mo
THR1wcG42p4CmVq5K79UmKhTW2V1sAMFjjYPGH1QZCK9Z/OZRo4UkJNyvBC5
n4nkFbyWJ5wocC+gsN98LxPNmfsnCrtQwDilWc8XH/osc8l6Q9jHJtZZpQkz
EXOFf+aVKwUk3iTKd25lotLoSM2TtyhgMjcjb8zPRPdaUr7aeVKgii3oOb2W
ieZ3WAer3sbxp5DILpxMZG0jd4TTiwJqXwZr1q1iItLavEdR3hT40Cy/m7bc
hQTVKuSq71IgcPeBrT6zXejBI9/2IF8KZImaBNjh89hCh7aXkR8FxIaHU6yn
ulCv4+fmiXt4vVqbNR796EIpad1Owo9wfCPqIhyHu1BCPHvHADaHyPrizsEu
FBU28in1MQU+Rs2PEL50oQDfXztVAijATgv8Ydrfhe65L9ctYlfD2qXl3i7k
7ch5szKQAqOTjKeZrC7kbLa5gRxMAaHEzZ+UuruQraGwi+ATCrzOPpPMy+xC
liQxcRZ26tenXnOdXejSyT2NL55SoIb65sZ4Rxc6f2y/q3UIBVqno5Jn27vQ
GaWDEgdCKRDSfFiOB5sio/b5FzZ90klGsa0L6YlpupU+o8CZcyrvLBhdSENI
X9IvjAJDG64uZdK70LENtCb9cApoCU/wcWAfXHPuFn8EBU7cfstr0dqFFJZM
d3dhx6DsrT0tXUjm59Xm+EgK7LIu0LuILTl63f1qFAVCl4qr5pq70A62s5Rc
NAVK/yW9iMEW6nJvmcG28DDhPIXN3+zjURyD1+PUuFYYm+fjQ+k7sRSgjbFq
p5q60JrS4FbtOJyfHy5XmdgreeGefPEU8Hf3XaZj/86I29OGfTZ2LLsXe/p5
Mj06gQKks5HPFrDHIjNvX0qkwKEcp2Zp/Pzh4Ny9e59ToPP1Fc+r2P33ixkT
2PPnDIoLsJm3K7wKXlDgQq58shB+H8aNWhnPJBy/yi5jf+zPNk1tGsn4fQPV
/2zC8fh4ud2bK4UCnCK6SS+xy41Y+1qwKXZ9Dqdw/Iqpg+3hqRSoDR712YDj
naczeudCGgUO+J2ZZWFnq0/L7n5JgdO09V9LcX7SDv7uGMWeXxq7kYPz91xu
xScnHecn4HtZEc53jORaebcMXF9rR9ktuB6eifB1qWdSIM+h489SVxcK5N/i
uyaLApItEfvUcD09WC+6vxF7cZ9QQFAPvl/82utn9Ao///tPU9u+LnRzXEFB
7DXuByNJ3kVcr/ZDh7q/YrN78q9Es7vQZfrJAzdyKDC1/8Wjrbj+z9cReo7m
4njztITOfMX1VnHqPkceBS7xc1Z8GcH19eoiKyifAvY5Er9WcP9oplg+OFNA
gTVn+4/JT3ah47F2StsLcb6Pa4vaT3chxceeD9OLKKA/WLhT8VcX2mYRqVL9
jgKEQ4m3c/B9qC67qjbmPQU0Iu8H1axmoltzE8bOJRRIco5ZnsHzoMdPy0ei
jAJG1+SCo/nwfSZp5vOdSgqkbfueIYbnDWlsx6VzHyiw3aU4abUYE/1V0ptV
qMKfbx1//k+Sicw+JIj0V+N5S3w8piPHRBJsouXxT3geDX0yXavORIy9botb
6igwXjYpn6/BRL4OSYE/sEX3P/Z012Gi4ZWFvJgG/H5h4u0UGhOl7Uz7t9BE
gX1b+Hdts2AiOROO6MJ2PP9pafazoUzUmyQnH9RBgW7taROBaCYKHDtbcbUT
//7y51KdRHw/c3/1dQsTx9tdR2gqi4lyos4rO7PwfNF2bFOtZaJDnQWNCoMU
aIsxaL2/gu9/p66tvJzC/cbz90XO7W7EnhwRd5qmwO4jsbeC73Ujn0DLk8dm
KPBmtC7HPbAbVX0yf/T5J97f2txeusV1I50TZgIzv/B+aJRmvKEM3+/kDPYc
W6bANnmT/V4cPejCWnXKZy4qzG/47Gz8pAd5vONPmJaggvppXk+TGhZivMxP
b5CkwrEPO2WVWvD5OeJsfspuKvzxvzLB08NC3c5xdUbSVOj//fFb/RQ+f8rL
zFbKUCHu7Sdxx+29aD4B6YUcoIJS6+mnSjd6kfM9+59K6lTIc7Q6vXd3H2pw
3vyX9wQVstN3te5U6EOSlwvWf8Muv7dLUOBoH6Kr/9kRA1Sg/TwmPUvpQ4q/
7+uu1qLC7d3vR0I8+tDktfg4BoEKRwfsPm+l9yEb6medG0ZUQJ/8uTvd+1He
syr2CWMqvDp+R8HFrx/96Sr24DlPBYHeK9/4gvqR/6XU1y9MqHA5t8hG+nk/
ynTyFmo1o4LnlQbd+Y/96MczxW/yFlQI13CwmN00gGyZYfe/OVEhgUe0TC1u
ABXsCBDLc6bCxWy/nPiUAbR86e47rxtUEFLvEJzNHkCBo3YTgi5UWKM1FeBW
NoCy/+gYnrxFheNhqkWDfQNofMei1HNvKvi3uq7btJGN7C6b1hgHUGFEIy39
ng4bHadGXpIIpMJBU4PXBfpsxKdOX/6O3Z5cptJLYqNsYe1Dt4KpwBlu4bjZ
gI3GW+TTIkKoIHdI55nARTYqLbPUNAvFf+8Wc1++zEaBWc/7pZ9RQd528mTf
VTaSeyi4rTCMCq6a69T8bNjI5sTyw7ZIKqzrMw8xc2GjY/KHpWKjqOC7T+bu
Xzc24hF1rLwSTYUz+0RKQj3YKPPX0MJMDBVWSe+sTLzDRqPZjdf4E6jgdWx6
WuMxG1lvjyWSU6gQTOn9Fx7DRqrcHSOCqVTIJ+X4PI1jI67fG+/1Yqs+EBfy
SWCjdIZv6fWXVLgU5KR0IomNRh7b7PfPpMIRURG+gxlsVOSWUn8qC8dbQkCw
I5ONHlj0W4hkU+HH3oFwm2w22qNxOiH9FRVUtoa8c37DRpYLRzd9yqGCW0Kk
+a8CNjr87UZWcC4VPjbf2KFaxEbr2l/pns3D9VRlUmD/lo1S30j4fM2nwq7O
MZW379joZrzJjlcFVOAdGZire89GWgHhxTcLqXAl/rZucwkbDVtyz3C+pQKp
V+9MfhkbFZw5GdSIzTasHQktZ6N7ml77nhVTYeDswwqLCjY6o/j24/l3VGjo
Uq6Tq2QjqV0zlyXfU0GC7jA5jD3HK7cyin1V7euukA9sVLN4NSa3hApbNh3T
Uaxio7CRhMPupVTI0dp6qgrbvIPJgDIqvG/fKa9bzUZjW46cEymnwo7hR3p1
2I6nw1kz2Cp80blHa9jo99PZiw0VeH074imx2N4tp4aTKqnACJzgnsBeszHH
2vMDFVrmdn1X+MhGAaSNEwZVVPiwoLR0CVsgwNZJvpoKVkuahn7YUfUNv9bU
UOHRRXuuCGwxrn0efdhfHrbuicZO03m4UviRCmpd96sCseXvf/UNrqWCQU7m
hCN2fvXJ9VafqDDtYvJeG/vY6qQAVEeFNv+CY7zYlcDBL1xPhbJTDJ8PeH26
d8zCprGd99MTrLGby0qF6xuoUOjTlMaBfWZZNP5FIxX0Xw9lPsbvzzrmLuHx
mQpTwoplnNhX3LtSTzdR4frulil7HL/vbw/JyjVTwUex70wjjrfD/LPXnC34
80muK8LY8wd/Kvdie/a9XTmH88OZ91otiI7n5aFkYibOr/80X6UFAz9P5EFp
Gc4//4HrWifaqMBF8/1cVcpGu7L3kqfaqVCjoSqQhOsnZew+/VMHFa5Vydre
xvUlt2/Y8HknnlcS6a/0inF/pD03O8WkQsiawgNvC9moYnhlcF83FZ5QvMKM
cf3q7Da1Wt2D62eV5r7JPDYyeC7imM/C8+WAstwkrnf7mNC7WweoUOtUF0DE
/TLHnF47ib3ACL5+9yUbeW6j+teyqeCRf5AvM5WNHoXxPnMbxP3t9ZTZ9oKN
koPvpXR/xfW6OjkqIJqNZJsGZfK+UWFMzsfDOJKNcng1XvmP4P4cE3stGs5G
5Y/+FqqNUuF+nrCB21M2Yvq6foofp4K4Os+T2AdstNHNeuzyLBXqUqtfJjqy
0X1e0RW5OSqEuiXM9tmx0XJi4+Z57KbBvQcEruP6rVM46j9PhWI3uZwLFmxU
K/rrYd4iFVYfU3X1NGYjNFAZuoqDBs+3es2NIzbyyIiOs8R27dsqGXIcz4cb
zmmN2NvWz8jKH2Wj/VxS78NX0WDOyYBbV5mNtis9/LKPkwZJWrzhm6VwP/iS
FU+vo8G6NpOGdevYSJm859hb7GGhqVCx1Tie2/6d3LGeBizuXK1LywPoa1bO
uW/YbsnSL5zGB1Bb+5Y7Htw0CIlu2dDeOIDe7OlpSuKjQZcnzSP34QCyarC8
PitAg8e2hh/i5vrRSump0UtbaHAhdYVXdqwfhb05btWM/VmMbpI+0I+qwgTM
MwRpcHlH1/NbDf1o18Xy8xeFaJDPl919PbEfdc5uJTSK0MDywfPWMp1+pLXz
o0yyOA3yPoxKCQX2IQnH3d9OK9DghXP2dMMiC3XoGGYo69MAqN6RZnn4fviO
dzoC++vKjlSFNCbykKs6vIQ9ZLQnb1UME4nzH6ipJtCgIyFePfcuE9l2cw2c
IeHv394FR08x0RrbUkE3Kg1+VV3bvQ7frw6G7PYpMaQB/ZXM0IWD+LzKmjmr
dQXHz9Xik3ZrB9J0fb85F5sr74cAo6YDTfP7fd5pToO4NA/1a+86EElHUPM3
9s6tmXzFSR1oXe7h/ZkWNJi4JZDQ6dKB3B94cvJfo4HXqNTQpl0d6KLS2hyW
Aw0y2uRfHnJtx/uXMPcNLxrk/MmKNz/Zhhif/QOY2N6bwzyXjrWhWwJ/N5zw
pkHw0q4fMcptqDb+iwD3HRpc1I29Mi3Rhi4VZO5I9KFBZl7ijzmONhT25bhi
ox8NJG9Z7TOrZKBltcvndvvjfH50cLyjxUBN0xmpbRE0GEkl8ttfoiNV3hP7
jkTi9U3q8bUb01GSNCM7Blvrt3oUMqAj1/N/8i9H0eCDvor2Xh06Eq8hVE1F
02D1vM4RVXk6uhn5o583Hr/v45+x5xdbkeiJ/cJayTSgBZlYOke2IuuAHP+C
NzSYZS9M/qhqQQrNZ33Fc2jg/EykV/ZtC5rj/+seiG026TXunNWCfCL0r13N
pUHCD1flXWEtKPLFoK5gPq63PVPOAxYtqPat4NqbRTRoypGo+cvTgnYP37qj
UkYDw/KuKCWTZtR/XONmXgN+n77P4YWbmpBZ9nG9wSEauHurJIi2NaDnbMGK
08M4fosyH6zrG9Cg4MShauyrT+b7iisakJVX/O6UrzTgPpksfTG7ATlSVlYs
Rmigp81Jr7nfgHynKwpHx2hwPOJL4ZJqA3p58OTumRkabHI+nE57UY/GrLfH
XP5Jg+iE1LqJyHokHz/Lz8Cujzo8EhRcj3LWpqzkzdJAXF4XdXnWo/eda3pu
/qJBFmHoxJOz9ejzrdqnCwu43vR5Y2L56tHGVwnrry3i+sjKsrXlrEe0L67e
3dg7C0Mr4E8d6tDfa/v+Dw3u/CxbNzdSh/pFH+neXsbz4pn+yv3qOiROvVQ+
jj2aPlB0430duuKnesj0Lw1O0JsVLXLr0MiP75InVnC+QzUeGyTWIVnxD9Gv
sXfVct+iRdQh2zPR/GL/aFB8skDvVFAdev3I6eET7Cgjc86z9+rQdKn+yj9s
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9609#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.456154599072136`, 0.25442372579979555`}, {
                    51.10177045777136, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.456154599072138`"}], ",", 
                    RowBox[{"-", "6.8982295422286395`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 22->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$9773#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9773#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.160597331561064`, 0.25442372579979555`}, {
                    51.23893462170497, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.160597331561068`"}], ",", 
                    RowBox[{"-", "6.761065378295027`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 23->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$9937#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9937#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.072293734325456`, 0.25442372579979555`}, {
                    51.27677094623454, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.072293734325453`"}], ",", 
                    RowBox[{"-", "6.72322905376546`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 24->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$10101#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10101#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.03657099481222, 0.25442372579979555`}, {
                    51.28766862785308, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.036570994812227`"}], ",", 
                    RowBox[{"-", "6.712331372146922`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 25->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$10265#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV13c8lV0cAHClYVWShIYRJSSjoaTzI/PukiLRkJHsQohE0yqyZ1lZlZ0y
QzIy7rUu17ihRGYkIr3nff/p/X7c+9zz/NY5R+KKw2mL1Rz4P04Ojv//lXhg
i/9PD0rrquq+OFejdZffr67H9ps9+eixazUaV+NaHbpKD2z/vTmp6lGNimeS
OaQ49cA4fTIk8241opmy/uqu04Pq8icfvzytRt4HCQtP+PRA/F+2YVhONWIN
7p0QE9GDdd35nsy5alRZ5jL+HfsAdXr51GI1Souq/pErqgeWgrqR9L/VyJly
cezkDj1IdR/9M7iuBvG8jxixEtODsAMBb8kiNUg1ZO3gG2k9eEgIZhxHNSgc
DXUiZT2o0p2doT6pQcrXDctFVPQAST0rmAyrQc0Rn1Jnsflu5kY8i6lBXJNZ
N18e0oOTN/TDp1JrkEfcTYFNR/Xgu9D6O1OlNejS4lpKP9KDeNn3O9eP1yDZ
fJmPt8l6MH6Cm3aW8hGV77HPf2etB0/no+o8JGrRn8fNVyNj9eAIx57WjYxP
SJYq8tKlSQ+sDIe80kPr0SbNWz+DOPXh7vKxUEuPRrQ+N1uA57A+XO3bn9er
0oQKyL/UKm314fmw7G36bDMyJMnMuybpQ8vCPemQE60I7K9eQsn68DqSU+Oo
RiuSffq8YX2KPiSwDLMHTrYijnbhxKhUfZB+KGi7V78VZZtw671P14dLrDPm
SQataPX1sei/r/WBNVHQqGXdit48zla/V4KfbxF8XvFpK+L+pHg/pF0fxNzM
ncx6WlHm0ZAumw59mFDY11TR24pI2TP7tDr1wc46eXLXQCt6GpLXPN+lD5/d
a/06h1qR0IWDwhdY+rBYe2JFdqIVSc0cydozqA8HnhU6XPvXik5sR/SSKX0Q
VEmXPCFJR+ygxN3h0/rge0nnnZEUHd3l4HC1n9GHsW6JXU576Kjma6WoxCx+
Xv0Lg1hZOiLmaF59MK8P/6jqLh3KdGSkrfOb9lcfij2fN7M16cjZgbzzGw8B
1odyFhtepqM1qqv+5fAS4FH3lB+vOR1FcBSyPfkI0DSUa1dxlY7eh+xI2byR
AMI3wmMlrOlodcEPWfXNBKjum7BssaejkIXHqmHbCCA/7j3e6klHOXdrDTSl
CKCl8ueIXRgdaRI8Dm2QJsBeTSQ7Ek5H7QIK25jYRi+JGhcj6WghObzHbi8B
BF9G9evH0BHUXr0cLUsAvj6hXq7ndNTCw+kwrUiAd3Joi0IWHU0+Q/4J6gRY
it72W6iSjrjWHbG3OEEAkw7BbOoHOpK8pXBaHhHgyG6uxAdVdGR4YafoeyCA
OTkJTdXQUanUUkbHSQLkHzdzyqqnI//Cono+AgHUn1bUtDDoaE/Xfm7Ps3h9
Bj7R9UN4PfrSExrnCGC1Js25YZiOzpfsoHMZEUDIh/S0/isdBSXyRkcYE8BM
YSK6aoSO5qxGZfIuEODVp8PjiT/oqGohRW/0CgEuzxe+Xz9LR2aiOx6dcyCA
fWCpXRAHAyn0HTlzwJEAzk+6qNarGOhfooH4eicCfLkdckBjNQM9lw4oLnIm
gJrnxPdxTgYaVPzzfasrAaaqwwny6xnISpep336bADIu0muIGxhIlWdua7YX
ARQG7g2s3chAXE2bBv28CVBWk1Najp15WtdDxQfnz9LdS5afgcZNizJD/fD7
1ewUHxNgIMebYbyn/Anwu0NRikeYgeBITpdMAAHE371SS8Xe/KcxmSOQAAvp
UsYnRBgo7w7n8ZwgAswJ8L20EWWgX/7OtptCCCDVzB+RtYOBasnBqiPYOe2v
hg/vZKAI/sw1FaEEcM8xUavEVo34EmcfRoCNpF+rmnYxkMcLWlNTJAGO0x2W
msUZiHDVNjo1igAFaCiEIMFA2/c+svCKxr9P9FauwS7NrvgrH0uAo0mHn+VK
MtDKWwWFwAQCBHFy9NyUYiC/Zr4nhFQc/8c33sbvZSCtEc+xLWm4fnJMZmax
13D80O7Dfr7xl7ueDAM9UKpfdkgnQGuq4K1xbP+w+zbhWQTQY/7eLy7LQMRX
cx/NsgnwWuv8kDU2X625hMwrArw5Lz76Bjv4twbz/Wv8+bKcb6pyDBRyfkWb
nUsAygzjzWF5Bjp9w+5FRh4BONDJSSdsgcDeZed8AvRm1HtnYYeVvc9fW4jN
/zNCZD8DGXbu29SCPZzBIUbBFpqKsokqIsBA9MqiD3aUuJuEXDGun+IXGV+w
jY9+uz2HPe2X771JgYFETxsyy97h+mAHvVTDjvNTeUIrIcDTey6/grFN45LG
REoJkHJtSrQIe1fhZp0h7GMivOEs7MRvU8su5Tj+m1c9kjjAQJf+mRmhCgJ4
/9ZdpYktLtycz1VJgOYh7tZL2F8U1TcxsK1//J7zwk7Sz7aJ/UCAx9HOztHY
5le2116tIkDDoaPEfGwpT38JhWoCVK7n9W3ETsu2ZlbWEED2epPgb2yrj10q
/h8J0Bhw3JVHkYFk+nWeGNTi3+cogB3Yo/OFYzs+EYDJP+sqj525SVrnG/aN
Ne+2q2Fflwl78aaOAF8lPyrpYctrcP69VY/rP7+zxAB73NjZSLOBAKkr2aWm
2K+cv+TzNhJAgrj+iCW2fQBtUwd2Cztlvx22QkqFTcJnAuiu1052xp4qVai1
aiKA2LqXMa7YOR3xEkrNBJiQ8hdyx3aa5PP6g62f9UrEA1t5/W1mdQsB6tmt
af//fVbsh0pQKwE4N+RXumEXqJ5/cpZOgFC3LTY3sV1O1Y+JMQjAbZ2b6oB9
2EZVZxR71R6S6zXs374vX+S1EYB/Man/MnZxrNBfz3YCfJZx+WKE7V5w30i7
A8/z5bt3KdjHmubyN3YSILv00QdN7D9fzTcxsZfe6KUcwi5ZYdi86CKA4a67
8nv/X6+15WtPJgHutjxa3Pp/fOmLM4bdOD4O4oc5sSXVgg4p9hCgr/DT10mc
r5gUcXceFp63F1Z4u7EFNhaUDmObbNfK/oD92E2Xo6IX5ydLuCEd+xbB/uGN
fjwvJewCnbGn81c1kgfw/HAfP2KIbb0zfKMMmwCW9xbtD2Ofmy4J7/2C+z+q
JGgO1+fhCO4U7a8E2DDRNXUR+/W/uBGxbwSI2FpmfAR7zzVFuT/YGm/3X9+A
vfX4ubzX3wmQq5cTWoj7Ze5LSuW2cQJkdCqfncf9Z0tUXfMTm2vpulk19nBB
o+7nCdx/pgqyT7DbHv5s9pkiQMUHsuhu7Lz90Df6kwCFB6fKj+N+l41sE6+Z
JUDeHRttDuwkDqurCXME8G22zarC8yGkLejH6XkCGJxfK6WF7ejOWixZJMBF
U+99x/Yx0P6PrkLBHERgpZ0K/7WHgVIUeM5bryKCRcX24nTsHVHx8ZqrieBq
af3zPDbf9Rqp35xEYGo+KimVZqAxfgGVS+uJYGrVs8oVz7/0C6+oyhuJIPDr
sX0VnpfpDvfCuTYR4Z/TDgMb7Je+Jqx+7F+ZvkGbsdPSua0CNhMh4SjXZjM8
f1PmLLyHBYlwaE/Gmyk8n58H7noVsZ0Ia8WaFBe24/lT+oRnSYYIr5Ln7Au3
MtCjHc4fq08SYXO8h3oMF87v/biYAC0iXFDqzFfFtp6sdTDQJgJRSovShfcv
3crtokM6RBjrEfwjiL3u6kf71QQi9N5+dyt0LQPdzxIW1qARgSbx5HoU3g99
j1XYlF8ggvJ569nBZXyeSR5FD0yJcMZoViwA+wqf4FaKGRFSTLxrVbA1+q0r
+i4SIX7P6cAHS3TE4Ssg+PcKEZIqxHWU/9DRnXqLMrVrRCgP6G5M+U1H9spP
QzltiKCw4XmPIbZZ7HurRuxNVqbB67FP2G0SMLElwm8jjynbeTpa4X9n6eFA
BK69dkPoFx3dNuLjf+dChJXFwh9ceL+XFDBpCnElwnjF9cGKn3RU35jhb+NG
BM3of01u2EJId+0OdyL4sVxCxmboKFfa94/3bSLsmfPf1zuNz28DrW/PeeHn
Z4ntjcVeiRJzUfQmgqj40kETbBJf2dSXOzg/Mcee9E/R0befv4e1/HB+dzfE
/5yko8BsnaSd94ggJenn9R5bxTL84jy29uMfj/ywfbqVe14+IELniLeiCPb2
SrsWHn/8e8cTJA0m8PnFvTRwCLuiq7JCCttahZdQGkAEtYdLyb/H6agoLb3G
LogIQ6521BfYtKChd61PifBuUil0Dfa8jrJbRggRDLw569j4PBTPcfegbygR
PD4bXirHHrux641KGBG6FxVrvbBD9tvZ8oXj3+MMi7mIrTpSsu8rdpyE/IAm
9v3zxikRkUR4MvmmdgO2vGD6ZYcoIhjXuTj+GqMjRtP8Lr1oItzmlY7qx3Z/
qN0rHkMEapOsRj22uEZY9CL2/t24XrFr/wyeZcQSwV5yUioZ265ASTArjgh2
7PuWodiC9j50v3gi3HWWOeKH/X5vS/CFBCKsmdSMccG+/GUn6VAifr615rNr
2FyxttwbnxOhdP6Z9EXs12dKar9hp75OOXMW23Ajz72KF0S4nPplNxV7+ZOR
RlQS7ofptxH62El3X644JuPvp4TlaGPrq82X6KcQgY85fPMk9vSclrtkKhHC
E7eOaGJHvH52eAk7hz+MRwtb3Xpwti2NCMXQNKiDPSyhlJv9kgic2go3iNj+
rDv299OJMKksVXEKWym8Wc4sgwitYjsajLGZlJ2jhzOJsFrCL9Ic25vLNm1T
Fu5HYq2sA7Z01Xvz79ilhacf3sYupV/IycvGnw+KSfTHPv1lZfn2KyI0fOQm
xWCPTj/X131NhLbQa0+ysH04TkZsfkOEnj1+tuXY2/i/DrKw4wvEvjH+j5fY
wwNpOfjv9lz/vmP3nmisO5ZHhFyVIRFRnO8bFLuta/OJUJdsJXEIm8ds05UW
bAqvadup/+vFy2DJvJAIMQEVGk+xWwJ/6SoU4fVzV3DmYVvGRYYtYPsSznh2
YIeVsPYHFRNhqu9qhASuV7lGL49z74igFOGMCNhVPWKfJN4ToZl1LOMm9vSi
+aWiEiJw94g1NGM/5F73yqcU99dC84MV7F0i6YuEMiIE25tuUsT9QlIdDx0o
J8LJA+pPorCHdIMHMipwPgfEA1uwPc4pyt+sJMKcjcAlLtx/6a43P3JV4Xyd
dom9g81ZuPxb6SMR5AY+t9zD/R1Tk6C1jD0ZtjTdgK3YDiG1tUTQ4Q/n2oLn
gdnsPVmTOiJYHfsrm4H9XmmD6b1GIlQ9OZM9gefLKY03GZTPRDiXGjB9Es+f
77RT88JNeF5obyPG/T+PHMOfvGomgi6vhIEBnl/Or3dWddLxPGPm7GLN0RF3
ecXGFwzcLx4n7mviefe86bLJ9TYiONnySGZjN4+nzv1rx+8jdXrjAzwfZeUU
9u5j4nhuN5AwXKCjLy9PBHr2EyGzKPu1OZ7PClxrP5wdwM/3zj20jH3buvGX
Ehs/X2/oeeRfOhLeZ3Tx+xe8vwyLqnat4PmS6aRs+BXPB9tfv93xfSmBR9VK
8RsRxKy9FGTx/jBusxLLO4L7zfGzUx/2Q7mAtVXfcfze8KmQ1zBQeXYKU2Gc
COp8Sgqn8X7Dt+H6Bp4JvN4YPuPteH86b6ek+RWbpan/bgT71/7yrNgpIpwY
Vlbw58Hnxzdd3lyzeH5FDrrN4/tWTC6P9OAiEZr4g5Yc8f73fTPduOwPEbaO
+PQ5COHziXNkcNQSnl+T3DrO2xiIriy1QPn7//dlKu7i+xNXgXpjCQcJgj3y
Bxrxfci1yNEpfD0JNnYxCZvx/aRG6EiaIxe2657fBHwfEXD720PkJsFVM3XP
R/i88OqIv9ZqXhJs2Swotun/80px8jaHjSRIk/ExJyrh+0ZJZ5neVhJkOcnT
7h3H5+eP7DkxIRIk6zGn59UZ6G/zmNxvbHHhv8/sED4fDK5EpwqT4PXYyJyl
Jr5Pce91Xb2DBBeulr/012OgLCM3hVJJEvizKGtjDBnI58pdi2e7SfBm5NsG
6jkGOmsbEGcjRQI3QboFlzEDrfZJ5BHZQ4LfIgyhRxcYyOjlp28u+0gw0LN6
Tak5vn/Nb0s8oEiCfxb/TvxxZqCefxKd65RIsG+fkNf8TQZ6wy2/oR974yGj
c79dcX52gmegCgl2O4XNrvPE520t63Ojh0kQ6XPtlJkfvs88K96UrE4CmoJl
50wYAxUpGvsIEUlQfiorpamEgW4/LdIZwBbJFZk4Ws5AmtNbNqSTSMC4Ll6e
WclAzW+ao49SSJCi8JQ75iMDfVXQyr9wigRWj/blv2lhIMH9B74lnSNBzN26
9++HGch531rSgaskOHFwYMRGoA2pPr4isIA9lBNCd9jahla+VzArLUjQcCWt
0l24Dfmne1ictiJB/Isn5XG72tCLvdPeLjYk+LsvNE1Mrg21SrNySxxJ8OV8
79Md2m1ov2TuNj0vEuR+yxbd6NWGMhnKtRLeJLB5FFTBc7cN7fEruLmEXRrt
2b/hfhsSH35Lf+1Dgknzywl7g9qQQFp5wNZ7JHjA6ZWbEd+GFvZ9/jfoT4Lt
TOQ9XtGGqpVGRryiSBAnSr39hLsdwaB1xLlonO+MNWssNraj0tAxLaUYEty2
Y6RobGlHRbMTL4ZjSZA5GanNv7MdpRfOmRAT8ftozAVzKrWj4KOrW4XTSBAQ
qh6jc74dGWvsLM7Px/GRsje9nNeOanV//vIuIMENVkrih7ftSJnySYVQSILW
wKNxMmXtiM/E6Q27CK9POKudp64dVd78mLbhPQmKLX/mi/e3I5l0u3CrShI8
Cc0uDOftQAsby523N5Hgx23NbK/rHSiq12y/3zcSDM4HXjul1okau/1VDITJ
EG6lbrF+pgu59nwykRMhg8z68VaPhS4kyVpzj1OUDOdjV3LG/3Uhj17v9vzt
ZMisXHujcSMTyQw4uwiKkYGvO+KOszwT3R8+/7ZDmgx7BGKrTlsxEZqSVTNS
IYOwwqBCaQ8TjU1ZmSseJMPtWzpT9C9MFDGdEsB1iAyfcyr0h74z0eTMrt7i
w2RQ5XnptDDPRHFzAl4ix8hw7pjWxjGBbrS4+Ke8B8jAdfmJb6d+N8pf06hp
SiFDHE0s4mB+N6KYmPzZQyXD6GhGo9S7bjSW+yN3Grvo+Pq8jRXdSPIin8S9
U2RoZ3HrtjR0o9B35H+ZZ8gwENvnv2qwGznbt5YsnCfDoVUHkeimHqTI7DgY
ZkUGX9rJBzHmPeizguW4qTUZRJw/f4uz7kHW9+eT914jw7qitLQIux70XHnb
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10265#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.02117718998989, 0.25442372579979555`}, {
                    51.29084177302677, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.02117718998989`"}], ",", 
                    RowBox[{"-", "6.709158226973228`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 26->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV2Xk41F0UB3BJspSyZEnKlqTI0kLhnmSZGTOM9ldUpEKyZSlUKiSkRUTI
kqXFGqIsaQapkBlkSZLKniiUsrynv+rzzPSb+7v33O8990nB3m3nUV4eHp7O
+Tw8//5UCHHBv1HggJCDnvzyGsJv94z3FbpXeN/ACqkaMrxNgPfmPAoMmTVp
SErUkJKxezzK8ynQN7/i7uziGsK0fT9jxk+B/jvPlt6fV0PObaT9vraIAquf
g+bR/mryvmfNt1UyFGDn8U28LKgm0eTzO6JNAXrpFav1xtWkQsW14KkjBaa+
DxULUaqI+X0dtWAn/PzIdM9J4yrStnYqmelMgbDyF8e5UEV+rA+K7DtBgXj3
FWlJelVEReeO0zI3CiS0DH43X1dFrpKaVR7eFCh+XiA2LlJFbPavjFC9SIF3
ulv8q1rZZKD9M+84OohStfJoM5v4HHhw5vklCpy7ep0qwGGT6wc3Ht8bTIFV
82Kt975mkyoHmlFQKAWyorZ5ipWzyToPn98fIykQG5b4ROwem/y50uBwO54C
2l8Wh3l7sMmSotYPBxMo8Frqg3moK5sod3fvVUmkwK5Sl8S7J9iEsfknpegu
zneLlfi7o2yS3COl3pRCAdYg18jDmk1Mt9lNiNynQJ5ZtvdhYzY5cMzZ9R1a
oFXINm87m7jfONWX+IACD3u22vMRNonrC25f/4gCn8diBkr02GQ46mE5LYcC
T4K7vuzewCY3h38GhxRS4OaG+zsPy7JJptTMLKOIAou6C2FSmk3KjPhPL3tC
AWWZjI7rkmzyNVbaOa0Y5//+s03Nomyia2JgwXpGgXmN5hduCbBJV2KI5Gwl
BQxsNTTm/2IRNUuZTO96Cuhl9tdltrLI5GtTAYsGCgCR+17YwiIvTL2cVN5S
QOrRx5yXTSyy3/DtutZGfF7V7uGZtywSoh6cp9tMgetHvt/LqmWRz8JjT/92
UGAgyU59cSmL5FxeKdv8ngKJ9yr4PZ6yiN98ekBWJwWcb1aJdRSziNjfDEPb
Lgps+CV6v7SQRWDQhl3xiQJqpqmLynJYJKG2tu5CPwV0QeLro3ss4mg8qW49
QIGLyuYvD6WyiE6l0jXtQQpsFTb1kE5hkdfF56w+D1HgeXrDvNi7LDKVsfGd
8XcKjPgut34bxyJVivZb5EYpYN92+Pn9WBa5fvda7AR6oOb3k5DbLKIaM2id
8YMCPBIORsxoFtkbnPxx4SQFNrZKLZG5wSKK8xqgG71ItMNc8jqLfAv4m1Ly
C9/Pwf+r1DUWCfLa6+A0RYGalakSqldZ5PGRRQOvp/H3zdwy/a+wyBKj0z+u
zqfCn4JLNQMXcbziUz37+Khga5pntxkd8vVMk8ICKpxNHHYJucAis6H+hUX8
VKjOfF+uGcgiI2/P+XwQpMK6q0H52WdZ5GHK3LFMISqsz5DftAx97FTgPg9h
KoQlWc+cD2CRLsmLugsWU0Fj+3eTQ/4sUm8b/Gf9UirUJEesMj7DIqEb+Icm
0fZygprVp1nEeN7l95WiOL7o/P+o6LK00LLd4lQYDa3vsfZlkayh8HMBklTI
eKe4MdUb16N8kZupFBXeRY16b0MrX7t6aKk0FdIdT6e3euH6aV+DNBkq9Byb
KZZGh5+5yVu3Aj+XbBAr92QRU3Pxn9FyVHAas1U7ieaVu/X50EoqHJvbxCeP
9quMrvq5igq9rAUDVz1YZPNNyaJyeSow5+QHKOgfR26nX1agQlXAm2h+tPPC
uBBZJSokU5Z9vOLOIirtMr5f0WNybe6W6J6Hd47nKlNBxsgjTgptbZFA2aFC
hcagk3G5biwiKS+nt3gNFYzVxo+eR3PHEte2oo+sjy2wQlOjk4ROrKWCx+7z
ZTOuLMJ3XP7vRjUqUOb1urSiK3VThmbR8dL5oQXoACHFztp1VHhv6yl0E63b
mVp3cz0VAm+VDnuix7OVym3UqfD7/Eq1vei882nZKhpUKPu8vnwb2sVq9d1R
NLl0OlkJraqUEflsAxV+KkQ1LEZ/GVc5H6RJBYtLIkZ/TrJIck2mm4UWFdjO
ARP9aJtY1cPS2rje8a6f29HSzg+YPeg37T789ejmbWrbs3SoYNKv8h8LfX3x
Iy2fjVTIClv67ima/nGdImyiwsmgat8C9ML8LDGhzVSYF9eqm4v2a7Ia+oJu
CpWbzUIPT0yyn2/B+RXavjEbfUg6IeGOLhU2pu9v/vd97tbt3t56VLjS49da
iDa27WUwt1LhNK1icxm6+Hy4yrptVDh+VG+oGq2Wqjm3QJ8KxaW8Ixx0QlVL
azf6dYumbjd6SZ9fXqkBFfj0O1ij6IuC8ldiDHG/+Cy7PP/f/K6rtvMgVPAS
mTorjT5u4byVDlRwC49P3oDucF8ivmY7FWR9xPspaHpU4dA8Iyp07vVlOKC1
22YTindQQXGF7d4UdPqfe943jangKrpomIWWlqNanDShwr6V84J60TN2UXOK
ZlS4liyVpIP14h6k2zaDvqdyTMIW3ZPxIa+NQoUPX3e7h6Jrh9bYR9Jw/2ud
rPyC3iZSv9XJnAoODeyMZVifOZqe4sZ0KsjVSOynoKO8y6qmGFTQ7Zube4w+
OMdcc9SKCnUdHvcSsP45CpNzZCcVtuqKyb9HGxvHty3fhe+rY6cpi/tp7ZWv
Vxp3U6FS+ehoEnpczG942370B//1padY5IrKvXyxQ1S4ORcfqu3DItMUStg3
9Js1T3gvo11PfLOvPYz1eqovpRO9O2+LxDl7XJ+4AZ1wzIeVW+t8Bo5SIXLB
5y/jmB+FjIltlS5UECqycx3H/MmR6ZK8fZIKG3yF1PZiPj34WjN20pUKu72e
Rpeg756NzZR1p8J+P54j5zHPQrO3ifueooKj5pKVEuexnhdfHFT3o4KBnLjt
bsxLvnqRuPjLVJiuaNrEi/k6G/vrlGcozk+TlOlJ9JRDtwX1ChVMf0tsakOP
TOfz/QqjQsjbpdHZYSzStn6P+85IKjxTH0rfE4H5FhFvJhhNhcQLIjujMc/3
0FUnfVKp4EvXEE7H8wBcHQ6Te1RI2XLaYAqtdj359cI0KojUiiXSY1iEp1k6
KTadCgu+zjSMorMOCFKe3afCgaMCThp43tw+a/L44gMqPG7U8fBHX0y6sML8
Iebj1JaAl+h9n6dG3z+iguTNyGAbPK94TwzGzeRQoWUDp/HMHTxvIlT4anKp
8OvjygMV6LYce9fIPCoEH6svnxfPItk/OoxWPaaC9nzRX0Ho/X5vhqCICg2N
kWkBCSyyI2HhXsEnOL9hxLYYrVGxo5KD/qLdzh5F8/GW3bIvwTywDQ8+lMgi
uVeyDIJKqaBz0sx0PZ6ndx71Z9LLME/G49sPoIPqlcWWlVNh8JLd6BW0tWhi
b3oFFfSq50d9QpvotDNdn+N+P2skIZzEIpp7lpVursT8f1M2XwfNH3f12ssX
VIjif6hyDj327NXUNRYVPiXN2qagOzsXOOxnU4Hj/5afjc6XP6c7UEWFV2/u
Fs1LxjwwepaaX02F4cyp5yvRIQ6Ti/xq8LyIuWK8FW1z3/WTUC0Vos/Oq3ZB
m71+aN6EdvhgUn0JrT3cWxT/CvNV/jQlDr1CREne4TW+r18NMxu9UPNQ2Po3
VLBcdaj7OfqHVfz4ODpph/tUI7rzVOvB8joqaMqq3u1Gv4wWfxVcTwXRjsLG
EfTjYksdiwbM50LjqL/oxPbwRMm3VJj4sKCfH/uV0L8vF35Ei4WrcJaiT8nx
eWY2UqHoezNTBn2QQKcbhwoDhDjJo6l2Aaa6XCpU5EatUEFvvFSSx9OE++EU
z0k19Mr08eWv0KcrCmzU0YIvNYNvNFPBr/r9Nw30Q70brc4tVFidbiC1AU3P
Gltr/I4KsRKvHvz7/sjKnQFyrVRQrze5/+951288bphEm4T6L/v3e9p84gqN
bVTYPqc1vgrd5HPq1IN2fP6Qptm//stroKn6YgfOFz+ILkFL2myUtnmP+Sm4
Zg8fuqThlvOmTvw8O3vZb5wP6+0TZSIf8HzIit8ziJ4u2LOkH73heYnU+3/z
pfLE7kUXzndS3cHXaMM4ycI7H3G/8Cepl6C7hX35vbqpsCfnV0gaWnlsyyOV
HiqY37P+chpdcyR2Zg4dcmT822H08Xe/Lds/Y35Tda6aoR+WPh0P/4r78cTz
20vRdI3lZkd7qVC/PEHgJ9bbSLJfnGEfFYRb9Jc3o7VCthmO9WO/whxQu4nm
/o6//noA8yUoaIMb2uvEdM+9QVyf+7zdNHQJs/zy3mHsp+7XWM7ifjCUJZzS
71SYrDMp2YPuvpqkFD1KBZ66RidV9AUeHh/XMSrcDgn4MIX7r+pr5XKFn1QY
Et8jGYc2zzNyCJmkgnNLj+wr3K/DiveeHPpFBa1f5utvoiOj5wvq/abCmSTx
ZdZorl9V9tAUFWYdP/j1/ssDE9NfzBkqbFPR+TqG+fGnOIOqNovrwXLkf4yO
V1uYMH8O8yZ3q6QHumtJLTzhoUG2A3fRMObR0Q5qmCwfDT77P7jXgnnl6caQ
6xWiQfvNkt4zmHd8uvPm8oRpoKt4+MYGdAxPUbf/IhrUyh/y+oJ5+ezGijRR
ERpM5LsNm6N5C4fUDERp0Caq9UX0Fovc+H1F95YUDTy1vwz7Y7+dd6Fml5Ey
DY7TL+u2heN6RJGwuwY00LoW76CJ54EA/xbXo4Y0eFbZurj2HPbnpzV2ric0
6DWlXDyE3mMjt/wZ0MD3Or3lKp4nZcp/H7TsoEFw09VD/XgehRU9ebWIRgPx
H8yeGDyvVFrVBf330uDc3trwfjw/gbr62/Z9NHCqji47i7YuXcER2E+DA5de
TYuhryYJx8X8R4PEdYMFBngejx8fUH1sg/PVX6p7C/sB1u80yoA9DZ5+mz1j
dgL38/IVofvcaMA/MFbd4oD5+2HL7g3uNNiq1uDriJ5L2iW/0IMGaltpEX+P
YD+3OrzkiScNEtQX9CuiezT/9C/zoYH15oonPnZYz2Zt1OYAGgye+Cu26SD2
l0Ljy7LO0mCoyG/TW1ucn/olPZfO0UDBZU2vE/rhTjM/nUAahAcNTyfbYP3Y
Pnl48xINRnVt6ZIHsF/xuiVsFUaDDPrt5lX78f235LWqhtNAxDdKvmofi4j+
eXOPJ4IGax7RVJzQj8/P18+7SgPW7Xqnor0sMhHm6bLkBg2M9trK7duD/WEK
s77+Ng14FhyJfbGTRWgOLnHpsTRw7yuq8UTLrgk9ejYO58PDqkMZXZb1fGZ9
PA2WfjIpC7fC87xYQyPiLg1WCNgUOzBZ5FLDomu0dBrUiUwPmVhgf9PnPyie
QYPfJR/6hNB8PEMmH9AJBoqcRgaeB1qvpt3u4+/TsrwOocNuBTtHP8L1i8s1
CKXjfsoerz6YRYPd26N6dqMX1RxRUM3G9XgUFqKIjvy1ve1ZDg3O615trjTH
+rSeNenOx/EdqasRRO88dTLlwWMaBBjrpXbR8D4b0TntWUADylvnyEL0rfJn
BQuKaFCyezzlCHrPu7VL3qL1rpTU66Mlv8c6xz6hwbsOGXEpdKy8r8K6EhpI
USN+NlBZ5D+93oBx9J0kwags9PKde9rKn+J6hUzvDkcnXNK5xiylQYu/LJWO
tk1IHZQpowGwC85roFcWiZp+Rm9bcueTKDqp9/u0dwUNYlTXanZSWOTw3MH9
5DkNmjcYKrDR8tINBQKVNLiZdcb0EfqTpsESLlr17umUW+hUapZz/AsaGHwr
1zqPPmIvW+PAokGBzd5JZ7Syf5iCBhvXN9diZB86I8uxrbKKBruEbnptQh+v
btUJq8b6iJ3kUUGrdple21VDgyXLRsqk0AOTRYMrXuL77gjOFEI/XLLatBdd
31v7fNaMRU6o3krJraXB5RfVfOPo9dvnz5x+RYPCmFDvQfTwf577jV7TYOPa
laI96GzPTwXCb2gwvC3qXQfaNZy5pAVddWO8qhmtkfbc+W4dDZK/Wbx/i/5e
plFzvJ4GR8VypevQeS2JCloNNJhiKQS8QnuMLDr7B01YBXy1aO2FAW3st1if
TR75L9E/Vw3pXG2kwekSxwv/Pi/Utb62l0ODzZvST71Ge1u9GlzFxfpatPFy
PXqzs67pANqFR7GUg/51MTPlcRMNcpv9RVrRJfGSM/7NNOgztwj8gD5TGLzf
pIUG06oZS76it9aPF4i8owFX43rpN/Sfr0eWtKEt5GUu/UKXznKdU1ppsLOS
cZQX51Pb8ViOfxvWe2mi25J/88uZGtvTToOcnlK2HFpx29VNmh24Ps6eh9XR
d9Lkzwi9x98LDjc2RIuJFJZ9QbOcOK5M9BVfM57nnbg/qCJdR9Cnaa6XT3XR
4ExddEgkerRg3hvGR1yvVq/ydLSjXLSIajcN1uWc2liB3jdaGt35iQatV6c+
/EA3/GfZ/qQH339WQmQJ1qspu2fFjc80KBc6c2Y9enOMYJrJV8yzqh0zzuic
uYS+Vb00MGk3FI9AqzhprvuDNvrv0aEc9DL9fY9z+mlg7zTv9iR6/FNapdQw
DdJ9n9tG435zMdfl+4Eevn5kQSX6S+Ebs7pvNGAUvm4fQjdd/tEQ+B3Xv1+I
zwz3+2N1+DDwA8+jYnd9YcwHtdtN8lU/adDVQFMl6FSe4w53x2mQdU1vixf6
RtPVoZ2TOH+dZ59+QrufeT9VOoXzt+u5+mvMo/4eV4OYP3jeHbFZuhDz6xCd
94L7XxqUlR5a9C/fLFatFVg9Q4OaZSzzKrR6tY9kJI85iMmJ17y1ZJE0DSFr
x3nmwL+KZ+cyzMcVsYmJRrzm0C6Q/u0AetGJKuVf883hyRFiOYweXCqmc3ih
OZR8boqTwby9b5NtqS1iDotPOxmk70a7BUULLDGH0S1jd6fQmRcPvO9CM0IK
f1pgnmfcFzweLmoOXjb/eU6j08aPnvsiYQ7HGhel2eN5kByxMjtG1hz+601p
s7bGPCu7JvRX1RxCTMsv/jiMfnuMyVlrDokJb8WP4Pl1u8cgJlPNHFaMnTnV
jI4RGFbYvd4cLJR47zy1x/zcTdHL3mAOgZGcI1fxfLw+zON4aLM5hF37OfCf
I/bPKzyr2TvMYWdJQNk5PH9PByfcCTc2h4x5C5/MoB1Hatx2mZiDk5XXjn/n
t1ml7PLPpuZgPwuS5/D+y+9Q7cpLQx9NuRDixSLBj6SltzPx/eW9k/KxH7i4
9blzhY05SMis9HW+wCIB+xctfeptDlkOyre0sV9ZzXp2pP+ROairL+VZ+QLz
MtMwwr/LHEQUJSsKhjFfBBa82PvRHA5rT3a6fMN/7/hmQqvbHGT5cgpWj7CI
9Nr9h/o/4foZJQfGfGcR5kMP7T1fzWHHJdfDXj9YpCIrrU1j2BzGfmX5rPqN
+zFfaHXPlDnwXQudUJ7PJv2inP/K/5iDw/WV6hz0Zs/bkbF/zWGK73hnAB+b
cLSVf1vMmAPPXaE73AVsIlBo8KaUhw4SQ/7/+Qqwic8Td4/ohXQYqZ+nmraY
TXaWviunLKODVbzH3wApNlGt7h5fJUmHTSMPLotKs8lMw+C6X+g98wp3pqPv
98zGpUvT4WtLRuJrGTaZFVzjw7uCDmVbBjjCK9jk0X5fjTJFOvi3jwodl2eT
QPsLR6OU6DApkJw8gt7rEp7grEwHrdyavd4KbMIbmCQko0KHkPrPKwIV2WR/
5ste77V0kLYi78OU2YRvUippgyYdZNzCfU+psknHnMI7fi06uH1epDWMzhVc
v7gLLRT8aPjIWjaxlgP/CB06PCp/YM9UY5M8Y8d9A5vpIMAXISG3nk1so0qW
3DOgg0f3r95LG9hEO5Fl6mdIh/55mV1DaIHMurNWhA4qC2We7dRkk8Jn3UNz
QIdEtVwJOS02EeoRqLUxpkNHc7BSmjabPNH8L1DSnA5v8odnz2xik4DrT0w/
ohOEbya9QhuNii++T6cDc/EVDenNbNKQ2xCnZ0GHiGYj0cforxrGBTZWdNi8
sLqibQubPIxMObN6J77vptaMVbps4j4yS0bQa+71ux9FT2c/rTu/mw6dwt1p
39AS6ht6U/fR4W4aj92oHs5PRETWif10yHccVtfYyibJwwOeG//D+V4Q3OiM
Xp+VNldtTYfoqKjr3egd65bLDNjSoe3OAk75Nnz/cN+P+QfpsLF4i/wPdMNg
c7rfIToQ4yrd1fo4vw+vaS+yo0NQAPv5ZbTn2gX0DQ50ePxH74+BAZvoXrEX
+4320Frl5Iie7X/eVnmUDkoei6JvoMPu+x3deZwOAa0tct1opkDbOllHOug6
JPouMGQTScdNPz6j+Wt2hK5Fp6wZPeftTAeelvm1J9HHLjNMDE/QYVu/wPhV
9Pq+h8ILXeiQncBuzEKXZByNjT2J9VykGdOLPsfPPmjnSoeY8w3+8wibGB+T
X63mhvNR/FtYFt24+n1+qTsdrm19tZqGjgnWPR3kQQe7YeusQ2ibr9GGDE86
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$10429#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10429#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.01438932779628, 0.25442372579979555`}, {
                    51.291768548314856`, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.0143893277962786`"}], ",", 
                    RowBox[{"-", "6.708231451685145`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 27->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$10593#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
qCDDD8aWyVT8flWLhdzZlWT4t3nZQQg7jvA6y/cDGbwaSPI3cXzcYtPIxlW4
flQy9CpwPE+PJ0wdqCaDbFDd2G8cb3n1yJB1NWT4I3hFdRf2+uAnKn3YB3j2
n1PG+Rnsf9iR/xHP4yy27UGcv9IDPm7+tbh+VQ8mSuH8OtMdS47U4fhtiJpu
wfVBkrxmurGeDJfbhEwCbrHQ3huX/w1jj94RcD+E66lX8PTJ0EZcXw9MLc/e
ZKEiC8JX689kWH9x+90mXJ8hRZoPURMZYoRVvqk4sZCOkUrjeDMZrsmR97Tg
+s6JFTTQZZBB6/XhhJOWLOQ/zvdrZxue147NckevspCF+trIOWzg9VASu8JC
ogO/el504PlZPapWZspC9yS7riwzyTCz87Cd9hmc7xsta9q68bz2dmNVnWKh
ozWf0jJ6yJD+6sGUEhXn16J47GwvGQ47/0j8qo/7OSPaOXeADG9vdGu8PMFC
B/+ECD5ik+HInrCVQjUW2kj0LzL7Qoao+M7gt6osVDPu8Yd3iAxynS2Vz5RZ
SEHxgq/lNzIYkBP8C6RZaPXbXaHbJ/D80FtdVMzNQk2mNtVD2NdKBkx01rFQ
1JqiuaxJMlySDI1oWI2/f5p87vg0GcbM2Vpvl3qQ8YTnDtNZ3C/dfP1SEz0o
Z3d3WsIiGT5kzNdfb8bz+umzEol1FLjZFFHlHdCD3l3j+rpXjAL7b9B4r893
o2OXb61wiFOA4wznB+mZblRq9H1bD7aFdoRF/49uVKlbRwiUpACC29sIX7pR
rfSjnGlpChwf3Gu+6XM3av+y/vY7eQrAkYXKGy+60ZTx+i3EYxSo2ENrLiB1
I8dTbvJSahSQSbv175ZuN/qpN6L9F9vJ2ocDNLvR/JFPt96oU2A+lryx60g3
Wt76sH+LBgUWeMrj9+/uRjyMdZm9uhR4aT2Tl/CHiaQJ6zTsDSmwtNtl8sUr
vF9H1o+qnqWAeYpAlHEGE3F9DQzlPEeBoBPbZrelMtH4nS3DUUYUeCBkeDwj
jokKCsUfVptQwDQ3IUwikIm0JNSahK9QgH5TS+q+LRMV2a+4DGFfeYNqi6zx
eaL0w67X5hRYZ5q4deYqE/Gd03M8aUGBHqsANR9TJmoPNNxib00B7qjNO/mo
THR1wcG42p4CmVq5K79UmKhTW2V1sAMFjjYPGH1QZCK9Z/OZRo4UkJNyvBC5
n4nkFbyWJ5wocC+gsN98LxPNmfsnCrtQwDilWc8XH/osc8l6Q9jHJtZZpQkz
EXOFf+aVKwUk3iTKd25lotLoSM2TtyhgMjcjb8zPRPdaUr7aeVKgii3oOb2W
ieZ3WAer3sbxp5DILpxMZG0jd4TTiwJqXwZr1q1iItLavEdR3hT40Cy/m7bc
hQTVKuSq71IgcPeBrT6zXejBI9/2IF8KZImaBNjh89hCh7aXkR8FxIaHU6yn
ulCv4+fmiXt4vVqbNR796EIpad1Owo9wfCPqIhyHu1BCPHvHADaHyPrizsEu
FBU28in1MQU+Rs2PEL50oQDfXztVAijATgv8Ydrfhe65L9ctYlfD2qXl3i7k
7ch5szKQAqOTjKeZrC7kbLa5gRxMAaHEzZ+UuruQraGwi+ATCrzOPpPMy+xC
liQxcRZ26tenXnOdXejSyT2NL55SoIb65sZ4Rxc6f2y/q3UIBVqno5Jn27vQ
GaWDEgdCKRDSfFiOB5sio/b5FzZ90klGsa0L6YlpupU+o8CZcyrvLBhdSENI
X9IvjAJDG64uZdK70LENtCb9cApoCU/wcWAfXHPuFn8EBU7cfstr0dqFFJZM
d3dhx6DsrT0tXUjm59Xm+EgK7LIu0LuILTl63f1qFAVCl4qr5pq70A62s5Rc
NAVK/yW9iMEW6nJvmcG28DDhPIXN3+zjURyD1+PUuFYYm+fjQ+k7sRSgjbFq
p5q60JrS4FbtOJyfHy5XmdgreeGefPEU8Hf3XaZj/86I29OGfTZ2LLsXe/p5
Mj06gQKks5HPFrDHIjNvX0qkwKEcp2Zp/Pzh4Ny9e59ToPP1Fc+r2P33ixkT
2PPnDIoLsJm3K7wKXlDgQq58shB+H8aNWhnPJBy/yi5jf+zPNk1tGsn4fQPV
/2zC8fh4ud2bK4UCnCK6SS+xy41Y+1qwKXZ9Dqdw/Iqpg+3hqRSoDR712YDj
naczeudCGgUO+J2ZZWFnq0/L7n5JgdO09V9LcX7SDv7uGMWeXxq7kYPz91xu
xScnHecn4HtZEc53jORaebcMXF9rR9ktuB6eifB1qWdSIM+h489SVxcK5N/i
uyaLApItEfvUcD09WC+6vxF7cZ9QQFAPvl/82utn9Ao///tPU9u+LnRzXEFB
7DXuByNJ3kVcr/ZDh7q/YrN78q9Es7vQZfrJAzdyKDC1/8Wjrbj+z9cReo7m
4njztITOfMX1VnHqPkceBS7xc1Z8GcH19eoiKyifAvY5Er9WcP9oplg+OFNA
gTVn+4/JT3ah47F2StsLcb6Pa4vaT3chxceeD9OLKKA/WLhT8VcX2mYRqVL9
jgKEQ4m3c/B9qC67qjbmPQU0Iu8H1axmoltzE8bOJRRIco5ZnsHzoMdPy0ei
jAJG1+SCo/nwfSZp5vOdSgqkbfueIYbnDWlsx6VzHyiw3aU4abUYE/1V0ptV
qMKfbx1//k+Sicw+JIj0V+N5S3w8piPHRBJsouXxT3geDX0yXavORIy9botb
6igwXjYpn6/BRL4OSYE/sEX3P/Z012Gi4ZWFvJgG/H5h4u0UGhOl7Uz7t9BE
gX1b+Hdts2AiOROO6MJ2PP9pafazoUzUmyQnH9RBgW7taROBaCYKHDtbcbUT
//7y51KdRHw/c3/1dQsTx9tdR2gqi4lyos4rO7PwfNF2bFOtZaJDnQWNCoMU
aIsxaL2/gu9/p66tvJzC/cbz90XO7W7EnhwRd5qmwO4jsbeC73Ujn0DLk8dm
KPBmtC7HPbAbVX0yf/T5J97f2txeusV1I50TZgIzv/B+aJRmvKEM3+/kDPYc
W6bANnmT/V4cPejCWnXKZy4qzG/47Gz8pAd5vONPmJaggvppXk+TGhZivMxP
b5CkwrEPO2WVWvD5OeJsfspuKvzxvzLB08NC3c5xdUbSVOj//fFb/RQ+f8rL
zFbKUCHu7Sdxx+29aD4B6YUcoIJS6+mnSjd6kfM9+59K6lTIc7Q6vXd3H2pw
3vyX9wQVstN3te5U6EOSlwvWf8Muv7dLUOBoH6Kr/9kRA1Sg/TwmPUvpQ4q/
7+uu1qLC7d3vR0I8+tDktfg4BoEKRwfsPm+l9yEb6medG0ZUQJ/8uTvd+1He
syr2CWMqvDp+R8HFrx/96Sr24DlPBYHeK9/4gvqR/6XU1y9MqHA5t8hG+nk/
ynTyFmo1o4LnlQbd+Y/96MczxW/yFlQI13CwmN00gGyZYfe/OVEhgUe0TC1u
ABXsCBDLc6bCxWy/nPiUAbR86e47rxtUEFLvEJzNHkCBo3YTgi5UWKM1FeBW
NoCy/+gYnrxFheNhqkWDfQNofMei1HNvKvi3uq7btJGN7C6b1hgHUGFEIy39
ng4bHadGXpIIpMJBU4PXBfpsxKdOX/6O3Z5cptJLYqNsYe1Dt4KpwBlu4bjZ
gI3GW+TTIkKoIHdI55nARTYqLbPUNAvFf+8Wc1++zEaBWc/7pZ9RQd528mTf
VTaSeyi4rTCMCq6a69T8bNjI5sTyw7ZIKqzrMw8xc2GjY/KHpWKjqOC7T+bu
Xzc24hF1rLwSTYUz+0RKQj3YKPPX0MJMDBVWSe+sTLzDRqPZjdf4E6jgdWx6
WuMxG1lvjyWSU6gQTOn9Fx7DRqrcHSOCqVTIJ+X4PI1jI67fG+/1Yqs+EBfy
SWCjdIZv6fWXVLgU5KR0IomNRh7b7PfPpMIRURG+gxlsVOSWUn8qC8dbQkCw
I5ONHlj0W4hkU+HH3oFwm2w22qNxOiH9FRVUtoa8c37DRpYLRzd9yqGCW0Kk
+a8CNjr87UZWcC4VPjbf2KFaxEbr2l/pns3D9VRlUmD/lo1S30j4fM2nwq7O
MZW379joZrzJjlcFVOAdGZire89GWgHhxTcLqXAl/rZucwkbDVtyz3C+pQKp
V+9MfhkbFZw5GdSIzTasHQktZ6N7ml77nhVTYeDswwqLCjY6o/j24/l3VGjo
Uq6Tq2QjqV0zlyXfU0GC7jA5jD3HK7cyin1V7euukA9sVLN4NSa3hApbNh3T
Uaxio7CRhMPupVTI0dp6qgrbvIPJgDIqvG/fKa9bzUZjW46cEymnwo7hR3p1
2I6nw1kz2Cp80blHa9jo99PZiw0VeH074imx2N4tp4aTKqnACJzgnsBeszHH
2vMDFVrmdn1X+MhGAaSNEwZVVPiwoLR0CVsgwNZJvpoKVkuahn7YUfUNv9bU
UOHRRXuuCGwxrn0efdhfHrbuicZO03m4UviRCmpd96sCseXvf/UNrqWCQU7m
hCN2fvXJ9VafqDDtYvJeG/vY6qQAVEeFNv+CY7zYlcDBL1xPhbJTDJ8PeH26
d8zCprGd99MTrLGby0qF6xuoUOjTlMaBfWZZNP5FIxX0Xw9lPsbvzzrmLuHx
mQpTwoplnNhX3LtSTzdR4frulil7HL/vbw/JyjVTwUex70wjjrfD/LPXnC34
80muK8LY8wd/Kvdie/a9XTmH88OZ91otiI7n5aFkYibOr/80X6UFAz9P5EFp
Gc4//4HrWifaqMBF8/1cVcpGu7L3kqfaqVCjoSqQhOsnZew+/VMHFa5Vydre
xvUlt2/Y8HknnlcS6a/0inF/pD03O8WkQsiawgNvC9moYnhlcF83FZ5QvMKM
cf3q7Da1Wt2D62eV5r7JPDYyeC7imM/C8+WAstwkrnf7mNC7WweoUOtUF0DE
/TLHnF47ib3ACL5+9yUbeW6j+teyqeCRf5AvM5WNHoXxPnMbxP3t9ZTZ9oKN
koPvpXR/xfW6OjkqIJqNZJsGZfK+UWFMzsfDOJKNcng1XvmP4P4cE3stGs5G
5Y/+FqqNUuF+nrCB21M2Yvq6foofp4K4Os+T2AdstNHNeuzyLBXqUqtfJjqy
0X1e0RW5OSqEuiXM9tmx0XJi4+Z57KbBvQcEruP6rVM46j9PhWI3uZwLFmxU
K/rrYd4iFVYfU3X1NGYjNFAZuoqDBs+3es2NIzbyyIiOs8R27dsqGXIcz4cb
zmmN2NvWz8jKH2Wj/VxS78NX0WDOyYBbV5mNtis9/LKPkwZJWrzhm6VwP/iS
FU+vo8G6NpOGdevYSJm859hb7GGhqVCx1Tie2/6d3LGeBizuXK1LywPoa1bO
uW/YbsnSL5zGB1Bb+5Y7Htw0CIlu2dDeOIDe7OlpSuKjQZcnzSP34QCyarC8
PitAg8e2hh/i5vrRSump0UtbaHAhdYVXdqwfhb05btWM/VmMbpI+0I+qwgTM
MwRpcHlH1/NbDf1o18Xy8xeFaJDPl919PbEfdc5uJTSK0MDywfPWMp1+pLXz
o0yyOA3yPoxKCQX2IQnH3d9OK9DghXP2dMMiC3XoGGYo69MAqN6RZnn4fviO
dzoC++vKjlSFNCbykKs6vIQ9ZLQnb1UME4nzH6ipJtCgIyFePfcuE9l2cw2c
IeHv394FR08x0RrbUkE3Kg1+VV3bvQ7frw6G7PYpMaQB/ZXM0IWD+LzKmjmr
dQXHz9Xik3ZrB9J0fb85F5sr74cAo6YDTfP7fd5pToO4NA/1a+86EElHUPM3
9s6tmXzFSR1oXe7h/ZkWNJi4JZDQ6dKB3B94cvJfo4HXqNTQpl0d6KLS2hyW
Aw0y2uRfHnJtx/uXMPcNLxrk/MmKNz/Zhhif/QOY2N6bwzyXjrWhWwJ/N5zw
pkHw0q4fMcptqDb+iwD3HRpc1I29Mi3Rhi4VZO5I9KFBZl7ijzmONhT25bhi
ox8NJG9Z7TOrZKBltcvndvvjfH50cLyjxUBN0xmpbRE0GEkl8ttfoiNV3hP7
jkTi9U3q8bUb01GSNCM7Blvrt3oUMqAj1/N/8i9H0eCDvor2Xh06Eq8hVE1F
02D1vM4RVXk6uhn5o583Hr/v45+x5xdbkeiJ/cJayTSgBZlYOke2IuuAHP+C
NzSYZS9M/qhqQQrNZ33Fc2jg/EykV/ZtC5rj/+seiG026TXunNWCfCL0r13N
pUHCD1flXWEtKPLFoK5gPq63PVPOAxYtqPat4NqbRTRoypGo+cvTgnYP37qj
UkYDw/KuKCWTZtR/XONmXgN+n77P4YWbmpBZ9nG9wSEauHurJIi2NaDnbMGK
08M4fosyH6zrG9Cg4MShauyrT+b7iisakJVX/O6UrzTgPpksfTG7ATlSVlYs
Rmigp81Jr7nfgHynKwpHx2hwPOJL4ZJqA3p58OTumRkabHI+nE57UY/GrLfH
XP5Jg+iE1LqJyHokHz/Lz8Cujzo8EhRcj3LWpqzkzdJAXF4XdXnWo/eda3pu
/qJBFmHoxJOz9ejzrdqnCwu43vR5Y2L56tHGVwnrry3i+sjKsrXlrEe0L67e
3dg7C0Mr4E8d6tDfa/v+Dw3u/CxbNzdSh/pFH+neXsbz4pn+yv3qOiROvVQ+
jj2aPlB0430duuKnesj0Lw1O0JsVLXLr0MiP75InVnC+QzUeGyTWIVnxD9Gv
sXfVct+iRdQh2zPR/GL/aFB8skDvVFAdev3I6eET7Cgjc86z9+rQdKn+yj9s
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10593#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.01136767833593, 0.25442372579979555`}, {
                    51.29203946953163, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.01136767833593`"}], ",", 
                    RowBox[{"-", "6.707960530468368`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 28->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV2Xk41F0UB3BJspSyZEnKlqTI0kLhnmSZGTOM9ldUpEKyZSlUKiSkRUTI
kqXFGqIsaQapkBlkSZLKniiUsrynv+rzzPSb+7v33O8990nB3m3nUV4eHp7O
+Tw8//5UCHHBv1HggJCDnvzyGsJv94z3FbpXeN/ACqkaMrxNgPfmPAoMmTVp
SErUkJKxezzK8ynQN7/i7uziGsK0fT9jxk+B/jvPlt6fV0PObaT9vraIAquf
g+bR/mryvmfNt1UyFGDn8U28LKgm0eTzO6JNAXrpFav1xtWkQsW14KkjBaa+
DxULUaqI+X0dtWAn/PzIdM9J4yrStnYqmelMgbDyF8e5UEV+rA+K7DtBgXj3
FWlJelVEReeO0zI3CiS0DH43X1dFrpKaVR7eFCh+XiA2LlJFbPavjFC9SIF3
ulv8q1rZZKD9M+84OohStfJoM5v4HHhw5vklCpy7ep0qwGGT6wc3Ht8bTIFV
82Kt975mkyoHmlFQKAWyorZ5ipWzyToPn98fIykQG5b4ROwem/y50uBwO54C
2l8Wh3l7sMmSotYPBxMo8Frqg3moK5sod3fvVUmkwK5Sl8S7J9iEsfknpegu
zneLlfi7o2yS3COl3pRCAdYg18jDmk1Mt9lNiNynQJ5ZtvdhYzY5cMzZ9R1a
oFXINm87m7jfONWX+IACD3u22vMRNonrC25f/4gCn8diBkr02GQ46mE5LYcC
T4K7vuzewCY3h38GhxRS4OaG+zsPy7JJptTMLKOIAou6C2FSmk3KjPhPL3tC
AWWZjI7rkmzyNVbaOa0Y5//+s03Nomyia2JgwXpGgXmN5hduCbBJV2KI5Gwl
BQxsNTTm/2IRNUuZTO96Cuhl9tdltrLI5GtTAYsGCgCR+17YwiIvTL2cVN5S
QOrRx5yXTSyy3/DtutZGfF7V7uGZtywSoh6cp9tMgetHvt/LqmWRz8JjT/92
UGAgyU59cSmL5FxeKdv8ngKJ9yr4PZ6yiN98ekBWJwWcb1aJdRSziNjfDEPb
Lgps+CV6v7SQRWDQhl3xiQJqpqmLynJYJKG2tu5CPwV0QeLro3ss4mg8qW49
QIGLyuYvD6WyiE6l0jXtQQpsFTb1kE5hkdfF56w+D1HgeXrDvNi7LDKVsfGd
8XcKjPgut34bxyJVivZb5EYpYN92+Pn9WBa5fvda7AR6oOb3k5DbLKIaM2id
8YMCPBIORsxoFtkbnPxx4SQFNrZKLZG5wSKK8xqgG71ItMNc8jqLfAv4m1Ly
C9/Pwf+r1DUWCfLa6+A0RYGalakSqldZ5PGRRQOvp/H3zdwy/a+wyBKj0z+u
zqfCn4JLNQMXcbziUz37+Khga5pntxkd8vVMk8ICKpxNHHYJucAis6H+hUX8
VKjOfF+uGcgiI2/P+XwQpMK6q0H52WdZ5GHK3LFMISqsz5DftAx97FTgPg9h
KoQlWc+cD2CRLsmLugsWU0Fj+3eTQ/4sUm8b/Gf9UirUJEesMj7DIqEb+Icm
0fZygprVp1nEeN7l95WiOL7o/P+o6LK00LLd4lQYDa3vsfZlkayh8HMBklTI
eKe4MdUb16N8kZupFBXeRY16b0MrX7t6aKk0FdIdT6e3euH6aV+DNBkq9Byb
KZZGh5+5yVu3Aj+XbBAr92QRU3Pxn9FyVHAas1U7ieaVu/X50EoqHJvbxCeP
9quMrvq5igq9rAUDVz1YZPNNyaJyeSow5+QHKOgfR26nX1agQlXAm2h+tPPC
uBBZJSokU5Z9vOLOIirtMr5f0WNybe6W6J6Hd47nKlNBxsgjTgptbZFA2aFC
hcagk3G5biwiKS+nt3gNFYzVxo+eR3PHEte2oo+sjy2wQlOjk4ROrKWCx+7z
ZTOuLMJ3XP7vRjUqUOb1urSiK3VThmbR8dL5oQXoACHFztp1VHhv6yl0E63b
mVp3cz0VAm+VDnuix7OVym3UqfD7/Eq1vei882nZKhpUKPu8vnwb2sVq9d1R
NLl0OlkJraqUEflsAxV+KkQ1LEZ/GVc5H6RJBYtLIkZ/TrJIck2mm4UWFdjO
ARP9aJtY1cPS2rje8a6f29HSzg+YPeg37T789ejmbWrbs3SoYNKv8h8LfX3x
Iy2fjVTIClv67ima/nGdImyiwsmgat8C9ML8LDGhzVSYF9eqm4v2a7Ia+oJu
CpWbzUIPT0yyn2/B+RXavjEbfUg6IeGOLhU2pu9v/vd97tbt3t56VLjS49da
iDa27WUwt1LhNK1icxm6+Hy4yrptVDh+VG+oGq2Wqjm3QJ8KxaW8Ixx0QlVL
azf6dYumbjd6SZ9fXqkBFfj0O1ij6IuC8ldiDHG/+Cy7PP/f/K6rtvMgVPAS
mTorjT5u4byVDlRwC49P3oDucF8ivmY7FWR9xPspaHpU4dA8Iyp07vVlOKC1
22YTindQQXGF7d4UdPqfe943jangKrpomIWWlqNanDShwr6V84J60TN2UXOK
ZlS4liyVpIP14h6k2zaDvqdyTMIW3ZPxIa+NQoUPX3e7h6Jrh9bYR9Jw/2ud
rPyC3iZSv9XJnAoODeyMZVifOZqe4sZ0KsjVSOynoKO8y6qmGFTQ7Zube4w+
OMdcc9SKCnUdHvcSsP45CpNzZCcVtuqKyb9HGxvHty3fhe+rY6cpi/tp7ZWv
Vxp3U6FS+ehoEnpczG942370B//1padY5IrKvXyxQ1S4ORcfqu3DItMUStg3
9Js1T3gvo11PfLOvPYz1eqovpRO9O2+LxDl7XJ+4AZ1wzIeVW+t8Bo5SIXLB
5y/jmB+FjIltlS5UECqycx3H/MmR6ZK8fZIKG3yF1PZiPj34WjN20pUKu72e
Rpeg756NzZR1p8J+P54j5zHPQrO3ifueooKj5pKVEuexnhdfHFT3o4KBnLjt
bsxLvnqRuPjLVJiuaNrEi/k6G/vrlGcozk+TlOlJ9JRDtwX1ChVMf0tsakOP
TOfz/QqjQsjbpdHZYSzStn6P+85IKjxTH0rfE4H5FhFvJhhNhcQLIjujMc/3
0FUnfVKp4EvXEE7H8wBcHQ6Te1RI2XLaYAqtdj359cI0KojUiiXSY1iEp1k6
KTadCgu+zjSMorMOCFKe3afCgaMCThp43tw+a/L44gMqPG7U8fBHX0y6sML8
Iebj1JaAl+h9n6dG3z+iguTNyGAbPK94TwzGzeRQoWUDp/HMHTxvIlT4anKp
8OvjygMV6LYce9fIPCoEH6svnxfPItk/OoxWPaaC9nzRX0Ho/X5vhqCICg2N
kWkBCSyyI2HhXsEnOL9hxLYYrVGxo5KD/qLdzh5F8/GW3bIvwTywDQ8+lMgi
uVeyDIJKqaBz0sx0PZ6ndx71Z9LLME/G49sPoIPqlcWWlVNh8JLd6BW0tWhi
b3oFFfSq50d9QpvotDNdn+N+P2skIZzEIpp7lpVursT8f1M2XwfNH3f12ssX
VIjif6hyDj327NXUNRYVPiXN2qagOzsXOOxnU4Hj/5afjc6XP6c7UEWFV2/u
Fs1LxjwwepaaX02F4cyp5yvRIQ6Ti/xq8LyIuWK8FW1z3/WTUC0Vos/Oq3ZB
m71+aN6EdvhgUn0JrT3cWxT/CvNV/jQlDr1CREne4TW+r18NMxu9UPNQ2Po3
VLBcdaj7OfqHVfz4ODpph/tUI7rzVOvB8joqaMqq3u1Gv4wWfxVcTwXRjsLG
EfTjYksdiwbM50LjqL/oxPbwRMm3VJj4sKCfH/uV0L8vF35Ei4WrcJaiT8nx
eWY2UqHoezNTBn2QQKcbhwoDhDjJo6l2Aaa6XCpU5EatUEFvvFSSx9OE++EU
z0k19Mr08eWv0KcrCmzU0YIvNYNvNFPBr/r9Nw30Q70brc4tVFidbiC1AU3P
Gltr/I4KsRKvHvz7/sjKnQFyrVRQrze5/+951288bphEm4T6L/v3e9p84gqN
bVTYPqc1vgrd5HPq1IN2fP6Qptm//stroKn6YgfOFz+ILkFL2myUtnmP+Sm4
Zg8fuqThlvOmTvw8O3vZb5wP6+0TZSIf8HzIit8ziJ4u2LOkH73heYnU+3/z
pfLE7kUXzndS3cHXaMM4ycI7H3G/8Cepl6C7hX35vbqpsCfnV0gaWnlsyyOV
HiqY37P+chpdcyR2Zg4dcmT822H08Xe/Lds/Y35Tda6aoR+WPh0P/4r78cTz
20vRdI3lZkd7qVC/PEHgJ9bbSLJfnGEfFYRb9Jc3o7VCthmO9WO/whxQu4nm
/o6//noA8yUoaIMb2uvEdM+9QVyf+7zdNHQJs/zy3mHsp+7XWM7ifjCUJZzS
71SYrDMp2YPuvpqkFD1KBZ66RidV9AUeHh/XMSrcDgn4MIX7r+pr5XKFn1QY
Et8jGYc2zzNyCJmkgnNLj+wr3K/DiveeHPpFBa1f5utvoiOj5wvq/abCmSTx
ZdZorl9V9tAUFWYdP/j1/ssDE9NfzBkqbFPR+TqG+fGnOIOqNovrwXLkf4yO
V1uYMH8O8yZ3q6QHumtJLTzhoUG2A3fRMObR0Q5qmCwfDT77P7jXgnnl6caQ
6xWiQfvNkt4zmHd8uvPm8oRpoKt4+MYGdAxPUbf/IhrUyh/y+oJ5+ezGijRR
ERpM5LsNm6N5C4fUDERp0Caq9UX0Fovc+H1F95YUDTy1vwz7Y7+dd6Fml5Ey
DY7TL+u2heN6RJGwuwY00LoW76CJ54EA/xbXo4Y0eFbZurj2HPbnpzV2ric0
6DWlXDyE3mMjt/wZ0MD3Or3lKp4nZcp/H7TsoEFw09VD/XgehRU9ebWIRgPx
H8yeGDyvVFrVBf330uDc3trwfjw/gbr62/Z9NHCqji47i7YuXcER2E+DA5de
TYuhryYJx8X8R4PEdYMFBngejx8fUH1sg/PVX6p7C/sB1u80yoA9DZ5+mz1j
dgL38/IVofvcaMA/MFbd4oD5+2HL7g3uNNiq1uDriJ5L2iW/0IMGaltpEX+P
YD+3OrzkiScNEtQX9CuiezT/9C/zoYH15oonPnZYz2Zt1OYAGgye+Cu26SD2
l0Ljy7LO0mCoyG/TW1ucn/olPZfO0UDBZU2vE/rhTjM/nUAahAcNTyfbYP3Y
Pnl48xINRnVt6ZIHsF/xuiVsFUaDDPrt5lX78f235LWqhtNAxDdKvmofi4j+
eXOPJ4IGax7RVJzQj8/P18+7SgPW7Xqnor0sMhHm6bLkBg2M9trK7duD/WEK
s77+Ng14FhyJfbGTRWgOLnHpsTRw7yuq8UTLrgk9ejYO58PDqkMZXZb1fGZ9
PA2WfjIpC7fC87xYQyPiLg1WCNgUOzBZ5FLDomu0dBrUiUwPmVhgf9PnPyie
QYPfJR/6hNB8PEMmH9AJBoqcRgaeB1qvpt3u4+/TsrwOocNuBTtHP8L1i8s1
CKXjfsoerz6YRYPd26N6dqMX1RxRUM3G9XgUFqKIjvy1ve1ZDg3O615trjTH
+rSeNenOx/EdqasRRO88dTLlwWMaBBjrpXbR8D4b0TntWUADylvnyEL0rfJn
BQuKaFCyezzlCHrPu7VL3qL1rpTU66Mlv8c6xz6hwbsOGXEpdKy8r8K6EhpI
USN+NlBZ5D+93oBx9J0kwags9PKde9rKn+J6hUzvDkcnXNK5xiylQYu/LJWO
tk1IHZQpowGwC85roFcWiZp+Rm9bcueTKDqp9/u0dwUNYlTXanZSWOTw3MH9
5DkNmjcYKrDR8tINBQKVNLiZdcb0EfqTpsESLlr17umUW+hUapZz/AsaGHwr
1zqPPmIvW+PAokGBzd5JZ7Syf5iCBhvXN9diZB86I8uxrbKKBruEbnptQh+v
btUJq8b6iJ3kUUGrdple21VDgyXLRsqk0AOTRYMrXuL77gjOFEI/XLLatBdd
31v7fNaMRU6o3krJraXB5RfVfOPo9dvnz5x+RYPCmFDvQfTwf577jV7TYOPa
laI96GzPTwXCb2gwvC3qXQfaNZy5pAVddWO8qhmtkfbc+W4dDZK/Wbx/i/5e
plFzvJ4GR8VypevQeS2JCloNNJhiKQS8QnuMLDr7B01YBXy1aO2FAW3st1if
TR75L9E/Vw3pXG2kwekSxwv/Pi/Utb62l0ODzZvST71Ge1u9GlzFxfpatPFy
PXqzs67pANqFR7GUg/51MTPlcRMNcpv9RVrRJfGSM/7NNOgztwj8gD5TGLzf
pIUG06oZS76it9aPF4i8owFX43rpN/Sfr0eWtKEt5GUu/UKXznKdU1ppsLOS
cZQX51Pb8ViOfxvWe2mi25J/88uZGtvTToOcnlK2HFpx29VNmh24Ps6eh9XR
d9Lkzwi9x98LDjc2RIuJFJZ9QbOcOK5M9BVfM57nnbg/qCJdR9Cnaa6XT3XR
4ExddEgkerRg3hvGR1yvVq/ydLSjXLSIajcN1uWc2liB3jdaGt35iQatV6c+
/EA3/GfZ/qQH339WQmQJ1qspu2fFjc80KBc6c2Y9enOMYJrJV8yzqh0zzuic
uYS+Vb00MGk3FI9AqzhprvuDNvrv0aEc9DL9fY9z+mlg7zTv9iR6/FNapdQw
DdJ9n9tG435zMdfl+4Eevn5kQSX6S+Ebs7pvNGAUvm4fQjdd/tEQ+B3Xv1+I
zwz3+2N1+DDwA8+jYnd9YcwHtdtN8lU/adDVQFMl6FSe4w53x2mQdU1vixf6
RtPVoZ2TOH+dZ59+QrufeT9VOoXzt+u5+mvMo/4eV4OYP3jeHbFZuhDz6xCd
94L7XxqUlR5a9C/fLFatFVg9Q4OaZSzzKrR6tY9kJI85iMmJ17y1ZJE0DSFr
x3nmwL+KZ+cyzMcVsYmJRrzm0C6Q/u0AetGJKuVf883hyRFiOYweXCqmc3ih
OZR8boqTwby9b5NtqS1iDotPOxmk70a7BUULLDGH0S1jd6fQmRcPvO9CM0IK
f1pgnmfcFzweLmoOXjb/eU6j08aPnvsiYQ7HGhel2eN5kByxMjtG1hz+601p
s7bGPCu7JvRX1RxCTMsv/jiMfnuMyVlrDokJb8WP4Pl1u8cgJlPNHFaMnTnV
jI4RGFbYvd4cLJR47zy1x/zcTdHL3mAOgZGcI1fxfLw+zON4aLM5hF37OfCf
I/bPKzyr2TvMYWdJQNk5PH9PByfcCTc2h4x5C5/MoB1Hatx2mZiDk5XXjn/n
t1ml7PLPpuZgPwuS5/D+y+9Q7cpLQx9NuRDixSLBj6SltzPx/eW9k/KxH7i4
9blzhY05SMis9HW+wCIB+xctfeptDlkOyre0sV9ZzXp2pP+ROairL+VZ+QLz
MtMwwr/LHEQUJSsKhjFfBBa82PvRHA5rT3a6fMN/7/hmQqvbHGT5cgpWj7CI
9Nr9h/o/4foZJQfGfGcR5kMP7T1fzWHHJdfDXj9YpCIrrU1j2BzGfmX5rPqN
+zFfaHXPlDnwXQudUJ7PJv2inP/K/5iDw/WV6hz0Zs/bkbF/zWGK73hnAB+b
cLSVf1vMmAPPXaE73AVsIlBo8KaUhw4SQ/7/+Qqwic8Td4/ohXQYqZ+nmraY
TXaWviunLKODVbzH3wApNlGt7h5fJUmHTSMPLotKs8lMw+C6X+g98wp3pqPv
98zGpUvT4WtLRuJrGTaZFVzjw7uCDmVbBjjCK9jk0X5fjTJFOvi3jwodl2eT
QPsLR6OU6DApkJw8gt7rEp7grEwHrdyavd4KbMIbmCQko0KHkPrPKwIV2WR/
5ste77V0kLYi78OU2YRvUippgyYdZNzCfU+psknHnMI7fi06uH1epDWMzhVc
v7gLLRT8aPjIWjaxlgP/CB06PCp/YM9UY5M8Y8d9A5vpIMAXISG3nk1so0qW
3DOgg0f3r95LG9hEO5Fl6mdIh/55mV1DaIHMurNWhA4qC2We7dRkk8Jn3UNz
QIdEtVwJOS02EeoRqLUxpkNHc7BSmjabPNH8L1DSnA5v8odnz2xik4DrT0w/
ohOEbya9QhuNii++T6cDc/EVDenNbNKQ2xCnZ0GHiGYj0cforxrGBTZWdNi8
sLqibQubPIxMObN6J77vptaMVbps4j4yS0bQa+71ux9FT2c/rTu/mw6dwt1p
39AS6ht6U/fR4W4aj92oHs5PRETWif10yHccVtfYyibJwwOeG//D+V4Q3OiM
Xp+VNldtTYfoqKjr3egd65bLDNjSoe3OAk75Nnz/cN+P+QfpsLF4i/wPdMNg
c7rfIToQ4yrd1fo4vw+vaS+yo0NQAPv5ZbTn2gX0DQ50ePxH74+BAZvoXrEX
+4320Frl5Iie7X/eVnmUDkoei6JvoMPu+x3deZwOAa0tct1opkDbOllHOug6
JPouMGQTScdNPz6j+Wt2hK5Fp6wZPeftTAeelvm1J9HHLjNMDE/QYVu/wPhV
9Pq+h8ILXeiQncBuzEKXZByNjT2J9VykGdOLPsfPPmjnSoeY8w3+8wibGB+T
X63mhvNR/FtYFt24+n1+qTsdrm19tZqGjgnWPR3kQQe7YeusQ2ibr9GGDE86
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$10757#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10757#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.01001703499013, 0.25442372579979555`}, {
                    51.29211868746823, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.010017034990128`"}], ",", 
                    RowBox[{"-", "6.707881312531769`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 29->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$10921#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$10921#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.00941221553566, 0.25442372579979555`}, {
                    51.29214185270462, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.009412215535661`"}], ",", 
                    RowBox[{"-", "6.707858147295385`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 30->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
5LRatp5CK5r85JM8hePPlUsPQfelMd90oTkqWyVi0Vl8OTcyvehQMrpc6T7a
00F4v7s3HfQrNzU+QetWOa7U88HnU3iWV6FnlWq+zPPF8eiPzr5FV11SevQa
XWThf7YDHfY50CPqNB0mtKVufUYzd3RtsTlDhz/xetuH0JL3ts0q+9GhTn//
pTF0J29c1Te0Z23//kl0qv1k2BN/3H9jhyun0I6sXVbnA+hw2GVzyV+0umK+
FOUsjnewy3Aa/ZCrXaNwjg4+dybV/32ucqnQ6y/61y7m8d/oezqblVrO0yE1
cqL/J1r+SzEnJ5AOPS++531DJ9zSCwy9gOt9lFL+FS1jUqphfxHH911gUee/
+Z3Q/7DtEh3o7VvjG9FiGRXhy4LoIBzX58hGX9sLW7+jPTOkTxWiFy1k9dcG
02H0dGvxPXRo8Y7bqSF0GLysvukGeoFjtUnAZXw+TXkgAH1R2mx8TygdePWq
Ocf+zW9tbeqGKzj+VzLfLNC/19bN9YTRoTJ/fqEM2ruDkVMWTocTvx4dmMZ6
+RH21iYmAvOrXF3jA3poiPuUGkmHc/c/m8ehHRN2Oypdo8OOMrUoL/QX+jvJ
GbSMhscMA92V3X4q7wYdkgUVdf5ifVsfPKAYdpMOq+2T/jSgW0U+NB6JosOx
ye0fktGNbt3qUtF0qMhdMWyIZmv19Z2Nxff31po6gvsLehxj9sXRwaX0k70q
uuzmoLHWHTp4/eZtG8T9+eTnt5Qv8ZjPmyo6ndD3i8YPmCfhfnktL8PE/b36
mI/Q6mTMvza7TD50quTvklm0e+whrWLMi3jfv8sep+L8ixRrSqIj9XgbpTPo
INrZlV6KeSQ8eOncD3RFhMj7Q+jQOwvU6zLpIP/IdHoe+sJfgbDzD+jwQGTy
D8E88ypfYtybheMNtH6cupFN/tsuV1JQgHkVftFqHuZnjdmPiXOFmJcXVteG
Y75qW7zUoRVhfpm82iWBXnTAI7f7CR0a1ubeW4V5XOlVnbH4GR3GBHSnVqrj
+XT/ZPTxSsyXhKRlzzH/o3OMmrRf0OFW8nYlNTRvkZToLPrmzG3DqDW4H168
iLjFpsPbWPvaQypscv39sqAXNXQw0PG2+KyE9SBS4Slbj3n2vWJ34ko2Obos
Kq8X7f7w+doROTbhyjqO5DfQYaHM6UIDdJaqmDOlEfdj39Jl7bJsctjomJ13
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
Ki6Z1/DEa/c6HK+8Cq81OrYy5ccLtI/3X8FMdE2670jCeibcPTjou02eSxTc
lXp3ajChNe9REEOBSwK2aB6tQGf1XxePQL+b1f+ydgMTNs57yqpFR1zd28Oj
yYSQviWn9RW5pG/3ETsX9OcK2zOn0EYr3Ltb0cvD1t+4j/798EpXjhYTti8J
/7NIiUt2ecbYLtdmQg1Xz0wfnaN3rzMYbZGYmeyEPlJb1mGjw4RI61m3CnTF
tVf/1aLf7+X/9BUtve9dm85GJuw+KbxHWJlLGr5+fye0iQljf2n6TPTa7Ok9
PuiHZ9MeuqGDvARbPqGL1uuJXUV3bZPczdjMhI9XY93vo/XmKzWVoMdW72S/
QN96vWGn8hYmFJ6ZWNiOHrmhz7mGnlgspj+Cpv5HZf5F+x/fYjtvNZekye99
e0wX51t4wlEMPddnb8FFB53tsFFAW+e61RvoYf3t8N2sgS7yCaA/QK/osf6p
i15qeOWNxFZ8vw8SN7ajTyyIoQWi40s3Lqaga+pSXw2hVXloR+lo+Vu5lH3b
cD9ofomxQPsfKHvJQjc23kz653eKr0w19JkQeOxrwL/vaw62VMehlX1OrP/3
vPD8HuMFBkwIDSp89O/3ek9/Z7ujvSWZv/+NZztMG3Wii/Pql/wbb8JCQZaZ
IRMk28q+y6N/NSzbXoA+KJodLYreGaNYuZIwYc8n9bk5nJ9s2w0kDP2qrmHt
MFpgtX7FBPrS/lXi79D2wxQDO2ACXTC3pBxdXrCnrA49emSx9D20tL/9Nt3t
TND79kojBO1p5PbsHnp0rdefY2hVTmiJnxET3ja+zVBAX4qN3tKLvmqcfPEv
1kfXodQnVjuY0H0uQbAJHTVSWqhqjPVvvXeJP3qkqFbnFtp8gc4VczTlbMvj
OXTXlTNpMuhZ4e9570yY4KxzsSgH6/e/pr8bjEyZ8NvuSIY3uvCOQG42+sTZ
YY2taOe1itlBZkzQjtw4U4r7o8V0zwNtKhOsEi1oqbi/VJ8Kj8agT2p+HrZG
+61jbf6L3uJLPyaKll+6oYpNw3o5k9/ii/vTpV3g4246E+Sqd7mpreSS5+bP
Vz9FpzutuMHB/S5W4e0ix2ACxbvnjA+6JLVn6is6QdY/9inmBZ9LmYSvJRMC
pE9ylWW5ZF+X54H36BGn3PGnmDcPmWtTCRPzv0WqgY5mborZIGDFBIN9bndP
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
ftmC51WsrE9bajX2Uyof0/jf/bvfLSne+RLzP4ub3NuNv6e/3evxa8zv5eLq
WXieJqjd0JF6wwS/8LofSXj+Wkt/+uGPXrpwvn/iLOb/z0APkzrsl+4FzXuC
972Gh5WubfVM2CWzVv0g9gsV0uA024j9Hd1FK3o93kf4r6se4TBhjZRLtJom
l2wd/9j3Ev12/iGf1zpc8uTt+WM3uP/mo/TD2m14nwh5fkS5GeejMCnUkcYl
d8cND9JambDOMuTCd2cusemJlMtF2/9QX6ftxiXLG7s6xdvwfH1ruCjwFJfE
PDp34AOa81zvnkEAl0TaV+x378DzQe6z8/ZILjnXaLAr5gP263JnorwLueRg
lj6l5zPmp1/O0jrBJpLcLfF85xfs18TreDSXNpEeiW+b2OiF1NjuFMkmcvxs
olLaV+w/FbaP5Cg1EXeL2dmjfUy4ljf+zNmwiVwcfV40MIj1d/NLD92niWRu
3KE0Nob5lDZW2D7SRAYdZe/Y/cDz7+wKhfLJJrI+8edSLtqhYLn3w9kmkrcg
bfbxT5xvTvSuVJFm8uwdX4fXBNbfVMaR+RuaSd3pmuu/f2P+GG+Oc/VoJiLZ
dxc6TTFh/hv5o5/ONBPmJ59z7ei6JWMSNhebSQt1jcuzP7jfXMySHKOaSdfy
ULOAaeznYodaO4qaibzl4YphNFVPWf9KRTOxv6S7yXYG78O15hcNXzaTvqF+
RcNZJpiZu+iUtzUTNfkXcTnok2F9tiGfmonL7rilq+awX2LuHdgz2ExyQj0u
X0OfYJ0pWvezmYyWUWfn0M4LxVMXTjeT/wHacxy2
                    "]]}, Annotation[#, "Charting`Private`Tag$11085#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV13c8lV0cAHClYVWShIYRJSSjoaTzI/PukiLRkJHsQohE0yqyZ1lZlZ0y
QzIy7rUu17ihRGYkIr3nff/p/X7c+9zz/NY5R+KKw2mL1Rz4P04Ojv//lXhg
i/9PD0rrquq+OFejdZffr67H9ps9+eixazUaV+NaHbpKD2z/vTmp6lGNimeS
OaQ49cA4fTIk8241opmy/uqu04Pq8icfvzytRt4HCQtP+PRA/F+2YVhONWIN
7p0QE9GDdd35nsy5alRZ5jL+HfsAdXr51GI1Souq/pErqgeWgrqR9L/VyJly
cezkDj1IdR/9M7iuBvG8jxixEtODsAMBb8kiNUg1ZO3gG2k9eEgIZhxHNSgc
DXUiZT2o0p2doT6pQcrXDctFVPQAST0rmAyrQc0Rn1Jnsflu5kY8i6lBXJNZ
N18e0oOTN/TDp1JrkEfcTYFNR/Xgu9D6O1OlNejS4lpKP9KDeNn3O9eP1yDZ
fJmPt8l6MH6Cm3aW8hGV77HPf2etB0/no+o8JGrRn8fNVyNj9eAIx57WjYxP
SJYq8tKlSQ+sDIe80kPr0SbNWz+DOPXh7vKxUEuPRrQ+N1uA57A+XO3bn9er
0oQKyL/UKm314fmw7G36bDMyJMnMuybpQ8vCPemQE60I7K9eQsn68DqSU+Oo
RiuSffq8YX2KPiSwDLMHTrYijnbhxKhUfZB+KGi7V78VZZtw671P14dLrDPm
SQataPX1sei/r/WBNVHQqGXdit48zla/V4KfbxF8XvFpK+L+pHg/pF0fxNzM
ncx6WlHm0ZAumw59mFDY11TR24pI2TP7tDr1wc46eXLXQCt6GpLXPN+lD5/d
a/06h1qR0IWDwhdY+rBYe2JFdqIVSc0cydozqA8HnhU6XPvXik5sR/SSKX0Q
VEmXPCFJR+ygxN3h0/rge0nnnZEUHd3l4HC1n9GHsW6JXU576Kjma6WoxCx+
Xv0Lg1hZOiLmaF59MK8P/6jqLh3KdGSkrfOb9lcfij2fN7M16cjZgbzzGw8B
1odyFhtepqM1qqv+5fAS4FH3lB+vOR1FcBSyPfkI0DSUa1dxlY7eh+xI2byR
AMI3wmMlrOlodcEPWfXNBKjum7BssaejkIXHqmHbCCA/7j3e6klHOXdrDTSl
CKCl8ueIXRgdaRI8Dm2QJsBeTSQ7Ek5H7QIK25jYRi+JGhcj6WghObzHbi8B
BF9G9evH0BHUXr0cLUsAvj6hXq7ndNTCw+kwrUiAd3Joi0IWHU0+Q/4J6gRY
it72W6iSjrjWHbG3OEEAkw7BbOoHOpK8pXBaHhHgyG6uxAdVdGR4YafoeyCA
OTkJTdXQUanUUkbHSQLkHzdzyqqnI//Cono+AgHUn1bUtDDoaE/Xfm7Ps3h9
Bj7R9UN4PfrSExrnCGC1Js25YZiOzpfsoHMZEUDIh/S0/isdBSXyRkcYE8BM
YSK6aoSO5qxGZfIuEODVp8PjiT/oqGohRW/0CgEuzxe+Xz9LR2aiOx6dcyCA
fWCpXRAHAyn0HTlzwJEAzk+6qNarGOhfooH4eicCfLkdckBjNQM9lw4oLnIm
gJrnxPdxTgYaVPzzfasrAaaqwwny6xnISpep336bADIu0muIGxhIlWdua7YX
ARQG7g2s3chAXE2bBv28CVBWk1Najp15WtdDxQfnz9LdS5afgcZNizJD/fD7
1ewUHxNgIMebYbyn/Anwu0NRikeYgeBITpdMAAHE371SS8Xe/KcxmSOQAAvp
UsYnRBgo7w7n8ZwgAswJ8L20EWWgX/7OtptCCCDVzB+RtYOBasnBqiPYOe2v
hg/vZKAI/sw1FaEEcM8xUavEVo34EmcfRoCNpF+rmnYxkMcLWlNTJAGO0x2W
msUZiHDVNjo1igAFaCiEIMFA2/c+svCKxr9P9FauwS7NrvgrH0uAo0mHn+VK
MtDKWwWFwAQCBHFy9NyUYiC/Zr4nhFQc/8c33sbvZSCtEc+xLWm4fnJMZmax
13D80O7Dfr7xl7ueDAM9UKpfdkgnQGuq4K1xbP+w+zbhWQTQY/7eLy7LQMRX
cx/NsgnwWuv8kDU2X625hMwrArw5Lz76Bjv4twbz/Wv8+bKcb6pyDBRyfkWb
nUsAygzjzWF5Bjp9w+5FRh4BONDJSSdsgcDeZed8AvRm1HtnYYeVvc9fW4jN
/zNCZD8DGXbu29SCPZzBIUbBFpqKsokqIsBA9MqiD3aUuJuEXDGun+IXGV+w
jY9+uz2HPe2X771JgYFETxsyy97h+mAHvVTDjvNTeUIrIcDTey6/grFN45LG
REoJkHJtSrQIe1fhZp0h7GMivOEs7MRvU8su5Tj+m1c9kjjAQJf+mRmhCgJ4
/9ZdpYktLtycz1VJgOYh7tZL2F8U1TcxsK1//J7zwk7Sz7aJ/UCAx9HOztHY
5le2116tIkDDoaPEfGwpT38JhWoCVK7n9W3ETsu2ZlbWEED2epPgb2yrj10q
/h8J0Bhw3JVHkYFk+nWeGNTi3+cogB3Yo/OFYzs+EYDJP+sqj525SVrnG/aN
Ne+2q2Fflwl78aaOAF8lPyrpYctrcP69VY/rP7+zxAB73NjZSLOBAKkr2aWm
2K+cv+TzNhJAgrj+iCW2fQBtUwd2Cztlvx22QkqFTcJnAuiu1052xp4qVai1
aiKA2LqXMa7YOR3xEkrNBJiQ8hdyx3aa5PP6g62f9UrEA1t5/W1mdQsB6tmt
af//fVbsh0pQKwE4N+RXumEXqJ5/cpZOgFC3LTY3sV1O1Y+JMQjAbZ2b6oB9
2EZVZxR71R6S6zXs374vX+S1EYB/Man/MnZxrNBfz3YCfJZx+WKE7V5w30i7
A8/z5bt3KdjHmubyN3YSILv00QdN7D9fzTcxsZfe6KUcwi5ZYdi86CKA4a67
8nv/X6+15WtPJgHutjxa3Pp/fOmLM4bdOD4O4oc5sSXVgg4p9hCgr/DT10mc
r5gUcXceFp63F1Z4u7EFNhaUDmObbNfK/oD92E2Xo6IX5ydLuCEd+xbB/uGN
fjwvJewCnbGn81c1kgfw/HAfP2KIbb0zfKMMmwCW9xbtD2Ofmy4J7/2C+z+q
JGgO1+fhCO4U7a8E2DDRNXUR+/W/uBGxbwSI2FpmfAR7zzVFuT/YGm/3X9+A
vfX4ubzX3wmQq5cTWoj7Ze5LSuW2cQJkdCqfncf9Z0tUXfMTm2vpulk19nBB
o+7nCdx/pgqyT7DbHv5s9pkiQMUHsuhu7Lz90Df6kwCFB6fKj+N+l41sE6+Z
JUDeHRttDuwkDqurCXME8G22zarC8yGkLejH6XkCGJxfK6WF7ejOWixZJMBF
U+99x/Yx0P6PrkLBHERgpZ0K/7WHgVIUeM5bryKCRcX24nTsHVHx8ZqrieBq
af3zPDbf9Rqp35xEYGo+KimVZqAxfgGVS+uJYGrVs8oVz7/0C6+oyhuJIPDr
sX0VnpfpDvfCuTYR4Z/TDgMb7Je+Jqx+7F+ZvkGbsdPSua0CNhMh4SjXZjM8
f1PmLLyHBYlwaE/Gmyk8n58H7noVsZ0Ia8WaFBe24/lT+oRnSYYIr5Ln7Au3
MtCjHc4fq08SYXO8h3oMF87v/biYAC0iXFDqzFfFtp6sdTDQJgJRSovShfcv
3crtokM6RBjrEfwjiL3u6kf71QQi9N5+dyt0LQPdzxIW1qARgSbx5HoU3g99
j1XYlF8ggvJ569nBZXyeSR5FD0yJcMZoViwA+wqf4FaKGRFSTLxrVbA1+q0r
+i4SIX7P6cAHS3TE4Ssg+PcKEZIqxHWU/9DRnXqLMrVrRCgP6G5M+U1H9spP
QzltiKCw4XmPIbZZ7HurRuxNVqbB67FP2G0SMLElwm8jjynbeTpa4X9n6eFA
BK69dkPoFx3dNuLjf+dChJXFwh9ceL+XFDBpCnElwnjF9cGKn3RU35jhb+NG
BM3of01u2EJId+0OdyL4sVxCxmboKFfa94/3bSLsmfPf1zuNz28DrW/PeeHn
Z4ntjcVeiRJzUfQmgqj40kETbBJf2dSXOzg/Mcee9E/R0befv4e1/HB+dzfE
/5yko8BsnaSd94ggJenn9R5bxTL84jy29uMfj/ywfbqVe14+IELniLeiCPb2
SrsWHn/8e8cTJA0m8PnFvTRwCLuiq7JCCttahZdQGkAEtYdLyb/H6agoLb3G
LogIQ6521BfYtKChd61PifBuUil0Dfa8jrJbRggRDLw569j4PBTPcfegbygR
PD4bXirHHrux641KGBG6FxVrvbBD9tvZ8oXj3+MMi7mIrTpSsu8rdpyE/IAm
9v3zxikRkUR4MvmmdgO2vGD6ZYcoIhjXuTj+GqMjRtP8Lr1oItzmlY7qx3Z/
qN0rHkMEapOsRj22uEZY9CL2/t24XrFr/wyeZcQSwV5yUioZ265ASTArjgh2
7PuWodiC9j50v3gi3HWWOeKH/X5vS/CFBCKsmdSMccG+/GUn6VAifr615rNr
2FyxttwbnxOhdP6Z9EXs12dKar9hp75OOXMW23Ajz72KF0S4nPplNxV7+ZOR
RlQS7ofptxH62El3X644JuPvp4TlaGPrq82X6KcQgY85fPMk9vSclrtkKhHC
E7eOaGJHvH52eAk7hz+MRwtb3Xpwti2NCMXQNKiDPSyhlJv9kgic2go3iNj+
rDv299OJMKksVXEKWym8Wc4sgwitYjsajLGZlJ2jhzOJsFrCL9Ic25vLNm1T
Fu5HYq2sA7Z01Xvz79ilhacf3sYupV/IycvGnw+KSfTHPv1lZfn2KyI0fOQm
xWCPTj/X131NhLbQa0+ysH04TkZsfkOEnj1+tuXY2/i/DrKw4wvEvjH+j5fY
wwNpOfjv9lz/vmP3nmisO5ZHhFyVIRFRnO8bFLuta/OJUJdsJXEIm8ds05UW
bAqvadup/+vFy2DJvJAIMQEVGk+xWwJ/6SoU4fVzV3DmYVvGRYYtYPsSznh2
YIeVsPYHFRNhqu9qhASuV7lGL49z74igFOGMCNhVPWKfJN4ToZl1LOMm9vSi
+aWiEiJw94g1NGM/5F73yqcU99dC84MV7F0i6YuEMiIE25tuUsT9QlIdDx0o
J8LJA+pPorCHdIMHMipwPgfEA1uwPc4pyt+sJMKcjcAlLtx/6a43P3JV4Xyd
dom9g81ZuPxb6SMR5AY+t9zD/R1Tk6C1jD0ZtjTdgK3YDiG1tUTQ4Q/n2oLn
gdnsPVmTOiJYHfsrm4H9XmmD6b1GIlQ9OZM9gefLKY03GZTPRDiXGjB9Es+f
77RT88JNeF5obyPG/T+PHMOfvGomgi6vhIEBnl/Or3dWddLxPGPm7GLN0RF3
ecXGFwzcLx4n7mviefe86bLJ9TYiONnySGZjN4+nzv1rx+8jdXrjAzwfZeUU
9u5j4nhuN5AwXKCjLy9PBHr2EyGzKPu1OZ7PClxrP5wdwM/3zj20jH3buvGX
Ehs/X2/oeeRfOhLeZ3Tx+xe8vwyLqnat4PmS6aRs+BXPB9tfv93xfSmBR9VK
8RsRxKy9FGTx/jBusxLLO4L7zfGzUx/2Q7mAtVXfcfze8KmQ1zBQeXYKU2Gc
COp8Sgqn8X7Dt+H6Bp4JvN4YPuPteH86b6ek+RWbpan/bgT71/7yrNgpIpwY
Vlbw58Hnxzdd3lyzeH5FDrrN4/tWTC6P9OAiEZr4g5Yc8f73fTPduOwPEbaO
+PQ5COHziXNkcNQSnl+T3DrO2xiIriy1QPn7//dlKu7i+xNXgXpjCQcJgj3y
Bxrxfci1yNEpfD0JNnYxCZvx/aRG6EiaIxe2657fBHwfEXD720PkJsFVM3XP
R/i88OqIv9ZqXhJs2Swotun/80px8jaHjSRIk/ExJyrh+0ZJZ5neVhJkOcnT
7h3H5+eP7DkxIRIk6zGn59UZ6G/zmNxvbHHhv8/sED4fDK5EpwqT4PXYyJyl
Jr5Pce91Xb2DBBeulr/012OgLCM3hVJJEvizKGtjDBnI58pdi2e7SfBm5NsG
6jkGOmsbEGcjRQI3QboFlzEDrfZJ5BHZQ4LfIgyhRxcYyOjlp28u+0gw0LN6
Tak5vn/Nb0s8oEiCfxb/TvxxZqCefxKd65RIsG+fkNf8TQZ6wy2/oR974yGj
c79dcX52gmegCgl2O4XNrvPE520t63Ojh0kQ6XPtlJkfvs88K96UrE4CmoJl
50wYAxUpGvsIEUlQfiorpamEgW4/LdIZwBbJFZk4Ws5AmtNbNqSTSMC4Ll6e
WclAzW+ao49SSJCi8JQ75iMDfVXQyr9wigRWj/blv2lhIMH9B74lnSNBzN26
9++HGch531rSgaskOHFwYMRGoA2pPr4isIA9lBNCd9jahla+VzArLUjQcCWt
0l24Dfmne1ictiJB/Isn5XG72tCLvdPeLjYk+LsvNE1Mrg21SrNySxxJ8OV8
79Md2m1ov2TuNj0vEuR+yxbd6NWGMhnKtRLeJLB5FFTBc7cN7fEruLmEXRrt
2b/hfhsSH35Lf+1Dgknzywl7g9qQQFp5wNZ7JHjA6ZWbEd+GFvZ9/jfoT4Lt
TOQ9XtGGqpVGRryiSBAnSr39hLsdwaB1xLlonO+MNWssNraj0tAxLaUYEty2
Y6RobGlHRbMTL4ZjSZA5GanNv7MdpRfOmRAT8ftozAVzKrWj4KOrW4XTSBAQ
qh6jc74dGWvsLM7Px/GRsje9nNeOanV//vIuIMENVkrih7ftSJnySYVQSILW
wKNxMmXtiM/E6Q27CK9POKudp64dVd78mLbhPQmKLX/mi/e3I5l0u3CrShI8
Cc0uDOftQAsby523N5Hgx23NbK/rHSiq12y/3zcSDM4HXjul1okau/1VDITJ
EG6lbrF+pgu59nwykRMhg8z68VaPhS4kyVpzj1OUDOdjV3LG/3Uhj17v9vzt
ZMisXHujcSMTyQw4uwiKkYGvO+KOszwT3R8+/7ZDmgx7BGKrTlsxEZqSVTNS
IYOwwqBCaQ8TjU1ZmSseJMPtWzpT9C9MFDGdEsB1iAyfcyr0h74z0eTMrt7i
w2RQ5XnptDDPRHFzAl4ix8hw7pjWxjGBbrS4+Ke8B8jAdfmJb6d+N8pf06hp
SiFDHE0s4mB+N6KYmPzZQyXD6GhGo9S7bjSW+yN3Grvo+Pq8jRXdSPIin8S9
U2RoZ3HrtjR0o9B35H+ZZ8gwENvnv2qwGznbt5YsnCfDoVUHkeimHqTI7DgY
ZkUGX9rJBzHmPeizguW4qTUZRJw/f4uz7kHW9+eT914jw7qitLQIux70XHnb
lhIbMkw47frj4NaD+IOMZr7YkaHFsP77W/8eNKXBenXgJhmysu5mBr7pQf5R
1y0WsWOXXCnL+T1oz9TSjmoXMtCSlmWuFPcgs7gdgWfdyCD44dER/g89qHne
1MbLgwyfBk7nz9J70Oss9p5GHzI03Nn949NMD1plEF6bepcM0umj24d+9aAz
f/QtfXzJ8FhR02FmsQct6uWnHrpHhmq9I2Ijq1hI69t9qecPyZA9xrvp4GYW
igw6VuPxiAw9lqjiqyALjR2cMjd8jNe/WazjsTALPfEzSuYJIIMpy6EtXYyF
esTlJF2CyVD2VOk+2s9C++sGPlCfkOF55/Omu4os5OMQdln2KRk4RTvLC1VY
SLr87/OBEDKk+oip/zzKQo4mrWKEcDL8FOcSLNFmoerV9yukIshgmXZ3wyM9
FhLKPHrxH/a2hZ6f2kQWKllISiiIwu8z8k4yjMZC6yJcdorFkUGDwOnrdp6F
jNVlyxaxpe8batdfYKHs4f4L7fFkWG3y4gjvRRY6paIX9ziRDEvleYSL5iyU
0rOsdvU5GRorTxx3smCh+bu5rBMvyDCldWrF2YqF4lpFt88lkSGyJCJc+zoL
Tbm1vG9Oxp+XeKomZMdCmmL3zmekkCFnJs6g056FRuwmos3SyDBb6OUp5cxC
x7YmHT36kgwcu4Qv5N1gocDSs91b0skg1nWadsCFhZR5K4XrM8gwvvvw1nk3
Frqfd7M4OZMMZLnUIuTOQkzjfUbeWWTYfl1jwy0PFpJd1f/bKJsMCjvtVyV6
spBXemikyisyXPEM9iy4zUKtVN0jG1+TIbBi7dViLxaS/L3U+R377u4jyZne
LOSSkONa/YYMO7/clwi4w0J12hZCCTlkUFY2/GTsw0LbJ0SKbuWSIZ7G5SV0
l4Xsw5oNDfLIoOK6Wu4DdqWa36/9+fj9e9PeGfuy0JahI+FcBWRQKzfazMa2
9B8/OIR98Yyn6Bk/FipWetFeVvj/fHAqK8Tm7Ta8GVWE8/kgcXDNPRYy8+ER
vPEW11O4lbMGtip9dZF+MRk6zlqX2mBvkVw6J/6ODMk866fvYk86zy7OY5//
/WP+AXZd9Y/YpvdkeGpe8d4dO0lwWD2lhAxd4fukz2N7WfQOeJTi9bYzxGSw
jYra754qI8OKpXnYEF6P8vqm3TLluH+f+dkGYvMZffy4gu2eyAqRxB5JL7Pq
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
0umjOWaedeg/Pv8m8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11085#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.1479268536400805}, {
                    58, 0.36092059795951054`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.25442372579979555`}], {
                    Arrowheads -> Small, 
                    
                    ArrowBox[{{62.009141157681476`, 0.25442372579979555`}, {
                    51.29214862692789, 0.25442372579979555`}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.14281555332458928`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.14281555332458928`, 
                    0.5241208799454818}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.00337\"", ShowStringCharacters -> 
                    False], -0.0033742937043185995`, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0691\"", ShowStringCharacters -> False], 
                    0.06914530930961774, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.009141157681477`"}], ",", 
                    RowBox[{"-", "6.707851373072108`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "2"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 31->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$11249#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11249#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.811428704297455`, 0.2290679961442947}, {
                    50.47212208125951, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8114287042974526`"}], ",", 
                    RowBox[{"-", "7.527877918740487`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "1"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 32->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$11413#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11413#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.82755221742643, 0.2290679961442947}, {
                    50.13527749896285, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8275522174264305`"}], ",", 
                    RowBox[{"-", "7.864722501037146`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "2"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 33->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
4/xdR66XkaTmVdLjqUw4xYlYHlpRRtTnl0nVPMK87NMarFbF98tAsaUeL5mg
Z3VrmYQEl2jyhfOpBbiewLzVSWu4ZMnaP4flXmG+yw083aXKJdXlA7cbCplg
x576m0n9//9PaFinVMKEPy/U1A1DuWRu9FWN9xVYz2TqGsMZLsm6vdRkvwDz
9kyr1NM/5UT4pcx16SEmnB6qeJWF53/DUefyXvQaH7fIHEkeiRfJH3/8Hfsn
/VbUC1keUTvAPLxnBPMtx3H4jjaPHBnyXX10DPfPJuTfZm8eyVrXkX53Cvt7
v1TG5HcesYq5USQ/xxAy+tNqZFqqiPLO7sF+tPOPM70zH6rI+HsVmey5hmAu
1LLv9fcqEr6RG6g7zxAW6oq1WYpVkzzeyD47cUOoL7Bs7IJqIv6P2Zy22BBq
Y8WVHz+uJq+cRD8ryhpCh/iZA4bna8gum/PTQnKG0DU9bMUOrSHFZn0r3qLd
T3A2yNyoIWX7q2mRaw2hhX2qLfdpDeEphGWNKBhC78mjBjt6akjrx7l+r1QN
4dZWh/RQSi0ZPjJ3CX2XITQGSjZoitURN+Nzqut3G4L+PRXJtmV1ZJTydd8/
9GVducsO8nVkYmfV+efahiCi9XzGTLOO/F12uWvJXkOwELSkRRyvI2KCOZnv
9htC0qpJsfXsOqJAm7PX5ZAhrJFNSZtlU0/ibtX0a5oagrcsvXuVcz0R/Rx5
fdZhQ4gp2ly63qOeDF5Y8inezBB07vdYS4bWk9w8ucvlFoagqBlSZ/CwnujL
726QsjWEublWuzYN1pN8l2nPXrS8gc/G0+P1RKmYI/PMzhC+fH4Zfu9vPRE/
THHTO24I31RaQjvFG0hr5KElLo6GYCuQWZil2kDsf7keKXcxhEFBtl21UwN5
s09DONoVn2f5y4RNZxoI5cZEppmbIXR2VMwJPd9AVNX8/w6dMYSvRTvOi11u
ION24fekPA3B5Keomev9BhLSlPb5tK8h0L0lRO92NJC09I4zUmGGMFq4JiV6
dyO5e+fD6m70hLH6Rtm9jSQ+9mvVgytY360vz983aCQRQT/XaEQYwiV43HzZ
uJG4Wy2qZUYbwpUqlziuQyPZu5y6NjgWv29gPHzl1UayawGrgXoT6/9iXuHY
jUayTeTweck4Q5iKGfcqj28kSqP2jXduGcLBxV/E9VMbiWRjoE9BoiFoMZzr
6nMbSVdogWAo2RDOiF9JW9beSNr9Sv1zU/D3F/+RMX3XSAQePCXfVENgz3r0
I+pDI6m0aQ0QTTMEgfSBxZ/6GskT7RGVdRmGUMiab7dpqpH4/FQMNntqCMra
j02YUk1kxfFbGuWvsL/uqk6HGzeR6idcXmKhITAnc6N3Hmoi58eHjrgXGcJs
+gOlLrMm8jZYP1CejfNSojR/lXUTSUr9UX+hzBBk69IjWC5NRP4D3WFPlSH8
Uu++2H6liWy0EErIa8X+7tcJOFjSRN6lblSNem0Ia43CFK9wmkjkN9NS+zeG
cCow5nRxRRP57v3085J2Q7CRp9jK1jWRrHhzdfdOQ9A1geG3bU1k+5vcOrUe
Q6hQzb1L+dFEiLHTdMYwznO2yf4Li5uJzyvJuyPyRmBPTRsqD2kmgoych7Vr
jUBjffqe4UvNRCXONCdtnRGk/WO/lL7STDrck6rNFIxgVfoPkfNRzURTVWms
TMkI9qTkl+yJayYTdwnl2mYj2NqtUDuY0UzcQ1xGt2obQYjbwqXxdc2k1n3R
v/k6RhC+qPKPoKGZrLXJnfsFXRKQ8mBBczPha/9enQhGcOxl1OKg1mayZTJ0
v7C+Ebh4Xlzq8L6ZfHe6kySgGUFkuX6L5HAzcTaqN/AwMwLvu88lUhfxSfYN
7gedI0bwoy3q0u0lfPK7rcBHzBy/fyA68sYyPgm3fvAsxcIIOrPWyV9YySeZ
ZwKWN1sZQdPyEmc9eT4ZuLHli+pxI5gI6Hc7v4VPTrXHhn45YwRlKrkCEyaf
5K6OkM12N4KilwzTBUZ88tf64it/DyPYdcNMt4LFJ5H9p4eWehqBof64mspB
Pnny2+CQ3nkj8Bi3MXttzieDq6fWJwcYgXgh9X3yCT45bXO04kiEERwM1uno
D+CTPUa3rOUjjWB4mHtOJ5BPxLX5f/vQo5l9tjEX8fuk9m0/H20ETHu7naoh
+H1Nqulx14xgP1MhWP8Knzjr/L3ccssIdhPTib/X+cRR+jadmWYECZ0GTS/T
+ERz3uuvSx8YQUWFB4/zgE9EJxeGvEMfZifV16TzyUNBUPHJDCN4u01NpvUh
n3y94rwpPNMItqRbBQqe8InDLy2JqiwjUO1wu+abyyd2r9sFwDaC7IJtzo+4
fPJtyc7DK0uMIGiP9a4b5XziduBm5w+07QXxDN8KPgloMv6UWmYEh6L6zlJ4
fBJfU/tTpAL3983LIkENnzSyi6Vqao1A5NIfdlYzPm96spVxuxE8DTNvq37P
JwvPOX6zGTMCvewYV+lJPjlR63BybDELXEpbfjA2Csh0sXG/9RIWeB+Sm9BQ
FZDY53tONKI7yNyAVZsEhBu72O7RUhak2mlOflYTEJljJebHlrMgX2HHA091
AXkztoxWt5IFcZcWJbtpCcjpL0LVmqtYYDdjP0bfJSAiHQP70tG5S9P0N+wW
EPUSzt6L0iz45eBd2rZHQKLCTmvtXMMCs75o1U0gIPprKpXuy7GAYtwWm2gg
IJ0SWemS8iyY2mzwzma/gLgL314fgLYd+3FbkSIgyV/d5I6sZYGzT6ztM6qA
/HmxWkpiPQuyq5ase8gQkGyDs3N9FVnwwfi0/L4DAkLVOhbah769Ulx4BP1h
I22WqRIL9i7Ueh1vIiALF8nNbFFmwZFm/tZPBwXEubNu4osKC+QmxN9aHxYQ
ebd1Xw6oseBVofStbxYC4rdzy/ESdJTicpqLJe7H9J5PyptZ0L7/08VhdGSU
aY/QFhaMUCysvx0VkF+ZV7qebWVBTJvxn7JjAmLiHnd0lToLMpwvT262FpBn
WvffhaIt/xlpJaHtqovfWmqwIK1q6vQpGwFp/Dz8Rmw7C3b4MEu+2QqI8tO/
h7zQybEF8/TsBCTk7LzXH9EVvz0t4tFas9a1FOxggSlr/6iWPda3dvOB9TtZ
ULc4QvES+vu1Pfyr6IVVgXpN6DQ50yYHTRZIPP4oYXZcQGa+2hoK0K1P/bJu
oc2fuzZoa7HgPEVZqhWd5+XHeIS+YD+js8BBQCR1rtQt3cWCUwPL1+ihT86O
owWiK3iXMz3RvPrUmgH0/A9O3WloudjnlMO7WcCTe53TjPa1KK7ion3cP8pO
od+srTFQ28OCRyXp0jInBGTLt9eVCeg33/fcI+iIFz36s7VZED5YlHoU/eX8
cLkbel/Kbpnz6L3wV/cdOnKiZd5VdNLcedz9Oiz4/DrpaCp6snHZ3hx0i9Kz
RdnoA3Fry2QI1q9dVqYE/fToZhKO9m+a58tDiyrsKfmJ1psIlqtD2w5StG2A
BSfy5orWo9k5h4rr0b8/nVSvQUv52u7W3MsCtutUKhftrutaeB99J3PKsgDd
MM9PS0KXBVe/5dllopX4YQU+6ICQc4Xx6OD4mzu/oO0aLtsHo7uOpeYb67FA
ZdWW485oTcXn29no6tJXpUz0je9FuUr6LFBd4nJuE/p7XrVGLJrmFHd1Hpri
/zp7Br1ohd/8Htzf6fnDWW/2/f/703aHoY+0/Nmsa8CC5gs+E4fQuYmiz5+i
n7xXXyuHdlZe+zRkPz7fsFvHI6x/5Yia6gjahHnlpBNarmD3YwsKC45lPvJV
QL82OPRIncqCzjzFdTewv5RezR+JQ+dOJMjR0D4buTv+oBOjv0hPY7/KSW6u
KKdhfwcXLj+K9gj6LKZE///6bkmLonnjt40j0dJL/ihlYf+f6hDtPshgwQv2
zIlJnI9SeqnCKzR/fOJuHHpxieepNUwWOAjL9aujC1J7pj6jU6xzOLY4XyKn
ipeeM8L8OXGt8Z6VgBzucrfoREvE1PQrojNZyqmEhfO5MGLTU5xf1va4zaLG
LFBqOKT1HOc7adqVlnAA9y+q+Mk1cwHZdm1dYNEhFpwWszETHBKQy7Pe8mRN
WWAoarRHDf3WM2ZBCPqTuafHZcyXQPN/iYzDLOhmL/+yFfOnfl1b3nszFsx9
ZaV4giUg9vnhAzMWLKj3uOl6iCYgL5X2qttbskB+m3LVZcw7sduT56vRM/vT
kl5iHmZdsJ9z7SgLxFT+1klgXv6l6MivPcYC5rLPl1L1sD86f5jq27Jg3flN
5SaYv7pehYteoKNKLgTSMJ9HJIPr19ixoObKEX8dzG+GwVLdSXTwJh09GU0B
mfNix6bM45j38rOPsTUExPuS7yxJJxas8D7U7KciIMe2zs7qdGXBsvqjjlLL
MU/rG5wpbiz4scLrKXupgBQ7xCnkoed199+1XoLzkaR4O/oM9sPRgNh7kgIi
mEO7tNcD8yU2Vll4voDsexdtmeHFgoK0vT8tZ/hk42WpeR7+LLi74++HwC98
IqgPj2hHx/+y6P73iU/OL/63QCeABT0Wu7Z79/IJ787HxfMusOBGc8io8wc+
sc7NXH0vEOd1cPO83W/5JPbjni11wSzQL1en32rA+8lum8PrwlmQXprx92kO
n6RebOkIQ6fU0e6JZ/MJtWqf5Xf0v/DVzJNZfBJ3QMXmVQT257WUecpP+WSL
05izURQLossuczLwfmAfFxrgG8OC95ln55Yl8EnDyKMHLXEsODvK4tTifUVz
vo7yzlssuKdKmW18AX9PQfAkEd1Re39Xhz+feJn/zrGJx/ov25Y37MMnchU0
7nACC44uPxWxw5NPzt4a6Jp/B+d1f0uNpjOfdL24YOuKVqJtX/vZEZ+3fskX
AVpy12PzWLw/yfy3ZyjhLguEKwMy/tjzSZVz5B/FZMyDgnMHho/xySqdTVL6
9/H742l/zpnySYgZ53YG2vePhMmRQ3wy7H5Idn4anv+v47118L5WkeG/QYDu
4ye7LD3AJy6LGrdZp7NgYKV24gje/9o32haUozMd+PNGGXyiZzCxWzEDz/fh
wNJJOh/zUUbvO/p63HtNSRqfcD65GPs9YsF/LjD7nAGfqM4Iv+5Gh9Ta7E/a
h/u98paZXiYLnitOGPD08f5mWHpM7DELbHjrCpX0+KTV0aT3NHrl1HW6jS6f
kOCvDnx0+0L5N3f38snSAgmX+Cfoyn2LlQHvV4L7P/6gGWbZHz0Jn/QP7vQ8
9pQFyln9n6t0+KRE3tpvwzPM5+v21b7aeD+MyArPfc6Cpwd0bq3fzSdqjaZB
cll4n3n46fi1XXwyLvnPOxJtcciiVwQdGEd1sn+B+RDxfYeQFp8YdAxbN6MD
gxQ0wjTxvro6zmxPNu5Ppo3KCvStlJ79S3NYsMZJxpS2k08sP4WRQHTXqVdZ
33fwyVrFzTsH0Sl+0QcS0X1Or9XMcvF+0pRpyEQ/e+K7oQItc1u6YC767LC8
zJY8Fhxc8T2lZjuf7FKvXpaEDvDZLHsDLeTpskA0H+v9Z1DXHs17uXT2WfTj
Zg05bXTk78K/3egNWxfVrkEf0LYZp7/E89bkuskctFTg3MGX6DiXiqaJbXzy
nvu0d10BC0Rf5RoPo1NnH+y8ik5wchv8vx0pvwV//v/nL0VyfqHVIpJrT7zC
vGgPKJiH3zfeYMBtQXvPGpRYhy6UHHpFClkw6nqkXh8daHLjxWM0Odgq5Io2
iNN6tKIIz4OvTmUpaPGO7uRgtP4xRZn3aIH0pfhhtNfYyk3yuB/xVqoxFsUs
cHtrKOSCtkoRXK5CD9FaMsvR6z6dv6DBxnr45pK1uP99G2TP3UM73J/hX0E/
c6p0mV+C9fjFOfsbffbJSYdz6MZs0d1nsX67hhdZ9aLH5n7cOYkWUi84ZFTK
AvHNZgHBWH/eWStmEVpg5Su/EvvjwO/MPTfKWHB47HuRNfaTlLbxthl0/lLm
k8V7cJ4vTG48ycH+thSabEA7zdaX1uOygN733NYa+1ON8m3xc/TxH6wTO7F/
x8NjxKTL8T6WGRO1Avs7UPL91CjaIX/7nDHsfwOT4B9WFfg8jWTPd5wP8Tjl
/lr0cVl1i1Gcn3hpr/bUSszPX1LSy3D+nm+QeHmgCvefNrqsHOfzrFPesxL0
0nGYI4LzvOuJRbpKNZ7/38RcmDjvvK0PbwrX4Pr2m5+cwve9rj17z2bXsqA4
vP9qLuZHkso1jRV12K9BERFrDvOJudTHUV/0duqlkCgzPr5PBJ7ZV4+fF3OH
IAt8v8ksc2lvwLwujL3DtsF5lAKn6WYWJJUmtJ9x5RO/OTFKdnwWyOY56e07
g88z3v21Cl0fsXdMxoNP8psuOFwTYN6ljI998sL6XSq1W9/KAo+atzsK8f3x
7riOFa2NBbPn7np24SrOW0/0mudo9cXKs7KvYR42d71b0s4CEcmmT/03MH8e
B1i8Rw9mbJRzjueTaNsSM7e3eN/NSNj2OAXzpFnbJO49rrejs1QhD/vryR5K
Ty8LLmXFFD/u5pPkD0tLD3zC869CWrKhh096lg5tL0dX2wlfHPuM72f+d9al
fcb1yNX4GA3i+6Dh9PTxrywQ8oxcoDvFJ0EjpXn931gw8cYpcxaepxnb9Nb9
+IHzme99Mwzfd745SifajOJ947/9YWp4f1C9MyYpQOcmpN9qw/tF1uy06ewx
PH/CZ9Wr4/tL4RuRt2d/sqD8YEjtfGe8f5znxfz6hedpi9zKXWF4fj+9O9dp
Cu8T++UOiEXi/eejV0AHer8jM+PdVbzfURVPFf5mgXHkCofLt/B+uipsv99f
FljpFZ0dS8f7nJF1ySB61cLzjYJMvC8Ha24/+g/v3zu2VOQ8E5CvA31rdabx
/u3jreeTLyAqcpyEZ+g5wtNPjhXi/e5ggqTsDAusS+3dDUrw/SjszOWr6HHH
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$11577#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11577#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    ArrowBox[{{60.83610132251542, 0.2290679961442947}, {
                    50.06145734478938, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8361013225154217`"}], ",", 
                    RowBox[{"-", "7.938542655210617`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "3"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 34->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$11741#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11741#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.84064607307923, 0.2290679961442947}, {
                    50.02100161726466, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8406460730792262`"}], ",", 
                    RowBox[{"-", "7.978998382735345`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "4"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 35->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$11905#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$11905#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.843065447707836`, 0.2290679961442947}, {
                    49.99721808054296, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8430654477078368`"}], ",", 
                    RowBox[{"-", "8.002781919457044`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "5"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 36->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$12069#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$12069#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.84435434599592, 0.2290679961442947}, {
                    49.98274415201794, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.844354345995917`"}], ",", 
                    RowBox[{"-", "8.017255847982053`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "6"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 37->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$12233#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$12233#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.84504126616635, 0.2290679961442947}, {
                    49.973667565615095`, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8450412661663496`"}], ",", 
                    RowBox[{"-", "8.026332434384907`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "7"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 38->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$12397#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV23c8lV8YAHAhhEpWKiXKTkZLiudUyt330lIoSlYSsklCEqUkI6OENOw0
JKEUMu+w50XIyKaU+J3fX32+H/d933Oe85znPOeP5M9dNrnAy8PDQ+bn4fn/
X/kQRz4eHgK6C0xSzcBHELAq5P2GvfaQXZTb0EcY3SfEe38ZASk5urp4jn4E
tvSJZWa8BBQV2k9tGP8IBZOpPFv5CGiXTUFk2PRHeFQzuTSKPcjuefrw10cI
fgZLb/gJ6Gqi6TTPwkdgWLT/MxIgoKKrK7oalxfDbl3Vf2KCBCSlrU09KFIM
shKeC63Yb7yuP+RfUwyDleJ/L64goE0LHpdCNxZDTarln53CBBTLWVFB2FoM
r/yz5/9hl3gkPzFXLwb/naTfd0UJ6NzJ11f99IrBenXcL9OVBHRHS8745sFi
IA33z8mvIqCPovbEPlIxSCVfn81fTUC3l7tTbpsXQ6bI+6lmcQJK9XNcez+o
GO4PCEwlSxBQ2mTtbamIYvD6dGzSXpKAnFq+OPXHFYOh58T4XykCKtChydrl
FEN7r/JPuXUElJdUG/ejuxhKP7qP/sC+urX1Z/FoMaTHlY3krSegnnCtXx3z
xeBKOzt8SJaAnux4VPVTsgSEC2MGbeWwHa6MG9NKQDdyeW+OIgHdiJoXSq4t
gU2OR3u8lAhIPvlK08uuEuA3esI9oExA1Q7pg9PjJVC/sL+bo4LjURC6//GK
UrCxc+v4pU5Ah75ftTfZXgrR0NcEOgQ02RG2cd3VUtC5eLx43Q4C4nccb6WE
lkJdTMXTaWyu0NeHj6NKQWgsw+3ZLgKy+9KdkvyyFHwS3cRX78Xjy3h4TKCt
FCznl9O6gID6Qkz4RQ0+gVq+ylc/KgGV1bgKnJX5DMVKTvnv7Qio3RcprF32
Bf7cqrOOTSCgZbqbxA1KK2D1m+bOM4kEdO3AygDPugrYyuWeUEoioHqlZddf
dlQAdfc04c0jPL/AJzULvysguXetBucJARW7Olyja1fCkX1Ws6ueE5B0GeX3
g+RKuD86fSPkNc6PzHrLTq9v8Gztv0XqGwKa3pt3QCLkGxQdFPCSektABlGD
ehD1DfrjZBzS3hFQ3LMFAe+sb6B7WJ/2uZCAPhGd/jj3fIOupBDpxVKcH/yP
p08ZVYEafd0z91oCmm97ZUoVroa5qiNCtDoCer4j4eeqtdXw6YibvVI9AXk3
TZWUbqkGU4N69WYmAdVIcSJm9ldDiMaNXN0GAgrRvTMV51QNfSKT7/+2EZD/
n+gPb+qqIfvmpg0N7QRkriAW4NBWDT58FL/MDgL6whNCXDlQDeJ/0w0sugho
3YKRhey/akDD5mXFPQREfnn6qblaDSRWVtZc/0FAZiy7J0eu14Cd4ZzG6SEC
gjv7VlWH18CO0i13dYYJqOtijNG+mBqoeudv3DdCQNGZFZFdL2tgPn1nk+E4
Ae2fpz7ZxqmBEzeSuwXnCMgiIzamQq4WVh/0mrrDR0TPX4pe539eC1US870n
+Yko8XyDmEFOLYT0e3PklxPRThoqPv+2FhZDfV+/ESCiuYwYBbcvtTBW7+/R
uYKINHbu68/qroVaixt/tokR0Z8qxlSGeB2EagqMzGEzt3usLJKpA8NlN9tL
1xCRZdRNoQ+b6qAoLbTomAQRXTDhoYeo1UHmSLi/nzQROZkYTZ44UAfh3vd5
a2SJaCBLRl3QsQ6OkCWmozcSETFbZm6dSx3wbnzQd3YTEYX4U85v8qgDn9Lo
L9NyRLQtsKdh4VodOAg+DNmwhYg+lRb/kIyqA2L0Y+GLqkRk7rTjSsvbOhDM
yxQX3k1ER5WdxXtn8fMc45Hv2GolkxnV83UwOjtXVrKHiJ4qWPa//FcHbL0D
7u57iejy9RIZ8vJ6SPzS2MzdT0Q/Vmeny0jWg07LYuK7Q0T0bdE9dJ1WPZxZ
YihfMCai1OiVWfvO1wNLfm4JTIjota6J3BGbejA0TGhZf5SI+GkX9lDt60H1
Vv8t5jEi0uXP32tyuR5mxH1G95kSUZGYeKa+bz3cUkrNEz9LRBa6wi7V9+vh
NXV2X6kjEXntgK/kz/WQva5LOvYSETU88Q8jfq2HF/3lk5eciEhWyLeFVFkP
j67GPdvgTESm9GN9pnX1EJq1T8LzCn6+Vv3G87Z6MF8ZOKzhQ0Rnc0L8DWfq
gb921cOEm0S0itxXckaaCYtxv664huLvR1FyD8owYd6aSyPeIiKFpQUNtfVM
GFvI4/8VhtdXU/Qx3yYmtGw77mwSQUSdHuzfXYpMyLydYLQimohqylzvb9vN
hOMUlTmPFCKSsk59WG3KBORkbQmpeL6H5+m9p5mgdi+5SjCNiODg+k9/zJnA
0yDzOO4pEd2VWpGhZYXfZ7aCUPiciIZ/vAzIsWcC78Xhh/+yiaj47A3yhA8T
cm5l6gd/IKJznuVb9jxiwooKrRuRDUTkH8/Dk9zPhJd7I5sdGomIx453lP8H
EyiZk6qGTURkzenosRtmwr3IV3VzzUQ0q7jrncY4E6TNd8qYtxMRTVU56cVv
Jmyd3JOh1EtE6fKZf8+IsMBgA7A+jBNR4CMprQuaLODeebwleoKIzPKjd9zX
ZsF1Hh4Pp0kiMvH88KRoBwu+9Jeul58moq/Za8JW6LKAnHvQOmSOiJpIiXKB
iAWmh4/8YvwjIkbuV74+BgtcL1M3DgiTUG47tU/hMgv4dZct5YqQkPHONO8a
ZxbE8Lzh+oqS0N2/O4lXXFlQGCmbtmYVCS2vNXxW4M4C3tcjavprsA2a+hX8
WBD5+5bug7UkZGYfkuIdyoLc6+VHD24loc5LlErjxyw4SPLZtVKRhJaMnVsy
klnQIL59bQu20JnyD3wpLPidGt12SZmEfn83Wp2VxgJUbm31UI2EnJ1POQ+8
YEG9MN/lCS0S4kT4MX7ns2AsCsIe6ZNQs8v07sJyFggJ7HG6YEBC/+KDrNkV
LFDw2m6yDUjo4FDzqqFKFhw337i+EJHQ14axkTXVLCja+vdF4yESWuAvO2JS
z4KwN2+/iZLwfF9f8ohsZoFSs8YK3xMk9C1Fwlt1kAVn1suGnrxMQoaMjv6P
fGwIqhO9S3pKQseq6q7c1meD4aDvsEQ6CW15KRNlbsAGfp6Rw53YEppzxtuA
DSHa3xYuPyehsG2N6VWIDWEPbjhEZ5DQkDivF68hGyJPLx7m5pGQgYfYagsS
Gx4PjC+4F5MQdJVX5J5gg+XSGVMoISFtm/PbXE6yYbNMXb5QKX7f6/ZpLVM2
pBAzHRI+kVDK88rU7FNsSM+0ayn9QkJuIldMUszZkOXaky9STULX0ngP2p9j
w4dFtsOTZhJSu9ggb3eJDTp2Ntl4ZyOPP7IWck5seMmanzzeSkJX4/XiGrHj
0zZ7C7eT0PgFEj84s8GL5HTzSheOf/wa5+VX2LA7ZkXa4X4SsuUZ9jrjxYbs
pcRBuQESilsdfJffmw1K9lrqf7BPPCBce4Ettf/kq+wfJPTmZDp33IcNMz1p
pWtHSch3t7Ct01U2vNJAnUNTJJTfvOmCViAb1GI5m79Mk5DUa8vRz9gpPLbW
j2ZIqMtBQelYEI4f586IyRwJ1ZX6PHMNZoOzd/v8h3mc3/4NSY9D2KDx1UM6
goeMpPiD970LY0PaduHTdsvISMb7U9mOcDbIxiUlHeQlI9siyZpsbNGLX7b+
4iOjOyntu5Nvs2FYTHyHpSAZPUjic7gcwYbn5ll0nVVkdINzffxtJPbl4Gih
1WTEFKQZSt1nw7NAs/Yu7Dd7jR64YKc/X2EbvoaM4oyylm2Nwv7AzbQSJ6P9
fmIrfbCf1r2b2iNBRuVn74zXYqfNXPD/LklGLd9LpS4/wBbU/1IoRUZ83ZeM
irBT10sKR0qTkcVe+W2C0Tge6HO0vgwZTZfcHI7GTr69KStmAxkl/KwxiInB
fjw75ShLRqc/K4oysR+/qtE9tJGMuk6dMRSMZcOjFp8v45vwfALNWJf+94ix
cLkcGdEdpSWTsJMWVRiJm8loW1VS0jfsxK3N7QQFMjoXtWi5Pg57T7a83BYy
sj5ZF2qAnUC6YTuLXYZOcs5ix1uYZ1VvJSO274M9/v/becf0E0Uy+r7zeubD
/x0kvNdLiYyIcTKqr7AfxvT405TJ6CT7eFoFdtyLgi9bVfD3Vu+UavvfRXeF
/2IX+ma7Dv3vehsGS5WM8g6V5s9ix/bqxzxTI6PEKOv6ReyYWcmOq+pkVBsb
U8T/EFtoVP7YNjKK9TN2FfzfG8ps1TTIiOJ0b1AAO3p7fBbPdjKChzQJPuwH
B1ymm7C/qt4c/Yvf9+AYYW+WJhlpUnY5TP5vW7lrQVr4/duOBfVhR/nMfTml
TUa/fnVtZ2Pfv1MrrKVDRgutzPMf/3dyGkNgBxlpL21d9/R/5/vGdGAPRDUd
voUdWW7S8WonGbl+4XLtse+1qirc2kVGWz4a9Bz536M8dmd3kxHj5Yj+5v+9
1Jy1aw8ZEQp6f87i9bkrnjMtoktGVhJyPyqwIxRD9vZi/xxM2BLzv3UtrhXs
xfl37lis5f8m7/waoUdG6dmH9JSx75wREbmwj4x85q35hnG+3A5+H7NGn4wy
96l9P/+/Y+91DGLnhn8ZWo8d/tJWodiAjBzDr07W4vwLY0plOyAcT7Jun/L/
7hudRgfIaJ211oc6nL+35sr2rj1IRoOdO1xcsENlXb+WHSIj1lPi0Zc4/71u
JMaHG5LRmf6oV0bYdmPll48eJqOPjm2ne/B+MirdsL7vCBkdU15nvwJ7t+qR
8ZdGZFT85XJpLN6PSvedv7gS8PP+1w4pYAtYf3XiJZHR0/U3c9TvsWGuZvxQ
FfY1285bL++yYWDX+nX3yWQ0m/bCVRG7XPBymTyVjCTLLU1W4/1+I0NG5gCD
jEYvX7n6CtcHN8lDP4WMcXzFUhfFsK2vXvrMxNYjfT56EdcXQ/pnR8ujZHT1
zG1ziVv4PJi++OnaCTISb/HaoIXr0YxZTIzRSRwvcfplxxts+P6l9OJqUzKa
i4gwT8P1qyxGSvrxKTKaVxAYEMD1LVCvxKHYnIwCbyz7EX2NDa6pQxBigd+X
TNbL9mfDOVFJKdoZMop/6jXyCdfPA112JZ1nyej3YV1quy8beALFJf+dI6OX
Lz0PNHqyYWJ4/9CX8zieI7zFFR5s4B61Lb5tTUb3SofPvHFnQ6likZ2sDd6f
87cnruP6fu3bhY/77HF8vA+HdOPzwEnn3n0+BzJqVe42fYnPjzMJhbbV2Ebi
dClnRzYYXFotbuZIRuouTttH7dmwKPbexucyro+KjZLp1mzwMxUVe+9ORs+4
98jr8XmlIG5WG+lBRqJPDr9zwufbt+oXYQ6eZGQw/SGx6DgbpMFouaw3GX02
j80xNGFDnmLgH38/vB9e5Yzzk/H6Tf36bhhERgEySj6wD+dn5pGUjcFkNJl0
dkRlLxt22ESfncNuWdasKrqHDQGtOm3PQsiI58DH56U6bNhQeqleOIyMpJNl
BvpV2cC40/eeeY+MDv+7L3toLc6XIzqeLyLxftYcdmuXxPWQ5/rOwPt4Prke
fM7i+Hy4silnxwMcH69LFhErcb6cPpUWE0tGTkpB+9Nwv1CoXB9h/gjX5zXN
1ifGWaD4ufD8jww8/xXnSL1fcT/CMs99lYnzt+PCLq8yFpj0LC74ZZGRVwmJ
f/UnFgTwHIpZk0NGwqH48ljEgg6D6kq9V2R0a5rvYt4rFjz40K5xpwA7Rfr8
BO631Kuv+px8j79PrzNITWLB5za5CvlCMlo0l54xTWDBxPx5y7cfyOisU5ld
bQwLKLqj97uL8fz2BP/ovMMCvjcLv7S/ktHGxt15Bbi/i//yyHAB280xtuWZ
Dwu0GlBkeTkZBb3ZU5/ghfuj6WA1s0oy+quV+uy+G+4XtVdaBFeT0cEEmSsl
jiwwPpDzglZDRmsi7ANbHFjwg2E8J1NLRuvbWWa/7Fgg7Rx9N6uOjDaYHhs+
cgH3p9kbPzexyCgnQ+K71hkWrCguWfWEjcdjIP7K15wFybVWZhc5ZETmLBnW
nmZB3ejTmaUGMlJqk9hz4yQL1NS3K6u24HqlLF5INmbBJz3mlWns/iTfjUw6
7odJrqUfW/H+LclA5jQWhNi/PWXSTkZ2LdWHbpNZ0PPM4LZvFxnd1Fp8STvC
gu1Cyz+d6CajC5qMpD+GLPCzq57V5uL157qwcw+xQEbV9OyPHjKy+fwmbf8B
Ftjc2vSgrBfPJz05Uhz336+Hvlc+6iOjK6mjltMGLGC8dNE53k9GciZ7jzTt
Z8EjYV1brQF8PrzlzWzZx4JRh8UEkUG8HxOLowb0WHBTPXz55x9kNMN4HKq4
F/fP4cZ6SUO4vnJu95/A/b7C6NrLXsNkdEl/8fyDPSwozkxr2T6K46G1aL1z
NwtEV15cKfwT70/H43tid7Hg9CXtg/3/+9enKgHs57W/PErHyGhETcUoaCcL
ZjWKMxLGcf2wdGwQxT4YEcz1mCCjHdOu8an4vnFvjCRlMonP432bPxlhd9HW
kDSm8PuiTJ3ndViwLafZX2iajF4c42EWYPusfpTfh01v/SsYgl152fpH8Qye
r48mssKWZqptjJ/F+RV1LZmEfV5r0th9joz8/ZiMg9i5996FMH7hfuWugDcB
e3Hi6gf132R0SlnggAU2xdhwQmAe91uJ+cwA7Pg8YcVe7LfEaXo+9o81rFMf
/5CRQuiLgRns3a6xEXF/cf3LKyw6jMcfzLYou7KA47lZ5M9TbJbO1t+0f2QU
rXGtXArPf1PU8Da1RTIy2/GXGI3tOJ1rtXwJ50P4+cytOH6FRz1juNhedxOl
vmALvdav/sBDQZQH9qlXcPxPSPLzxC6joJmE2Z078PqkuVXtdOWloKPStyJ5
8fpNNdyzp/JR0GOGZUAPNuw6+UiFn4JWxb2rrMfrfTt6I4dvOQU17q3WrsX5
0DbbJ9iNrRnUHNiK88XjrbNLtCAF2R6ont+I8+uL9J50ZyEKymOoZx8HFoh7
/msjr6Cg8/vdbRNwPmbtCTPkFaEgZue75Qycv98LUtdeXkVBXwrvfThJZIHO
OgcKaTUFqci1WM2TcP3x1rquKEZBT7+NHHlGYcEGvY/D7Wso6I2i/bASvk+a
fGj6SJCioI2Ox6xy8P5T+cqdkZOmIDPRtQ6pp1jwr25Y/Rd2tWZt+BMznG+9
iw+fylBQYonOoQ9n8XquUPbglaUgCYPCJ2dwPcgw9dxepEBB++66ye72xd8/
d/1C1BYK6qxdEfLqKo6nY3iiw1YKGrm9MmtXAL6PBjwWXqdEQTHka+b0G3h/
P6sYcFeloJ0CfZZVd/H9dm7tY00tCoonXljMeYrjtyTfJKCN12PeT+zacxbk
rNi2sgt7RNk/2DgD74+NyPf2DgoSKjL7sJSL88/Q7uTQbgpayWMW7Ivrr0VU
wepUfQraxtwS+InDgrdapwKkyRQ0dDJLYTUvPt/uvT3SjW0lfXQij58NByck
Vj6nUNCJ3sdtxoJsqMupe7iXhufHfHciVJQN/dsN882NKSjh4BPlamk2SGpo
DqScpKDrnua8gWpsaLt9O/OiKQVFnw9R6d2G+/nRIdedpyjIUMIvb78mG7Zl
pi19PY3nM3xUn7uDDYfU168bsqCg04Xunh37cb+gupyiaU1Bo3VB5CAqG3Rv
nRP/je1PurrNnY7P5x8lLaUXKKgCbN+eMcb92nOfCya2FLTia7S0DD5/nyhP
+Ls7UNCC18ZDcvg+aXOTetjgIgUt8pilf7PA3x98KSLoiNfXIuG4w1k2FKRf
iIu7REEGZVlDd/B9k6nYnvfBmYLIfq0Kp+xwv31D1yvYBc9/6OfmPNwfmPdH
G1BdKYgvZO2qRQc2DKYxqruuUFCc3w5BD9xfZPJnRz5zoyC1S8MfknH/4Wot
YursTkHrP0BeyWU8/i3l35d5UtCjRFpOqwsbvgRtyajCniqvsWxw/b//DHCJ
8qIgdT/XtM+4n2Ec6tpj7k1BWYIptDQ33F+k7lvc6kNBza8/7vDG/U8H78Mv
P7FF6pVVDuD+KOXcXNhbXwrKeHKQZwHb7vNR42t+FLTBy/neC9xPaSjkrSVc
paDCJIksIr7/vmTrlMv7U5CAwGD3ILZS0Gu3v9gDsXPN7vj+m7pj95bGaxTk
8ybDYhp78/d3rOwA/D12M8kS34cTH+wNCL1OQeHrM38XYa87/GH7uUAcX5j6
vcL3//vM/s59QTj+j990GmGLpxeHSwVTkOnDZXs9se+eQHrj2CvDehLjsEUF
P/+ovEFBdKZlQiZ26LtDsSkhFGRcFVaej73c7uthv5sURGhyyM3GDpQxmjke
SkHWJqIjSdiLlZUpmrcoqCvRRygQ29ebZLwijIL6JT7Fm2H/Vq1Z6sXOkhrZ
oY7t3kbNLgqnIHsefptJPP6psHrzmNsURNNZW5aN7bTPWMT5DgXdWaHVeR57
ZIT9nhhBQebfTx1Zg22XeMxuy10K+rk5+d47HJ/vlCbpf9hXNq6incTuymq9
khuJ17M+wuEGju/pM2YKYfdx/qKCn5LYzas6meejKEhhZPe2ZLw+zMtcjbXR
OB/OWW3JxOtXpj04eDWOgq5tezH9Aq8/6rWLOfmQgmryCknK2EX3hw214ynI
zcrvZxrOl7fTP598T6CgzAL9M6k4n3TSLjOKEykoVfYYQxE759jkYmwSBX3a
Qmh6gfPv+ZsZM/JjCqI+mOsvcmaDoo2HsGIyHk9hRRQFO0X6d8Ei9tjf1I09
OH83VXjbtjyhoO/vYqR8sRM8/0q9SqEgXUrGyg3YMipXv4SnUpDc2p+xn3D+
P2hZdL2QhsfrYXvkMvaaWwHy8JSCXL4pZmzFjtjLy5RJp6ADl3aY9uL9IzIc
5D+F7VKa0P0cOzR+uUbNM1wf5R04Xtj85JvtT59TUNHPF19NsK//FQq79oKC
9INtCHuwFzPCdE+9xPXjYMZPJWwfc9FBnQwKmr8ZZKSA/Us0Ilo0E9fXvD+D
qthuH1cbDmDzbpK1MsCeuBQ5VZJFQefUpw0tsS9tknjyMJuCJvaEK97DHq57
QL+SQ0HdT8Yf1GHbXJNepOTi86pCXVEWz6dPMy5TKQ/HX4Bs541tyV1nxvMK
P//RdGIAu+Newoo27PNkS/oFHK9TBzYW5OdT0O6Vl9bOYpcbTc36v6YgywrB
iHAcfx1axQ7SGwpa8pZT0cHr9fhYoovUWwpaXRFpPoQtauaSw8W+ydifkofX
19vqyM+MdxR0tmDhcjjOhwHbDeqeBRQUmZy73xPnS6nb1/SVhRTE9bbPDsH5
peEb/70Feypb9UAGzr/465cV0j7geI4eze7D+ekWse6R3kcKuihoMR2J90vP
g7H25cW4Xqr+KhDC9zdaQtk6FrZGu8vOaHy/U3l+Kdq2FPcTntdUJq+zITr7
IEfnE37+aW3EJ3w/5H2zds0i9q0R15AX+D7Z8enT7QdleD8a7V3+Gd8/iZUx
VWe/UNCTJ1I+0/i++rbuopD6VwrySigxM8D323vtUsGfyikof24KKeD79r+e
4U+3K3D9StyjU4Tv7w4/SpZOVlKQvH3pRZc4fL+dtfcd+0ZBobxSUZqP8P5f
Vey6oZaCjg0J5gtmsOGCVFTuAPby4IyB0Gw2sDfYjeXV4Xw8EbBO9RWu5yri
DgQmrv+qO00r3+P6pjn4TIKFz99LdcaVH9kQsquovwtb0FVMaegTXu+DNlbu
HFxPEK/e3So21BL2PUYNFJRMu2QrVc8GPbpYp0gjBSmlzZGKOfj8NC80TWnC
+ZfVttqnkw2V7qsY9a0UpPNTMTJ9ig27/PruxLdRkOTP0sv033g/BhZUX2jH
/Zah7YdNi/j8vnvOaKED1/drFHcdYQ5ovXhroMrF5zv37ZV9WzmQlBPuN4Od
zBgu3KrOAeG3loUlPfj9ytJKujoc+P5ZePeJPgoqu1d7qBtxIK7jjEbQAAXV
is4n7rPkwJ3bnpdIg7ifEvoxY2rHgcD997LW/KAg1Wvz5inOHLiY+EkjeQh/
Lyxo44frHDAw37r94ygFuX7XThZL58AOUX2n4J8U9NZP5318DgdUio5nk8f+
n8+xc8fec0Bc9ub2tnEKauFf2mpay4H+9qHtv6YoyK65PyPrFwfawnkvF09T
0NVfUzdKeRugbt+GnBsz+PyhyjsLrGqAggSKpuQcBUUY9ezUUGyA22Y5mtrz
uL6h0ZKp4w2g0+6mdXGJgm74ynaUfGoA5fA7zjo8VNS+zWyPLrMBZPel585j
3zw+qT/c1QDLE5q1QnmpyG3bNcffCw3QclpP++lyKsr/IHn+2b5G8G9b0u4W
oSLBN1+PJ39uhOrWsB1HZaiosUSbFjTZBB5tFWbq66iIuSQqbivYDArt/MF8
66mIo7HGwGVjM/h0+Dfkb6CiztlfdTPEZlDpdnWXlKMi46e/mxLTmuHG99Pv
GhWpqGoxMvre2RaAcbV9pjuoKNYvwFewvxWGx23Pa+2kIsLKIrfKf60QM5EW
LrSLij4n6bfelW6DsclNHQW7qWjorMd3DUIbJM6IX12nR0WWLZ4C4RltMD//
p7gNUZHI2pCIIZd2yOevPmhBo6LBDHUL3bkOoJmZ/VGiU5Etv+O3Q6KdMJw3
kjeB3dljxLNXoRMUzorKBxtT0cnjM3c6qZ1w/z116eUxKqo1XO3wO7UTXJ2Y
H36fxvHzLN9WQuqCVV8tr3w2o6JQ4dLy5We74OWGSbXb5lT0oKpTXfVKF/RW
romXO0NFiX+freVL6ALjLUe9jlhRUYyRzdvRH12g1dK484EtFaH3fDI9ft1Q
s91m1MIOx0fowI/7Ed1gd2MuVdmeiuw01IMlk7shWWetxAcHKpqWU+kO+twN
YndMJ3suUdHBH6e0/Xm5kNn343mGExVd80z9ESbMBYKet6X7ZSoySeg/7CfO
hYDBh/VCLlT05o21iYgCF8YPtGdpulFRROXXo/XAhbC4ixfmsf3vkttnj3BB
afyvbJk7FYlLjVb+o3LhTKLs7ROeVCThErE714wLdXMWDld9qOj2Uv3fKHcu
OFDH5I188fO01GOFvlwQSPNvFfOjIsmQfE7xdS4YGD8mpF2lIs0vCWmWd7iQ
ncFVqg7A8zcZICykcGHZ0ejyp9epyGtd8Lcrz7lw7A/RJiCQipbev5gtzeLC
PCH/6a5gKsrdkDLS8Y4LlAnbw2I3qEj/2RJvZhEXHsXK9g9jVyf/sTT+xAXD
gRtbk29SUYVrV7hcFRdi7+h98QmlonApk3RCHReGd46fP36LilZ/8EohsLlw
N8g0VTgczzd1pq22lQu9aisP9WOP5TRYH+3kwk72p96S21R04NjVi7lcLrRt
Vldwj6Aimd/6YZMDXNCo7P5Ev0tFU5+4441DON6XH1ip3aOixXdWl+6PcoEt
TVy2PJKK7CFEVXmcC4rF/5K7sS98lCA/mOSC14VXqPA+FW2Orf/dOs2FKlFb
7oMoKvqkfe3U71kuOJsx5UjRVBRiUF9XMs+FMt4bJVtjqIjP94+W/V8uSL/c
e3YJe8tKzZ6RBS7YGY8ttsbi+ZzWESAscuHD75RHr+OoaHnFt/KrS1xYlXzS
4O5DKlJ6X0i8w9MDlkaiXfbxVJQaXfXGY1kP5I+VXjVMoKKsT8Xaerw9IBDj
vlEukYoupZh/b8Y+pa/2cR5bOsl+hs7XA5nfu8wbknC9kM4ITcFeDI9ayH5E
RU1uAxX12MY7CIm3HlMRWbanpRk7rW1hn3UyFZm7WvYWYs9dz2s3eEJF0KEq
4o1NVLXxXZdCRRtKeH3EsROZ6zfMYG8NyD1+E39/3LO+sC6VioKCf39pxuM9
KBd8+kUaFTlqJ4/xYT8o1/0T9JSKhEYd50Xw/AYv/Xx4Jh3v13VbRSdwPPSk
UvbufYbXTy6cmvuPC7eLTrRKPKeiYSvb7xQcv+7zIt5j2MpG/r++/uGCjkip
zLcXVLRsZ3TWBhz/G6/cClJfUtHTOy4atF9caDmlauqfQUUG71uSLPB6XX1+
P3ZHFhWt22AxIoHXl0k32rMqm4pebVgu/WGMCwq//jb9wF4MpNYAzo/Kwxek
H+XieKxv9OjF+bTh57q3Xnm4/kg+LuD5zgWnB3XHj76ioufCcvL/cP5J9O2J
FnpNRcevnlgW2Yb3Z4Cw5JV3VHT3rt5+1Rou6LJ43xILqKjGvzGSXol/r/D3
5Ob3VHR4+5DLiS/4e2UjCbWFVKTrt9daAO8fHcHaLSrFuN7GvpacfsEFUdOv
XxexcyiUT/JPuTD4/KNtYwkVHdvUtlEnmQuJpOyMwE9UtKY8xvt3NBcEI+7u
6PyCz4+RqmK5ALx/um425n/F60MkjZ314UKRZoBnWDmOj7z+dKAbF1xZzh/2
VOLxDu8Tc7XjQoekyaH71VQU/bzh4W8aF3ITJI8asakofVxleYU0rk+jorMb
OVQkQNUtPryaCxf0l8fOYN/teBP7QpAL67tn2540UtG/ALerBye6IVih+dxC
Cz6vivVLn+d0w6kXD13zuvF+2b5BsmFrN/C+23R/w09c79+cv/dsuBNqLRzK
+rDXaj8zHWrqhDj+tzMZY7g+Pdl5nL+sE7abUE/un6CiH7ePtpbHd8Kpn76y
FtP4fGvIvBdM6ITcLa3pj+apaL+ucoN0UgecuRf1QV6Ahq5vqGu339YO7+2F
+pXlaIibrPXacEUL6Fl5LfJspqFDirOGV382Q5Hpj7Vt2DxNPBPvWM1QalRJ
uq1AQ8Qy2d974puhXDE0d0KRhvLnc0KuqzdDQ4+g3/ttNPRjzx26FqMJxk8J
SpD1aChA0knh5YsGcDb23LZ1Hw1N6XULHLnXAFOEwcP/sANKV8sJejbA3J4K
rxx9Gnoy3kn9Z9gAC1I3uyQO0FC6sJdZSy/up9gCLzuMaKggevSHgTIHbn/z
KHtDoKF/l5qe54lxYNWngY4IIg11Fu9TNfuD7z+55asPkLGZz+pO1OH7UkSI
+1MaDb3voZ1bje+LiiSBA07HaSh5vcJZ3zYWxMR+G9I9QUNz10g3ZL6xQKj/
9n2+kzRkKL8iceYdC0avSXyPM6Uh12uj2y7FsOD1m803y8xo6KJ/WbPXCRYo
8X3XjDCnIYiT8lcyYkEc41mLqQUNrfxoqLtelwV+IxpqY2doSPBup3fzehYY
yu+rlTmH46fiovG5jwlvnRbd+7BDnLY4vW9i4v7t06bs8zSEIub7/31jguhJ
gvOhCzTU8vm1qGseE/zTRNatssHjCb8YnPqUCROTdZ9asO2jh74oxjOh4fZx
CSc7vL4NXdqbg5lwpE2mSNeehmSLlZXjvZlQoNxhzedAQ2qMdg+7y0xI/Hzu
bdxFGtrVpPhuuTkTVokpnT3vSEOjVyOcm0yYEGAxJLj9Eg393LVceonIBOvf
l0+VOeHxGZS+NdvLhKbDO3gjLtMQ/WCTT6Q2EwhRcy9Nnf//XlKRghoTtm2/
uvDThYYuBX8nmcky4ZEvelrgSkOZgbss+aWZIPaNjxZ0hYbkLduDRcWYMHM+
7LGMOw0pbv52R385E2zyqIQ+7Mtve/XseJjQsig2meVBQ1VKQ2tGftUDidLw
0MuThurl6wtqxuuh6GHswUNeNJS6hrjD80c9bB88PbLSm4Z4X6qQRnvqIXnn
pgct2C8fQblGRz2IB/bsT/WhIZPUs876zfUQXJ/Wf8mXhgovnl6zkVMPc7J2
Ebp+NBSXscy1rr4e7BzU9/BdpaEsaWWzo7X10PZurLsWO8cyMTqruh4oy1+F
xvnTkLn+juGuqnooNnHXPn+NhtwsP8oPYWsl67ZpBNAQy0CTrw7/PuXn38Df
2FM8yjsj8Psk95Wol12noZqQw7wqzHoICQ1suBNIQwfUEp0f4vH8bjx81TSI
hvYd3h/IxeN12LJCaUswDUVr79H7i+fT4VxT9xNbl/goYbC3HmjFdz0LbuD8
Gwh8kTpUD6UiRzcHhdDQoNWcjcZkPeickv5GvYn3l7Rwc+B8PaSlt7rIhNKQ
do7tImMZXq8krmw3dqLvvUA1ASbEPRiseHqLhrTUz6w6L8KE8MDZjTvCaehd
I4//T7yewd4LlfPYT+XPBepvxPnqzOdWepuG3kwF1P/YwgTXM2uqqBE0pFy+
+gZVhwmOx2XcJe/SkP860VXL9fB6U+Q2t2MPRXVtljzIhNN6Gh52kdiPNynu
OsqEA9JEhaAHeH8Gvrtsh/NZbyWjlhhNQ82+a1Z/DmLCTv6TXmIxON5c18KL
EXg/TVnXJcXSUNJta4+MNJxvdQE+BfE0ZNGVQ/rcwAThrzcVryXg+pM0uSaw
hwn8RRHMw4k0VCviaBs2xoRfLxKVOEk0VBazZdF5BQu6bhSwfybj/dJITPE9
yIIWv5Krr5/QkLv3v5QLxixgXylX8U2hoTCxDa/vWbLgq1WDv1AaDYm9zySk
X2NBpv6E2pZnNJRr1cT7ppQFPrPKQaZZNPTcP/13BJUNbqPbt8tl09AMqSN5
nSUbnPp2tfZjD0d2WTS5ssGKdUjzSi6Op7bVyV58/yZknW2/k4/zR0lETG2Q
DWsvxO4oe09DgcePN6aHc6Ay83N5fCENhQosPn6VwgGvmZ+nXD/gehOqkT6I
74dtQYYB8h/x9wL/JVT+4EBiymTNtVIa2tpvl2VIaAB5LtlmfwUNUZa/tF23
shHUzXgevmnA9YNbuK/xaRN0pKhvu9NIQzYKK4XflTTB7eETJdZNNKRHrapK
aG2CMe+sfokWGjrCtTptv7IZcuNO67i209Dpuyt1pt2aYVfT6+rtvTS0vCCq
7M1BfB8ztl98Nk5DlWeQSwyzFbhjg5tdJmjIelkde2SgFQJu2xzSm8TxOPYj
UAHfzz5XnA+tmaKh+ZWvRjRV2+CIwRnxyVkaWlWs8DLnWhvQ1I8q6S3g+l5T
ut1esR3GK1kEvn801GC6ofPM3na4Z8O4WIMddK+YqkRtB/YTau6ZJfz7ZXX3
ldza4bgMQS+Il46SLNYatpa0g/lyfVqNEB2tUSmZO0zrgH8pH5yjV9BRjgpD
4/DZDniE9KLOCNPRPp8Pq2WcO4Dru6dlQoSO7nxhZ+tFdoD1lPY5qdV0FNXf
vTOA1QEXu5U8zkjRkU3D0ZNXSJ3g817s0YQ8HfGhR5na8l3Afpb/vEqBjozk
xHLub+8CtZgT+Wlb6OiIt+4Yc18XtLomVpoq0pH2RhOfweNdoLtNZbpUBb8/
VVPzTmgXzD0CQqQmHfk/qthjgO97rsFOU9r6dMQaE1ZiRHdDleuafyIGdOQj
4rHD93E3KFi9FhzAVn9SphfzohtY+n9k4xEdeb/LiHj0sRu0ft0w4jWkI+dV
u/OE+rthzD4pkU2io5HMfIE+GXz/otccuWJKR5r8YweunefCq6jPXINTdOQa
7PCpyZYLf5oLfIRP05GlY9xFTUfcT1k+zX5iRkeEfYo7+3E/9tLFX5p5ho5S
qDUH7UO4MBKlNbDtAh3tFkwsEnrJBceWBzcGXOjofN/jYwzc376WDZd75UpH
iwZ6dodwf7xgef391St09PSgoxHg+8XtoUs/Jd3pSFX4tbnJCnw/+HPk+CEv
OrIQT7w7urEHRmXntyb709H2qnVXlYg9cMnK4supcByPd1WXFZ/3wH56rKX8
bTqyahGfPpjdA6L6rIUf2CErHdptXuP3yRze5RVBR8xPLidLS/H76relx0TS
kVbu+nM5rT3gYLBwkxNLRzOR7iMqor1gtyGBTE2jI6dWmw19zr2gu6JxUPIp
zo9/gxfWePaC0K9VwR3Y/E9a5vZe7YXn7MCii8/oyOzKTjuvW70weMtBI+wl
HTmkCo89ftILNr/3rq7IpSNZuYYcQ2Yv7B64khGRR0cuVR5jQ429INCQZXTi
FR1lq+21Dmrvhac58gH9+XR0YC3RJXKgF77brJjke4fjvfjNY/VCL5xvbGGj
j3S0Z2bK1GBrHwxL7Dm5rpiOFl6EWZxV7QNnk+j2SWxzr4xTF7f3gX+98feU
Uvz7O1HEg7p9EPetapb/C55/G/laF6kP5IRUfTqxN8T5vCPS+yD9yM3FN1/p
aK6KsCLxaB/klx0StK2go7SPdcIzZn1Q97FI5lsVHfGsr184f7EPji2sT3pS
TUdBn428/zj1Qbuet7xPDR2R9ntou7n2wY93u9TU6+iokLV0YbV3H1yei8rm
q6cjv2DusKZfH8ztnNLpwE7dHVikfa0P+F5l77vDoiNahcTJ5uA+CJsQLb3A
pqMf+2+p+NzsAzHNi4YGHDoS5VadXLjVB7GXvlVKN9AR1W+DvcXtPtiUqUwd
x9bq/MhNjOiDtOEbrIpGOtpfN3Ow8F4fqKt+P57chMe/gU/yzf0+0E1PPmPc
Qkfs2VyJAzF9UPJ9sVe1lY6m1zeRWLF9cGSLhS1vG/a3zmX6D/ugxurDSBu2
aZ3wx6D4PjiavM45v52Ocqcf8zxN6IO2Ls+Z8A46ClzOZSQn9oHlxiYv6046
OlW/Usc9qQ8GzXb+299FR6WyjipbHvWBU/z961LddKT/Xr/gBfZMy8TyMewz
zl8vCD3uA9+19LByLh29WHnkjQE274msVY976CjLnFedgh36QCTKs5eOJlT0
yVrYqzn2axl9dPRPf2/8MH5fzJrKBJXvOB9s9yb6YMsylDYv66ejeOeAxm48
ntSI4LRWbFA0rlqHrVbbq/JqgI4aGGOLynj8uSIHssIG6WiwOP7XCjy/PaTH
2ud/4HzTe6hbguNRHPrvzb4hOnpyb9sRo7g+MKww05McxuMPj017guNZvbyw
eBS7eE62pfZBH5gYyhz6OoLryaMl62oc/5ZAj4qkUToKpwbWP8Trc/ZTA9nj
Jx2tZA4m6OL1G1jSYdLG6OjkpCvtWXgfOBpEHlMep6PffjYX+0P7YNpvvGUJ
+4rBcs+pG33g84Fq0TJBR8eX3Z+tDewDnj8ZPbmTdKQRSb/oifNrlafdsNU0
rgeH7ag6Xn1wQ2T9ovoM3v/DGyNvuvXBwuPqNXPYrL0JsTnOeH9Vbt8bNofz
+2bYaQ+7PrCy4FKO/cL5fLaaKmmNxz8ZabnpN/7+AxeXoLN9UL5+9uareTra
UR7+jnO8D/Rz0hP8/tBRYmKd2GtGH7w+ZJpz5C8d0QMlhazJfZDi+KGpbQHX
j+1GBtqoD6C79P4yHgbKn4utdFfG83nxMNEGOyvWc3/l5j54e8U1vRq7dd3P
rT/W9YGG0NbC6GUM9E5M/fF9kT7YoH2zR5WPgTrHRogpo71w4u/ZkQjs+6VX
rjh/74X7X3Vnp7HLxV4/F+vohRWnh4WK+Rkow3f8+reqXvgVSNUyEWCg509I
PBrpvaBDVdJ7h50ccTcuIbEXnNYuHZIVZKBzsTkc7v1e6M/IPTmAfYos7j/p
3wucBolrPisYCJ03e73veC/kKLXVpogyUN3Nr9tn/vTA8MSrZsGVDNToUFa/
ZrwHlD6E9zhiG6b1HFjd1wNJdP3Z3asYyN9erD+jqgfCvZJlq1czkPd5LV2/
uB6wrbK5OC3OQJdJhx7Ob++BxSLjIUsJBuLRq9XfubkHHuTst63Dvhaf8PPo
mh74/ED8/AtJBuppKzl9eJoLm84Wnz4rzUCBsfqd/G+50DQtRapex0BBQxUS
8Xu4YLjxq0rqZgaS8ax7eMWyC9pX56aLyTOQ3aXTYjyAz2fehK3+2AfXi5+6
sbELkgedN59SYCDlKS/dgLZO+JsnK7N6KwNdkDoqYXmsE14dcRP0VWagkT+Z
p1cTO0DeecuAyXYGorVE77uA2sBvj9aFYuwbb1yEr8i3QdPi/u+qmgx0r6B2
Kp23DW7fOdHLo8VAm/W0Y0O+tsLvl7e6srUZaMVVDpdMbYW6/vEm4V0MFHlt
XGirTQuoZi0c98AeFm49spfUAsFuKxp7sBlDY4Vh21tgL98WTsFuBhp9WVUz
+KsZ0jafqLfRZaDcu5eJeXeawdesqOLzPrx+Fq173pU3QZPCtyPb9+N8cYrK
2ZXTBFrDjV8fYq9ZpuQjENcEA17jZc76DER5tRSR5tAEJjEKpZuAgRLiXtnP
SzRBloUmhGEbLFqoaS81gpDi/uJZbO2/eyjlw43wMf94UQ1ioHW/BDJFyhpB
hRVa4HOQgeKSTh0a92yEoLjoPQPYKn9OyIrYNELX2ZS3xocYaFHn/uqAY40Q
NfbhtYohA5VpDg+56DTCosh4btNhBppYrTtlMdUApzh/NQ8ewfm8Yr+8el8D
vI4XysnCHquufU1qaAAHVYWsYCMcn+TP2VffNUDjkeMvdIgMdPXQCteE6w2g
8l5kIga7M7o2rMi9AXzUP+/+i33/QFG4nEMDbBbT/FJGYqCllMnbz482gGOr
UPcxCgMVB2f45as2QAm5RPE9dldMXjlTrgHEi90dN1IZyGwpKkRNugEKUnrn
+7H/sMqz7/E1AL9jkaQnnYEarnDuSfZw4GSXq1n7/96e4c3byoGXDNUUYDDQ
Mf01NsosDjB2xWgKGTOQw1GrexKfOZD6jOLhiG3U9s6ltZADc+v4PjKxd+e7
J3Hy8f1h8TLpoQkDdZ/i2XAunQPjzkqR/7B70veKzT7mwMG+jmarowx00zA/
5v1DDvyoIF5QO8ZAJs7oUcMdDuyM3BLw4TgD9V/LuwleHLjJ11YudwLnI6Fj
jnwF31fc760Mxp61mA8OduJAwOl/8ZSTDFTg0mfoeYEDnJr8nlzs1jHZ9VpW
HFACBxUpU/z+Avnj4hYcqNnS/KYTe3i7zSHGcQ7IxdxZOHCKgYzNxONfGnPA
VcjwUDp2KvtckjqNAzI/c5lOpxnoUfK3iUdGHLh41nYtBzvSg/L9riEHilkb
z+wxYyD+GEp12gEOWL8NG1nCnslJKtyznwPvVA7oWJsz0EdVM5vXezkgnPDL
qxI7ZsSJYrKHAxYrs0u2WTCQ4q67xWK7OJB7zVogEnvlEddV4zoc4JtaT53F
nrKouzOqxYET1qyoU2cYyK/oVISQJgcWCAbyCmcZSJDSfOqhOgfoH2ZsQ7CP
LuyqFFXjQIpGRvYwNmcycTFBhQOzj61maZYMpOH4mXZEmQMEcZn9+djLM8yF
RZQ4kBBcF7jWCufbT/mgoa0cGJsL/uaLXeJWKdyzhQPIfp8YF3vMX2B6QoED
Ue2TJwzP4f1DuX9HBvugR+GaPOyASzcGjOQ5MCEWVLPxPAM9iX3gHLmZA48y
yDfDsPXE71Fn5DhAOSJ58Bf23FbC48vYf7gdC+etcb1ae+cmL/YL36fvmNjR
2poqmZs4YCrt5Kp/Aedr4WLKRWyBvN0aL7Gn/1SvQ9ivyUuD0jYMlLjXNlsF
+/xARUoQdkBxcuBWbPHr9ywmsMksQoEOdumGUzIWtgyU/V7TxQTb6a085xv2
8RLF+kBsWePhO7vtGGhc9e/0Z+yqkVeEVGyVAwHLxPH4vEN8+cTs8XlKubHu
//GryBsW+2Hvf9Bm0Yrd9EHUewjb6Sxjgo7nH3yicccJBwaan307xcLWmUwa
+4wd8bgr5AyOFzfc5oXmRQZqS42tm8G+q6RpnYgdTno1EoXjO2pW2uruyED1
SVSNIbwe8XOhD3qxP7U6RSfh9SJGGtPplxiI3aRz+qQiB9LLe7+oODEQ747v
Ac14fc9qL89tv8xAeaTXs5OqHFhVU+tAcMbxssmfLcD5UmQTo/gGW/J6s6U/
zieZROWECBe8/5n1SzwaHCjfPXH8L3baA0PPImx3VoGYnSsDqXnI9bhu5wBb
gBRy4ArO9xyCRC3Oz4An4geysTVi98hdxvmrub/973o3BkoqrE0T0uZAV1Pq
25vYRVbtX+Owb7s4usxg72rQStuE819PdNc2K3f891OPrB5i/0j/N1CL/Xfv
jJzQDg7EHCh/oueB+4ci3mUO2Ic7IsyfYVuoxisVY894nFwr6clA3IqwV3w7
8X5Ys5kdgM3qTivfi83I/HH7J3ZfQUHwWezFI3lGp70Y6Gt8zCo37Mweb94K
7C21q0I8sM38Dn7c4c1AmbGTojbYwmtFvJKxVx9c/fUAdkEeR2elDwP9ltBl
CmHbUBJ/emOvPb6fUYjHIzVo/XwAex111OY49pfrGueP+uL+65DM7lY8P1fZ
uY2l2IEB97oNsTe/K27Z5ofrLVnxRiyOT53xzaiH2Okj6QQmjqffKJ0mcBXX
txf95DEcb/WbMiuuYE9V5+VO/L8eNWHhLdg+Bp/1hvF6eYn/W2ngj8/n4NJ9
Vdtw/TO9fC8V21SPu3gXr3d5Uo/4imu4Xswfq9fD+eDYdzTaCdvzjMnvb7h+
SKiWr23ApvKJft2P64fl65eyjwMYSNqgVqIa56PAH9nH/NcZSFjge9oAzt8s
uCvvgH1vVb5v///7u+qK0q5ABrriGvz3zgYOJIsNPI/HPi0tqqi7jgNGJ0zV
eYLweoSfiC6X5sCDnv1a1dhLfgbkyDU4H5RzXmkFM9CGA1Zr6lZxoMdRflcM
9qCtsdyECAe2/16uZ3WDgUqd0iT6l3OgclX9oV8heH+Ynr3w8DcbnI4dKDe/
iddLbY+L4CwbpOLzCZ+xNQImy80n2XBOMY56JxSfNxQZ4+IhNizsszq5JYyB
Hp/yGjzfyoaU65zWUOwtxGyiRCMbiBWHzcewH3a3/8pgsiHGRM3qfTgDhd5X
2RtfwQYt+2kH+h2cb4LsEy6v2WAdc8Pf9x4DxY681j0Yxgbhjl88PdhPSSne
//9/jzx5h6Ajkfg8f5AnPOPPhsVMWuia+/h88EObzK+wIa5s7f1nUQy0/Y69
+EkzNtROvHjKicH9iZuuvZYKG3RFDFT3xDLQN+M6v2fyeLyK7Mx4bFpmrrvY
BjZ4nP6TbxXHQG/OhK54v5INm7+QPo8/xOed+WfTi1MscIsd6RJJwv1q+/G7
t96zYL2BhoxhKgNVNKZuO4ZYYBeeG/Y6h4FS9Lc8tdRnwva6E4GbcxlIiaQd
67uTCTNi/7xvY68/pFceq86EgBiivXUezocNIWKN65gQ+6TXSDIf59s94Zjm
0Xoofye53O0t7teuHViKt6yHLd+9ru34yEC/6sJoi8Z18ENJzvMxtt27vWI5
B+og2/6rk0gxjkewc7K7dh3oja8504dtKSoUe2RNHZj8ebk/qhTn59seVyF2
LQSIdc5PleF6KnGJom5aC137D7i9qmKgyhPpMjXuNZCoFrljbTWuV7o7ew7Z
18BpmZ4pX2zn/srMWvMa3L8HuByuwfVNquWjtGEN1L0sdWqpxfMVInT6SNRA
sQyyX2TierEKlVx8Uw2PZgzOkJpxfdOR85/lr4YzmfsJvX24X3VbZd5Q9Q2S
uZIlJt9x/yLn9yW19Bv0Sv7cVYYd6tHr6v/2G9heTdqS1s9A7xsc246lfANn
2uLihUHc78kfPBfg8w0CJ0reDA3j8+KMfln6tm/wbOehLZOTuP+xHdrfEFMJ
w3Yb4q2mGOiZ2+xwxp1K2JY0LcbGtn8e+zQ0uBJyl6ctvprG+3GHqzfDtRIK
m/jb3GYZ6EwaUVWSVgk1XuX3fv/G8TRmrkUClbAq65Gg/TwDnTi1Utf4XwUw
ejz8W7GrDmsSrGcqoJGo7Fj4h4FCfGed7/ZWQNf6UCO/Bfx3peOuM8UVsJlu
WTyKXbop6PHqtxVwLkh3l8U/BpI6rb9dPasCBkd+KBgsMtBOktqLcwkVoLb5
08Ns7HdN5dr+9yvA8dhDMbklBtp4ouzYw1sVkB3qcvMutubrY9z8gAqYKCIu
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$12397#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.84540743864494, 0.2290679961442947}, {
                    49.968036348718975`, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.845407438644943`"}], ",", 
                    RowBox[{"-", "8.031963651281025`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "8"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 39->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
4/xdR66XkaTmVdLjqUw4xYlYHlpRRtTnl0nVPMK87NMarFbF98tAsaUeL5mg
Z3VrmYQEl2jyhfOpBbiewLzVSWu4ZMnaP4flXmG+yw083aXKJdXlA7cbCplg
x576m0n9//9PaFinVMKEPy/U1A1DuWRu9FWN9xVYz2TqGsMZLsm6vdRkvwDz
9kyr1NM/5UT4pcx16SEmnB6qeJWF53/DUefyXvQaH7fIHEkeiRfJH3/8Hfsn
/VbUC1keUTvAPLxnBPMtx3H4jjaPHBnyXX10DPfPJuTfZm8eyVrXkX53Cvt7
v1TG5HcesYq5USQ/xxAy+tNqZFqqiPLO7sF+tPOPM70zH6rI+HsVmey5hmAu
1LLv9fcqEr6RG6g7zxAW6oq1WYpVkzzeyD47cUOoL7Bs7IJqIv6P2Zy22BBq
Y8WVHz+uJq+cRD8ryhpCh/iZA4bna8gum/PTQnKG0DU9bMUOrSHFZn0r3qLd
T3A2yNyoIWX7q2mRaw2hhX2qLfdpDeEphGWNKBhC78mjBjt6akjrx7l+r1QN
4dZWh/RQSi0ZPjJ3CX2XITQGSjZoitURN+Nzqut3G4L+PRXJtmV1ZJTydd8/
9GVducsO8nVkYmfV+efahiCi9XzGTLOO/F12uWvJXkOwELSkRRyvI2KCOZnv
9htC0qpJsfXsOqJAm7PX5ZAhrJFNSZtlU0/ibtX0a5oagrcsvXuVcz0R/Rx5
fdZhQ4gp2ly63qOeDF5Y8inezBB07vdYS4bWk9w8ucvlFoagqBlSZ/CwnujL
726QsjWEublWuzYN1pN8l2nPXrS8gc/G0+P1RKmYI/PMzhC+fH4Zfu9vPRE/
THHTO24I31RaQjvFG0hr5KElLo6GYCuQWZil2kDsf7keKXcxhEFBtl21UwN5
s09DONoVn2f5y4RNZxoI5cZEppmbIXR2VMwJPd9AVNX8/w6dMYSvRTvOi11u
ION24fekPA3B5Keomev9BhLSlPb5tK8h0L0lRO92NJC09I4zUmGGMFq4JiV6
dyO5e+fD6m70hLH6Rtm9jSQ+9mvVgytY360vz983aCQRQT/XaEQYwiV43HzZ
uJG4Wy2qZUYbwpUqlziuQyPZu5y6NjgWv29gPHzl1UayawGrgXoT6/9iXuHY
jUayTeTweck4Q5iKGfcqj28kSqP2jXduGcLBxV/E9VMbiWRjoE9BoiFoMZzr
6nMbSVdogWAo2RDOiF9JW9beSNr9Sv1zU/D3F/+RMX3XSAQePCXfVENgz3r0
I+pDI6m0aQ0QTTMEgfSBxZ/6GskT7RGVdRmGUMiab7dpqpH4/FQMNntqCMra
j02YUk1kxfFbGuWvsL/uqk6HGzeR6idcXmKhITAnc6N3Hmoi58eHjrgXGcJs
+gOlLrMm8jZYP1CejfNSojR/lXUTSUr9UX+hzBBk69IjWC5NRP4D3WFPlSH8
Uu++2H6liWy0EErIa8X+7tcJOFjSRN6lblSNem0Ia43CFK9wmkjkN9NS+zeG
cCow5nRxRRP57v3085J2Q7CRp9jK1jWRrHhzdfdOQ9A1geG3bU1k+5vcOrUe
Q6hQzb1L+dFEiLHTdMYwznO2yf4Li5uJzyvJuyPyRmBPTRsqD2kmgoych7Vr
jUBjffqe4UvNRCXONCdtnRGk/WO/lL7STDrck6rNFIxgVfoPkfNRzURTVWms
TMkI9qTkl+yJayYTdwnl2mYj2NqtUDuY0UzcQ1xGt2obQYjbwqXxdc2k1n3R
v/k6RhC+qPKPoKGZrLXJnfsFXRKQ8mBBczPha/9enQhGcOxl1OKg1mayZTJ0
v7C+Ebh4Xlzq8L6ZfHe6kySgGUFkuX6L5HAzcTaqN/AwMwLvu88lUhfxSfYN
7gedI0bwoy3q0u0lfPK7rcBHzBy/fyA68sYyPgm3fvAsxcIIOrPWyV9YySeZ
ZwKWN1sZQdPyEmc9eT4ZuLHli+pxI5gI6Hc7v4VPTrXHhn45YwRlKrkCEyaf
5K6OkM12N4KilwzTBUZ88tf64it/DyPYdcNMt4LFJ5H9p4eWehqBof64mspB
Pnny2+CQ3nkj8Bi3MXttzieDq6fWJwcYgXgh9X3yCT45bXO04kiEERwM1uno
D+CTPUa3rOUjjWB4mHtOJ5BPxLX5f/vQo5l9tjEX8fuk9m0/H20ETHu7naoh
+H1Nqulx14xgP1MhWP8Knzjr/L3ccssIdhPTib/X+cRR+jadmWYECZ0GTS/T
+ERz3uuvSx8YQUWFB4/zgE9EJxeGvEMfZifV16TzyUNBUPHJDCN4u01NpvUh
n3y94rwpPNMItqRbBQqe8InDLy2JqiwjUO1wu+abyyd2r9sFwDaC7IJtzo+4
fPJtyc7DK0uMIGiP9a4b5XziduBm5w+07QXxDN8KPgloMv6UWmYEh6L6zlJ4
fBJfU/tTpAL3983LIkENnzSyi6Vqao1A5NIfdlYzPm96spVxuxE8DTNvq37P
JwvPOX6zGTMCvewYV+lJPjlR63BybDELXEpbfjA2Csh0sXG/9RIWeB+Sm9BQ
FZDY53tONKI7yNyAVZsEhBu72O7RUhak2mlOflYTEJljJebHlrMgX2HHA091
AXkztoxWt5IFcZcWJbtpCcjpL0LVmqtYYDdjP0bfJSAiHQP70tG5S9P0N+wW
EPUSzt6L0iz45eBd2rZHQKLCTmvtXMMCs75o1U0gIPprKpXuy7GAYtwWm2gg
IJ0SWemS8iyY2mzwzma/gLgL314fgLYd+3FbkSIgyV/d5I6sZYGzT6ztM6qA
/HmxWkpiPQuyq5ase8gQkGyDs3N9FVnwwfi0/L4DAkLVOhbah769Ulx4BP1h
I22WqRIL9i7Ueh1vIiALF8nNbFFmwZFm/tZPBwXEubNu4osKC+QmxN9aHxYQ
ebd1Xw6oseBVofStbxYC4rdzy/ESdJTicpqLJe7H9J5PyptZ0L7/08VhdGSU
aY/QFhaMUCysvx0VkF+ZV7qebWVBTJvxn7JjAmLiHnd0lToLMpwvT262FpBn
WvffhaIt/xlpJaHtqovfWmqwIK1q6vQpGwFp/Dz8Rmw7C3b4MEu+2QqI8tO/
h7zQybEF8/TsBCTk7LzXH9EVvz0t4tFas9a1FOxggSlr/6iWPda3dvOB9TtZ
ULc4QvES+vu1Pfyr6IVVgXpN6DQ50yYHTRZIPP4oYXZcQGa+2hoK0K1P/bJu
oc2fuzZoa7HgPEVZqhWd5+XHeIS+YD+js8BBQCR1rtQt3cWCUwPL1+ihT86O
owWiK3iXMz3RvPrUmgH0/A9O3WloudjnlMO7WcCTe53TjPa1KK7ion3cP8pO
od+srTFQ28OCRyXp0jInBGTLt9eVCeg33/fcI+iIFz36s7VZED5YlHoU/eX8
cLkbel/Kbpnz6L3wV/cdOnKiZd5VdNLcedz9Oiz4/DrpaCp6snHZ3hx0i9Kz
RdnoA3Fry2QI1q9dVqYE/fToZhKO9m+a58tDiyrsKfmJ1psIlqtD2w5StG2A
BSfy5orWo9k5h4rr0b8/nVSvQUv52u7W3MsCtutUKhftrutaeB99J3PKsgDd
MM9PS0KXBVe/5dllopX4YQU+6ICQc4Xx6OD4mzu/oO0aLtsHo7uOpeYb67FA
ZdWW485oTcXn29no6tJXpUz0je9FuUr6LFBd4nJuE/p7XrVGLJrmFHd1Hpri
/zp7Br1ohd/8Htzf6fnDWW/2/f/703aHoY+0/Nmsa8CC5gs+E4fQuYmiz5+i
n7xXXyuHdlZe+zRkPz7fsFvHI6x/5Yia6gjahHnlpBNarmD3YwsKC45lPvJV
QL82OPRIncqCzjzFdTewv5RezR+JQ+dOJMjR0D4buTv+oBOjv0hPY7/KSW6u
KKdhfwcXLj+K9gj6LKZE///6bkmLonnjt40j0dJL/ihlYf+f6hDtPshgwQv2
zIlJnI9SeqnCKzR/fOJuHHpxieepNUwWOAjL9aujC1J7pj6jU6xzOLY4XyKn
ipeeM8L8OXGt8Z6VgBzucrfoREvE1PQrojNZyqmEhfO5MGLTU5xf1va4zaLG
LFBqOKT1HOc7adqVlnAA9y+q+Mk1cwHZdm1dYNEhFpwWszETHBKQy7Pe8mRN
WWAoarRHDf3WM2ZBCPqTuafHZcyXQPN/iYzDLOhmL/+yFfOnfl1b3nszFsx9
ZaV4giUg9vnhAzMWLKj3uOl6iCYgL5X2qttbskB+m3LVZcw7sduT56vRM/vT
kl5iHmZdsJ9z7SgLxFT+1klgXv6l6MivPcYC5rLPl1L1sD86f5jq27Jg3flN
5SaYv7pehYteoKNKLgTSMJ9HJIPr19ixoObKEX8dzG+GwVLdSXTwJh09GU0B
mfNix6bM45j38rOPsTUExPuS7yxJJxas8D7U7KciIMe2zs7qdGXBsvqjjlLL
MU/rG5wpbiz4scLrKXupgBQ7xCnkoed199+1XoLzkaR4O/oM9sPRgNh7kgIi
mEO7tNcD8yU2Vll4voDsexdtmeHFgoK0vT8tZ/hk42WpeR7+LLi74++HwC98
IqgPj2hHx/+y6P73iU/OL/63QCeABT0Wu7Z79/IJ787HxfMusOBGc8io8wc+
sc7NXH0vEOd1cPO83W/5JPbjni11wSzQL1en32rA+8lum8PrwlmQXprx92kO
n6RebOkIQ6fU0e6JZ/MJtWqf5Xf0v/DVzJNZfBJ3QMXmVQT257WUecpP+WSL
05izURQLossuczLwfmAfFxrgG8OC95ln55Yl8EnDyKMHLXEsODvK4tTifUVz
vo7yzlssuKdKmW18AX9PQfAkEd1Re39Xhz+feJn/zrGJx/ov25Y37MMnchU0
7nACC44uPxWxw5NPzt4a6Jp/B+d1f0uNpjOfdL24YOuKVqJtX/vZEZ+3fskX
AVpy12PzWLw/yfy3ZyjhLguEKwMy/tjzSZVz5B/FZMyDgnMHho/xySqdTVL6
9/H742l/zpnySYgZ53YG2vePhMmRQ3wy7H5Idn4anv+v47118L5WkeG/QYDu
4ye7LD3AJy6LGrdZp7NgYKV24gje/9o32haUozMd+PNGGXyiZzCxWzEDz/fh
wNJJOh/zUUbvO/p63HtNSRqfcD65GPs9YsF/LjD7nAGfqM4Iv+5Gh9Ta7E/a
h/u98paZXiYLnitOGPD08f5mWHpM7DELbHjrCpX0+KTV0aT3NHrl1HW6jS6f
kOCvDnx0+0L5N3f38snSAgmX+Cfoyn2LlQHvV4L7P/6gGWbZHz0Jn/QP7vQ8
9pQFyln9n6t0+KRE3tpvwzPM5+v21b7aeD+MyArPfc6Cpwd0bq3fzSdqjaZB
cll4n3n46fi1XXwyLvnPOxJtcciiVwQdGEd1sn+B+RDxfYeQFp8YdAxbN6MD
gxQ0wjTxvro6zmxPNu5Ppo3KCvStlJ79S3NYsMZJxpS2k08sP4WRQHTXqVdZ
33fwyVrFzTsH0Sl+0QcS0X1Or9XMcvF+0pRpyEQ/e+K7oQItc1u6YC767LC8
zJY8Fhxc8T2lZjuf7FKvXpaEDvDZLHsDLeTpskA0H+v9Z1DXHs17uXT2WfTj
Zg05bXTk78K/3egNWxfVrkEf0LYZp7/E89bkuskctFTg3MGX6DiXiqaJbXzy
nvu0d10BC0Rf5RoPo1NnH+y8ik5wchv8vx0pvwV//v/nL0VyfqHVIpJrT7zC
vGgPKJiH3zfeYMBtQXvPGpRYhy6UHHpFClkw6nqkXh8daHLjxWM0Odgq5Io2
iNN6tKIIz4OvTmUpaPGO7uRgtP4xRZn3aIH0pfhhtNfYyk3yuB/xVqoxFsUs
cHtrKOSCtkoRXK5CD9FaMsvR6z6dv6DBxnr45pK1uP99G2TP3UM73J/hX0E/
c6p0mV+C9fjFOfsbffbJSYdz6MZs0d1nsX67hhdZ9aLH5n7cOYkWUi84ZFTK
AvHNZgHBWH/eWStmEVpg5Su/EvvjwO/MPTfKWHB47HuRNfaTlLbxthl0/lLm
k8V7cJ4vTG48ycH+thSabEA7zdaX1uOygN733NYa+1ON8m3xc/TxH6wTO7F/
x8NjxKTL8T6WGRO1Avs7UPL91CjaIX/7nDHsfwOT4B9WFfg8jWTPd5wP8Tjl
/lr0cVl1i1Gcn3hpr/bUSszPX1LSy3D+nm+QeHmgCvefNrqsHOfzrFPesxL0
0nGYI4LzvOuJRbpKNZ7/38RcmDjvvK0PbwrX4Pr2m5+cwve9rj17z2bXsqA4
vP9qLuZHkso1jRV12K9BERFrDvOJudTHUV/0duqlkCgzPr5PBJ7ZV4+fF3OH
IAt8v8ksc2lvwLwujL3DtsF5lAKn6WYWJJUmtJ9x5RO/OTFKdnwWyOY56e07
g88z3v21Cl0fsXdMxoNP8psuOFwTYN6ljI998sL6XSq1W9/KAo+atzsK8f3x
7riOFa2NBbPn7np24SrOW0/0mudo9cXKs7KvYR42d71b0s4CEcmmT/03MH8e
B1i8Rw9mbJRzjueTaNsSM7e3eN/NSNj2OAXzpFnbJO49rrejs1QhD/vryR5K
Ty8LLmXFFD/u5pPkD0tLD3zC869CWrKhh096lg5tL0dX2wlfHPuM72f+d9al
fcb1yNX4GA3i+6Dh9PTxrywQ8oxcoDvFJ0EjpXn931gw8cYpcxaepxnb9Nb9
+IHzme99Mwzfd745SifajOJ947/9YWp4f1C9MyYpQOcmpN9qw/tF1uy06ewx
PH/CZ9Wr4/tL4RuRt2d/sqD8YEjtfGe8f5znxfz6hedpi9zKXWF4fj+9O9dp
Cu8T++UOiEXi/eejV0AHer8jM+PdVbzfURVPFf5mgXHkCofLt/B+uipsv99f
FljpFZ0dS8f7nJF1ySB61cLzjYJMvC8Ha24/+g/v3zu2VOQ8E5CvA31rdabx
/u3jreeTLyAqcpyEZ+g5wtNPjhXi/e5ggqTsDAusS+3dDUrw/SjszOWr6HHH
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$12561#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$12561#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.84560265405429, 0.2290679961442947}, {
                    49.96456618248604, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8456026540542907`"}], ",", 
                    RowBox[{"-", "8.035433817513963`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "9"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )], 40->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
MMJ6GKVKfdRmk28vBl6MoDc5HNj5exebXBL1cypkMUEq2saWockma4+Jy4cY
M6Fdb9WHtu1sUpKX1M48wISKWVUTSRpsYi6+KWaFCRPUadmDt7eyyYQte/9H
tPeNDaKvN7PJ9VfMmcyDTBi2cLlKUWMTNcmu/LOHmPBVtrV6QpVNah1cXHRM
mcC2SP3dvZFNHNjTCqKHmcCNWHdSBC289Op7PtpQNdXaXoVN7jrL3rxtxoTC
V47yQuhdnOeM40eYcDCLM9amzCZvVoDIZnNcb+TkmkG0u0tz0S90UO3BL3vw
7y+stPbgWjCh+Mu6G7XoTOkfKpGWTAg++tz5Jv6egfvFnkNHmaD6eG/OHXy+
nupFibJWTBBjKOT0bmKTANlU4360X3Fa1glc3yov9Xk5x5jQeF5sVBnXn1/P
LfOzxv3/l8xWwf0xXmdy3sAG94OXfcQZ92/Qu3ezpC0TfFjh4v072SSs2eNr
B7pwhfvqDNz/9Yoi9+7bMeFqfG5TGtanzD/W9LQ9E+hGSad6AOvbun7hzuNM
MCjw0LLWZ5NfKnmVQg7YP0ahfjJY7y3tr7fFnsD+/hsYcBT7o17NYfCoIxOc
5wnVdh1kE8fQifuKTkx4tqM3LeUImySrr1hS5MyEwz0z8kN2bLLnSkZtyEn8
+0caWV5ObNLevTPI8BTW+6OKkq4rm0hGmf34eJoJKSsK+lN92eRJb9/Dxy5M
aGb7W2sG4Xzt8rb2dMV5dPgTvwjnIfBrQpPoGeznFxTHGJyf4b2dTzefZYJJ
JWtLFc5XePzJ41PozpV/7YPK2GTD8J/V5Z5YH5OcqOAaNrFKWh1peo4JtY6u
rWbv2KRx4qizvw8T3F/ofTWdXUKcmd/l9/syYaTG4xRVsoTMSQvokPTDvMic
JRUiXUJ0jO9R0vyZUJV76o9AvYQ8e/xhQ10gE76Zevh32ZeQ/0xu8h5cZIKp
s7OQpkcJOfib6hAYxISl5MmrLxdLyBQl58H2EFz/Sx4HkkuI/pfQ9cmXmeCW
d7CO/6GEvJXbuNYzmgkrLco7i91Kyabqbo7RVSYMvandtjCklAS6xtqoxGD/
7p2MfnirlCiU/EvuvsaEiVOeWnmlpcTNolmWdhPXe044NHJeGZkT57lGNgnn
L+p5+2a7MnJEW4U9hV7TL1416lJGnnzqsmy9w4S5LU7SrT5lxFiDknTlHhMU
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
jGA1Lt5XiqnTM2hebmnzCp6A/A9P0XPT
                    "]]}, Annotation[#, "Charting`Private`Tag$12725#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1: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
LmGXd+Sk1HpWwH+wzJro
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$12725#2"]& ]}}, {}}, {
                    PointSize[0.01], 
                    
                    LineBox[{{58, 0.13315215706825256`}, {
                    58, 0.32498383522033686`}}], 
                    GrayLevel[0], 
                    PointBox[{58, 0.2290679961442947}], {Arrowheads -> Small, 
                    
                    ArrowBox[{{60.84570673437063, 0.2290679961442947}, {
                    49.96243669741772, 0.2290679961442947}}]}}}, {
                    ImageSize -> Scaled[0.5], DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {48., 0.11391973210419454`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox["\"ConstrainedNewMethod\"", TraditionalForm], 
                    PlotRange -> {{48, 68}, {0.11391973210419454`, 
                    0.6131954994224508}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    
                    TemplateBox[{"\"ia\"", "\"ib\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 StyleBox[
                  FrameBox[
                   GraphicsBox[{{}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Initial df= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-0.0493\"", ShowStringCharacters -> 
                    False], -0.04927476384436566, AutoDelete -> True], 
                    NumberForm[#, 3]& ], ",", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.146\"", ShowStringCharacters -> False], 
                    0.14580563095657384`, AutoDelete -> True], 
                    NumberForm[#, 3]& ]}], "}"}]}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current dv= \"", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.8457067343706317`"}], ",", 
                    RowBox[{"-", "8.03756330258228`"}]}], "}"}]}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    
                    TemplateBox[{"\"Current iteration= \"", "10"}, 
                    "RowDefault"], TraditionalForm]], {20.475, 0.}, {
                    Center, Center}, {39., 0.}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{"\"Current level= \"", "1"}, "RowDefault"], 
                    TraditionalForm]], {20.475, 0.}, {Center, Center}, {39., 
                    0.}]}}, {}}, ImageSize -> {Automatic, 
                    UpTo[700]}, {
                    PlotRangePadding -> {6, 5}, 
                    PlotRange -> {{0, 40.95}, {0, 0.}}}], StripOnInput -> 
                   False], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )]}, 
               Dynamic[$CellContext`i103$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8456483242083898`*^9, 3.845648729004772*^9, 
  3.8456490268392653`*^9, 3.84565760395326*^9, 3.8457176762122345`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"c46b6061-e219-473f-b042-2d1fc8f5018f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PyrFlow1DIter", "[", 
  RowBox[{"10", ",", "58", ",", "listv0", ",", 
   RowBox[{"pyrfiac", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"e", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
   "\"\<ConstrainedNewMethod\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.845656264406044*^9, 3.8456562675554733`*^9}, {
  3.845656385289101*^9, 3.845656418226988*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"d50b9f37-e3dd-4a6d-b96f-efb4b9b4784f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.51186263364565`"}], ",", 
       RowBox[{"-", "5.2073423222974995`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.8917944133752895`"}], ",", 
       RowBox[{"-", "5.066883805935987`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.89502592060677`"}], ",", 
       RowBox[{"-", "5.061579376010874`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.89505199911027`"}], ",", 
       RowBox[{"-", "5.061374301851869`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.895052213044237`"}], ",", 
       RowBox[{"-", "5.061366367243603`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.895052214799467`"}], ",", 
       RowBox[{"-", "5.061366060233117`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.895052214813874`"}], ",", 
       RowBox[{"-", "5.061366048354068`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.895052214813988`"}], ",", 
       RowBox[{"-", "5.06136604789444`"}], ",", "\<\"converged\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.895052214813988`"}], ",", 
       RowBox[{"-", "5.061366047876655`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.895052214813988`"}], ",", 
       RowBox[{"-", "5.061366047875967`"}], ",", "\<\"converged\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6.047098180032091`"}], ",", 
       RowBox[{"-", "3.6555451494311906`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.5363433948883225`"}], ",", 
       RowBox[{"-", "6.305849675688823`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529410900183849`"}], ",", 
       RowBox[{"-", "5.924462198974385`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529309745298539`"}], ",", 
       RowBox[{"-", "5.859213834494313`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529308268843503`"}], ",", 
       RowBox[{"-", "5.846215517616667`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529308247293102`"}], ",", 
       RowBox[{"-", "5.8435756146369915`"}], ",", "\<\"converged\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529308246978547`"}], ",", 
       RowBox[{"-", "5.843037506571453`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.5293082469739625`"}], ",", 
       RowBox[{"-", "5.842927740402376`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529308246973892`"}], ",", 
       RowBox[{"-", "5.842905346381549`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.529308246973892`"}], ",", 
       RowBox[{"-", "5.842900777511428`"}], ",", "\<\"converged\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.0465535554153815`"}], ",", 
       RowBox[{"-", "6.8487022779382265`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.025530038437483`"}], ",", 
       RowBox[{"-", "6.747719815514185`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.016317879463107`"}], ",", 
       RowBox[{"-", "6.7194066943324104`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.012227939369045`"}], ",", 
       RowBox[{"-", "6.711220114002697`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.010401907854117`"}], ",", 
       RowBox[{"-", "6.7088338082222645`"}], ",", "\<\"converged\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.009584630887623`"}], ",", 
       RowBox[{"-", "6.708136627702117`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.009218441703191`"}], ",", 
       RowBox[{"-", "6.707932804785404`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.00905428673913`"}], ",", 
       RowBox[{"-", "6.707873204962753`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.0089806833965`"}], ",", 
       RowBox[{"-", "6.707855776402033`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.008947678100799`"}], ",", 
       RowBox[{"-", "6.707850679746606`"}], ",", "\<\"converged\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.893741333232143`"}], ",", 
       RowBox[{"-", "7.978302929219552`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.0046855090175266`"}], ",", 
       RowBox[{"-", "8.002364920766398`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.931753147023694`"}], ",", 
       RowBox[{"-", "8.016992583909484`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.892076703174334`"}], ",", 
       RowBox[{"-", "8.026168404388244`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.8706106009120327`"}], ",", 
       RowBox[{"-", "8.031862300134904`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.8590761927503063`"}], ",", 
       RowBox[{"-", "8.0353715201728`"}], ",", "\<\"ok\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.8529008036007935`"}], ",", 
       RowBox[{"-", "8.03752513373483`"}], ",", "\<\"converged\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.8496009196940064`"}], ",", 
       RowBox[{"-", "8.038843349659116`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.8478393935955135`"}], ",", 
       RowBox[{"-", "8.039648924560382`"}], ",", "\<\"converged\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.846899576949812`"}], ",", 
       RowBox[{"-", "8.04014073405309`"}], ",", "\<\"converged\"\>"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8456562688802633`*^9, 3.845656422239939*^9, 
  3.84571767630649*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"ea23d6b6-9b2b-4a49-a444-69068a189555"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PyrFlow1D", "[", 
  RowBox[{"10", ",", "58", ",", "listv0", ",", 
   RowBox[{"pyrfiac", "[", 
    RowBox[{"[", 
     RowBox[{"lvlmin", ";;", "lvlmax"}], "]"}], "]"}], ",", 
   RowBox[{"e", "*", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "lvlmin"}], "+", "1"}], ")"}]}]}], ",", 
   "\"\<ConstrainedNewMethod\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8456572557591577`*^9, 3.845657262997531*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"c97457c1-3e84-496e-9b66-d73205bfa7d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.845481669340749`"}], ",", 
   RowBox[{"-", "8.041068093951033`"}], ",", "\<\"converged\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8456572642311535`*^9, 3.845717676364586*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"ace5d40f-14f8-4001-b710-f0d409ada482"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Little Test: Full image", "Subsubsection",
 CellChangeTimes->{{3.8431596629374905`*^9, 3.8431596639009457`*^9}, {
   3.8432359066785154`*^9, 3.843235907632372*^9}, {3.8432457639823*^9, 
   3.8432457641541243`*^9}, 3.8432458031263204`*^9, 3.843247119206956*^9, 
   3.843248877604788*^9, {3.8433068733887095`*^9, 3.843306909103902*^9}, {
   3.8437461360756645`*^9, 3.843746148055343*^9}, {3.8438353050079746`*^9, 
   3.843835305455991*^9}, {3.845141428005622*^9, 3.8451414288548203`*^9}, {
   3.8456493548036447`*^9, 
   3.845649356738051*^9}},ExpressionUUID->"f2d54477-a524-4cd1-8647-\
4ba80f23165e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linemax", "=", "45"}], ";"}]], "Input",
 CellChangeTimes->{{3.845650410834268*^9, 3.8456504132967987`*^9}, {
  3.845651566442671*^9, 3.845651566681048*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"481709fa-d3a4-4a13-b59b-57136c499fb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Stereo", " ", "Depth", " ", "result"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"steps", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"depth", "=", 
     RowBox[{"stereoDepth", "[", 
      RowBox[{"listv0", ",", "ia", ",", "ic", ",", "lvlmax", ",", 
       RowBox[{"{", 
        RowBox[{"lvlmin", ",", "lvlmax"}], "}"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "103", ",", "steps"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "linemax"}], "]"}], ",", "e", ",", 
       "\"\<ConstrainedNewMethod\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "depth", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8456494468370924`*^9, 3.8456494626245546`*^9}, {
   3.8456502397532644`*^9, 3.8456502566943483`*^9}, {3.845650306211335*^9, 
   3.8456503300336733`*^9}, 3.845650421735402*^9, {3.845652279669091*^9, 
   3.8456522808349953`*^9}, 3.845654051220731*^9, 
   3.84571881839797*^9},ExpressionUUID->"6022261c-c3e3-4b15-9b60-\
60f94e9c00f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"45", ",", "511", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.845650232822979*^9, 3.8456502839200926`*^9}, 
   3.8456503278529825`*^9, 3.845650382740601*^9, 3.845650476522936*^9, 
   3.845651842366491*^9, 3.8456527585700617`*^9, 3.845655255573677*^9, 
   3.8457187859434004`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"daf141d0-7969-440f-a7bd-d1d956253b47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"resTable", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"depth", "[", 
         RowBox[{"[", "r", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<converged\>\""}], 
         "&"}]}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "linemax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "resTable", "]"}]}], "Input",
 CellChangeTimes->{{3.845141690523101*^9, 3.8451417454880238`*^9}, {
   3.84514182210579*^9, 3.8451418386908407`*^9}, {3.845142791102509*^9, 
   3.845142793663498*^9}, {3.8451430324517665`*^9, 3.8451430610555916`*^9}, {
   3.845143170188921*^9, 3.8451431840463605`*^9}, {3.845397872514739*^9, 
   3.845397873481043*^9}, {3.8453996338316216`*^9, 3.845399653481135*^9}, {
   3.8454656957195525`*^9, 3.8454656960415764`*^9}, 3.8456504238935337`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"748332c4-249d-440f-90f1-95d34897ac9b"],

Cell[BoxData[
 RowBox[{"{", "45", "}"}]], "Output",
 CellChangeTimes->{
  3.8451431354241896`*^9, 3.8451431856428103`*^9, 3.8453962308788815`*^9, 
   3.845397818134096*^9, 3.8453978743675976`*^9, 3.84539818643332*^9, 
   3.8453996539603825`*^9, 3.8454647041715035`*^9, {3.8454656964977875`*^9, 
   3.845465705818819*^9}, 3.8456487298990655`*^9, 3.8456505022927313`*^9, 
   3.845651842428912*^9, 3.845652758632893*^9, 3.845655255637555*^9, 
   3.84571878602302*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"befd0c43-a184-4166-9ea8-bced180b9abf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"realPVTable", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pos", "=", 
        RowBox[{
         RowBox[{"resTable", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "All", ",", "5"}], "]"}], "]"}], "-", 
         RowBox[{"resTable", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "All", ",", "3"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pv", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"pos", ",", 
           RowBox[{"-", 
            RowBox[{"resTable", "[", 
             RowBox[{"[", 
              RowBox[{"r", ",", "All", ",", "1"}], "]"}], "]"}]}]}], "}"}], 
         "]"}]}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "linemax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "realPVTable", "]"}], "\[IndentingNewLine]", 
 RowBox[{"realPVTable", ";"}]}], "Input",
 CellChangeTimes->{{3.8451418716624193`*^9, 3.8451419451496005`*^9}, {
   3.8451419768282895`*^9, 3.8451419862268057`*^9}, {3.845142147448963*^9, 
   3.845142157349806*^9}, {3.845142203978306*^9, 3.8451422358152313`*^9}, {
   3.8451422911084023`*^9, 3.845142299421534*^9}, {3.845142538051297*^9, 
   3.845142552505738*^9}, {3.8451426242293243`*^9, 3.8451426875194054`*^9}, {
   3.845397898356248*^9, 3.845397899099028*^9}, 3.845650529672836*^9, 
   3.8456505753856816`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"02340ca8-a30a-4d93-b3b5-800009059128"],

Cell[BoxData[
 RowBox[{"{", "45", "}"}]], "Output",
 CellChangeTimes->{{3.845141927876549*^9, 3.845141943156896*^9}, 
   3.8451419911419*^9, 3.8451421581168723`*^9, 3.8451422076854305`*^9, 
   3.8451423842832165`*^9, {3.845142512596878*^9, 3.845142553139905*^9}, {
   3.845142638741664*^9, 3.845142654183078*^9}, 3.845142689488036*^9, 
   3.8451428702645826`*^9, 3.8451430012871175`*^9, 3.845143135473895*^9, 
   3.8451431882580166`*^9, 3.8453962403864217`*^9, 3.845397593856244*^9, {
   3.845397889329547*^9, 3.8453979002217417`*^9}, 3.845398186481536*^9, 
   3.845464704230589*^9, 3.8454657076183987`*^9, 3.8456487299377327`*^9, 
   3.8456505659014235`*^9, 3.8456518424724913`*^9, 3.845652758673505*^9, 
   3.8456552556774497`*^9, 3.8457187860637784`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"e7f6f1a4-4eb0-4a77-b91c-e4065b9378a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"resPVTable", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"combinePV", "[", 
      RowBox[{"realPVTable", "[", 
       RowBox[{"[", "r", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "linemax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "resPVTable", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.845142010780735*^9, 3.8451420503461075`*^9}, 
   3.8456506046319675`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"55d2e623-fec9-45ca-bfcc-fc83ab79b98d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"473\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"5.8895814321473985`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.339007480178404`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.474982688107245`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.604408167442344`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.712417190540268`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"11\\\", \\\",\\\", \\\"5.383873208633375`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"11\\\", \\\",\\\", \
\\\"5.416423253440228`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"11\\\", \\\",\\\", \\\"5.419502760613403`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"11\\\", \\\",\\\", \
\\\"5.4594121483227624`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"11\\\", \\\",\\\", \\\"5.492548651435245`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"462\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]\\) does not exist.\"", 2, 105, 4, 29571933127268079946, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.845650592331231*^9, 3.845650605246891*^9}, 
   3.8456518425205936`*^9, 3.845652758724123*^9, 3.845655255729217*^9, 
   3.8457187861062512`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"df408e32-6686-47c0-8188-4c1930c8d9a1"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"489\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \
\\\"2.4745849209055386`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.402076638951613`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.4046425663486675`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.4059772237885735`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.40790330700432`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.409630429002802`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.409957631265324`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.41121960428058`\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.4116627089564595`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"478\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 105, 5, 29571933127268079946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.845650592331231*^9, 3.845650605246891*^9}, 
   3.8456518425205936`*^9, 3.845652758724123*^9, 3.845655255729217*^9, 
   3.845718786116193*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"7f5e1f43-8c31-4316-af2b-06236ea109a9"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"479\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0241931670245867`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.9551725467788879`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"2.6926360786866983`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"2.7291626805826614`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.553130204089386`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.554922473029423`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.555540261016011`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"5.559117256956662`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"5.561015110717196`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"468\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]\\) does not exist.\"", 2, 105, 6, 29571933127268079946, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.845650592331231*^9, 3.845650605246891*^9}, 
   3.8456518425205936`*^9, 3.845652758724123*^9, 3.845655255729217*^9, 
   3.8457187861211786`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"bf541c26-5a8d-4965-a91d-f1720cbf0045"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 105, 7, 29571933127268079946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.845650592331231*^9, 3.845650605246891*^9}, 
   3.8456518425205936`*^9, 3.845652758724123*^9, 3.845655255729217*^9, 
   3.8457187861271615`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"952ba65d-9969-4be9-940b-05a183841a07"],

Cell[BoxData[
 RowBox[{"{", "45", "}"}]], "Output",
 CellChangeTimes->{
  3.845142051529621*^9, 3.8451421721488247`*^9, 3.8451423851333895`*^9, 
   3.84514251263378*^9, 3.8451425601184597`*^9, 3.845142693293769*^9, 
   3.8451428703603616`*^9, 3.8451430013418865`*^9, 3.845143135507775*^9, 
   3.8451431895344925`*^9, 3.845396247270007*^9, 3.845397663735848*^9, 
   3.845397923945486*^9, 3.8453981865625677`*^9, 3.845464704280777*^9, 
   3.845465710715231*^9, 3.845648729981615*^9, {3.845650593124039*^9, 
   3.8456506052729607`*^9}, 3.845651842545995*^9, 3.845652758823491*^9, 
   3.845655255798051*^9, 3.8457187861700478`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"0c484c72-1929-4c9e-9661-8834d97f70db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"row", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"resPVTable", "[", 
      RowBox[{"[", "row", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"ImageData", "[", "id", "]"}], "[", 
      RowBox[{"[", "row", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8451420722607*^9, 3.845142089318475*^9}, {
  3.845142572150693*^9, 3.845142577607067*^9}, {3.8453962628962107`*^9, 
  3.845396281698684*^9}, {3.8453963523840923`*^9, 3.8453963742596908`*^9}, {
  3.8453980204062357`*^9, 3.845398020621669*^9}, {3.845650659207369*^9, 
  3.845650685243819*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"cb9b29e6-5306-4763-a03f-0e8c4ae47867"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw90n1MzHEcB/BfMctGRqKUJKQHoYfLVdS7cz3cXY9Xd10tQxR5nqyU4jcl
ZFHzdG3YstZ0nmV5Wpz0KCtk/nAVctSRZHNax3la34/f9ttvr33e3+/n+/Cb
m7Zdnm7JcZz07/vvyx4YR/SaTeU1IWO0g6d1XVvOutkYszPaHN537jhoy+yC
DnVm9G4LO+b5OFBbOjAcT3VXCN++SLXwIi9C0wfj9f408mJwldIifoC8FLPN
YZKUhhnM3jjTWtpYZiD7oNWmszA5lWP2xau73bI3H2m8H4b7TRPX/57OLIDI
2Fx7WO3K7I+GkOAbOTHzmJdhcHWweZY7zS/EaLLyfs9EcgAWVDy0dKtyZA5E
ovnX3icS6heEC52+kdkjzszLUV/zseDLt2nMK2DjY/9INTSTORhW/hq/9iJy
CKbGNu3ZVUYGJu+LcBGdJ4tQ8s3okX6XrYcX4dMhvf2UQVqfGLLYq2JPHVsP
L8bJsglPrTZRPQyaFzq/BjofPgxrpKGiK4/pfMJh65HVWkvmw6F4F7noURXl
I3DO0OXICWi/keiRHdqiVlM9EpbtffokB7IEvatOuHcVUl4KraGyvyKP6lLk
NxeYfCjPyWC6uFKaS/fFy5CWnbWW/5+PwmeB//q6fMpHI7AlyzbsEtWjUTrs
AVMxOQa55XdeD4DysTB8Ht9e7UT1WNTXO76URDAjDmulurpbaifmeBzNqyre
7Mjuk49H5rU6BIWy/18bD+vqy90VrqwOOXwG1SVib8rL4ZtR+NXJNIfl5ZCI
NZOe9TBzCdh4Rd9y8yczn4DiY7prqV40fwJMC/uMZ9+z/w2JECypOT3q6sDG
K5DvYn78gM4fCnzoVOw/IKf9KZDGfdd2CZm1CtwZzNTpe+i+leANzzPco2i8
EiIXVduOlzReCVVA6EzRTpbXKpHoFvdDSP24JEx2WnGqz8zqSMLIvSNcioHu
LwnHrWuchQIbllfBu7DEeedC6qfCSD3yirZSPxWsemOqOwLIyQjXbLs99J36
J+P3hqHGcZ62+AO5HD7o
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw90E9IVFEYBfBLUVS0cDHTWEz5qmmwcrLSsqxmbtZMU1r5J8tIatKGoCAx
29gi7iKo6A8UySREvZWLEDdSERpcEGp2GRgVLnqLKNMgpUVKCfnOu+cJ+vHz
fOe++97qlrb67DwhxPm5X3d6P5OJuT/WzJ+gNP9wp/1yml7kTmvoN13gTif+
iw5gLpmkCzFzvsOYeoK2MBu/02vcKRNjdMSdqs/Po+7M9Dh0Me43/IXegH7M
z0tw31Y/3wS3f6I3Y7//I70F57/3863eHKHL3KlL39HlOC89TG/D7PPz7bh/
T56uwH3739I73OloP9+JvHuIrsT9/vr7u3C/H8/o3divSS0z3oN8/umQcRz3
XXeFTmA/00lL7A90GCvPKsN8L+alFHPYfhNlXoX3ywrmnptHeZ99OC87aKxg
HbjBfD/ycJo5LF794/slcd70c2MFO7d7maeQX6QVLEYeMT+A/fBD5rCeuss8
jTnOfQWrjifMD+J+t7qZw/bXO8wPudOa6mIOq9oe5tV4XsRmDstWnidq0K/x
+7BK5pgfRn79PnNYbnzA/Aj2L/h9WESvMj+K/Xgnc1g3X2Zei/m4yVjC1mA7
972899tKzxqWA11Fpl+H7zH72VjCIh+0TB9WsWJjDcvZEmNRj/l0vbGEVVMR
+57HFrMPy9ejfH4D/CHH58MiljBWsLo5tMr0YWdirbE4hvdtKzOWsPNzptD0
4cyCFwHTh0W2hd+vEf3ldfx+sGxJ8vvB9rkKYw2L8Qb2j2NfJdiH7e4Y+55P
lbIP63vl7J/ArKxiH9b5YvZhp5rWsAxF2G/C9zlTxD6sl1rsw/ZZWsOZhSvY
P4l+Z4h9WMhC9mH7GnPtWRUE5X8IywLl
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 103.}, {0, 11.297925584828253`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.845142089596276*^9, 3.8451423852171645`*^9, 3.8451425126537266`*^9, {
   3.845142564144049*^9, 3.8451425782955217`*^9}, 3.845142695304553*^9, {
   3.8451428704070487`*^9, 3.8451428815138283`*^9}, 3.8451430013881445`*^9, 
   3.8451431355543237`*^9, 3.845143196514101*^9, {3.8453962705573215`*^9, 
   3.8453962858171988`*^9}, {3.8453963637138977`*^9, 3.84539637455233*^9}, 
   3.8453976670360394`*^9, 3.8453980210670185`*^9, 3.8453981866754646`*^9, 
   3.845464704386646*^9, 3.845465716413026*^9, 3.845648730049326*^9, {
   3.8456506599480295`*^9, 3.8456506856711674`*^9}, 3.8456518429516554`*^9, 
   3.845652758893305*^9, 3.8456552558599033`*^9, 3.845718786221055*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"75c134eb-a77d-4997-a8fb-b1a59c9d4d38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"createReplaceValues", "[", "resPVTable_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "rows", "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rows", "=", 
       RowBox[{"Length", "[", "resPVTable", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"resPVTable", "[", 
                 RowBox[{"[", 
                  RowBox[{"r", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
                "r"}], "}"}], "+", "0.5"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"resPVTable", "[", 
              RowBox[{"[", 
               RowBox[{"r", ",", "All", ",", "2"}], "]"}], "]"}], "/", 
             "max"}]}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "rows"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
     "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8456508109212685`*^9, 3.845650840302082*^9}, {
  3.8456509318467054`*^9, 3.8456511183508224`*^9}, {3.84565117885067*^9, 
  3.8456511859417458`*^9}, {3.845651218298192*^9, 3.8456512585741587`*^9}, {
  3.845651296888441*^9, 3.845651303244777*^9}, {3.8456515053171844`*^9, 
  3.845651539485294*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"eb4e4073-a2ed-4085-b724-80b0422c769d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"createReplaceValues", "[", "resPVTable", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8456509814560328`*^9, 3.8456509829044814`*^9}, {
  3.8456512875035763`*^9, 3.845651309347788*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"78c58f83-3d61-4568-a244-5bd899f4e252"],

Cell[BoxData[
 RowBox[{
  RowBox[{"im", "=", 
   RowBox[{"Image", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "linemax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "103"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845651360095485*^9, 3.8456513616860895`*^9}, {
   3.8456513931633015`*^9, 3.845651445606556*^9}, 3.84565148041786*^9, 
   3.8456528914259567`*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"2289f97b-241a-4daa-bf2e-5f2d186b29c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imm", "=", 
   RowBox[{"ReplaceImageValue", "[", 
    RowBox[{"im", ",", " ", "values"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.84565144368161*^9, 3.845651483159523*^9}, {
  3.8456527788077*^9, 3.845652779872066*^9}, {3.845652883967774*^9, 
  3.8456528960825524`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"a2fc0bf0-1f4d-408c-a73f-027f21a12444"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ImageReflect", "[", "imm", "]"}], ",", 
    RowBox[{"id", "/", "max"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.845652789495966*^9, 3.845652809081565*^9}, {
  3.8456528390965176`*^9, 3.8456528973536263`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"078cd869-8ff5-4906-ba72-a08a21022d26"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
e4F6r9G1Vz4s1qv9ve22WQgtzsXl5xmomMH0IT+Gr2pf3Jvh87ZQGcIfyTCV
w/lphVLohde2vXbf02CoNx1pho1jm3cJ16CtzJ7l1k6NHEkKTnfSnIdTnrU3
hegMpXVh2uQdNZASFg2gm9+aULBJC3o8Qu0/OZ4RodnQHLzezHJncfM/YIgh
5y+fVcffGS5iVPrVjlV4nYQwPFx733nrZT4mb+Lj3Uc1HowfH+Ly4MwDZd6d
73BLWT9lEuezuqnz35t81NcvcuqTW4opdW1oRorW5hTa3ZzCQszJZUl9at60
PpldYrHt2iRDkk5msYT8LfOh5y6qxqj8b5CvycMhXjwim4lw/mge/N8wvnbm
fOiGpwS43zoD3d5nIEn8BuvOfEBnU872/WI09JLKkXVShtU9/9jdGDk2cvG2
2TAZ7F3csH6fUbT32bqUWcpii6aD/uwXvNmuIZvT64bTzNzhVH/YSBr5fhSZ
pjJsu1o2hASfBtP8I4Mp5mQz2nh9IumlMbt/K24ARdTkoH2wLRXopaJeFxEK
tGrzeWeSEL5mYsSMFeJiuqaOPF/KPbMqTaMuta8AoRsE6LdTiNFt28do/Zci
OS7Hp5BMhAZlYfRpKQaUWKjm1MvcnOK869P0MeYUY2pJ1/wt6fk3C1qiZU5H
TDgsrmel7Lv/qRGZDzfU4IWjlw6NGsOwLGm9AnNbK1DJxZWeFnJUnVdjwbd5
aQgOSETrrUJMNJDgCbdGno1WQDZLAm1n1i9kngiHzYVYmpkDHucnBASKUD9G
hMA/mNLpvgW2LmnJYvnYG+j9cakGLS9WulLLUFc6cH4kZZe70YV5bhRa6UrZ
i4cq+1ka9qF9O0Evjw+hlxsHUVkJ87vvPm5GVuIm5LfFnPYcFCHUUVMuzTZz
9jmerZmmXPzvw+HzQf14bDJV61yomwBv09Q4oHjKx9I6fGzU5iMuiY+J7d79
Vx96ensxLuRl4PmoLAzeL4fLnzMAYTkWlDPOgiwdLTTmeXaUOXVbV59yFExf
roiMaWW5EdEh9V5vp+5apOdbjcIT+ZgaqLYXCcOk6LSW4VZ8aSbmWQgx8EcK
9pz/gPjjqeg4ToTxdzMR24jl/3rYMew7P1KK6mA5OjmJwT8ixPP+EujUkeNp
g9r7Zu46sag3eabmvv+lUZT92p1GO46iRtbu9GSZK1V+dGX813alhjbDKPOo
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
         "], {{0, 45.}, {103., 0}}, {0., 1.},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Real32", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{103., 45.},
       PlotRange->{{0, 103.}, {0, 45.}}],
      TraditionalForm], {54.93333333333334, -23.625}, {
     Center, Center}, {103., 45.}], InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
eh6jVdy7mgjbB6/42PmJ2bXq8jCuppjdqyUHBtaWIytry/jRtSU8t5Ysc68l
HzxqSokn1WWTWzWJdasi+7v7SWhRf0ndaC/6+s/Q0zEJySfoE+aZJz3T4jcD
zOmZl50MmEJtmjuxd8jLk8hmk3m+Sa+cIQNEnyGfLWa3sF8G/L0171XQA9Rm
OD1z00oPK27P77kmDKJf3P4fu2Ya+781tblNjc7QL3EbjSjnaUKWL/cMr+27
1fNQsqq5DJpTROYcKiI/uxWRvAIz2TPATGKn/YRY/MD4PtSuyVdUnZOPG32+
YGadbLwO+IQ5J9/hG39mH+ZWVfJZkz4alh9WcRwq5rNrQgtVmJPDFN7/hjxt
yftesmce0Ctrj3Lrs1PeB6ioQE6bwT36jBu0D+//yn6qmang1S1qGhGPInOL
S8fDNWXa2VqSu7GOxHeqK5O31pX7v9eVlUPrSkyxupIdU0fO9qwt+57VlEDr
GtLsz6pSdoO/dL7iK97W2Vg1Kh5HayahMpk5facB7/aQA4YYYGL3C3vGrjE3
KLOsp5kBr5hnFw30A71Shwwwh9xcZhy5jHmW+ffWbGirRwMygBdZ4OlLHUZW
SUYPbs5C+mYt/ePFrqlObX77H11jol+qsGuukMMerjGilxdzLohsVkbDwaUF
2DTDQpKLFpVNdYoK0s2l30JzeVxYRK50KSLf1ptJ8Zk/YTP/O2xafsNV+wKM
Vr4gJigHDdk1gwcn4/1n5pOOO5MeubOGfgnXkP5OxSMy2G8NNaxnjsWz68eu
UhHJjNvMbmv8WoH3bfbKEwWxRVTEzVAxtJ2GbdQwd5iK9+S533YpmEK2f5P9
BEfu2MjrIQ3l2I060mx8PVmeXk8CGteXpnXrSy99PbFvUU9G760rWQ51peHb
2uL7oqb0iqwuvYOrysmDFeXbLAU1fQ3Yl2vA2D+4XcgA2lIDdnJnNiYDuPVg
73sb8KOAHiADRDLTmtErR+gZJ3Lz4vV6uJCbh5CbJ5EBXpCb19Ar06nPNOrT
47ruX89v5qeZ0IWcdv+DCfXolRrsGu1/dE0Uu2aTFfU7bcSDESaMb2/E7Noa
BpgV4ohPMbk1zUJmJlpI9DwLOeBkIf2XFpWaH8xlaA1z2RVRRAKizGT/xB8w
5H1Dt6oF2FgyHy2oy/UDGh57akg7zYyChuZTNOSc0fBohIaAyRoM3K8/P6lo
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
pESnFJe0Ge+wZGwSSl0ywvGDhkFnjFi/1oinZY04QW7uupJ9v4c9U5H7nxnm
ckbDlOHcNfVV3PBU8bGCioifCrpwp/yuV+BDfSpPJp/xutnCYwHzzIZ89oh5
VpN5dpd5dislCR0zuYuyHqDDuLJyzBgm1lqo6PeFy8fjHWWifyf53KWTtGrC
41lHCa7WUfq3CJe+jmFitTtUopQQubW9rRyo2FruRreTPhfLyOCm9/H8lYI9
ZOfZZIDOQwwoIJeVIwtM//W+M/LyKW7Nhf/l+eZgekYjN1tSmxFe7BrmWSC3
puHvrfmRXHaCeRa6SoenA8gCcTr4M89q0SsneaTvozZ9ydMtklGCO/DPM8mI
Lu8gKVvKysyTTvIxwUksZjmJr4eTzFnmKBveOcitOg6yqLu93OzDf/tsO1l3
vrTMNpSStJelxG6npVzY8wYbspNQ2miEM/d+JD1pNsWIy52MmFTTCMtF9Mhe
DYtnaYjjvnw5W8WpOSqGlNZ4v4p15dn73P4t3pCN7yvYblAQckjBSmpTkT1z
ivzsSL8sZJ7dZJ5tYp5NZs/Mf52E2+y08WXvw8myvLQK6CYn5ofLsfmdZX33
LjLudBcpON9FVk/qIqEZneVxk84yhDoNzQuXS+PDZMnGUIlLayc7SrQVvzci
g2a+Qc2PCRgYlohnhwywpTbL2f9NmWepnclqZQ2IoiYq8+xPgx7V6ZXi5OZ8
+qbKOPYMudmRfbOKW/M794wvPXPhP7bmZHqnywgdvAbrEDxKhzPMs0/Ms4F7
2DHTTPi2KRkrIoxIYf8W2VZCTqa5yJUPZWVUN2d5bu0sTf8oK6/cy0rNSU5y
6qyjnEtzkMwce6mcWUZCn9nJ7/NKy13m2ifbUqKa0nCzVSLyh5qQFmPEYu6j
St5GBKZr8OfPOAEjeq3TsOqJivbkryYeGnzIA+WXqThQld1PXT74qBhQTkXT
ZwomPlZQlL6xZFbtYMdsn8P8GkIeoC5R1MXaV0Fv5lkvLQnX6Z0n3YxYvu4e
jlytID9se8qabZ1l/JQIyXgXIV8+R0gXLUIm7ImQ5yEREj6qq2xEFylM7SRm
HTpKQJMw6TCsvbye0k4+7YHkbk1GjS46eDZKhO7v52hWkwFqMs/i6J3hv543
IwPY86hCr2ygZ1qTmx9sJDeTyebQM37/P1tz5kod3OiZ5Fgdrg3TYRTzrDV3
ze45Jmz6lIzmX8g75houZ5WU5WZuYox0kTcvXGT3bBdx9XSRWaud5fessuLa
vKzsHuskPZc4Sr3fHKRCN3txOG8nayfYyXpy9etSGUjxS0JbIV+EGuG9nPvy
qIaF9EZIjoYy8RpGDyJn2BlxwU6D+yYVCaNUbOF+aUROsGpE/7ipCPfnpv/G
jqdnguK5OZ8oiJ6nIH8KPycHdOzIncnOX1BfQRXmWRg9syQ5CbXI2JZ+zPLC
1zh8vL0MO9Nd7Ht3k3Uu3eVBVHeJ6t9drjTpLm6vu0ngb93k2rcIiQ6KkA5P
ughsOovTy3ApLNdBIma2k1pqczm5/SWKxSXALjIRO7g3j3c3IKMD8+vvTXON
eVaBntn3Xo8bh5ldR8ln3JrPuDW7URurqL9eo/lfW7MEvRJFz5Shd9aRLY+T
yzYsNaFvwAsEBXO7fc3Dmv5lpHi8m8zY7Sp3O5STVItyUnKdq7R3dJU6011E
u+EsFh/LSpxlWfEq6SQBzLbQKfbkaTvp36W0bErPhN/4RIwZRA7Xa7hQzYh6
+RrmkM+yhmg4Rx7zucYzc63Sag3Ht3Hb7FSxuauKCe1VrF6pIvjX+5vcVSz0
U9GJ10sGmdmSnpHzCspPU/CZPVOF/LyYHZNfhfr8nWdjlCRkXE7CghQjFqbe
h35VBfFd3Ff6J0RIRK8eUq9ypFRYGymPj0ZKj5GRsiOth4zy6CF3fbvLH8Hd
ZMPUCNEedpHtoztJ9OIOkuwdJmkbqottdAJe+Cfi2zcDKv9uALhlMplpXZlp
A9j9Y7lpzHm2JAMM2atHd/bNKG7NXdyaq7k1R/z9Gs3Q/7E1m7H/Xw2hZ4br
sKWaDr9NMeHn+RfY0JYM2DwfjQ+4yU7NXb61KC9mn8pL1PLy0tStvGStKSen
cl3lYitXwRQXcVnrLNarysr8CU6ysY6jxF0rI3bfHGRI5x+4YtShNXdR1E4N
4Qc0crqGwFJGzLyloQvZbFCqig7JGm724vaspMFqjYa8jyrinrFnJmpQ5qp4
XUpFOnvmFDngGDsm6JGCFdRm1w4FxZhnL5lnGTH8nLospy4/fP7KsxnU5jv9
ZrGAv+PDFyjt21E+m/WUx8MjJaNJL7HS9xIH697kxt7S7UAv2WLbS1ZKT/lY
L1LqX+suJ9t2k9AOEWJerItcaBjOLR0qTc8WkbbaQzwmCwZsIZeNN+ATH6/r
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
         "], {{0, 45.}, {103., 0}}, {0., 1.},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Real32", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{103., 45.},
       PlotRange->{{0, 103.}, {0, 45.}}],
      TraditionalForm], {164.8, -23.625}, {Center, Center}, {103., 45.}]}, {}},
  ImageSize->{1071.5624999999786`, Automatic},
  PlotRange->{{0, 219.73333333333335`}, {-47.25, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.845652853214244*^9, 3.845652868908086*^9}, 
   3.8456532060896435`*^9, 3.8456552562035003`*^9, 3.845718786993205*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"4fb35537-e066-482f-8f51-f3723c9cb7b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>0.8 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"55eb9e93-7a8f-43f6-98ae-55458df40481"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 436, 7, 78, "Title",ExpressionUUID->"db62e516-81ba-4d70-b1b1-9cd33c91d768"],
Cell[CellGroupData[{
Cell[1041, 33, 207, 4, 53, "Section",ExpressionUUID->"78b447b1-9527-4a44-8f25-13c25c5e9101"],
Cell[1251, 39, 945, 23, 56, "Input",ExpressionUUID->"73bb8eb7-fd63-4382-a987-e4763fd2c07f"],
Cell[2199, 64, 2442, 42, 135, "Input",ExpressionUUID->"8e037178-fa87-40a0-a24d-b460c488efbd"],
Cell[4644, 108, 759, 17, 103, "Input",ExpressionUUID->"17e8648f-4974-4529-81b4-a9cf0e6c6f42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5440, 130, 330, 5, 53, "Section",ExpressionUUID->"1bff5a9f-0ef9-4eb9-a97f-cc3b0be84b3d"],
Cell[CellGroupData[{
Cell[5795, 139, 2445, 65, 199, "Input",ExpressionUUID->"1f69a44f-8be3-4b10-b578-417791e2468b"],
Cell[8243, 206, 79214, 1317, 70, "Output",ExpressionUUID->"9d31968d-7aef-4d21-a576-e25fe9c61ee2"],
Cell[87460, 1525, 568, 14, 70, "Output",ExpressionUUID->"d6e9677b-ecd4-48a9-b587-f6035ac54c5e"],
Cell[88031, 1541, 480, 10, 70, "Print",ExpressionUUID->"75975480-1ed9-46d8-9cee-0e1500d7c1f0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[88560, 1557, 338, 5, 43, "Section",ExpressionUUID->"d27acb04-c6fd-4944-8227-118c1ff153a7"],
Cell[CellGroupData[{
Cell[88923, 1566, 446, 7, 35, "Subsubsection",ExpressionUUID->"b38d52a6-6120-4727-a325-de50a59d758d"],
Cell[89372, 1575, 1890, 42, 100, "Input",ExpressionUUID->"cb786676-2541-46c2-a080-ee0f48f60b08"],
Cell[91265, 1619, 697, 17, 84, "Input",ExpressionUUID->"6ea70fb8-085a-46ce-a6db-87a5d0ee1215"]
}, Closed]],
Cell[CellGroupData[{
Cell[91999, 1641, 547, 8, 29, "Subsubsection",ExpressionUUID->"2931c04b-3c5d-4a0c-a94b-f98aa5a365f1"],
Cell[92549, 1651, 2984, 88, 134, "Input",ExpressionUUID->"ed904c62-5c3c-4df6-92dd-c3816a6e6b33"],
Cell[95536, 1741, 3830, 62, 134, "Input",ExpressionUUID->"c8ebe2d7-2e87-40ed-861d-8e40b78f1660"],
Cell[CellGroupData[{
Cell[99391, 1807, 1288, 26, 55, "Input",ExpressionUUID->"66fedd79-651d-4e34-afb9-f0dd89f8e698"],
Cell[100682, 1835, 4362, 124, 70, "Output",ExpressionUUID->"d13b59f6-14c7-4b03-8d8a-6c59248ce0a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105081, 1964, 972, 23, 55, "Input",ExpressionUUID->"9e136436-f3c4-4e46-9b17-dbae6f69b21c"],
Cell[106056, 1989, 4200, 121, 70, "Output",ExpressionUUID->"3f4a9234-5ab1-41b6-a2b6-5f46669dd73c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110293, 2115, 1055, 26, 55, "Input",ExpressionUUID->"5aa41624-21ff-4a92-a47e-c96a29cc086f"],
Cell[111351, 2143, 4159, 120, 70, "Output",ExpressionUUID->"864a93f7-0b2a-4ca6-89a6-b8791996d241"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[115559, 2269, 503, 7, 29, "Subsubsection",ExpressionUUID->"c661ae9a-342e-4077-a3a5-f84e16812c76"],
Cell[CellGroupData[{
Cell[116087, 2280, 2021, 34, 71, "Input",ExpressionUUID->"197b8b89-971f-4105-94e0-7b049062a299"],
Cell[118111, 2316, 23927, 392, 70, "Output",ExpressionUUID->"09bc5473-314a-43a3-b02d-fa52a6f0b6aa"]
}, Open  ]],
Cell[142053, 2711, 3731, 59, 134, "Input",ExpressionUUID->"73e7948b-5c82-455c-aead-83be09f9aed4"],
Cell[145787, 2772, 1502, 32, 39, "Input",ExpressionUUID->"00295c08-4f02-48d3-b5f0-3482cf085308"],
Cell[147292, 2806, 2984, 88, 103, "Input",ExpressionUUID->"20288f23-6d39-439b-adf3-e85e690fd618"],
Cell[150279, 2896, 1757, 29, 23, "Input",ExpressionUUID->"f1498f64-b1da-4085-9dfb-71260303bc03"],
Cell[152039, 2927, 1257, 22, 23, "Input",ExpressionUUID->"fb67bc7e-6668-4004-954b-95cb622050ee"],
Cell[153299, 2951, 469, 12, 23, "Input",ExpressionUUID->"0cd99050-d99d-40af-8856-7c0f9d47de3f"],
Cell[153771, 2965, 663, 10, 23, "Input",ExpressionUUID->"dc39717c-a480-4a7f-95f5-a116d40551f1"],
Cell[154437, 2977, 748, 16, 23, "Input",ExpressionUUID->"11c3177c-826b-465f-9ecf-39df3cb7c9eb"],
Cell[CellGroupData[{
Cell[155210, 2997, 868, 18, 55, "Input",ExpressionUUID->"cfc8aa59-e21d-4395-8233-2f8ed42219c2"],
Cell[156081, 3017, 1657, 24, 70, "Output",ExpressionUUID->"66e23c78-d87a-44bf-8649-24e487215e44"]
}, Open  ]],
Cell[157753, 3044, 1036, 27, 23, "Input",ExpressionUUID->"729489da-4d21-499e-878c-f44ce47313e0"],
Cell[158792, 3073, 3820, 85, 372, "Input",ExpressionUUID->"e5409b02-159a-4478-bef1-be758d9e3493"],
Cell[CellGroupData[{
Cell[162637, 3162, 292, 5, 23, "Input",ExpressionUUID->"31b7e4f2-368f-4943-9011-91773f87022f"],
Cell[162932, 3169, 3128, 47, 70, "Message",ExpressionUUID->"e1d70956-5a8e-4796-a5aa-d6b2a9d98439"],
Cell[166063, 3218, 4738, 103, 70, "Output",ExpressionUUID->"151f9a9b-5f67-48da-b6a6-c50dc9a84df9"]
}, Open  ]],
Cell[170816, 3324, 338, 8, 23, "Input",ExpressionUUID->"6618a8b5-0659-4832-a35f-782ae41684dc"],
Cell[CellGroupData[{
Cell[171179, 3336, 1445, 30, 23, "Input",ExpressionUUID->"7c26200f-b0a4-405e-a838-662e9bcbf064"],
Cell[172627, 3368, 12583, 234, 70, "Output",ExpressionUUID->"36b9e8b6-88d7-423d-998a-ae40ff7cd778"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[185259, 3608, 602, 9, 29, "Subsubsection",ExpressionUUID->"68f7a216-4cdd-4933-b5d6-81d305ab631b"],
Cell[185864, 3619, 3261, 80, 374, "Input",ExpressionUUID->"8412ca1a-4a94-47e0-9b4b-563eb6e979f4"],
Cell[CellGroupData[{
Cell[189150, 3703, 2691, 84, 103, "Input",ExpressionUUID->"d652239d-c262-46e8-b2f5-1344ff6140d8"],
Cell[191844, 3789, 1964, 48, 70, "Output",ExpressionUUID->"0664d9b8-89c4-40b5-96b3-691012d1e838"]
}, Open  ]],
Cell[193823, 3840, 1689, 38, 215, "Input",ExpressionUUID->"d8beb953-fbf3-457a-93a5-2ca626b899c3"],
Cell[CellGroupData[{
Cell[195537, 3882, 1282, 26, 56, "Input",ExpressionUUID->"7b29039b-7608-498c-8acd-3cd9dbf17960"],
Cell[196822, 3910, 884, 14, 70, "Output",ExpressionUUID->"97d6464f-9e24-4a0d-8211-1699afb6867c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197743, 3929, 418, 9, 23, "Input",ExpressionUUID->"01f58c89-6585-4466-8f93-66d72ce71845"],
Cell[198164, 3940, 8227, 149, 70, "Output",ExpressionUUID->"c2208d29-435d-4580-8e51-8de5e9db8330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206428, 4094, 1999, 54, 87, "Input",ExpressionUUID->"3d678280-4605-421e-a7bc-f0df0782ccff"],
Cell[208430, 4150, 1222, 21, 70, "Message",ExpressionUUID->"5d543409-e3e2-4c06-a164-4db1fc63f783"],
Cell[209655, 4173, 12529, 221, 70, "Output",ExpressionUUID->"df104d1b-052b-45cd-9aa4-9d3a10cb4c49"],
Cell[222187, 4396, 3868, 79, 70, "Output",ExpressionUUID->"54fe6bca-5375-489c-8138-18e2486c1dfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226092, 4480, 955, 25, 56, "Input",ExpressionUUID->"61a673ff-4425-4b10-b364-68f619bd807d"],
Cell[227050, 4507, 686, 11, 70, "Output",ExpressionUUID->"5e673ecc-af2a-4de5-acc1-86670069baca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227773, 4523, 421, 11, 23, "Input",ExpressionUUID->"00a0d659-723b-42c1-9340-9438df40ff4b"],
Cell[228197, 4536, 8237, 150, 70, "Output",ExpressionUUID->"9228d599-15b5-4c7c-8611-5047ac7774e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236471, 4691, 2045, 57, 87, "Input",ExpressionUUID->"252eb628-4656-4f59-8474-3ef3c0847f62"],
Cell[238519, 4750, 1214, 21, 70, "Message",ExpressionUUID->"2cd68742-4707-43be-903c-d802576b3504"],
Cell[239736, 4773, 12385, 218, 70, "Output",ExpressionUUID->"ec08976f-d16a-4cdd-8591-7d6e1038d155"],
Cell[252124, 4993, 3808, 78, 70, "Output",ExpressionUUID->"a8463cff-7d58-4aca-9fb8-78cfc9b85709"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[255981, 5077, 549, 8, 29, "Subsubsection",ExpressionUUID->"38be7124-f2ad-4f53-871f-a008cb16aa21"],
Cell[CellGroupData[{
Cell[256555, 5089, 700, 17, 23, "Input",ExpressionUUID->"7d8586d6-0add-4499-9eb4-d02ad2c746ee"],
Cell[257258, 5108, 60741, 1107, 70, "Output",ExpressionUUID->"251bf124-a57f-4cf4-a27d-d7826fee58c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318036, 6220, 672, 17, 40, "Input",ExpressionUUID->"30d017c6-f31f-4a27-a1c9-de7390199a3e"],
Cell[318711, 6239, 387, 9, 70, "Output",ExpressionUUID->"904bc1b6-890e-471c-873b-03653cd09f2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319135, 6253, 209, 3, 23, "Input",ExpressionUUID->"cafb94a8-1f7c-439f-b610-3dede35b8d86"],
Cell[319347, 6258, 14415, 348, 70, "Output",ExpressionUUID->"bde7623f-5128-4fea-83b1-704e024b7f2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333799, 6611, 720, 16, 23, "Input",ExpressionUUID->"632c03db-274e-451b-b076-d9d0aed9dfa7"],
Cell[334522, 6629, 1683887, 30031, 70, "Output",ExpressionUUID->"c46b6061-e219-473f-b042-2d1fc8f5018f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2018446, 36665, 590, 14, 23, "Input",ExpressionUUID->"d50b9f37-e3dd-4a6d-b96f-efb4b9b4784f"],
Cell[2019039, 36681, 7181, 197, 70, "Output",ExpressionUUID->"ea23d6b6-9b2b-4a49-a444-69068a189555"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2026257, 36883, 537, 13, 23, "Input",ExpressionUUID->"c97457c1-3e84-496e-9b66-d73205bfa7d2"],
Cell[2026797, 36898, 319, 7, 70, "Output",ExpressionUUID->"ace5d40f-14f8-4001-b710-f0d409ada482"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2027165, 36911, 605, 9, 29, "Subsubsection",ExpressionUUID->"f2d54477-a524-4cd1-8647-4ba80f23165e"],
Cell[2027773, 36922, 270, 5, 23, "Input",ExpressionUUID->"481709fa-d3a4-4a13-b59b-57136c499fb7"],
Cell[CellGroupData[{
Cell[2028068, 36931, 1124, 26, 71, "Input",ExpressionUUID->"6022261c-c3e3-4b15-9b60-60f94e9c00f4"],
Cell[2029195, 36959, 405, 7, 26, "Output",ExpressionUUID->"daf141d0-7969-440f-a7bd-d1d956253b47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2029637, 36971, 1172, 26, 87, "Input",ExpressionUUID->"748332c4-249d-440f-90f1-95d34897ac9b"],
Cell[2030812, 36999, 547, 10, 26, "Output",ExpressionUUID->"befd0c43-a184-4166-9ea8-bced180b9abf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2031396, 37014, 1617, 38, 119, "Input",ExpressionUUID->"02340ca8-a30a-4d93-b3b5-800009059128"],
Cell[2033016, 37054, 840, 13, 26, "Output",ExpressionUUID->"e7f6f1a4-4eb0-4a77-b91c-e4065b9378a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2033893, 37072, 660, 17, 103, "Input",ExpressionUUID->"55d2e623-fec9-45ca-bfcc-fc83ab79b98d"],
Cell[2034556, 37091, 1674, 28, 18, "Message",ExpressionUUID->"df408e32-6686-47c0-8188-4c1930c8d9a1"],
Cell[2036233, 37121, 1648, 27, 18, "Message",ExpressionUUID->"7f5e1f43-8c31-4316-af2b-06236ea109a9"],
Cell[2037884, 37150, 1698, 28, 18, "Message",ExpressionUUID->"bf541c26-5a8d-4965-a91d-f1720cbf0045"],
Cell[2039585, 37180, 575, 12, 19, "Message",ExpressionUUID->"952ba65d-9969-4be9-940b-05a183841a07"],
Cell[2040163, 37194, 710, 12, 26, "Output",ExpressionUUID->"0c484c72-1929-4c9e-9661-8834d97f70db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2040910, 37211, 812, 19, 40, "Input",ExpressionUUID->"cb9b29e6-5306-4763-a03f-0e8c4ae47867"],
Cell[2041725, 37232, 4021, 82, 197, "Output",ExpressionUUID->"75c134eb-a77d-4997-a8fb-b1a59c9d4d38"]
}, Open  ]],
Cell[2045761, 37317, 1614, 39, 103, "Input",ExpressionUUID->"eb4e4073-a2ed-4085-b724-80b0422c769d"],
Cell[2047378, 37358, 332, 7, 23, "Input",ExpressionUUID->"78c58f83-3d61-4568-a244-5bd899f4e252"],
Cell[2047713, 37367, 541, 14, 23, "Input",ExpressionUUID->"2289f97b-241a-4daa-bf2e-5f2d186b29c6"],
Cell[2048257, 37383, 396, 9, 23, "Input",ExpressionUUID->"a2fc0bf0-1f4d-408c-a73f-027f21a12444"],
Cell[CellGroupData[{
Cell[2048678, 37396, 384, 9, 23, "Input",ExpressionUUID->"078cd869-8ff5-4906-ba72-a08a21022d26"],
Cell[2049065, 37407, 37293, 622, 225, "Output",ExpressionUUID->"4fb35537-e066-482f-8f51-f3723c9cb7b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

